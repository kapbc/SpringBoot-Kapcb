<
!DOCTYPE
html >
< html
lang = "en" >
    < head >
    < meta
charset = "utf-8" >
    < link
rel = "dns-prefetch"
href = "https://github.githubassets.com" >
    < link
rel = "dns-prefetch"
href = "https://avatars0.githubusercontent.com" >
    < link
rel = "dns-prefetch"
href = "https://avatars1.githubusercontent.com" >
    < link
rel = "dns-prefetch"
href = "https://avatars2.githubusercontent.com" >
    < link
rel = "dns-prefetch"
href = "https://avatars3.githubusercontent.com" >
    < link
rel = "dns-prefetch"
href = "https://github-cloud.s3.amazonaws.com" >
    < link
rel = "dns-prefetch"
href = "https://user-images.githubusercontent.com/" >


    < link
crossorigin = "anonymous"
media = "all"
integrity = "sha512-xnQIMZDOHZTyEPkXHdiwqBPPUAyzDzAU5iDJa6OfzDqwhJdI+0IyBajpzgDAKoegEWUXs4Ze9+/jGhP/OMD98w=="
rel = "stylesheet"
href = "https://github.githubassets.com/assets/frameworks-c674083190ce1d94f210f9171dd8b0a8.css" / >

    < link
crossorigin = "anonymous"
media = "all"
integrity = "sha512-NC0d+qVeTgvgc3XpqnmqrmnpQnjdeOmUq0XiH+8aCQipkK2dTy+BLVTNHCRJtcZxZCDUd7gBO8ccGLa7nVTYTw=="
rel = "stylesheet"
href = "https://github.githubassets.com/assets/github-342d1dfaa55e4e0be07375e9aa79aaae.css" / >


    < meta
name = "viewport"
content = "width=device-width" >

    < title > JavaEETest / jquery - 3.1
.1.js
at
master · lenve / JavaEETest < /title>
< meta
name = "description"
content = "Spring、SpringMVC、MyBatis、Spring Boot案例. Contribute to lenve/JavaEETest development by creating an account on GitHub." >
    < link
rel = "search"
type = "application/opensearchdescription+xml"
href = "/opensearch.xml"
title = "GitHub" >
    < link
rel = "fluid-icon"
href = "https://github.com/fluidicon.png"
title = "GitHub" >
    < meta
property = "fb:app_id"
content = "1401488693436528" >

    < meta
name = "twitter:image:src"
content = "https://avatars0.githubusercontent.com/u/6023444?s=400&amp;v=4" / > < meta
name = "twitter:site"
content = "@github" / > < meta
name = "twitter:card"
content = "summary" / > < meta
name = "twitter:title"
content = "lenve/JavaEETest" / > < meta
name = "twitter:description"
content = "Spring、SpringMVC、MyBatis、Spring Boot案例. Contribute to lenve/JavaEETest development by creating an account on GitHub." / >
    < meta
property = "og:image"
content = "https://avatars0.githubusercontent.com/u/6023444?s=400&amp;v=4" / > < meta
property = "og:site_name"
content = "GitHub" / > < meta
property = "og:type"
content = "object" / > < meta
property = "og:title"
content = "lenve/JavaEETest" / > < meta
property = "og:url"
content = "https://github.com/lenve/JavaEETest" / > < meta
property = "og:description"
content = "Spring、SpringMVC、MyBatis、Spring Boot案例. Contribute to lenve/JavaEETest development by creating an account on GitHub." / >

    < link
rel = "assets"
href = "https://github.githubassets.com/" >
    < link
rel = "web-socket"
href = "wss://live.github.com/_sockets/VjI6NTQ0ODQ5NzQ3OjJlYzI5YzljZTdiZWFjYWE4MDViYzc4NmJmOTNmMTM3ZmZlNTkyNGY0ZTdhYWY2YWRhNjk1YjllMmQ1NWJkYjU=--6ddfc73bd7e9708c7661015b99e54b849b0b8ec3" >
    < link
rel = "sudo-modal"
href = "/sessions/sudo_modal" >

    < meta
name = "request-id"
content = "E97B:7A1D:8DB2F5:C55D01:5EE62B4B"
data - pjax - transient = "true" / > < meta
name = "html-safe-nonce"
content = "775db6fec63c6a893ef0711a49633956170315a5"
data - pjax - transient = "true" / > < meta
name = "visitor-payload"
content = "eyJyZWZlcnJlciI6Imh0dHBzOi8vZ2l0aHViLmNvbS9sZW52ZS9KYXZhRUVUZXN0L3RyZWUvbWFzdGVyL1Rlc3QyMC1XZWJTb2NrZXQvc3JjL21haW4vcmVzb3VyY2VzL3N0YXRpYy9qcyIsInJlcXVlc3RfaWQiOiJFOTdCOjdBMUQ6OERCMkY1OkM1NUQwMTo1RUU2MkI0QiIsInZpc2l0b3JfaWQiOiI1NzY3MTQ3MDgyOTM1MjQyNDU1IiwicmVnaW9uX2VkZ2UiOiJhcC1zb3V0aGVhc3QtMSIsInJlZ2lvbl9yZW5kZXIiOiJpYWQifQ=="
data - pjax - transient = "true" / > < meta
name = "visitor-hmac"
content = "faeaea09cc9716731dfc88b52d4dd89cf6c539d4a3e361a2d22ff6fcf00cad9c"
data - pjax - transient = "true" / >


    < meta
name = "github-keyboard-shortcuts"
content = "repository,source-code"
data - pjax - transient = "true" / >


    < meta
name = "selected-link"
value = "repo_source"
data - pjax - transient >

< meta
name = "google-site-verification"
content = "c1kuD-K2HIVF635lypcsWPoD4kilo5-jA_wBFyT4uMY" >
    < meta
name = "google-site-verification"
content = "KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU" >
    < meta
name = "google-site-verification"
content = "ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA" >
    < meta
name = "google-site-verification"
content = "GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc" >

    < meta
name = "octolytics-host"
content = "collector.githubapp.com" / > < meta
name = "octolytics-app-id"
content = "github" / > < meta
name = "octolytics-event-url"
content = "https://collector.githubapp.com/github-external/browser_event" / > < meta
name = "octolytics-dimension-ga_id"
content = ""
class
= "js-octo-ga-id" / > < meta
name = "octolytics-actor-id"
content = "55942617" / > < meta
name = "octolytics-actor-login"
content = "Eircc" / > < meta
name = "octolytics-actor-hash"
content = "b7f1ec5eaaff2bd72accb3d22cead89511f28ecf5291a0f2b8819ee5d45ccb1f" / >
    < meta
name = "analytics-location"
content = "/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show"
data - pjax - transient = "true" / >


    < meta
name = "optimizely-sdk-key"
content = "cowimJNste4j7QnBNCjaw" / >

    < meta
name = "google-analytics"
content = "UA-3769691-2" >

    < meta
class
= "js-ga-set"
name = "userId"
content = "9785f9ba9d76e49d63dce4adcffa4ea6" >

    < meta
class
= "js-ga-set"
name = "dimension10"
content = "Responsive" >

    < meta
class
= "js-ga-set"
name = "dimension1"
content = "Logged In" >


    < meta
name = "hostname"
content = "github.com" >
    < meta
name = "user-login"
content = "Eircc" >


    < meta
name = "expected-hostname"
content = "github.com" >

    < meta
name = "js-proxy-site-detection-payload"
content = "NmRhYWRiZWIyNWUzZGVjNTRmYmI5MDMwODQyOWI3YzFkMGM4ZWNlNDE2YWM4YWQ1YjA2YjI2M2QzMDk1NTRkYXx7InJlbW90ZV9hZGRyZXNzIjoiMTEyLjk3LjUxLjg2IiwicmVxdWVzdF9pZCI6IkU5N0I6N0ExRDo4REIyRjU6QzU1RDAxOjVFRTYyQjRCIiwidGltZXN0YW1wIjoxNTkyMTQyNjc4LCJob3N0IjoiZ2l0aHViLmNvbSJ9" >

    < meta
name = "enabled-features"
content = "MARKETPLACE_PENDING_INSTALLATIONS,PAGE_STALE_CHECK" >

    < meta
http - equiv = "x-pjax-version"
content = "7224aed3c08edc3ad5d7d232605a565c" >


    < link
href = "https://github.com/lenve/JavaEETest/commits/master.atom"
rel = "alternate"
title = "Recent Commits to JavaEETest:master"
type = "application/atom+xml" >

    < meta
name = "go-import"
content = "github.com/lenve/JavaEETest git https://github.com/lenve/JavaEETest.git" >

    < meta
name = "octolytics-dimension-user_id"
content = "6023444" / > < meta
name = "octolytics-dimension-user_login"
content = "lenve" / > < meta
name = "octolytics-dimension-repository_id"
content = "76313874" / > < meta
name = "octolytics-dimension-repository_nwo"
content = "lenve/JavaEETest" / > < meta
name = "octolytics-dimension-repository_public"
content = "true" / > < meta
name = "octolytics-dimension-repository_is_fork"
content = "false" / > < meta
name = "octolytics-dimension-repository_network_root_id"
content = "76313874" / > < meta
name = "octolytics-dimension-repository_network_root_nwo"
content = "lenve/JavaEETest" / > < meta
name = "octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown"
content = "false" / >


    < link
rel = "canonical"
href = "https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js"
data - pjax - transient >


< meta
name = "browser-stats-url"
content = "https://api.github.com/_private/browser/stats" >

    < meta
name = "browser-errors-url"
content = "https://api.github.com/_private/browser/errors" >

    < link
rel = "mask-icon"
href = "https://github.githubassets.com/pinned-octocat.svg"
color = "#000000" >
    < link
rel = "alternate icon"
class
= "js-site-favicon"
type = "image/png"
href = "https://github.githubassets.com/favicons/favicon.png" >
    < link
rel = "icon"
class
= "js-site-favicon"
type = "image/svg+xml"
href = "https://github.githubassets.com/favicons/favicon.svg" >

    < meta
name = "theme-color"
content = "#1e2327" >


    < link
rel = "manifest"
href = "/manifest.json"
crossOrigin = "use-credentials" >

    < /head>

    < body
class
= "logged-in env-production page-responsive page-blob" >


    < div
class
= "position-relative js-header-wrapper " >
    < a
href = "#start-of-content"
class
= "p-3 bg-blue text-white show-on-focus js-skip-to-content" > Skip
to
content < /a>
< span
class
= "Progress progress-pjax-loader position-fixed width-full js-pjax-loader-bar" >
    < span
class
= "progress-pjax-loader-bar top-0 left-0"
style = "width: 0%;" > < /span>
    < /span>


    < header
class
= "Header py-lg-0 js-details-container Details flex-wrap flex-lg-nowrap p-responsive"
role = "banner" >
    < div
class
= "Header-item d-none d-lg-flex" >
    < a
class
= "Header-link"
href = "https://github.com/"
data - hotkey = "g d"
aria - label = "Homepage "
data - ga - click = "Header, go to dashboard, icon:logo" >
    < svg
class
= "octicon octicon-mark-github v-align-middle"
height = "32"
viewBox = "0 0 16 16"
version = "1.1"
width = "32"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z" > < /path></s
vg >
< /a>

< /div>

< div
class
= "Header-item d-lg-none" >
    < button
class
= "Header-link btn-link js-details-target"
type = "button"
aria - label = "Toggle navigation"
aria - expanded = "false" >
    < svg
height = "24"
class
= "octicon octicon-three-bars"
viewBox = "0 0 16 16"
version = "1.1"
width = "24"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1 2.75A.75.75 0 011.75 2h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 2.75zm0 5A.75.75 0 011.75 7h12.5a.75.75 0 110 1.5H1.75A.75.75 0 011 7.75zM1.75 12a.75.75 0 100 1.5h12.5a.75.75 0 100-1.5H1.75z" > < /path></s
vg >
< /button>
< /div>

< div
class
= "Header-item Header-item--full flex-column flex-lg-row width-full flex-order-2 flex-lg-order-none mr-0 mr-lg-3 mt-3 mt-lg-0 Details-content--hidden" >
    < div
class
= "header-search header-search-current js-header-search-current  flex-self-stretch flex-lg-self-auto mr-0 mr-lg-3 mb-3 mb-lg-0 scoped-search site-scoped-search js-site-search position-relative js-jump-to js-header-search-current-jump-to"
role = "combobox"
aria - owns = "jump-to-results"
aria - label = "Search or jump to"
aria - haspopup = "listbox"
aria - expanded = "false"
    >
    < div
class
= "position-relative" >
    < !--'"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" role="search" aria-label="Site" data-scope-type="Repository" data-scope-id="76313874" data-scoped-search-url="/lenve/JavaEETest/search" data-unscoped-search-url="/search" action="/lenve/JavaEETest/search" accept-charset="UTF-8" method="get">
    < label
class
= "form-control input-sm header-search-wrapper p-0 header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center js-chromeless-input-container" >
    < input
type = "text"
class
= "form-control input-sm header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
data - hotkey = "s,/"
name = "q"
value = ""
placeholder = "Search or jump to…"
data - unscoped - placeholder = "Search or jump to…"
data - scoped - placeholder = "Search or jump to…"
autocapitalize = "off"
aria - autocomplete = "list"
aria - controls = "jump-to-results"
aria - label = "Search or jump to…"
data - jump - to - suggestions - path = "/_graphql/GetSuggestedNavigationDestinations"
spellcheck = "false"
autocomplete = "off"
    >
    < input
type = "hidden"
value = "eN+wEHrhbge8A9fTsb49YO6hC7vOmIMVBIhDHVXLOTbcts7oTQ2uAxg1XH+Apcq2bn42oP4Q2RnsvUwOzQaKzw=="
data - csrf = "true"
class
= "js-data-jump-to-suggestions-path-csrf" / >
    < input
type = "hidden"
class
= "js-site-search-type-field"
name = "type" >
    < img
src = "https://github.githubassets.com/images/search-key-slash.svg"
alt = ""
class
= "mr-2 header-search-key-slash" >

    < div
class
= "Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container" >

    < ul
class
= "d-none js-jump-to-suggestions-template-container" >


    < li
class
= "d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion"
role = "option" >
    < a
tabindex = "-1"
class
= "no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2"
href = "" >
    < div
class
= "jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none" >
    < svg
height = "16"
width = "16"
class
= "octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none"
title = "Repository"
aria - label = "Repository"
viewBox = "0 0 16 16"
version = "1.1"
role = "img" > < path
fill - rule = "evenodd"
d = "M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z" > < /path></s
vg >
< svg
height = "16"
width = "16"
class
= "octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none"
title = "Project"
aria - label = "Project"
viewBox = "0 0 16 16"
version = "1.1"
role = "img" > < path
fill - rule = "evenodd"
d = "M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z" > < /path></s
vg >
< svg
height = "16"
width = "16"
class
= "octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none"
title = "Search"
aria - label = "Search"
viewBox = "0 0 16 16"
version = "1.1"
role = "img" > < path
fill - rule = "evenodd"
d = "M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z" > < /path></s
vg >
< /div>

< img
class
= "avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none"
alt = ""
aria - label = "Team"
src = ""
width = "28"
height = "28" >

    < div
class
= "jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target" >
    < /div>

    < div
class
= "border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search" >
    < span
class
= "js-jump-to-badge-search-text-default d-none"
aria - label = "in this repository" >
    In
this
repository
< /span>
< span
class
= "js-jump-to-badge-search-text-global d-none"
aria - label = "in all of GitHub" >
    All
GitHub
< /span>
< span
aria - hidden = "true"
class
= "d-inline-block ml-1 v-align-middle" >↵<
/span>
< /div>

< div
aria - hidden = "true"
class
= "border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump" >
    Jump
to
< span
class
= "d-inline-block ml-1 v-align-middle" >↵<
/span>
< /div>
< /a>
< /li>

< /ul>

< ul
class
= "d-none js-jump-to-no-results-template-container" >
    < li
class
= "d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2" >
    < span
class
= "text-gray" > No
suggested
jump
to
results < /span>
< /li>
< /ul>

< ul
id = "jump-to-results"
role = "listbox"
class
= "p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container" >


    < li
class
= "d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none"
role = "option" >
    < a
tabindex = "-1"
class
= "no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2"
href = "" >
    < div
class
= "jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none" >
    < svg
height = "16"
width = "16"
class
= "octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none"
title = "Repository"
aria - label = "Repository"
viewBox = "0 0 16 16"
version = "1.1"
role = "img" > < path
fill - rule = "evenodd"
d = "M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z" > < /path></s
vg >
< svg
height = "16"
width = "16"
class
= "octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none"
title = "Project"
aria - label = "Project"
viewBox = "0 0 16 16"
version = "1.1"
role = "img" > < path
fill - rule = "evenodd"
d = "M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z" > < /path></s
vg >
< svg
height = "16"
width = "16"
class
= "octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none"
title = "Search"
aria - label = "Search"
viewBox = "0 0 16 16"
version = "1.1"
role = "img" > < path
fill - rule = "evenodd"
d = "M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z" > < /path></s
vg >
< /div>

< img
class
= "avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none"
alt = ""
aria - label = "Team"
src = ""
width = "28"
height = "28" >

    < div
class
= "jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target" >
    < /div>

    < div
class
= "border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search" >
    < span
class
= "js-jump-to-badge-search-text-default d-none"
aria - label = "in this repository" >
    In
this
repository
< /span>
< span
class
= "js-jump-to-badge-search-text-global d-none"
aria - label = "in all of GitHub" >
    All
GitHub
< /span>
< span
aria - hidden = "true"
class
= "d-inline-block ml-1 v-align-middle" >↵<
/span>
< /div>

< div
aria - hidden = "true"
class
= "border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump" >
    Jump
to
< span
class
= "d-inline-block ml-1 v-align-middle" >↵<
/span>
< /div>
< /a>
< /li>


< li
class
= "d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none"
role = "option" >
    < a
tabindex = "-1"
class
= "no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2"
href = "" >
    < div
class
= "jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none" >
    < svg
height = "16"
width = "16"
class
= "octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none"
title = "Repository"
aria - label = "Repository"
viewBox = "0 0 16 16"
version = "1.1"
role = "img" > < path
fill - rule = "evenodd"
d = "M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z" > < /path></s
vg >
< svg
height = "16"
width = "16"
class
= "octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none"
title = "Project"
aria - label = "Project"
viewBox = "0 0 16 16"
version = "1.1"
role = "img" > < path
fill - rule = "evenodd"
d = "M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z" > < /path></s
vg >
< svg
height = "16"
width = "16"
class
= "octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none"
title = "Search"
aria - label = "Search"
viewBox = "0 0 16 16"
version = "1.1"
role = "img" > < path
fill - rule = "evenodd"
d = "M11.5 7a4.499 4.499 0 11-8.998 0A4.499 4.499 0 0111.5 7zm-.82 4.74a6 6 0 111.06-1.06l3.04 3.04a.75.75 0 11-1.06 1.06l-3.04-3.04z" > < /path></s
vg >
< /div>

< img
class
= "avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none"
alt = ""
aria - label = "Team"
src = ""
width = "28"
height = "28" >

    < div
class
= "jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target" >
    < /div>

    < div
class
= "border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search" >
    < span
class
= "js-jump-to-badge-search-text-default d-none"
aria - label = "in this repository" >
    In
this
repository
< /span>
< span
class
= "js-jump-to-badge-search-text-global d-none"
aria - label = "in all of GitHub" >
    All
GitHub
< /span>
< span
aria - hidden = "true"
class
= "d-inline-block ml-1 v-align-middle" >↵<
/span>
< /div>

< div
aria - hidden = "true"
class
= "border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump" >
    Jump
to
< span
class
= "d-inline-block ml-1 v-align-middle" >↵<
/span>
< /div>
< /a>
< /li>


< li
class
= "d-flex flex-justify-center flex-items-center p-0 f5 js-jump-to-suggestion" >
    < img
src = "https://github.githubassets.com/images/spinners/octocat-spinner-128.gif"
alt = "Octocat Spinner Icon"
class
= "m-2"
width = "28" >
    < /li>
    < /ul>

    < /div>
    < /label>
    < /form>  </
div >
< /div>


< nav
class
= "d-flex flex-column flex-lg-row flex-self-stretch flex-lg-self-auto"
aria - label = "Global" >
    < a
class
= "Header-link py-lg-3 d-block d-lg-none py-2 border-top border-lg-top-0 border-white-fade-15"
data - ga - click = "Header, click, Nav menu - item:dashboard:user"
aria - label = "Dashboard"
href = "/dashboard" >
    Dashboard
    < /a>
    < a
class
= "js-selected-navigation-item Header-link py-lg-3  mr-0 mr-lg-3 py-2 border-top border-lg-top-0 border-white-fade-15"
data - hotkey = "g p"
data - ga - click = "Header, click, Nav menu - item:pulls context:user"
aria - label = "Pull requests you created"
data - selected - links = "/pulls /pulls/assigned /pulls/mentioned /pulls"
href = "/pulls" >
    Pull
requests
< /a>
< a
class
= "js-selected-navigation-item Header-link py-lg-3  mr-0 mr-lg-3 py-2 border-top border-lg-top-0 border-white-fade-15"
data - hotkey = "g i"
data - ga - click = "Header, click, Nav menu - item:issues context:user"
aria - label = "Issues you created"
data - selected - links = "/issues /issues/assigned /issues/mentioned /issues"
href = "/issues" >
    Issues
    < /a>

    < div
class
= "mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" >
    < a
class
= "js-selected-navigation-item Header-link py-lg-3 d-inline-block"
data - ga - click = "Header, click, Nav menu - item:marketplace context:user"
data - octo - click = "marketplace_click"
data - octo - dimensions = "location:nav_bar"
data - selected - links = " /marketplace"
href = "/marketplace" >
    Marketplace
    < /a>

    < /div>

    < a
class
= "js-selected-navigation-item Header-link py-lg-3  mr-0 mr-lg-3 py-2 border-top border-lg-top-0 border-white-fade-15"
data - ga - click = "Header, click, Nav menu - item:explore"
data - selected - links = "/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore"
href = "/explore" >
    Explore
    < /a>


    < a
class
= "Header-link d-block d-lg-none mr-0 mr-lg-3 py-2 py-lg-3 border-top border-lg-top-0 border-white-fade-15"
href = "/Eircc" >
    < img
class
= "avatar avatar-user"
src = "https://avatars1.githubusercontent.com/u/55942617?s=40&amp;v=4"
width = "20"
height = "20"
alt = "@Eircc" / >
    Eircc
    < /a>
    <!-- '"` --> < !-- < /textarea></xm
p > -- > < /option></
form > < form
action = "/logout"
accept - charset = "UTF-8"
method = "post" > < input
type = "hidden"
name = "authenticity_token"
value = "7I1SQ40EeRCaGhfcsdTfT1HOzopooAicIXpc0ao1h0gda7paF2NB0HU9Tufk6h5xXGVl1srUUIHZ7Q94rB9CiA==" / >
    < button
type = "submit"
class
= "Header-link mr-0 mr-lg-3 py-2 py-lg-3 border-top border-lg-top-0 border-white-fade-15 d-lg-none btn-link d-block width-full text-left"
data - ga - click = "Header, sign out, icon:logout"
style = "padding-left: 2px;" >
    < svg
class
= "octicon octicon-sign-out v-align-middle"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M2 2.75C2 1.784 2.784 1 3.75 1h2.5a.75.75 0 010 1.5h-2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 012 13.25V2.75zm10.44 4.5H6.75a.75.75 0 000 1.5h5.69l-1.97 1.97a.75.75 0 101.06 1.06l3.25-3.25a.75.75 0 000-1.06l-3.25-3.25a.75.75 0 10-1.06 1.06l1.97 1.97z" > < /path></s
vg >
Sign
out
< /button>
< /form></
nav >

< /div>

< div
class
= "Header-item Header-item--full flex-justify-center d-lg-none position-relative" >
    < div
class
= "css-truncate css-truncate-target width-fit position-absolute left-0 right-0 text-center" >
    < svg
class
= "octicon octicon-repo"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z" > < /path></s
vg >
< a
class
= "Header-link"
href = "/lenve" > lenve < /a>
    /
    < a
class
= "Header-link"
href = "/lenve/JavaEETest" > JavaEETest < /a>

    < /div>
    < /div>

    < div
class
= "Header-item mr-0 mr-lg-3 flex-order-1 flex-lg-order-none" >

    < a
aria - label = "You have unread notifications"
class
= "Header-link notification-indicator position-relative tooltipped tooltipped-sw js-socket-channel js-notification-indicator"
data - hotkey = "g n"
data - ga - click = "Header, go to notifications, icon:unread"
data - channel = "notification-changed:55942617"
href = "/notifications" >
    < span
class
= "js-indicator-modifier mail-status unread" > < /span>
    < svg
class
= "octicon octicon-bell"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
d = "M8 16a2 2 0 001.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 008 16z" > < /path><path fill-rule="evenodd" d="M8 1.5A3.5 3.5 0 004.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.018.018 0 00-.003.01l.001.006c0 .002.002.004.004.006a.017.017 0 00.006.004l.007.001h10.964l.007-.001a.016.016 0 00.006-.004.016.016 0 00.004-.006l.001-.007a.017.017 0 00-.003-.01l-1.703-2.554a1.75 1.75 0 01-.294-.97V5A3.5 3.5 0 008 1.5zM3 5a5 5 0 0110 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.518 1.518 0 0113.482 13H2.518a1.518 1.518 0 01-1.263-2.36l1.703-2.554A.25.25 0 003 7.947V5z"></
path > < /svg>
< /a>
< /div>


< div
class
= "Header-item position-relative d-none d-lg-flex" >
    < details
class
= "details-overlay details-reset" >
    < summary
class
= "Header-link"
aria - label = "Create new…"
data - ga - click = "Header, create new, icon:add" >
    < svg
class
= "octicon octicon-plus"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8 2a.75.75 0 01.75.75v4.5h4.5a.75.75 0 010 1.5h-4.5v4.5a.75.75 0 01-1.5 0v-4.5h-4.5a.75.75 0 010-1.5h4.5v-4.5A.75.75 0 018 2z" > < /path></s
vg > < span
class
= "dropdown-caret" > < /span>
    < /summary>
    < details - menu
class
= "dropdown-menu dropdown-menu-sw mt-n2" >

    < a
role = "menuitem"
class
= "dropdown-item"
href = "/new"
data - ga - click = "Header, create new repository" >
    New
repository
< /a>

< a
role = "menuitem"
class
= "dropdown-item"
href = "/new/import"
data - ga - click = "Header, import a repository" >
    Import
repository
< /a>

< a
role = "menuitem"
class
= "dropdown-item"
href = "https://gist.github.com/"
data - ga - click = "Header, create new gist" >
    New
gist
< /a>

< a
role = "menuitem"
class
= "dropdown-item"
href = "/organizations/new"
data - ga - click = "Header, create new organization" >
    New
organization
< /a>


< div
role = "none"
class
= "dropdown-divider" > < /div>
    < div
class
= "dropdown-header" >
    < span
title = "lenve/JavaEETest" > This
repository < /span>
< /div>
< a
role = "menuitem"
class
= "dropdown-item"
href = "/lenve/JavaEETest/issues/new/choose"
data - ga - click = "Header, create new issue"
data - skip - pjax >
New
issue
< /a>


< /details-menu>
< /details>

< /div>

< div
class
= "Header-item position-relative mr-0 d-none d-lg-flex" >

    < details
class
= "details-overlay details-reset js-feature-preview-indicator-container"
data - feature - preview - indicator - src = "/users/Eircc/feature_preview/indicator_check" >

    < summary
class
= "Header-link"
aria - label = "View profile and more"
data - ga - click = "Header, show menu, icon:avatar" >
    < img
alt = "@Eircc"
width = "20"
height = "20"
src = "https://avatars2.githubusercontent.com/u/55942617?s=60&amp;v=4"
class
= "avatar avatar-user " / >

    < span
class
= "feature-preview-indicator js-feature-preview-indicator"
style = "top: 10px;"
hidden > < /span>
< span
class
= "dropdown-caret" > < /span>
    < /summary>
    < details - menu
class
= "dropdown-menu dropdown-menu-sw mt-n2"
style = "width: 180px" >
    < div
class
= "header-nav-current-user css-truncate" > < a
role = "menuitem"
class
= "no-underline user-profile-link px-3 pt-2 pb-2 mb-n2 mt-n1 d-block"
href = "/Eircc"
data - ga - click = "Header, go to profile, text:Signed in as" > Signed in as < strong
class
= "css-truncate-target" > Eircc < /strong></
a > < /div>
< div
role = "none"
class
= "dropdown-divider" > < /div>

    < div
class
= "pl-3 pr-3 f6 user-status-container js-user-status-context pb-1"
data - url = "/users/status?compact=1&amp;link_mentions=0&amp;truncate=1" >

    < div
class
= "js-user-status-container
user - status - compact
rounded - 1
px - 2
py - 1
mt - 2
border
" data-team-hovercards-enabled>
< details
class
= "js-user-status-details details-reset details-overlay details-overlay-dark" >
    < summary
class
= "btn-link btn-block link-gray no-underline js-toggle-user-status-edit toggle-user-status-edit "
role = "menuitem"
data - hydro - click = "{&quot;event_type&quot;:&quot;user_profile.click&quot;,&quot;payload&quot;:{&quot;profile_user_id&quot;:6023444,&quot;target&quot;:&quot;EDIT_USER_STATUS&quot;,&quot;user_id&quot;:55942617,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;}}"
data - hydro - click - hmac = "5befb0d015be9dee025cc95b7c61f85ecdb4cf59415458c08faf54ca36219961" >
    < div
class
= "d-flex flex-items-baseline" >
    < div
class
= "f6 lh-condensed user-status-header
d - inline - block
v - align - middle
user - status - emoji - only - header
circle
pr - 1
"
style = "max-width: 29px"
    >
    < div
class
= "user-status-emoji-container flex-shrink-0 mr-2 mt-1 lh-condensed-ultra v-align-bottom"
style = "" >
    < svg
class
= "octicon octicon-smiley"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zM5 8a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zM5.32 9.636a.75.75 0 011.038.175l.007.009c.103.118.22.222.35.31.264.178.683.37 1.285.37.602 0 1.02-.192 1.285-.371.13-.088.247-.192.35-.31l.007-.008a.75.75 0 111.222.87l-.614-.431c.614.43.614.431.613.431v.001l-.001.002-.002.003-.005.007-.014.019a1.984 1.984 0 01-.184.213c-.16.166-.338.316-.53.445-.63.418-1.37.638-2.127.629-.946 0-1.652-.308-2.126-.63a3.32 3.32 0 01-.715-.657l-.014-.02-.005-.006-.002-.003v-.002h-.001l.613-.432-.614.43a.75.75 0 01.183-1.044h.001z" > < /path></s
vg >
< /div>
< /div>
< div
class
= "
d - inline - block
v - align - middle


css - truncate
css - truncate - target
user - status - message - wrapper
f6
"
style = "line-height: 20px;" >
    < div
class
= "d-inline-block text-gray-dark text-left" >
    < span
class
= "text-gray ml-2" > Set
status < /span>
< /div>
< /div>
< /div>
< /summary>
< details - dialog
class
= "details-dialog rounded-1 anim-fade-in fast Box Box--overlay"
role = "dialog"
tabindex = "-1" >
    < !--'"` --><!-- </textarea></xmp> --></option></form><form class="position-relative flex-auto js-user-status-form" action="/users/status?compact=1&amp;link_mentions=0&amp;truncate=1" accept-charset="UTF-8" method="post"><input type="hidden" name="_method" value="put" /><input type="hidden" name="authenticity_token" value="Cr3Dczd+jMrc9PT/zx6BhTCMu4TWtvFWGq8XS7qNO7LlB0PHOUJi9uAU0B1atlF/JtuBnI9IIkKb1hovvi7h0A==" />
    < div
class
= "Box-header bg-gray border-bottom p-3" >
    < button
class
= "Box-btn-octicon js-toggle-user-status-edit btn-octicon float-right"
type = "reset"
aria - label = "Close dialog"
data - close - dialog >
< svg
class
= "octicon octicon-x"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z" > < /path></s
vg >
< /button>
< h3
class
= "Box-title f5 text-bold text-gray-dark" > Edit
status < /h3>
< /div>
< input
type = "hidden"
name = "emoji"
class
= "js-user-status-emoji-field"
value = "" >
    < input
type = "hidden"
name = "organization_id"
class
= "js-user-status-org-id-field"
value = "" >
    < div
class
= "px-3 py-2 text-gray-dark" >
    < div
class
= "js-characters-remaining-container position-relative mt-2" >
    < div
class
= "input-group d-table form-group my-0 js-user-status-form-group" >
    < span
class
= "input-group-button d-table-cell v-align-middle"
style = "width: 1%" >
    < button
type = "button"
aria - label = "Choose an emoji"
class
= "btn-outline btn js-toggle-user-status-emoji-picker btn-open-emoji-picker p-0" >
    < span
class
= "js-user-status-original-emoji"
hidden > < /span>
< span
class
= "js-user-status-custom-emoji" > < /span>
    < span
class
= "js-user-status-no-emoji-icon" >
    < svg
class
= "octicon octicon-smiley"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zM5 8a1 1 0 100-2 1 1 0 000 2zm7-1a1 1 0 11-2 0 1 1 0 012 0zM5.32 9.636a.75.75 0 011.038.175l.007.009c.103.118.22.222.35.31.264.178.683.37 1.285.37.602 0 1.02-.192 1.285-.371.13-.088.247-.192.35-.31l.007-.008a.75.75 0 111.222.87l-.614-.431c.614.43.614.431.613.431v.001l-.001.002-.002.003-.005.007-.014.019a1.984 1.984 0 01-.184.213c-.16.166-.338.316-.53.445-.63.418-1.37.638-2.127.629-.946 0-1.652-.308-2.126-.63a3.32 3.32 0 01-.715-.657l-.014-.02-.005-.006-.002-.003v-.002h-.001l.613-.432-.614.43a.75.75 0 01.183-1.044h.001z" > < /path></s
vg >
< /span>
< /button>
< /span>
< text - expander
keys = ": @"
data - mention - url = "/autocomplete/user-suggestions"
data - emoji - url = "/autocomplete/emoji" >
    < input
type = "text"
autocomplete = "off"
data - no - org - url = "/autocomplete/user-suggestions"
data - org - url = "/suggestions?mention_suggester=1"
data - maxlength = "80"
class
= "d-table-cell width-full form-control js-user-status-message-field js-characters-remaining-field"
placeholder = "What's happening?"
name = "message"
value = ""
aria - label = "What is your current status?" >
    < /text-expander>
    < div
class
= "error" > Could
not
update
your
status, please
try
again. < /div>
< /div>
< div
style = "margin-left: 53px"
class
= "my-1 text-small label-characters-remaining js-characters-remaining"
data - suffix = "remaining"
hidden >
80
remaining
< /div>
< /div>
< include - fragment
class
= "js-user-status-emoji-picker"
data - url = "/users/status/emoji" > < /include-fragment>
    < div
class
= "overflow-auto ml-n3 mr-n3 px-3 border-bottom"
style = "max-height: 33vh" >
    < div
class
= "user-status-suggestions js-user-status-suggestions collapsed overflow-hidden" >
    < h4
class
= "f6 text-normal my-3" > Suggestions
:<
/h4>
< div
class
= "mx-3 mt-2 clearfix" >
    < div
class
= "float-left col-6" >
    < button
type = "button"
value = ":palm_tree:"
class
= "d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1" >
    < div
class
= "emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji" >
    < g - emoji
alias = "palm_tree"
fallback - src = "https://github.githubassets.com/images/icons/emoji/unicode/1f334.png" >🌴<
/g-emoji>
< /div>
< div
class
= "d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left"
style = "border-left: 1px solid transparent" >
    On
vacation
< /div>
< /button>
< button
type = "button"
value = ":face_with_thermometer:"
class
= "d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1" >
    < div
class
= "emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji" >
    < g - emoji
alias = "face_with_thermometer"
fallback - src = "https://github.githubassets.com/images/icons/emoji/unicode/1f912.png" >🤒<
/g-emoji>
< /div>
< div
class
= "d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left"
style = "border-left: 1px solid transparent" >
    Out
sick
< /div>
< /button>
< /div>
< div
class
= "float-left col-6" >
    < button
type = "button"
value = ":house:"
class
= "d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1" >
    < div
class
= "emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji" >
    < g - emoji
alias = "house"
fallback - src = "https://github.githubassets.com/images/icons/emoji/unicode/1f3e0.png" >🏠<
/g-emoji>
< /div>
< div
class
= "d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left"
style = "border-left: 1px solid transparent" >
    Working
from
home
< /div>
< /button>
< button
type = "button"
value = ":dart:"
class
= "d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1" >
    < div
class
= "emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji" >
    < g - emoji
alias = "dart"
fallback - src = "https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png" >🎯<
/g-emoji>
< /div>
< div
class
= "d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left"
style = "border-left: 1px solid transparent" >
    Focusing
    < /div>
    < /button>
    < /div>
    < /div>
    < /div>
    < div
class
= "user-status-limited-availability-container" >
    < div
class
= "form-checkbox my-0" >
    < input
type = "checkbox"
name = "limited_availability"
value = "1"
class
= "js-user-status-limited-availability-checkbox"
data -
default
-message = "I may be slow to respond."
aria - describedby = "limited-availability-help-text-truncate-true-compact-true"
id = "limited-availability-truncate-true-compact-true" >
    < label
class
= "d-block f5 text-gray-dark mb-1"
for= "limited-availability-truncate-true-compact-true" >
    Busy
    < /label>
    < p class
= "note"
id = "limited-availability-help-text-truncate-true-compact-true" >
    When
others
mention
you, assign
you, or
request
your
review,
    GitHub
will
let them
know
that
you
have
limited
availability.
< /p>
< /div>
< /div>
< /div>
< div
class
= "d-inline-block f5 mr-2 pt-3 pb-2" >
    < div
class
= "d-inline-block mr-1" >
    Clear
status
< /div>

< details
class
= "js-user-status-expire-drop-down f6 dropdown details-reset details-overlay d-inline-block mr-2" >
    < summary
class
= "f5 btn-link link-gray-dark border px-2 py-1 rounded-1"
aria - haspopup = "true" >
    < div
class
= "js-user-status-expiration-interval-selected d-inline-block v-align-baseline" >
    Never
    < /div>
    < div
class
= "dropdown-caret" > < /div>
    < /summary>

    < ul
class
= "dropdown-menu dropdown-menu-se pl-0 overflow-auto"
style = "width: 220px; max-height: 15.5em" >
    < li >
    < button
type = "button"
class
= "btn-link dropdown-item js-user-status-expire-button ws-normal"
title = "Never" >
    < span
class
= "d-inline-block text-bold mb-1" > Never < /span>
    < div
class
= "f6 lh-condensed" > Keep
this
status
until
you
clear
your
status
or
edit
your
status. < /div>
< /button>
< /li>
< li
class
= "dropdown-divider"
role = "none" > < /li>
    < li >
    < button
type = "button"
class
= "btn-link dropdown-item ws-normal js-user-status-expire-button"
title = "in 30 minutes"
value = "2020-06-14T22:21:18+08:00" >
    in 30
minutes
< /button>
< /li>
< li >
< button
type = "button"
class
= "btn-link dropdown-item ws-normal js-user-status-expire-button"
title = "in 1 hour"
value = "2020-06-14T22:51:18+08:00" >
    in 1
hour
< /button>
< /li>
< li >
< button
type = "button"
class
= "btn-link dropdown-item ws-normal js-user-status-expire-button"
title = "in 4 hours"
value = "2020-06-15T01:51:18+08:00" >
    in 4
hours
< /button>
< /li>
< li >
< button
type = "button"
class
= "btn-link dropdown-item ws-normal js-user-status-expire-button"
title = "today"
value = "2020-06-14T23:59:59+08:00" >
    today
    < /button>
    < /li>
    < li >
    < button
type = "button"
class
= "btn-link dropdown-item ws-normal js-user-status-expire-button"
title = "this week"
value = "2020-06-14T23:59:59+08:00" >
    this
week
< /button>
< /li>
< /ul>
< /details>
< input
class
= "js-user-status-expiration-date-input"
type = "hidden"
name = "expires_at"
value = "" >
    < /div>

    < include - fragment
class
= "js-user-status-org-picker"
data - url = "/users/status/organizations" > < /include-fragment>
    < /div>
    < div
class
= "d-flex flex-items-center flex-justify-between p-3 border-top" >
    < button
type = "submit"
disabled
class
= "width-full btn btn-primary mr-2 js-user-status-submit" >
    Set
status
< /button>
< button
type = "button"
disabled
class
= "width-full js-clear-user-status-button btn ml-2 " >
    Clear
status
< /button>
< /div>
< /form>    </
details - dialog >
< /details>
< /div>

< /div>
< div
role = "none"
class
= "dropdown-divider" > < /div>

    < a
role = "menuitem"
class
= "dropdown-item"
href = "/Eircc"
data - ga - click = "Header, go to profile, text:your profile" > Your
profile < /a>

< a
role = "menuitem"
class
= "dropdown-item"
href = "/Eircc?tab=repositories"
data - ga - click = "Header, go to repositories, text:your repositories" > Your
repositories < /a>

< a
role = "menuitem"
class
= "dropdown-item"
href = "/settings/organizations?source=your-organizations"

data - ga - click = "Header, go to organizations, text:your organizations" > Your
organizations < /a>

< a
role = "menuitem"
class
= "dropdown-item"
href = "/Eircc?tab=projects"
data - ga - click = "Header, go to projects, text:your projects" > Your
projects < /a>

< a
role = "menuitem"
class
= "dropdown-item"
href = "/Eircc?tab=stars"
data - ga - click = "Header, go to starred repos, text:your stars" > Your
stars < /a>
< a
role = "menuitem"
class
= "dropdown-item"
href = "https://gist.github.com/mine"
data - ga - click = "Header, your gists, text:your gists" > Your
gists < /a>


< div
role = "none"
class
= "dropdown-divider" > < /div>
    < a
role = "menuitem"
class
= "dropdown-item"
href = "/settings/billing"
data - ga - click = "Header, go to billing, text:upgrade" > Upgrade < /a>

    < div
id = "feature-enrollment-toggle"
class
= "hide-sm hide-md feature-preview-details position-relative" >
    < button
type = "button"
class
= "dropdown-item btn-link"
role = "menuitem"
data - feature - preview - trigger - url = "/users/Eircc/feature_previews"
data - feature - preview - close - details = "{&quot;event_type&quot;:&quot;feature_preview.clicks.close_modal&quot;,&quot;payload&quot;:{&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - feature - preview - close - hmac = "0a5305edbf9fcf317d7b251c6d1e611246d2bdd79d13d0b92f33dd890958289a"
data - hydro - click = "{&quot;event_type&quot;:&quot;feature_preview.clicks.open_modal&quot;,&quot;payload&quot;:{&quot;link_location&quot;:&quot;user_dropdown&quot;,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - hydro - click - hmac = "4a5446873ba0e2ff9dcfd956373be849f3054aabee7c494e38b227e3fa876cb2"
    >
    Feature
preview
< /button>
< span
class
= "feature-preview-indicator js-feature-preview-indicator"
hidden > < /span>
< /div>

< a
role = "menuitem"
class
= "dropdown-item"
href = "https://help.github.com"
data - ga - click = "Header, go to help, text:help" > Help < /a>
    < a
role = "menuitem"
class
= "dropdown-item"
href = "/settings/profile"
data - ga - click = "Header, go to settings, icon:settings" > Settings < /a>
    <!-- '"` --> < !-- < /textarea></xm
p > -- > < /option></
form > < form
class
= "logout-form"
action = "/logout"
accept - charset = "UTF-8"
method = "post" > < input
type = "hidden"
name = "authenticity_token"
value = "F98pa4zm8Uo+YhdBxutmwetMjXnnABgmgZyAkP2R/JbmOcFyFoHJitFFTnqT1af/5ucmJUV0QDt5C9M5+7s5Vg==" / >

    < button
type = "submit"
class
= "dropdown-item dropdown-signout"
data - ga - click = "Header, sign out, icon:logout"
role = "menuitem" >
    Sign
out
< /button>
< input
type = "text"
name = "required_field_bb03"
hidden = "hidden"
class
= "form-control" / > < input
type = "hidden"
name = "timestamp"
value = "1592142678931"
class
= "form-control" / > < input
type = "hidden"
name = "timestamp_secret"
value = "4f7fb6802501f18b43daae00737c62d867ef5a461401b236abb5b8fd7bc3c661"
class
= "form-control" / >
    < /form>  </
details - menu >
< /details>

< /div>

< /header>


< /div>

< div
id = "start-of-content"
class
= "show-on-focus" > < /div>


    < div
id = "js-flash-container" >


    < template
class
= "js-flash-template" >
    < div
class
= "flash flash-full  js-flash-template-container" >
    < div
class
= "container-lg px-2" >
    < button
class
= "flash-close js-flash-close"
type = "button"
aria - label = "Dismiss this message" >
    < svg
class
= "octicon octicon-x"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z" > < /path></s
vg >
< /button>

< div
class
= "js-flash-template-message" > < /div>

    < /div>
    < /div>
    < /template>
    < /div>


    < include - fragment
class
= "js-notification-shelf-include-fragment"
data - base - src = "https://github.com/notifications/beta/shelf" > < /include-fragment>


    < div
class
= "application-main "
data - commit - hovercards - enabled >
< div
itemscope
itemtype = "http://schema.org/SoftwareSourceCode"
class
= "" >
    < main >


    < div
class
= "border-bottom shelf intro-shelf js-notice mb-0 pb-4" >
    < div
class
= "width-full container" >
    < div
class
= "width-full mx-auto shelf-content" >
    < h2
class
= "shelf-title" > Learn
Git
and
GitHub
without
any
code
! < /h2>
< p
class
= "shelf-lead" >
    Using
the
Hello
World
guide, you’ll
start
a
branch, write
comments, and
open
a
pull
request.
< /p>
< a
class
= "btn btn-primary shelf-cta"
target = "_blank"
data - hydro - click = "{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;READ_GUIDE&quot;,&quot;repository_id&quot;:76313874,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - hydro - click - hmac = "da11fb27a415535d299cae19e51c5ef24b8193c24c0d5376eb2ac097bddcfd39"
href = "https://guides.github.com/activities/hello-world/" > Read
the
guide < /a>
< /div>
<!-- '"` --> < !-- < /textarea></xm
p > -- > < /option></
form > < form
class
= "shelf-dismiss js-notice-dismiss"
action = "/dashboard/dismiss_bootcamp"
accept - charset = "UTF-8"
method = "post" > < input
type = "hidden"
name = "_method"
value = "delete" / > < input
type = "hidden"
name = "authenticity_token"
value = "3f1m8y4wJ0i481Ne4aHrUHcNilgRtjPqX7hRwOKNgbz12i5LL4Vy759i0oAoh+WbOYz3gaDl5j2DpUQIg75T7g==" / >
    < button
name = "button"
type = "submit"
class
= "mr-1 close-button tooltipped tooltipped-w"
aria - label = "Hide this notice forever"
data - hydro - click = "{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;DISMISS_BANNER&quot;,&quot;repository_id&quot;:76313874,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - hydro - click - hmac = "471ec612b3b767b125394dccd6d1aedb27db988df64948c1c54e52e42c7b3fa8" >
    < svg
aria - label = "Hide this notice forever"
class
= "octicon octicon-x v-align-text-top"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
role = "img" > < path
fill - rule = "evenodd"
d = "M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z" > < /path></s
vg >
< /button></
form > < /div>
< /div>


< div
class
= "pagehead repohead hx_repohead readability-menu bg-gray-light pb-0 pt-0 pt-lg-3" >

    < div
class
= "d-flex container-lg mb-4 p-responsive d-none d-lg-flex" >

    < div
class
= "flex-auto min-width-0 width-fit mr-3" >
    < h1
class
= "public  d-flex flex-wrap flex-items-center break-word float-none " >
    < span
class
= "flex-self-stretch"
style = "margin-top: -2px;" >
    < svg
class
= "octicon octicon-repo"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z" > < /path></s
vg >
< /span>
< span
class
= "author ml-2 flex-self-stretch"
itemprop = "author" >
    < a
class
= "url fn"
rel = "author"
data - hovercard - type = "user"
data - hovercard - url = "/users/lenve/hovercard"
data - octo - click = "hovercard-link-click"
data - octo - dimensions = "link_type:self"
href = "/lenve" > lenve < /a>
    < /span>
    < span
class
= "path-divider flex-self-stretch" > / < /span>
    < strong
itemprop = "name"
class
= "mr-2 flex-self-stretch" >
    < a
data - pjax = "#js-repo-pjax-container"
href = "/lenve/JavaEETest" > JavaEETest < /a>
    < /strong>

    < /h1>


    < /div>

    < ul
class
= "pagehead-actions flex-shrink-0 " >


    < li >


    < !--'"` --><!-- </textarea></xmp> --></option></form><form data-remote="true" class="js-social-form js-social-container clearfix" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input type="hidden" name="authenticity_token" value="2uiNcseSItBegaEga6iq6ngM9WDa14jCyxtMEGiPSGf+3FCtjHhEe6ytfSrxevOAVVRi2GDC380dHju34N7vCQ==" />      <input type="hidden" name="repository_id" value="76313874">

    < details
class
= "details-reset details-overlay select-menu float-left" >
    < summary
class
= "select-menu-button float-left btn btn-sm btn-with-count"
data - hydro - click = "{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;WATCH_BUTTON&quot;,&quot;repository_id&quot;:76313874,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - hydro - click - hmac = "33e9bfa7e158ec4e1fd3c5ecd45066a6ddb655fb11b2b88bb70f5c535df739dc"
data - ga - click = "Repository, click Watch settings, action:blob#show" > < span
data - menu - button >
< svg
class
= "octicon octicon-eye"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z" > < /path></s
vg >
Watch
< /span>
< /summary>        <details-menu
class
= "select-menu-modal position-absolute mt-5 "
style = "z-index: 99;" >
    < div
class
= "select-menu-header" >
    < span
class
= "select-menu-title" > Notifications < /span>
    < /div>
    < div
class
= "select-menu-list" >
    < button
type = "submit"
name = "do"
value = "included"
class
= "select-menu-item width-full"
aria - checked = "true"
role = "menuitemradio"

    >
    < svg
class
= "octicon octicon-check select-menu-item-icon"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z" > < /path></s
vg >
< div
class
= "select-menu-item-text" >
    < span
class
= "select-menu-item-heading" > Not
watching < /span>
< span
class
= "description" > Be
notified
only
when
participating
or
@mentioned.<
/span>
< span
class
= "hidden-select-button-text"
data - menu - button - contents >
< svg
class
= "octicon octicon-eye"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z" > < /path></s
vg >
Watch
< /span>
< /div>
< /button>

< button
type = "submit"
name = "do"
value = "release_only"
class
= "select-menu-item width-full"
aria - checked = "false"
role = "menuitemradio" >
    < svg
class
= "octicon octicon-check select-menu-item-icon"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z" > < /path></s
vg >
< div
class
= "select-menu-item-text" >
    < span
class
= "select-menu-item-heading" > Releases
only < /span>
< span
class
= "description" > Be
notified
of
new releases, and
when
participating
or
@mentioned.<
/span>
< span
class
= "hidden-select-button-text"
data - menu - button - contents >
< svg
class
= "octicon octicon-eye"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z" > < /path></s
vg >
Unwatch
releases
< /span>
< /div>
< /button>

< button
type = "submit"
name = "do"
value = "subscribed"
class
= "select-menu-item width-full"
aria - checked = "false"
role = "menuitemradio" >
    < svg
class
= "octicon octicon-check select-menu-item-icon"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z" > < /path></s
vg >
< div
class
= "select-menu-item-text" >
    < span
class
= "select-menu-item-heading" > Watching < /span>
    < span
class
= "description" > Be
notified
of
all
conversations. < /span>
< span
class
= "hidden-select-button-text"
data - menu - button - contents >
< svg
class
= "octicon octicon-eye"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.679 7.932c.412-.621 1.242-1.75 2.366-2.717C5.175 4.242 6.527 3.5 8 3.5c1.473 0 2.824.742 3.955 1.715 1.124.967 1.954 2.096 2.366 2.717a.119.119 0 010 .136c-.412.621-1.242 1.75-2.366 2.717C10.825 11.758 9.473 12.5 8 12.5c-1.473 0-2.824-.742-3.955-1.715C2.92 9.818 2.09 8.69 1.679 8.068a.119.119 0 010-.136zM8 2c-1.981 0-3.67.992-4.933 2.078C1.797 5.169.88 6.423.43 7.1a1.619 1.619 0 000 1.798c.45.678 1.367 1.932 2.637 3.024C4.329 13.008 6.019 14 8 14c1.981 0 3.67-.992 4.933-2.078 1.27-1.091 2.187-2.345 2.637-3.023a1.619 1.619 0 000-1.798c-.45-.678-1.367-1.932-2.637-3.023C11.671 2.992 9.981 2 8 2zm0 8a2 2 0 100-4 2 2 0 000 4z" > < /path></s
vg >
Unwatch
< /span>
< /div>
< /button>

< button
type = "submit"
name = "do"
value = "ignore"
class
= "select-menu-item width-full"
aria - checked = "false"
role = "menuitemradio" >
    < svg
class
= "octicon octicon-check select-menu-item-icon"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z" > < /path></s
vg >
< div
class
= "select-menu-item-text" >
    < span
class
= "select-menu-item-heading" > Ignoring < /span>
    < span
class
= "description" > Never
be
notified. < /span>
< span
class
= "hidden-select-button-text"
data - menu - button - contents >
< svg
class
= "octicon octicon-mute"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8 2.75a.75.75 0 00-1.238-.57L3.472 5H1.75A1.75 1.75 0 000 6.75v2.5C0 10.216.784 11 1.75 11h1.723l3.289 2.82A.75.75 0 008 13.25V2.75zM4.238 6.32L6.5 4.38v7.24L4.238 9.68a.75.75 0 00-.488-.18h-2a.25.25 0 01-.25-.25v-2.5a.25.25 0 01.25-.25h2a.75.75 0 00.488-.18zm7.042-1.1a.75.75 0 10-1.06 1.06L11.94 8l-1.72 1.72a.75.75 0 101.06 1.06L13 9.06l1.72 1.72a.75.75 0 101.06-1.06L14.06 8l1.72-1.72a.75.75 0 00-1.06-1.06L13 6.94l-1.72-1.72z" > < /path></s
vg >
Stop
ignoring
< /span>
< /div>
< /button>
< /div>
< /details-menu>
< /details>
< a
class
= "social-count js-social-count"
href = "/lenve/JavaEETest/watchers"
aria - label = "260 users are watching this repository" >
    260
    < /a>
    < /form>
    < /li>

    < li >
    < div
class
= "js-toggler-container js-social-container starring-container " >
    < form
class
= "starred js-social-form"
action = "/lenve/JavaEETest/unstar"
accept - charset = "UTF-8"
method = "post" > < input
type = "hidden"
name = "authenticity_token"
value = "ioiTW71vzSstlzNEVZFMTUk724JgZ6t5GqOHK2w2aXEcPLFxDLk9MVD4VR6XVYak5OtXcq3l/bFBBrBIvlB3dw==" / >
    < input
type = "hidden"
name = "context"
value = "repository" > < /input>
    < button
type = "submit"
class
= "btn btn-sm btn-with-count  js-toggler-target"
aria - label = "Unstar this repository"
title = "Unstar lenve/JavaEETest"
data - hydro - click = "{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;UNSTAR_BUTTON&quot;,&quot;repository_id&quot;:76313874,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - hydro - click - hmac = "f071ca30d2d61ec1726873be3a4d1ba13a1b8724b5dca39935c0504d46bba192"
data - ga - click = "Repository, click unstar button, action:blob#show; text:Unstar" > < svg
height = "16"
class
= "octicon octicon-star-fill"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25z" > < /path></s
vg >

Unstar
< /button>        <a class="social-count js-social-count" href="/
lenve / JavaEETest / stargazers
"
aria - label = "2617 users starred this repository" >
    2.6
k
< /a>
< /form>
< form
class
= "unstarred js-social-form"
action = "/lenve/JavaEETest/star"
accept - charset = "UTF-8"
method = "post" > < input
type = "hidden"
name = "authenticity_token"
value = "RCjprWHFXq30wIoHXCZbHlkq1gG71Brr1T2pRz+fef5nevsG0/k7G2gTFghBoHU03tgJyrSq83gVWZkg/NqLLQ==" / >
    < input
type = "hidden"
name = "context"
value = "repository" > < /input>
    < button
type = "submit"
class
= "btn btn-sm btn-with-count  js-toggler-target"
aria - label = "Unstar this repository"
title = "Star lenve/JavaEETest"
data - hydro - click = "{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;STAR_BUTTON&quot;,&quot;repository_id&quot;:76313874,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - hydro - click - hmac = "7b9188255dc44ef59a95d9d62d6bb49172296126915b2f88a2e0f6d1ff712e4e"
data - ga - click = "Repository, click star button, action:blob#show; text:Star" > < svg
height = "16"
class
= "octicon octicon-star"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8 .25a.75.75 0 01.673.418l1.882 3.815 4.21.612a.75.75 0 01.416 1.279l-3.046 2.97.719 4.192a.75.75 0 01-1.088.791L8 12.347l-3.766 1.98a.75.75 0 01-1.088-.79l.72-4.194L.818 6.374a.75.75 0 01.416-1.28l4.21-.611L7.327.668A.75.75 0 018 .25zm0 2.445L6.615 5.5a.75.75 0 01-.564.41l-3.097.45 2.24 2.184a.75.75 0 01.216.664l-.528 3.084 2.769-1.456a.75.75 0 01.698 0l2.77 1.456-.53-3.084a.75.75 0 01.216-.664l2.24-2.183-3.096-.45a.75.75 0 01-.564-.41L8 2.694v.001z" > < /path></s
vg >

Star
< /button>        <a class="social-count js-social-count" href="/
lenve / JavaEETest / stargazers
"
aria - label = "2617 users starred this repository" >
    2.6
k
< /a>
< /form>  </
div >

< /li>

< li >
< div
class
= "float-left" >
    < details
class
= "details-reset details-overlay details-overlay-dark " >
    < summary
class
= "btn btn-sm btn-with-count"
title = "Fork your own copy of lenve/JavaEETest to your account"
data - hydro - click = "{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;FORK_BUTTON&quot;,&quot;repository_id&quot;:76313874,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - hydro - click - hmac = "23a27508ee2649d8058bda17de3a73e907968e08629e1b6bfff0e62206e3854b"
data - ga - click = "Repository, show fork modal, action:blob#show; text:Fork" >
    < svg
class
= "octicon octicon-repo-forked"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M5 3.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm0 2.122a2.25 2.25 0 10-1.5 0v.878A2.25 2.25 0 005.75 8.5h1.5v2.128a2.251 2.251 0 101.5 0V8.5h1.5a2.25 2.25 0 002.25-2.25v-.878a2.25 2.25 0 10-1.5 0v.878a.75.75 0 01-.75.75h-4.5A.75.75 0 015 6.25v-.878zm3.75 7.378a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm3-8.75a.75.75 0 100-1.5.75.75 0 000 1.5z" > < /path></s
vg >
Fork
< /summary>

< details - dialog
class
= "Box d-flex flex-column anim-fade-in fast Box--overlay"
src = "/lenve/JavaEETest/fork?fragment=1"
preload
>
< div
class
= "Box-header" >
    < button
class
= "Box-btn-octicon btn-octicon float-right"
type = "button"
aria - label = "Close dialog"
data - close - dialog >
< svg
height = "16"
class
= "octicon octicon-x"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z" > < /path></s
vg >

< /button>
< h3
class
= "Box-title" > Fork
JavaEETest < /h3>
< /div>

< div
class
= "text-center overflow-auto" >
    < include - fragment >
    < div
class
= "octocat-spinner my-5"
aria - label = "Loading..." > < /div>
    < p
class
= "f5 text-gray" > If
this
dialog
fails
to
load, you
can
visit < a
href = "/lenve/JavaEETest/fork" > the
fork
page < /a> directly.</
p >
< /include-fragment>
< /div>

< /details-dialog>
< /details>
< /div>

< a
href = "/lenve/JavaEETest/network/members"
class
= "social-count"
aria - label = "2671 users forked this repository" >
    2.7
k
< /a>
< /li>
< /ul>

< /div>
< nav
class
= "js-repo-nav js-sidenav-container-pjax clearfix hx_reponav reponav p-responsive d-none d-lg-block container-lg"
itemscope
itemtype = "http://schema.org/BreadcrumbList"
aria - label = "Repository"
data - pjax = "#js-repo-pjax-container" >
    < ul
class
= "list-style-none" >
    < li
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
class
= "js-selected-navigation-item selected reponav-item"
itemprop = "url"
data - hotkey = "g c"
aria - current = "page"
data - selected - links = "repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments /lenve/JavaEETest"
href = "/lenve/JavaEETest" >
    < div
class
= "d-inline" > < svg
class
= "octicon octicon-code"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M4.72 3.22a.75.75 0 011.06 1.06L2.06 8l3.72 3.72a.75.75 0 11-1.06 1.06L.47 8.53a.75.75 0 010-1.06l4.25-4.25zm6.56 0a.75.75 0 10-1.06 1.06L13.94 8l-3.72 3.72a.75.75 0 101.06 1.06l4.25-4.25a.75.75 0 000-1.06l-4.25-4.25z" > < /path></s
vg > < /div>
< span
itemprop = "name" > Code < /span>
    < meta
itemprop = "position"
content = "1" >
    < /a>    </
li >

< li
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
itemprop = "url"
data - hotkey = "g i"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_issues repo_labels repo_milestones /lenve/JavaEETest/issues"
href = "/lenve/JavaEETest/issues" >
    < div
class
= "d-inline" > < svg
class
= "octicon octicon-issue-opened"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm9 3a1 1 0 11-2 0 1 1 0 012 0zm-.25-6.25a.75.75 0 00-1.5 0v3.5a.75.75 0 001.5 0v-3.5z" > < /path></s
vg > < /div>
< span
itemprop = "name" > Issues < /span>
    < span
class
= "Counter" > 6 < /span>
    < meta
itemprop = "position"
content = "2" >
    < /a>      </
li >

< li
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
data - hotkey = "g p"
data - skip - pjax = "true"
itemprop = "url"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_pulls checks /lenve/JavaEETest/pulls"
href = "/lenve/JavaEETest/pulls" >
    < div
class
= "d-inline" > < svg
class
= "octicon octicon-git-pull-request"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z" > < /path></s
vg > < /div>
< span
itemprop = "name" > Pull
requests < /span>
< span
class
= "Counter" > 3 < /span>
    < meta
itemprop = "position"
content = "4" >
    < /a>    </
li >


< li
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement"
class
= "position-relative float-left " >
    < a
data - hotkey = "g w"
data - skip - pjax = "true"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_actions /lenve/JavaEETest/actions"
href = "/lenve/JavaEETest/actions" >
    < div
class
= "d-inline" > < svg
class
= "octicon octicon-play"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zM6.379 5.227A.25.25 0 006 5.442v5.117a.25.25 0 00.379.214l4.264-2.559a.25.25 0 000-.428L6.379 5.227z" > < /path></s
vg > < /div>
Actions
< /a>
< /li>

< li >
< a
data - hotkey = "g b"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_projects new_repo_project repo_project /lenve/JavaEETest/projects"
href = "/lenve/JavaEETest/projects" >
    < div
class
= "d-inline" > < svg
class
= "octicon octicon-project"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.75 0A1.75 1.75 0 000 1.75v12.5C0 15.216.784 16 1.75 16h12.5A1.75 1.75 0 0016 14.25V1.75A1.75 1.75 0 0014.25 0H1.75zM1.5 1.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v12.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25V1.75zM11.75 3a.75.75 0 00-.75.75v7.5a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75zm-8.25.75a.75.75 0 011.5 0v5.5a.75.75 0 01-1.5 0v-5.5zM8 3a.75.75 0 00-.75.75v3.5a.75.75 0 001.5 0v-3.5A.75.75 0 008 3z" > < /path></s
vg > < /div>
Projects
< span
class
= "Counter" > 0 < /span>
    < /a>      </
li >

< li >
< a
class
= "js-selected-navigation-item reponav-item"
data - hotkey = "g w"
data - selected - links = "repo_wiki /lenve/JavaEETest/wiki"
href = "/lenve/JavaEETest/wiki" >
    < div
class
= "d-inline" > < svg
class
= "octicon octicon-book"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M0 1.75A.75.75 0 01.75 1h4.253c1.227 0 2.317.59 3 1.501A3.744 3.744 0 0111.006 1h4.245a.75.75 0 01.75.75v10.5a.75.75 0 01-.75.75h-4.507a2.25 2.25 0 00-1.591.659l-.622.621a.75.75 0 01-1.06 0l-.622-.621A2.25 2.25 0 005.258 13H.75a.75.75 0 01-.75-.75V1.75zm8.755 3a2.25 2.25 0 012.25-2.25H14.5v9h-3.757c-.71 0-1.4.201-1.992.572l.004-7.322zm-1.504 7.324l.004-5.073-.002-2.253A2.25 2.25 0 005.003 2.5H1.5v9h3.757a3.75 3.75 0 011.994.574z" > < /path></s
vg > < /div>
Wiki
< /a>      </
li >

< li >
< a
data - skip - pjax = "true"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "security overview alerts policy token_scanning code_scanning /lenve/JavaEETest/security"
href = "/lenve/JavaEETest/security" >
    < div
class
= "d-inline" > < svg
class
= "octicon octicon-shield"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M7.467.133a1.75 1.75 0 011.066 0l5.25 1.68A1.75 1.75 0 0115 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.7 1.7 0 01-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 011.217-1.667l5.25-1.68zm.61 1.429a.25.25 0 00-.153 0l-5.25 1.68a.25.25 0 00-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.2.2 0 00.154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.25.25 0 00-.174-.237l-5.25-1.68zM9 10.5a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.75a.75.75 0 10-1.5 0v3a.75.75 0 001.5 0v-3z" > < /path></s
vg > < /div>
Security
< span
class
= "Counter js-security-tab-count"
data - url = "/lenve/JavaEETest/security/overall-count"
hidden > < /span>
< /a>      </
li >

< li >
< a
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_graphs repo_contributors dependency_graph dependabot_updates pulse people /lenve/JavaEETest/pulse"
href = "/lenve/JavaEETest/pulse" >
    < div
class
= "d-inline" > < svg
class
= "octicon octicon-graph"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.5 1.75a.75.75 0 00-1.5 0v12.5c0 .414.336.75.75.75h14.5a.75.75 0 000-1.5H1.5V1.75zm14.28 2.53a.75.75 0 00-1.06-1.06L10 7.94 7.53 5.47a.75.75 0 00-1.06 0L3.22 8.72a.75.75 0 001.06 1.06L7 7.06l2.47 2.47a.75.75 0 001.06 0l5.25-5.25z" > < /path></s
vg > < /div>
Insights
< /a>      </
li >


< /ul>
< /nav>

< div
class
= "reponav-wrapper reponav-small d-lg-none" >
    < nav
class
= "reponav js-reponav text-center no-wrap"
itemscope
itemtype = "http://schema.org/BreadcrumbList" >

    < span
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
class
= "js-selected-navigation-item selected reponav-item"
itemprop = "url"
aria - current = "page"
data - selected - links = "repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments /lenve/JavaEETest"
href = "/lenve/JavaEETest" >
    < span
itemprop = "name" > Code < /span>
    < meta
itemprop = "position"
content = "1" >
    < /a>    </s
pan >

< span
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
itemprop = "url"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_issues repo_labels repo_milestones /lenve/JavaEETest/issues"
href = "/lenve/JavaEETest/issues" >
    < span
itemprop = "name" > Issues < /span>
    < span
class
= "Counter" > 6 < /span>
    < meta
itemprop = "position"
content = "2" >
    < /a>      </s
pan >

< span
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
itemprop = "url"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_pulls checks /lenve/JavaEETest/pulls"
href = "/lenve/JavaEETest/pulls" >
    < span
itemprop = "name" > Pull
requests < /span>
< span
class
= "Counter" > 3 < /span>
    < meta
itemprop = "position"
content = "4" >
    < /a>    </s
pan >


< span
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
itemprop = "url"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_projects new_repo_project repo_project /lenve/JavaEETest/projects"
href = "/lenve/JavaEETest/projects" >
    < span
itemprop = "name" > Projects < /span>
    < span
class
= "Counter" > 0 < /span>
    < meta
itemprop = "position"
content = "5" >
    < /a>      </s
pan >

< span
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
itemprop = "url"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_actions /lenve/JavaEETest/actions"
href = "/lenve/JavaEETest/actions" >
    < span
itemprop = "name" > Actions < /span>
    < meta
itemprop = "position"
content = "6" >
    < /a>      </s
pan >

< span
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
itemprop = "url"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "repo_wiki /lenve/JavaEETest/wiki"
href = "/lenve/JavaEETest/wiki" >
    < span
itemprop = "name" > Wiki < /span>
    < meta
itemprop = "position"
content = "7" >
    < /a>      </s
pan >

< a
itemprop = "url"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "security overview alerts policy token_scanning code_scanning /lenve/JavaEETest/security"
href = "/lenve/JavaEETest/security" >
    < span
itemprop = "name" > Security < /span>
    < span
class
= "Counter js-security-deferred-tab-count"
hidden > < /span>
< meta
itemprop = "position"
content = "8" >
    < /a>
    < a
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "pulse /lenve/JavaEETest/pulse"
href = "/lenve/JavaEETest/pulse" >
    Pulse
    < /a>
    < span
itemscope
itemtype = "http://schema.org/ListItem"
itemprop = "itemListElement" >
    < a
itemprop = "url"
class
= "js-selected-navigation-item reponav-item"
data - selected - links = "community /lenve/JavaEETest/community"
href = "/lenve/JavaEETest/community" >
    Community
    < /a>      </s
pan >

< /nav>
< /div>


< /div>


< include - fragment
class
= "js-notification-shelf-include-fragment"
data - base - src = "https://github.com/notifications/beta/shelf" > < /include-fragment>


    < div
class
= "container-lg clearfix new-discussion-timeline  p-responsive" >
    < div
class
= "repository-content " >


    < a
class
= "d-none js-permalink-shortcut"
data - hotkey = "y"
href = "/lenve/JavaEETest/blob/c7c186bdead4f7710decd5a0f85c9f01b0a5a8ef/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js" > Permalink < /a>

    <!-- blob contrib key: blob_contributors:v22:edd4a7c5364fc751305fe8e127d7da31 -->


    < div
class
= "d-flex flex-items-start flex-shrink-0 flex-column flex-md-row pb-3" >
    < span
class
= "d-flex flex-justify-between width-full width-md-auto" >

    < details
class
= "details-reset details-overlay branch-select-menu "
id = "branch-select-menu" >
    < summary
class
= "btn css-truncate btn-sm"
data - hotkey = "w"
title = "Switch branches or tags" >
    < i > Branch
:<
/i>
< span
class
= "css-truncate-target"
data - menu - button > master < /span>
< span
class
= "dropdown-caret" > < /span>
    < /summary>

    < details - menu
class
= "SelectMenu SelectMenu--hasFilter"
src = "/lenve/JavaEETest/refs/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js?source_action=show&amp;source_controller=blob"
preload >
< div
class
= "SelectMenu-modal" >
    < include - fragment
class
= "SelectMenu-loading"
aria - label = "Menu is loading" >
    < svg
class
= "octicon octicon-octoface anim-pulse"
height = "32"
viewBox = "0 0 16 16"
version = "1.1"
width = "32"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M14.7 5.34c.13-.32.55-1.59-.13-3.31 0 0-1.05-.33-3.44 1.3-1-.28-2.07-.32-3.13-.32s-2.13.04-3.13.32c-2.39-1.64-3.44-1.3-3.44-1.3-.68 1.72-.26 2.99-.13 3.31C.49 6.21 0 7.33 0 8.69 0 13.84 3.33 15 7.98 15S16 13.84 16 8.69c0-1.36-.49-2.48-1.3-3.35zM8 14.02c-3.3 0-5.98-.15-5.98-3.35 0-.76.38-1.48 1.02-2.07 1.07-.98 2.9-.46 4.96-.46 2.07 0 3.88-.52 4.96.46.65.59 1.02 1.3 1.02 2.07 0 3.19-2.68 3.35-5.98 3.35zM5.49 9.01c-.66 0-1.2.8-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.54-1.78-1.2-1.78zm5.02 0c-.66 0-1.2.79-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.53-1.78-1.2-1.78z" > < /path></s
vg >
< /include-fragment>
< /div>
< /details-menu>
< /details>

< div
class
= "BtnGroup flex-shrink-0 d-md-none" >
    < a
href = "/lenve/JavaEETest/find/master"
class
= "js-pjax-capture-input btn btn-sm BtnGroup-item"
data - pjax
data - hotkey = "t" >
    Find
file
< /a>
< clipboard - copy
value = "Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js"
class
= "btn btn-sm BtnGroup-item" >
    Copy
path
< /clipboard-copy>
< /div>
< /span>
< h2
id = "blob-path"
class
= "breadcrumb flex-auto min-width-0 text-normal flex-md-self-center ml-md-2 mr-md-3 my-2 my-md-0" >
    < span
class
= "js-repo-root text-bold" > < span
class
= "js-path-segment d-inline-block wb-break-all" > < a
data - pjax = "true"
href = "/lenve/JavaEETest" > < span > JavaEETest < /span></
a > < /span></s
pan > < span
class
= "separator" > / < /span><span class="js-path-segment d-inline-block wb-break-all"><a data-pjax="true" href="/
lenve / JavaEETest / tree / master / Test20 - WebSocket
"><span>Test20-WebSocket</span></a></span><span class="
separator
">/</span><span class="
js - path - segment
d - inline - block
wb -
break
-all
"><a data-pjax="
true
" href=" / lenve / JavaEETest / tree / master / Test20 - WebSocket / src
"><span>src</span></a></span><span class="
separator
">/</span><span class="
js - path - segment
d - inline - block
wb -
break
-all
"><a data-pjax="
true
" href=" / lenve / JavaEETest / tree / master / Test20 - WebSocket / src / main
"><span>main</span></a></span><span class="
separator
">/</span><span class="
js - path - segment
d - inline - block
wb -
break
-all
"><a data-pjax="
true
" href=" / lenve / JavaEETest / tree / master / Test20 - WebSocket / src / main / resources
"><span>resources</span></a></span><span class="
separator
">/</span><span class="
js - path - segment
d - inline - block
wb -
break
-all
"><a data-pjax="
true
" href=" / lenve / JavaEETest / tree / master / Test20 - WebSocket / src / main / resources / static
"><span>static</span></a></span><span class="
separator
">/</span><span class="
js - path - segment
d - inline - block
wb -
break
-all
"><a data-pjax="
true
" href=" / lenve / JavaEETest / tree / master / Test20 - WebSocket / src / main / resources / static
/js"><span>js</s
pan > < /a></s
pan > < span
class
= "separator" > / < /span><strong class="final-path">jquery-3.1.1.js</s
trong >
< span
class
= "separator" > / < /span><details class="details-reset details-overlay d-inline" id="jumpto-symbol-select-menu">
    < summary
class
= "btn-link link-gray css-truncate"
aria - haspopup = "true"
data - hotkey = "r"
data - hydro - click = "{&quot;event_type&quot;:&quot;code_navigation.click_on_blob_definitions&quot;,&quot;payload&quot;:{&quot;action&quot;:&quot;click_on_blob_definitions&quot;,&quot;repository_id&quot;:76313874,&quot;ref&quot;:&quot;master&quot;,&quot;language&quot;:&quot;Java&quot;,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - hydro - click - hmac = "4e315532e1eaee614e9ab8c0a31224b503641123532ee18aa7af2851335d61ec" >
    < svg
class
= "octicon octicon-code"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M4.72 3.22a.75.75 0 011.06 1.06L2.06 8l3.72 3.72a.75.75 0 11-1.06 1.06L.47 8.53a.75.75 0 010-1.06l4.25-4.25zm6.56 0a.75.75 0 10-1.06 1.06L13.94 8l-3.72 3.72a.75.75 0 101.06 1.06l4.25-4.25a.75.75 0 000-1.06l-4.25-4.25z" > < /path></s
vg >
< span
data - menu - button > Jump
to < /span>
< span
class
= "dropdown-caret" > < /span>
    < /summary>
    < details - menu
class
= "SelectMenu SelectMenu--hasFilter"
role = "menu" >
    < div
class
= "SelectMenu-modal" >
    < header
class
= "SelectMenu-header" >
    < span
class
= "SelectMenu-title" > Code
definitions < /span>
< button
class
= "SelectMenu-closeButton"
type = "button"
data - toggle -
for= "jumpto-symbol-select-menu" >
    < svg aria - label = "Close menu"
class
= "octicon octicon-x"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
role = "img" > < path
fill - rule = "evenodd"
d = "M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z" > < /path></s
vg >
< /button>
< /header>
< div
class
= "SelectMenu-filter" >
    < input
class
= "SelectMenu-input form-control js-filterable-field"
id = "jumpto-symbols-filter-field"
type = "text"
autocomplete = "off"
spellcheck = "false"
autofocus
placeholder = "Filter definitions"
aria - label = "Filter definitions" >
    < /div>
    < div
class
= "SelectMenu-list" >
    < div
data - filterable -
for= "jumpto-symbols-filter-field" data - filterable - type = "substring" >
    < /div>
    < /div>
    < footer
class
= "SelectMenu-footer" >
    < div
class
= "d-flex flex-justify-between" >
    Code
navigation
index
up - to - date
< svg
class
= "octicon octicon-dot-fill text-green"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8 4a4 4 0 100 8 4 4 0 000-8z" > < /path></s
vg >
< /div>
< /footer>
< /div>
< /details-menu>
< /details>

< /h2>

< div
class
= "BtnGroup flex-shrink-0 d-none d-md-inline-block" >
    < a
href = "/lenve/JavaEETest/find/master"
class
= "js-pjax-capture-input btn btn-sm BtnGroup-item"
data - pjax
data - hotkey = "t" >
    Find
file
< /a>
< clipboard - copy
value = "Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js"
class
= "btn btn-sm BtnGroup-item" >
    Copy
path
< /clipboard-copy>
< /div>
< /div>


< include - fragment
src = "/lenve/JavaEETest/contributors/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js"
class
= "Box Box--condensed commit-loader" >
    < div
class
= "Box-body bg-blue-light f6" >
    Fetching
contributors & hellip;
<
/div>

< div
class
= "Box-body d-flex flex-items-center" >
    < img
alt = ""
class
= "loader-loading mr-2"
src = "https://github.githubassets.com/images/spinners/octocat-spinner-32-EAF2F5.gif"
width = "16"
height = "16" / >
    < span
class
= "text-red h6 loader-error" > Cannot
retrieve
contributors
at
this
time < /span>
< /div>
< /include-fragment>


< div
class
= "Box mt-3 position-relative
">

< div
class
= "Box-header py-2 d-flex flex-column flex-shrink-0 flex-md-row flex-md-items-center" >
    < div
class
= "text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1 mt-2 mt-md-0" >

    10220
lines(8294
sloc
)
<
span
class
= "file-info-divider" > < /span>
374
KB
< /div>

< div
class
= "d-flex py-1 py-md-0 flex-auto flex-order-1 flex-md-order-2 flex-sm-grow-0 flex-justify-between" >

    < div
class
= "BtnGroup" >
    < a
id = "raw-url"
class
= "btn btn-sm BtnGroup-item"
href = "/lenve/JavaEETest/raw/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js" > Raw < /a>
    < a
class
= "btn btn-sm js-update-url-with-hash BtnGroup-item"
data - hotkey = "b"
href = "/lenve/JavaEETest/blame/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js" > Blame < /a>
    < a
rel = "nofollow"
class
= "btn btn-sm BtnGroup-item"
href = "/lenve/JavaEETest/commits/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js" > History < /a>
    < /div>


    < div >
    < a
class
= "btn-octicon tooltipped tooltipped-nw js-remove-unless-platform"
data - platforms = "windows,mac"
href = "https://desktop.github.com"
aria - label = "Open this file in GitHub Desktop"
data - ga - click = "Repository, open with desktop" >
    < svg
class
= "octicon octicon-device-desktop"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M1.75 2.5h12.5a.25.25 0 01.25.25v7.5a.25.25 0 01-.25.25H1.75a.25.25 0 01-.25-.25v-7.5a.25.25 0 01.25-.25zM14.25 1H1.75A1.75 1.75 0 000 2.75v7.5C0 11.216.784 12 1.75 12h3.727c-.1 1.041-.52 1.872-1.292 2.757A.75.75 0 004.75 16h6.5a.75.75 0 00.565-1.243c-.772-.885-1.193-1.716-1.292-2.757h3.727A1.75 1.75 0 0016 10.25v-7.5A1.75 1.75 0 0014.25 1zM9.018 12H6.982a5.72 5.72 0 01-.765 2.5h3.566a5.72 5.72 0 01-.765-2.5z" > < /path></s
vg >
< /a>

<!-- '"` --> < !-- < /textarea></xm
p > -- > < /option></
form > < form
class
= "inline-form js-update-url-with-hash"
action = "/lenve/JavaEETest/edit/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js"
accept - charset = "UTF-8"
method = "post" > < input
type = "hidden"
name = "authenticity_token"
value = "Im5DIoicOAN2VHIpu61j1Q1eS4e9XL7kt1SCphopOqKyOQk8dRQ0XsNUfDtaOxiQG1XcuXeq82m1JmryEbTXbQ==" / >
    < button
class
= "btn-octicon tooltipped tooltipped-nw"
type = "submit"
aria - label = "Fork this project and edit the file"
data - hotkey = "e"
data - disable -
with>
<
svg
class
= "octicon octicon-pencil"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M11.013 1.427a1.75 1.75 0 012.474 0l1.086 1.086a1.75 1.75 0 010 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 01-.927-.928l.929-3.25a1.75 1.75 0 01.445-.758l8.61-8.61zm1.414 1.06a.25.25 0 00-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 000-.354l-1.086-1.086zM11.189 6.25L9.75 4.81l-6.286 6.287a.25.25 0 00-.064.108l-.558 1.953 1.953-.558a.249.249 0 00.108-.064l6.286-6.286z" > < /path></s
vg >
< /button>
< /form>
<!-- '"` --> < !-- < /textarea></xm
p > -- > < /option></
form > < form
class
= "inline-form"
action = "/lenve/JavaEETest/delete/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js"
accept - charset = "UTF-8"
method = "post" > < input
type = "hidden"
name = "authenticity_token"
value = "jfC54dzv24RX1dlPu7l8Oh8X2RTrdby6os71ZCxqg2c04DvYP68ssD3N4cv/jKAdgooZh/ntpOd+8alJ0ayoOw==" / >
    < button
class
= "btn-octicon btn-octicon-danger tooltipped tooltipped-nw"
type = "submit"
aria - label = "Fork this project and delete the file"
data - disable -
with>
<
svg
class
= "octicon octicon-trashcan"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z" > < /path></s
vg >
< /button>
< /form>    </
div >
< /div>
< /div>


< div
itemprop = "text"
class
= "Box-body p-0 blob-wrapper data type-java " >

    < table
class
= "highlight tab-size js-file-line-container"
data - tab - size = "8"
data - paste - markdown - skip >
< tr >
< td
id = "L1"
class
= "blob-num js-line-number"
data - line - number = "1" > < /td>
    < td
id = "LC1"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span>!</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * jQuery JavaScript Library v3.1.1</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * https://jquery.com/</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Includes Sizzle.js</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * https://sizzlejs.com/</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Copyright jQuery Foundation and other contributors</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Released under the MIT license</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * https://jquery.org/license</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Date: 2016-09-22T22:30Z</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L14"
class
= "blob-num js-line-number"
data - line - number = "14" > < /td>
    < td
id = "LC14"
class
= "blob-code blob-code-inner js-file-line" > (function (global, factory) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L15"
    class
        = "blob-num js-line-number"
        data - line - number = "15" > < /td>
            < td
        id = "LC15"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L16"
    class
        = "blob-num js-line-number"
        data - line - number = "16" > < /td>
            < td
        id = "LC16"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>use strict<span class="pl-pds">&quot;</s
        pan > < /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L17"
    class
        = "blob-num js-line-number"
        data - line - number = "17" > < /td>
            < td
        id = "LC17"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L18"
    class
        = "blob-num js-line-number"
        data - line - number = "18" > < /td>
            < td
        id = "LC18"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( typeof module <span class="pl-k">===</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>object<span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">&amp;&amp;</s
        pan > typeof module < span
    class
        = "pl-k" >
    .<
        /span>exports <span class="pl-k">===</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>object<span class="pl-pds">&quot;</s
        pan > < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L19"
    class
        = "blob-num js-line-number"
        data - line - number = "19" > < /td>
            < td
        id = "LC19"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L20"
    class
        = "blob-num js-line-number"
        data - line - number = "20" > < /td>
            < td
        id = "LC20"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> For CommonJS and CommonJS-like environments where a proper `window`</span></td>
            < /tr>
            < tr >
            < td
        id = "L21"
    class
        = "blob-num js-line-number"
        data - line - number = "21" > < /td>
            < td
        id = "LC21"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> is present, execute the factory and get jQuery.</span></td>
            < /tr>
            < tr >
            < td
        id = "L22"
    class
        = "blob-num js-line-number"
        data - line - number = "22" > < /td>
            < td
        id = "LC22"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> For environments that do not have a `window` with a `document`</span></td>
            < /tr>
            < tr >
            < td
        id = "L23"
    class
        = "blob-num js-line-number"
        data - line - number = "23" > < /td>
            < td
        id = "LC23"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> (such as Node.js), expose a factory as module.exports.</span></td>
            < /tr>
            < tr >
            < td
        id = "L24"
    class
        = "blob-num js-line-number"
        data - line - number = "24" > < /td>
            < td
        id = "LC24"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> This accentuates the need for the creation of a real `window`.</span></td>
            < /tr>
            < tr >
            < td
        id = "L25"
    class
        = "blob-num js-line-number"
        data - line - number = "25" > < /td>
            < td
        id = "LC25"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> e.g. var jQuery = require(&quot;jquery&quot;)(window);</span></td>
            < /tr>
            < tr >
            < td
        id = "L26"
    class
        = "blob-num js-line-number"
        data - line - number = "26" > < /td>
            < td
        id = "LC26"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> See ticket #14549 for more info.</span></td>
            < /tr>
            < tr >
            < td
        id = "L27"
    class
        = "blob-num js-line-number"
        data - line - number = "27" > < /td>
            < td
        id = "LC27"
    class
        = "blob-code blob-code-inner js-file-line" > module < span
    class
        = "pl-k" >
    .<
        /span>exports <span class="pl-k">=</s
        pan > global < span
    class
        = "pl-k" >
    .<
        /span>document <span class="pl-k">?</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L28"
    class
        = "blob-num js-line-number"
        data - line - number = "28" > < /td>
            < td
        id = "LC28"
    class
        = "blob-code blob-code-inner js-file-line" > factory(global, < span
    class
        = "pl-c1" > true < /span> ) <span class="pl-k">:</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L29"
    class
        = "blob-num js-line-number"
        data - line - number = "29" > < /td>
            < td
        id = "LC29"
    class
        = "blob-code blob-code-inner js-file-line" > function (w) {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L30"
        class
            = "blob-num js-line-number"
            data - line - number = "30" > < /td>
                < td
            id = "LC30"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-k" >
            if<
            /span> ( <span class="pl-k">!</s
            pan > w < span
        class
            = "pl-k" >
        .<
            /span>document ) {</
            td >
            < /tr>
            < tr >
            < td
            id = "L31"
        class
            = "blob-num js-line-number"
            data - line - number = "31" > < /td>
                < td
            id = "LC31"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-k" >
            throw
        <
            /span> <span class="pl-k">new</s
            pan > < span
        class
            = "pl-smi" > Error < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
            pan > jQuery
            requires
            a
            window
            with a document < span
        class
            = "pl-pds" > & quot;
        <
            /span></s
            pan >
        );
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L32"
    class
        = "blob-num js-line-number"
        data - line - number = "32" > < /td>
            < td
        id = "LC32"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L33"
class
= "blob-num js-line-number"
data - line - number = "33" > < /td>
    < td
id = "LC33"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> factory( w );</
td >
< /tr>
< tr >
< td
id = "L34"
class
= "blob-num js-line-number"
data - line - number = "34" > < /td>
    < td
id = "LC34"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L35"
class
= "blob-num js-line-number"
data - line - number = "35" > < /td>
    < td
id = "LC35"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L36"
class
= "blob-num js-line-number"
data - line - number = "36" > < /td>
    < td
id = "LC36"
class
= "blob-code blob-code-inner js-file-line" > factory(global);
<
/td>
< /tr>
< tr >
< td
id = "L37"
class
= "blob-num js-line-number"
data - line - number = "37" > < /td>
    < td
id = "LC37"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L38"
class
= "blob-num js-line-number"
data - line - number = "38" > < /td>
    < td
id = "LC38"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L39"
class
= "blob-num js-line-number"
data - line - number = "39" > < /td>
    < td
id = "LC39"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Pass this if window is not defined yet</span></td>
    < /tr>
    < tr >
    < td
id = "L40"
class
= "blob-num js-line-number"
data - line - number = "40" > < /td>
    < td
id = "LC40"
class
= "blob-code blob-code-inner js-file-line" >
} )
(typeof window < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>undefined<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">?</s
pan > window < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">this</s
pan >, function (window, noGlobal) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L41"
class
    = "blob-num js-line-number"
    data - line - number = "41" > < /td>
        < td
    id = "LC41"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L42"
class
    = "blob-num js-line-number"
    data - line - number = "42" > < /td>
        < td
    id = "LC42"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Edge &lt;= 12 - 13+, Firefox &lt;=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1</span></td>
        < /tr>
        < tr >
        < td
    id = "L43"
class
    = "blob-num js-line-number"
    data - line - number = "43" > < /td>
        < td
    id = "LC43"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode</span></td>
        < /tr>
        < tr >
        < td
    id = "L44"
class
    = "blob-num js-line-number"
    data - line - number = "44" > < /td>
        < td
    id = "LC44"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common</span></td>
        < /tr>
        < tr >
        < td
    id = "L45"
class
    = "blob-num js-line-number"
    data - line - number = "45" > < /td>
        < td
    id = "LC45"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> enough that all such attempts are guarded in a try block.</span></td>
        < /tr>
        < tr >
        < td
    id = "L46"
class
    = "blob-num js-line-number"
    data - line - number = "46" > < /td>
        < td
    id = "LC46"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>use strict<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L47"
class
    = "blob-num js-line-number"
    data - line - number = "47" > < /td>
        < td
    id = "LC47"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L48"
class
    = "blob-num js-line-number"
    data - line - number = "48" > < /td>
        < td
    id = "LC48"
class
    = "blob-code blob-code-inner js-file-line" >
    var arr
<
    span
class
    = "pl-k" >= < /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L49"
class
    = "blob-num js-line-number"
    data - line - number = "49" > < /td>
        < td
    id = "LC49"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L50"
class
    = "blob-num js-line-number"
    data - line - number = "50" > < /td>
        < td
    id = "LC50"
class
    = "blob-code blob-code-inner js-file-line" >
    var document
<
    span
class
    = "pl-k" >= < /span> window<span class="pl-k">.</s
    pan > document;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L51"
class
    = "blob-num js-line-number"
    data - line - number = "51" > < /td>
        < td
    id = "LC51"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L52"
class
    = "blob-num js-line-number"
    data - line - number = "52" > < /td>
        < td
    id = "LC52"
class
    = "blob-code blob-code-inner js-file-line" >
    var getProto
<
    span
class
    = "pl-k" >= < /span> <span class="pl-smi">Object</s
    pan > < span
class
    = "pl-k" >
.<
    /span>getPrototypeOf;</
    td >
    < /tr>
    < tr >
    < td
    id = "L53"
class
    = "blob-num js-line-number"
    data - line - number = "53" > < /td>
        < td
    id = "LC53"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L54"
class
    = "blob-num js-line-number"
    data - line - number = "54" > < /td>
        < td
    id = "LC54"
class
    = "blob-code blob-code-inner js-file-line" >
    var slice
<
    span
class
    = "pl-k" >= < /span> arr<span class="pl-k">.</s
    pan > slice;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L55"
class
    = "blob-num js-line-number"
    data - line - number = "55" > < /td>
        < td
    id = "LC55"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L56"
class
    = "blob-num js-line-number"
    data - line - number = "56" > < /td>
        < td
    id = "LC56"
class
    = "blob-code blob-code-inner js-file-line" >
    var concat
<
    span
class
    = "pl-k" >= < /span> arr<span class="pl-k">.</s
    pan > concat;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L57"
class
    = "blob-num js-line-number"
    data - line - number = "57" > < /td>
        < td
    id = "LC57"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L58"
class
    = "blob-num js-line-number"
    data - line - number = "58" > < /td>
        < td
    id = "LC58"
class
    = "blob-code blob-code-inner js-file-line" >
    var push
<
    span
class
    = "pl-k" >= < /span> arr<span class="pl-k">.</s
    pan > push;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L59"
class
    = "blob-num js-line-number"
    data - line - number = "59" > < /td>
        < td
    id = "LC59"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L60"
class
    = "blob-num js-line-number"
    data - line - number = "60" > < /td>
        < td
    id = "LC60"
class
    = "blob-code blob-code-inner js-file-line" >
    var indexOf
<
    span
class
    = "pl-k" >= < /span> arr<span class="pl-k">.</s
    pan > indexOf;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L61"
class
    = "blob-num js-line-number"
    data - line - number = "61" > < /td>
        < td
    id = "LC61"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L62"
class
    = "blob-num js-line-number"
    data - line - number = "62" > < /td>
        < td
    id = "LC62"
class
    = "blob-code blob-code-inner js-file-line" >
    var class2type
<
    span
class
    = "pl-k" >= < /span> {};</
    td >
    < /tr>
    < tr >
    < td
    id = "L63"
class
    = "blob-num js-line-number"
    data - line - number = "63" > < /td>
        < td
    id = "LC63"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L64"
class
    = "blob-num js-line-number"
    data - line - number = "64" > < /td>
        < td
    id = "LC64"
class
    = "blob-code blob-code-inner js-file-line" >
    var toString
<
    span
class
    = "pl-k" >= < /span> class2type<span class="pl-k">.</s
    pan > toString;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L65"
class
    = "blob-num js-line-number"
    data - line - number = "65" > < /td>
        < td
    id = "LC65"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L66"
class
    = "blob-num js-line-number"
    data - line - number = "66" > < /td>
        < td
    id = "LC66"
class
    = "blob-code blob-code-inner js-file-line" >
    var hasOwn
<
    span
class
    = "pl-k" >= < /span> class2type<span class="pl-k">.</s
    pan > hasOwnProperty;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L67"
class
    = "blob-num js-line-number"
    data - line - number = "67" > < /td>
        < td
    id = "LC67"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L68"
class
    = "blob-num js-line-number"
    data - line - number = "68" > < /td>
        < td
    id = "LC68"
class
    = "blob-code blob-code-inner js-file-line" >
    var fnToString
<
    span
class
    = "pl-k" >= < /span> hasOwn<span class="pl-k">.</s
    pan > toString;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L69"
class
    = "blob-num js-line-number"
    data - line - number = "69" > < /td>
        < td
    id = "LC69"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L70"
class
    = "blob-num js-line-number"
    data - line - number = "70" > < /td>
        < td
    id = "LC70"
class
    = "blob-code blob-code-inner js-file-line" >
    var <
    span
class
    = "pl-smi" > ObjectFunctionString < /span> <span class="pl-k">=</s
    pan > fnToString < span
class
    = "pl-k" >
.<
    /span>call( <span class="pl-smi">Object</s
    pan >
);
<
/td>
< /tr>
< tr >
< td
id = "L71"
class
= "blob-num js-line-number"
data - line - number = "71" > < /td>
    < td
id = "LC71"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L72"
class
= "blob-num js-line-number"
data - line - number = "72" > < /td>
    < td
id = "LC72"
class
= "blob-code blob-code-inner js-file-line" >
var support
<
span
class
= "pl-k" >= < /span> {};</
td >
< /tr>
< tr >
< td
id = "L73"
class
= "blob-num js-line-number"
data - line - number = "73" > < /td>
    < td
id = "LC73"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L74"
class
= "blob-num js-line-number"
data - line - number = "74" > < /td>
    < td
id = "LC74"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L75"
class
= "blob-num js-line-number"
data - line - number = "75" > < /td>
    < td
id = "LC75"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L76"
class
= "blob-num js-line-number"
data - line - number = "76" > < /td>
    < td
id = "LC76"
class
= "blob-code blob-code-inner js-file-line" > function DOMEval(code, doc) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L77"
    class
        = "blob-num js-line-number"
        data - line - number = "77" > < /td>
            < td
        id = "LC77"
    class
        = "blob-code blob-code-inner js-file-line" > doc < span
    class
        = "pl-k" >= < /span> doc <span class="pl-k">||</s
        pan > document;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L78"
    class
        = "blob-num js-line-number"
        data - line - number = "78" > < /td>
            < td
        id = "LC78"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L79"
    class
        = "blob-num js-line-number"
        data - line - number = "79" > < /td>
            < td
        id = "LC79"
    class
        = "blob-code blob-code-inner js-file-line" >
        var script
    <
        span
    class
        = "pl-k" >= < /span> doc<span class="pl-k">.</s
        pan > createElement( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>script<span class="pl-pds">&quot;</s
        pan > < /span> );</
        td >
        < /tr>
        < tr >
        < td
        id = "L80"
    class
        = "blob-num js-line-number"
        data - line - number = "80" > < /td>
            < td
        id = "LC80"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L81"
    class
        = "blob-num js-line-number"
        data - line - number = "81" > < /td>
            < td
        id = "LC81"
    class
        = "blob-code blob-code-inner js-file-line" > script < span
    class
        = "pl-k" >
    .<
        /span>text <span class="pl-k">=</s
        pan > code;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L82"
    class
        = "blob-num js-line-number"
        data - line - number = "82" > < /td>
            < td
        id = "LC82"
    class
        = "blob-code blob-code-inner js-file-line" > doc < span
    class
        = "pl-k" >
    .<
        /span>head<span class="pl-k">.</s
        pan > appendChild(script) < span
    class
        = "pl-k" >
    .<
        /span>parentNode<span class="pl-k">.</s
        pan > removeChild(script);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L83"
    class
        = "blob-num js-line-number"
        data - line - number = "83" > < /td>
            < td
        id = "LC83"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L84"
class
= "blob-num js-line-number"
data - line - number = "84" > < /td>
    < td
id = "LC84"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> global Symbol <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L85"
class
= "blob-num js-line-number"
data - line - number = "85" > < /td>
    < td
id = "LC85"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Defining this global in .eslintrc.json would create a danger of using the global</span></td>
    < /tr>
    < tr >
    < td
id = "L86"
class
= "blob-num js-line-number"
data - line - number = "86" > < /td>
    < td
id = "LC86"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> unguarded in another place, it seems safer to define global only for this module</span></td>
    < /tr>
    < tr >
    < td
id = "L87"
class
= "blob-num js-line-number"
data - line - number = "87" > < /td>
    < td
id = "LC87"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L88"
class
= "blob-num js-line-number"
data - line - number = "88" > < /td>
    < td
id = "LC88"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L89"
class
= "blob-num js-line-number"
data - line - number = "89" > < /td>
    < td
id = "LC89"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L90"
class
= "blob-num js-line-number"
data - line - number = "90" > < /td>
    < td
id = "LC90"
class
= "blob-code blob-code-inner js-file-line" >
var <
/td>
< /tr>
< tr >
< td
id = "L91"
class
= "blob-num js-line-number"
data - line - number = "91" > < /td>
    < td
id = "LC91"
class
= "blob-code blob-code-inner js-file-line" > version < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > 3.1
.1 < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L92"
class
= "blob-num js-line-number"
data - line - number = "92" > < /td>
    < td
id = "LC92"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L93"
class
= "blob-num js-line-number"
data - line - number = "93" > < /td>
    < td
id = "LC93"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Define a local copy of jQuery</span></td>
    < /tr>
    < tr >
    < td
id = "L94"
class
= "blob-num js-line-number"
data - line - number = "94" > < /td>
    < td
id = "LC94"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >= < /span> function( selector, context ) {</
td >
< /tr>
< tr >
< td
id = "L95"
class
= "blob-num js-line-number"
data - line - number = "95" > < /td>
    < td
id = "LC95"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L96"
class
= "blob-num js-line-number"
data - line - number = "96" > < /td>
    < td
id = "LC96"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The jQuery object is actually just the init constructor &#39;enhanced&#39;</span></td>
    < /tr>
    < tr >
    < td
id = "L97"
class
= "blob-num js-line-number"
data - line - number = "97" > < /td>
    < td
id = "LC97"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Need init if jQuery is called (just allow error to be thrown if not included)</span></td>
    < /tr>
    < tr >
    < td
id = "L98"
class
= "blob-num js-line-number"
data - line - number = "98" > < /td>
    < td
id = "LC98"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">new</s
pan > jQuery.fn.init(selector, context);
<
/td>
< /tr>
< tr >
< td
id = "L99"
class
= "blob-num js-line-number"
data - line - number = "99" > < /td>
    < td
id = "LC99"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L100"
class
= "blob-num js-line-number"
data - line - number = "100" > < /td>
    < td
id = "LC100"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L101"
class
= "blob-num js-line-number"
data - line - number = "101" > < /td>
    < td
id = "LC101"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android &lt;=4.0 only</span></td>
    < /tr>
    < tr >
    < td
id = "L102"
class
= "blob-num js-line-number"
data - line - number = "102" > < /td>
    < td
id = "LC102"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure we trim BOM and NBSP</span></td>
    < /tr>
    < tr >
    < td
id = "L103"
class
= "blob-num js-line-number"
data - line - number = "103" > < /td>
    < td
id = "LC103"
class
= "blob-code blob-code-inner js-file-line" > rtrim < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > [\s\uFEFF\xA0
]<
span
class
= "pl-k" > + < /span><span class="pl-k">|</s
pan > [\s\uFEFF\xA0
]<
span
class
= "pl-k" > + < /span>$<span class="pl-k">/ < /span>g,</
td >
< /tr>
< tr >
< td
id = "L104"
class
= "blob-num js-line-number"
data - line - number = "104" > < /td>
    < td
id = "LC104"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L105"
class
= "blob-num js-line-number"
data - line - number = "105" > < /td>
    < td
id = "LC105"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Matches dashed string for camelizing</span></td>
    < /tr>
    < tr >
    < td
id = "L106"
class
= "blob-num js-line-number"
data - line - number = "106" > < /td>
    < td
id = "LC106"
class
= "blob-code blob-code-inner js-file-line" > rmsPrefix < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > < span
class
= "pl-k" > - < /span>ms<span class="pl-k">-/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L107"
class
= "blob-num js-line-number"
data - line - number = "107" > < /td>
    < td
id = "LC107"
class
= "blob-code blob-code-inner js-file-line" > rdashAlpha < span
class
= "pl-k" >= < /span> <span class="pl-k">/ - < /span>([a<span class="pl-k">-</span>z])<span class="pl-k">/ < /span>g,</
td >
< /tr>
< tr >
< td
id = "L108"
class
= "blob-num js-line-number"
data - line - number = "108" > < /td>
    < td
id = "LC108"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L109"
class
= "blob-num js-line-number"
data - line - number = "109" > < /td>
    < td
id = "LC109"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Used by jQuery.camelCase as callback to replace()</span></td>
    < /tr>
    < tr >
    < td
id = "L110"
class
= "blob-num js-line-number"
data - line - number = "110" > < /td>
    < td
id = "LC110"
class
= "blob-code blob-code-inner js-file-line" > fcamelCase < span
class
= "pl-k" >= < /span> function( all, letter ) {</
td >
< /tr>
< tr >
< td
id = "L111"
class
= "blob-num js-line-number"
data - line - number = "111" > < /td>
    < td
id = "LC111"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> letter<span class="pl-k">.</s
pan > toUpperCase();
<
/td>
< /tr>
< tr >
< td
id = "L112"
class
= "blob-num js-line-number"
data - line - number = "112" > < /td>
    < td
id = "LC112"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L113"
class
= "blob-num js-line-number"
data - line - number = "113" > < /td>
    < td
id = "LC113"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L114"
class
= "blob-num js-line-number"
data - line - number = "114" > < /td>
    < td
id = "LC114"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>prototype <span class="pl-k">=</s
pan > { < /td>
< /tr>
< tr >
< td
id = "L115"
class
= "blob-num js-line-number"
data - line - number = "115" > < /td>
    < td
id = "LC115"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L116"
class
= "blob-num js-line-number"
data - line - number = "116" > < /td>
    < td
id = "LC116"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The current version of jQuery being used</span></td>
    < /tr>
    < tr >
    < td
id = "L117"
class
= "blob-num js-line-number"
data - line - number = "117" > < /td>
    < td
id = "LC117"
class
= "blob-code blob-code-inner js-file-line" > jquery < span
class
= "pl-k" >
:<
/span> version,</
td >
< /tr>
< tr >
< td
id = "L118"
class
= "blob-num js-line-number"
data - line - number = "118" > < /td>
    < td
id = "LC118"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L119"
class
= "blob-num js-line-number"
data - line - number = "119" > < /td>
    < td
id = "LC119"
class
= "blob-code blob-code-inner js-file-line" > constructor < span
class
= "pl-k" >
:<
/span> jQuery,</
td >
< /tr>
< tr >
< td
id = "L120"
class
= "blob-num js-line-number"
data - line - number = "120" > < /td>
    < td
id = "LC120"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L121"
class
= "blob-num js-line-number"
data - line - number = "121" > < /td>
    < td
id = "LC121"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The default length of a jQuery object is 0</span></td>
    < /tr>
    < tr >
    < td
id = "L122"
class
= "blob-num js-line-number"
data - line - number = "122" > < /td>
    < td
id = "LC122"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L123"
class
= "blob-num js-line-number"
data - line - number = "123" > < /td>
    < td
id = "LC123"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L124"
class
= "blob-num js-line-number"
data - line - number = "124" > < /td>
    < td
id = "LC124"
class
= "blob-code blob-code-inner js-file-line" > toArray < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L125"
class
= "blob-num js-line-number"
data - line - number = "125" > < /td>
    < td
id = "LC125"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> slice<span class="pl-k">.</s
pan > call( < span
class
= "pl-c1" > this < /span> );</
td >
< /tr>
< tr >
< td
id = "L126"
class
= "blob-num js-line-number"
data - line - number = "126" > < /td>
    < td
id = "LC126"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L127"
class
= "blob-num js-line-number"
data - line - number = "127" > < /td>
    < td
id = "LC127"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L128"
class
= "blob-num js-line-number"
data - line - number = "128" > < /td>
    < td
id = "LC128"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get the Nth element in the matched element set OR</span></td>
    < /tr>
    < tr >
    < td
id = "L129"
class
= "blob-num js-line-number"
data - line - number = "129" > < /td>
    < td
id = "LC129"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get the whole matched element set as a clean array</span></td>
    < /tr>
    < tr >
    < td
id = "L130"
class
= "blob-num js-line-number"
data - line - number = "130" > < /td>
    < td
id = "LC130"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> function( num ) {</
td >
< /tr>
< tr >
< td
id = "L131"
class
= "blob-num js-line-number"
data - line - number = "131" > < /td>
    < td
id = "LC131"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L132"
class
= "blob-num js-line-number"
data - line - number = "132" > < /td>
    < td
id = "LC132"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return all the elements in a clean array</span></td>
    < /tr>
    < tr >
    < td
id = "L133"
class
= "blob-num js-line-number"
data - line - number = "133" > < /td>
    < td
id = "LC133"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( num <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L134"
class
= "blob-num js-line-number"
data - line - number = "134" > < /td>
    < td
id = "LC134"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> slice<span class="pl-k">.</s
pan > call( < span
class
= "pl-c1" > this < /span> );</
td >
< /tr>
< tr >
< td
id = "L135"
class
= "blob-num js-line-number"
data - line - number = "135" > < /td>
    < td
id = "LC135"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L136"
class
= "blob-num js-line-number"
data - line - number = "136" > < /td>
    < td
id = "LC136"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L137"
class
= "blob-num js-line-number"
data - line - number = "137" > < /td>
    < td
id = "LC137"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return just the one element from the set</span></td>
    < /tr>
    < tr >
    < td
id = "L138"
class
= "blob-num js-line-number"
data - line - number = "138" > < /td>
    < td
id = "LC138"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> num <span class="pl-k">&lt;</s
pan > < span
class
= "pl-c1" > 0 < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > this < /span>[ num <span class="pl-k">+</span> <span class="pl-c1">this</span><span class="pl-k">.</span>length ] <span class="pl-k">:</s
pan > < span
class
= "pl-c1" > this < /span>[ num ];</
td >
< /tr>
< tr >
< td
id = "L139"
class
= "blob-num js-line-number"
data - line - number = "139" > < /td>
    < td
id = "LC139"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L140"
class
= "blob-num js-line-number"
data - line - number = "140" > < /td>
    < td
id = "LC140"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L141"
class
= "blob-num js-line-number"
data - line - number = "141" > < /td>
    < td
id = "LC141"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Take an array of elements and push it onto the stack</span></td>
    < /tr>
    < tr >
    < td
id = "L142"
class
= "blob-num js-line-number"
data - line - number = "142" > < /td>
    < td
id = "LC142"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (returning the new matched element set)</span></td>
    < /tr>
    < tr >
    < td
id = "L143"
class
= "blob-num js-line-number"
data - line - number = "143" > < /td>
    < td
id = "LC143"
class
= "blob-code blob-code-inner js-file-line" > pushStack < span
class
= "pl-k" >
:<
/span> function( elems ) {</
td >
< /tr>
< tr >
< td
id = "L144"
class
= "blob-num js-line-number"
data - line - number = "144" > < /td>
    < td
id = "LC144"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L145"
class
= "blob-num js-line-number"
data - line - number = "145" > < /td>
    < td
id = "LC145"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Build a new jQuery matched element set</span></td>
    < /tr>
    < tr >
    < td
id = "L146"
class
= "blob-num js-line-number"
data - line - number = "146" > < /td>
    < td
id = "LC146"
class
= "blob-code blob-code-inner js-file-line" >
var ret
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > merge( < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > constructor(), elems
)
;
<
/td>
< /tr>
< tr >
< td
id = "L147"
class
= "blob-num js-line-number"
data - line - number = "147" > < /td>
    < td
id = "LC147"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L148"
class
= "blob-num js-line-number"
data - line - number = "148" > < /td>
    < td
id = "LC148"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add the old object onto the stack (as a reference)</span></td>
    < /tr>
    < tr >
    < td
id = "L149"
class
= "blob-num js-line-number"
data - line - number = "149" > < /td>
    < td
id = "LC149"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >
.<
/span>prevObject <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > this < /span>;</
td >
< /tr>
< tr >
< td
id = "L150"
class
= "blob-num js-line-number"
data - line - number = "150" > < /td>
    < td
id = "LC150"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L151"
class
= "blob-num js-line-number"
data - line - number = "151" > < /td>
    < td
id = "LC151"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return the newly-formed element set</span></td>
    < /tr>
    < tr >
    < td
id = "L152"
class
= "blob-num js-line-number"
data - line - number = "152" > < /td>
    < td
id = "LC152"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L153"
class
= "blob-num js-line-number"
data - line - number = "153" > < /td>
    < td
id = "LC153"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L154"
class
= "blob-num js-line-number"
data - line - number = "154" > < /td>
    < td
id = "LC154"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L155"
class
= "blob-num js-line-number"
data - line - number = "155" > < /td>
    < td
id = "LC155"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Execute a callback for every element in the matched set.</span></td>
    < /tr>
    < tr >
    < td
id = "L156"
class
= "blob-num js-line-number"
data - line - number = "156" > < /td>
    < td
id = "LC156"
class
= "blob-code blob-code-inner js-file-line" > each < span
class
= "pl-k" >
:<
/span> function( callback ) {</
td >
< /tr>
< tr >
< td
id = "L157"
class
= "blob-num js-line-number"
data - line - number = "157" > < /td>
    < td
id = "LC157"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > each( < span
class
= "pl-c1" > this < /span>, callback );</
td >
< /tr>
< tr >
< td
id = "L158"
class
= "blob-num js-line-number"
data - line - number = "158" > < /td>
    < td
id = "LC158"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L159"
class
= "blob-num js-line-number"
data - line - number = "159" > < /td>
    < td
id = "LC159"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L160"
class
= "blob-num js-line-number"
data - line - number = "160" > < /td>
    < td
id = "LC160"
class
= "blob-code blob-code-inner js-file-line" > map < span
class
= "pl-k" >
:<
/span> function( callback ) {</
td >
< /tr>
< tr >
< td
id = "L161"
class
= "blob-num js-line-number"
data - line - number = "161" > < /td>
    < td
id = "LC161"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack( jQuery<span class="pl-k">.</s
pan > map( < span
class
= "pl-c1" > this < /span>, function( elem, i ) {</
td >
< /tr>
< tr >
< td
id = "L162"
class
= "blob-num js-line-number"
data - line - number = "162" > < /td>
    < td
id = "LC162"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> callback<span class="pl-k">.</s
pan > call(elem, i, elem);
<
/td>
< /tr>
< tr >
< td
id = "L163"
class
= "blob-num js-line-number"
data - line - number = "163" > < /td>
    < td
id = "LC163"
class
= "blob-code blob-code-inner js-file-line" >
} ) )
;
<
/td>
< /tr>
< tr >
< td
id = "L164"
class
= "blob-num js-line-number"
data - line - number = "164" > < /td>
    < td
id = "LC164"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L165"
class
= "blob-num js-line-number"
data - line - number = "165" > < /td>
    < td
id = "LC165"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L166"
class
= "blob-num js-line-number"
data - line - number = "166" > < /td>
    < td
id = "LC166"
class
= "blob-code blob-code-inner js-file-line" > slice < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L167"
class
= "blob-num js-line-number"
data - line - number = "167" > < /td>
    < td
id = "LC167"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack( slice<span class="pl-k">.</s
pan > apply( < span
class
= "pl-c1" > this < /span>, arguments ) );</
td >
< /tr>
< tr >
< td
id = "L168"
class
= "blob-num js-line-number"
data - line - number = "168" > < /td>
    < td
id = "LC168"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L169"
class
= "blob-num js-line-number"
data - line - number = "169" > < /td>
    < td
id = "LC169"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L170"
class
= "blob-num js-line-number"
data - line - number = "170" > < /td>
    < td
id = "LC170"
class
= "blob-code blob-code-inner js-file-line" > first < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L171"
class
= "blob-num js-line-number"
data - line - number = "171" > < /td>
    < td
id = "LC171"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>eq( <span class="pl-c1">0</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L172"
class
= "blob-num js-line-number"
data - line - number = "172" > < /td>
    < td
id = "LC172"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L173"
class
= "blob-num js-line-number"
data - line - number = "173" > < /td>
    < td
id = "LC173"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L174"
class
= "blob-num js-line-number"
data - line - number = "174" > < /td>
    < td
id = "LC174"
class
= "blob-code blob-code-inner js-file-line" > last < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L175"
class
= "blob-num js-line-number"
data - line - number = "175" > < /td>
    < td
id = "LC175"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>eq( <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span> );</
td >
< /tr>
< tr >
< td
id = "L176"
class
= "blob-num js-line-number"
data - line - number = "176" > < /td>
    < td
id = "LC176"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L177"
class
= "blob-num js-line-number"
data - line - number = "177" > < /td>
    < td
id = "LC177"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L178"
class
= "blob-num js-line-number"
data - line - number = "178" > < /td>
    < td
id = "LC178"
class
= "blob-code blob-code-inner js-file-line" > eq < span
class
= "pl-k" >
:<
/span> function( i ) {</
td >
< /tr>
< tr >
< td
id = "L179"
class
= "blob-num js-line-number"
data - line - number = "179" > < /td>
    < td
id = "LC179"
class
= "blob-code blob-code-inner js-file-line" >
var len
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>length,</
td >
< /tr>
< tr >
< td
id = "L180"
class
= "blob-num js-line-number"
data - line - number = "180" > < /td>
    < td
id = "LC180"
class
= "blob-code blob-code-inner js-file-line" > j < span
class
= "pl-k" >= < /span> <span class="pl-k">+</s
pan > i < span
class
= "pl-k" > + < /span> ( i <span class="pl-k">&lt;</s
pan > < span
class
= "pl-c1" > 0 < /span> <span class="pl-k">?</s
pan > len < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">0</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L181"
class
= "blob-num js-line-number"
data - line - number = "181" > < /td>
    < td
id = "LC181"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack( j <span class="pl-k">&gt;=</s
pan > < span
class
= "pl-c1" > 0 < /span> <span class="pl-k">&amp;&amp;</s
pan > j < span
class
= "pl-k" > &lt; < /span> len <span class="pl-k">?</s
pan > [ < span
class
= "pl-c1" > this < /span>[ j ] ] <span class="pl-k">:</s
pan > []
)
;
<
/td>
< /tr>
< tr >
< td
id = "L182"
class
= "blob-num js-line-number"
data - line - number = "182" > < /td>
    < td
id = "LC182"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L183"
class
= "blob-num js-line-number"
data - line - number = "183" > < /td>
    < td
id = "LC183"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L184"
class
= "blob-num js-line-number"
data - line - number = "184" > < /td>
    < td
id = "LC184"
class
= "blob-code blob-code-inner js-file-line" > end < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L185"
class
= "blob-num js-line-number"
data - line - number = "185" > < /td>
    < td
id = "LC185"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>prevObject <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > constructor();
<
/td>
< /tr>
< tr >
< td
id = "L186"
class
= "blob-num js-line-number"
data - line - number = "186" > < /td>
    < td
id = "LC186"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L187"
class
= "blob-num js-line-number"
data - line - number = "187" > < /td>
    < td
id = "LC187"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L188"
class
= "blob-num js-line-number"
data - line - number = "188" > < /td>
    < td
id = "LC188"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> For internal use only.</span></td>
    < /tr>
    < tr >
    < td
id = "L189"
class
= "blob-num js-line-number"
data - line - number = "189" > < /td>
    < td
id = "LC189"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Behaves like an Array&#39;s method, not like a jQuery method.</span></td>
    < /tr>
    < tr >
    < td
id = "L190"
class
= "blob-num js-line-number"
data - line - number = "190" > < /td>
    < td
id = "LC190"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >
:<
/span> push,</
td >
< /tr>
< tr >
< td
id = "L191"
class
= "blob-num js-line-number"
data - line - number = "191" > < /td>
    < td
id = "LC191"
class
= "blob-code blob-code-inner js-file-line" > sort < span
class
= "pl-k" >
:<
/span> arr<span class="pl-k">.</s
pan > sort,
<
/td>
< /tr>
< tr >
< td
id = "L192"
class
= "blob-num js-line-number"
data - line - number = "192" > < /td>
    < td
id = "LC192"
class
= "blob-code blob-code-inner js-file-line" > splice < span
class
= "pl-k" >
:<
/span> arr<span class="pl-k">.</s
pan > splice < /td>
< /tr>
< tr >
< td
id = "L193"
class
= "blob-num js-line-number"
data - line - number = "193" > < /td>
    < td
id = "LC193"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L194"
class
= "blob-num js-line-number"
data - line - number = "194" > < /td>
    < td
id = "LC194"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L195"
class
= "blob-num js-line-number"
data - line - number = "195" > < /td>
    < td
id = "LC195"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L196"
class
= "blob-num js-line-number"
data - line - number = "196" > < /td>
    < td
id = "LC196"
class
= "blob-code blob-code-inner js-file-line" >
var options, name, src, copy, copyIsArray, clone, <
/td>
< /tr>
< tr >
< td
id = "L197"
class
= "blob-num js-line-number"
data - line - number = "197" > < /td>
    < td
id = "LC197"
class
= "blob-code blob-code-inner js-file-line" > target < span
class
= "pl-k" >= < /span> arguments[ <span class="pl-c1">0</span> ] <span class="pl-k">||</s
pan > {},
<
/td>
< /tr>
< tr >
< td
id = "L198"
class
= "blob-num js-line-number"
data - line - number = "198" > < /td>
    < td
id = "LC198"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L199"
class
= "blob-num js-line-number"
data - line - number = "199" > < /td>
    < td
id = "LC199"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >= < /span> arguments<span class="pl-k">.</s
pan > length,
<
/td>
< /tr>
< tr >
< td
id = "L200"
class
= "blob-num js-line-number"
data - line - number = "200" > < /td>
    < td
id = "LC200"
class
= "blob-code blob-code-inner js-file-line" > deep < span
class
= "pl-k" >= < /span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L201"
class
= "blob-num js-line-number"
data - line - number = "201" > < /td>
    < td
id = "LC201"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L202"
class
= "blob-num js-line-number"
data - line - number = "202" > < /td>
    < td
id = "LC202"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle a deep copy situation</span></td>
    < /tr>
    < tr >
    < td
id = "L203"
class
= "blob-num js-line-number"
data - line - number = "203" > < /td>
    < td
id = "LC203"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof target <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>boolean<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L204"
class
= "blob-num js-line-number"
data - line - number = "204" > < /td>
    < td
id = "LC204"
class
= "blob-code blob-code-inner js-file-line" > deep < span
class
= "pl-k" >= < /span> target;</
td >
< /tr>
< tr >
< td
id = "L205"
class
= "blob-num js-line-number"
data - line - number = "205" > < /td>
    < td
id = "LC205"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L206"
class
= "blob-num js-line-number"
data - line - number = "206" > < /td>
    < td
id = "LC206"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Skip the boolean and the target</span></td>
    < /tr>
    < tr >
    < td
id = "L207"
class
= "blob-num js-line-number"
data - line - number = "207" > < /td>
    < td
id = "LC207"
class
= "blob-code blob-code-inner js-file-line" > target < span
class
= "pl-k" >= < /span> arguments[ i ] <span class="pl-k">||</s
pan > {};
<
/td>
< /tr>
< tr >
< td
id = "L208"
class
= "blob-num js-line-number"
data - line - number = "208" > < /td>
    < td
id = "LC208"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" > ++ < /span>;</
td >
< /tr>
< tr >
< td
id = "L209"
class
= "blob-num js-line-number"
data - line - number = "209" > < /td>
    < td
id = "LC209"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L210"
class
= "blob-num js-line-number"
data - line - number = "210" > < /td>
    < td
id = "LC210"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L211"
class
= "blob-num js-line-number"
data - line - number = "211" > < /td>
    < td
id = "LC211"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle case when target is a string or something (possible in deep copy)</span></td>
    < /tr>
    < tr >
    < td
id = "L212"
class
= "blob-num js-line-number"
data - line - number = "212" > < /td>
    < td
id = "LC212"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof target <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > object < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>isFunction( target ) ) {</
td >
< /tr>
< tr >
< td
id = "L213"
class
= "blob-num js-line-number"
data - line - number = "213" > < /td>
    < td
id = "LC213"
class
= "blob-code blob-code-inner js-file-line" > target < span
class
= "pl-k" >= < /span> {};</
td >
< /tr>
< tr >
< td
id = "L214"
class
= "blob-num js-line-number"
data - line - number = "214" > < /td>
    < td
id = "LC214"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L215"
class
= "blob-num js-line-number"
data - line - number = "215" > < /td>
    < td
id = "LC215"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L216"
class
= "blob-num js-line-number"
data - line - number = "216" > < /td>
    < td
id = "LC216"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Extend jQuery itself if only one argument is passed</span></td>
    < /tr>
    < tr >
    < td
id = "L217"
class
= "blob-num js-line-number"
data - line - number = "217" > < /td>
    < td
id = "LC217"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( i <span class="pl-k">===</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L218"
class
    = "blob-num js-line-number"
    data - line - number = "218" > < /td>
        < td
    id = "LC218"
class
    = "blob-code blob-code-inner js-file-line" > target < span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L219"
class
    = "blob-num js-line-number"
    data - line - number = "219" > < /td>
        < td
    id = "LC219"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" > -- < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L220"
class
    = "blob-num js-line-number"
    data - line - number = "220" > < /td>
        < td
    id = "LC220"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L221"
class
= "blob-num js-line-number"
data - line - number = "221" > < /td>
    < td
id = "LC221"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L222"
class
= "blob-num js-line-number"
data - line - number = "222" > < /td>
    < td
id = "LC222"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > length;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L223"
class
= "blob-num js-line-number"
data - line - number = "223" > < /td>
    < td
id = "LC223"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L224"
class
= "blob-num js-line-number"
data - line - number = "224" > < /td>
    < td
id = "LC224"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Only deal with non-null/undefined values</span></td>
    < /tr>
    < tr >
    < td
id = "L225"
class
= "blob-num js-line-number"
data - line - number = "225" > < /td>
    < td
id = "LC225"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ( options <span class="pl-k">=</s
pan > arguments[i]
) <
span
class
= "pl-k" > != < /span> <span class="pl-c1">null</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L226"
class
    = "blob-num js-line-number"
    data - line - number = "226" > < /td>
        < td
    id = "LC226"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L227"
class
    = "blob-num js-line-number"
    data - line - number = "227" > < /td>
        < td
    id = "LC227"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Extend the base object</span></td>
        < /tr>
        < tr >
        < td
    id = "L228"
class
    = "blob-num js-line-number"
    data - line - number = "228" > < /td>
        < td
    id = "LC228"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( name in options ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L229"
class
    = "blob-num js-line-number"
    data - line - number = "229" > < /td>
        < td
    id = "LC229"
class
    = "blob-code blob-code-inner js-file-line" > src < span
class
    = "pl-k" >= < /span> target[ name ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L230"
class
    = "blob-num js-line-number"
    data - line - number = "230" > < /td>
        < td
    id = "LC230"
class
    = "blob-code blob-code-inner js-file-line" > copy < span
class
    = "pl-k" >= < /span> options[ name ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L231"
class
    = "blob-num js-line-number"
    data - line - number = "231" > < /td>
        < td
    id = "LC231"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L232"
class
    = "blob-num js-line-number"
    data - line - number = "232" > < /td>
        < td
    id = "LC232"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Prevent never-ending loop</span></td>
        < /tr>
        < tr >
        < td
    id = "L233"
class
    = "blob-num js-line-number"
    data - line - number = "233" > < /td>
        < td
    id = "LC233"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( target <span class="pl-k">===</s
    pan > copy
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L234"
class
    = "blob-num js-line-number"
    data - line - number = "234" > < /td>
        < td
    id = "LC234"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    continue
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L235"
class
    = "blob-num js-line-number"
    data - line - number = "235" > < /td>
        < td
    id = "LC235"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L236"
class
= "blob-num js-line-number"
data - line - number = "236" > < /td>
    < td
id = "LC236"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L237"
class
= "blob-num js-line-number"
data - line - number = "237" > < /td>
    < td
id = "LC237"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Recurse if we&#39;re merging plain objects or arrays</span></td>
    < /tr>
    < tr >
    < td
id = "L238"
class
= "blob-num js-line-number"
data - line - number = "238" > < /td>
    < td
id = "LC238"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( deep <span class="pl-k">&amp;&amp;</s
pan > copy < span
class
= "pl-k" > &amp;&amp; < /span> ( jQuery<span class="pl-k">.</s
pan > isPlainObject(copy) < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L239"
class
= "blob-num js-line-number"
data - line - number = "239" > < /td>
    < td
id = "LC239"
class
= "blob-code blob-code-inner js-file-line" > (copyIsArray < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > isArray(copy)
) ) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L240"
class
    = "blob-num js-line-number"
    data - line - number = "240" > < /td>
        < td
    id = "LC240"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L241"
class
    = "blob-num js-line-number"
    data - line - number = "241" > < /td>
        < td
    id = "LC241"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( copyIsArray ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L242"
class
    = "blob-num js-line-number"
    data - line - number = "242" > < /td>
        < td
    id = "LC242"
class
    = "blob-code blob-code-inner js-file-line" > copyIsArray < span
class
    = "pl-k" >= < /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L243"
class
    = "blob-num js-line-number"
    data - line - number = "243" > < /td>
        < td
    id = "LC243"
class
    = "blob-code blob-code-inner js-file-line" > clone < span
class
    = "pl-k" >= < /span> src <span class="pl-k">&amp;&amp;</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>isArray( src ) <span class="pl-k">?</s
    pan > src < span
class
    = "pl-k" >
:<
    /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L244"
class
    = "blob-num js-line-number"
    data - line - number = "244" > < /td>
        < td
    id = "LC244"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L245"
class
    = "blob-num js-line-number"
    data - line - number = "245" > < /td>
        < td
    id = "LC245"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L246"
class
= "blob-num js-line-number"
data - line - number = "246" > < /td>
    < td
id = "LC246"
class
= "blob-code blob-code-inner js-file-line" > clone < span
class
= "pl-k" >= < /span> src <span class="pl-k">&amp;&amp;</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>isPlainObject( src ) <span class="pl-k">?</s
pan > src < span
class
= "pl-k" >
:<
/span> {};</
td >
< /tr>
< tr >
< td
id = "L247"
class
= "blob-num js-line-number"
data - line - number = "247" > < /td>
    < td
id = "LC247"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L248"
class
= "blob-num js-line-number"
data - line - number = "248" > < /td>
    < td
id = "LC248"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L249"
class
= "blob-num js-line-number"
data - line - number = "249" > < /td>
    < td
id = "LC249"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Never move original objects, clone them</span></td>
    < /tr>
    < tr >
    < td
id = "L250"
class
= "blob-num js-line-number"
data - line - number = "250" > < /td>
    < td
id = "LC250"
class
= "blob-code blob-code-inner js-file-line" > target[name] < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > extend(deep, clone, copy);
<
/td>
< /tr>
< tr >
< td
id = "L251"
class
= "blob-num js-line-number"
data - line - number = "251" > < /td>
    < td
id = "LC251"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L252"
class
= "blob-num js-line-number"
data - line - number = "252" > < /td>
    < td
id = "LC252"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t bring in undefined values</span></td>
    < /tr>
    < tr >
    < td
id = "L253"
class
= "blob-num js-line-number"
data - line - number = "253" > < /td>
    < td
id = "LC253"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (copy < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L254"
class
    = "blob-num js-line-number"
    data - line - number = "254" > < /td>
        < td
    id = "LC254"
class
    = "blob-code blob-code-inner js-file-line" > target[name] < span
class
    = "pl-k" >= < /span> copy;</
    td >
    < /tr>
    < tr >
    < td
    id = "L255"
class
    = "blob-num js-line-number"
    data - line - number = "255" > < /td>
        < td
    id = "LC255"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L256"
class
= "blob-num js-line-number"
data - line - number = "256" > < /td>
    < td
id = "LC256"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L257"
class
= "blob-num js-line-number"
data - line - number = "257" > < /td>
    < td
id = "LC257"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L258"
class
= "blob-num js-line-number"
data - line - number = "258" > < /td>
    < td
id = "LC258"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L259"
class
= "blob-num js-line-number"
data - line - number = "259" > < /td>
    < td
id = "LC259"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L260"
class
= "blob-num js-line-number"
data - line - number = "260" > < /td>
    < td
id = "LC260"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return the modified object</span></td>
    < /tr>
    < tr >
    < td
id = "L261"
class
= "blob-num js-line-number"
data - line - number = "261" > < /td>
    < td
id = "LC261"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> target;</
td >
< /tr>
< tr >
< td
id = "L262"
class
= "blob-num js-line-number"
data - line - number = "262" > < /td>
    < td
id = "LC262"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L263"
class
= "blob-num js-line-number"
data - line - number = "263" > < /td>
    < td
id = "LC263"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L264"
class
= "blob-num js-line-number"
data - line - number = "264" > < /td>
    < td
id = "LC264"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L265"
class
= "blob-num js-line-number"
data - line - number = "265" > < /td>
    < td
id = "LC265"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L266"
class
= "blob-num js-line-number"
data - line - number = "266" > < /td>
    < td
id = "LC266"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Unique for each copy of jQuery on the page</span></td>
    < /tr>
    < tr >
    < td
id = "L267"
class
= "blob-num js-line-number"
data - line - number = "267" > < /td>
    < td
id = "LC267"
class
= "blob-code blob-code-inner js-file-line" > expando < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > jQuery < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> ( version <span class="pl-k">+</s
pan > < span
class
= "pl-smi" > Math < /span><span class="pl-k">.</s
pan > random()
)<
span
class
= "pl-k" >
.<
/span>replace( <span class="pl-k">/ < /span>\<span class="pl-smi">D</s
pan > < span
class
= "pl-k" > / < /span>g, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L268"
class
= "blob-num js-line-number"
data - line - number = "268" > < /td>
    < td
id = "LC268"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L269"
class
= "blob-num js-line-number"
data - line - number = "269" > < /td>
    < td
id = "LC269"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Assume jQuery is ready without the ready module</span></td>
    < /tr>
    < tr >
    < td
id = "L270"
class
= "blob-num js-line-number"
data - line - number = "270" > < /td>
    < td
id = "LC270"
class
= "blob-code blob-code-inner js-file-line" > isReady < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L271"
class
= "blob-num js-line-number"
data - line - number = "271" > < /td>
    < td
id = "LC271"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L272"
class
= "blob-num js-line-number"
data - line - number = "272" > < /td>
    < td
id = "LC272"
class
= "blob-code blob-code-inner js-file-line" > error < span
class
= "pl-k" >
:<
/span> function( msg ) {</
td >
< /tr>
< tr >
< td
id = "L273"
class
= "blob-num js-line-number"
data - line - number = "273" > < /td>
    < td
id = "LC273"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
throw
<
/span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > Error < /span>( msg );</
td >
< /tr>
< tr >
< td
id = "L274"
class
= "blob-num js-line-number"
data - line - number = "274" > < /td>
    < td
id = "LC274"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L275"
class
= "blob-num js-line-number"
data - line - number = "275" > < /td>
    < td
id = "LC275"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L276"
class
= "blob-num js-line-number"
data - line - number = "276" > < /td>
    < td
id = "LC276"
class
= "blob-code blob-code-inner js-file-line" > noop < span
class
= "pl-k" >
:<
/span> function() {},</
td >
< /tr>
< tr >
< td
id = "L277"
class
= "blob-num js-line-number"
data - line - number = "277" > < /td>
    < td
id = "LC277"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L278"
class
= "blob-num js-line-number"
data - line - number = "278" > < /td>
    < td
id = "LC278"
class
= "blob-code blob-code-inner js-file-line" > isFunction < span
class
= "pl-k" >
:<
/span> function( obj ) {</
td >
< /tr>
< tr >
< td
id = "L279"
class
= "blob-num js-line-number"
data - line - number = "279" > < /td>
    < td
id = "LC279"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > type(obj) < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > function<span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L280"
class
= "blob-num js-line-number"
data - line - number = "280" > < /td>
    < td
id = "LC280"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L281"
class
= "blob-num js-line-number"
data - line - number = "281" > < /td>
    < td
id = "LC281"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L282"
class
= "blob-num js-line-number"
data - line - number = "282" > < /td>
    < td
id = "LC282"
class
= "blob-code blob-code-inner js-file-line" > isArray < span
class
= "pl-k" >
:<
/span> <span class="pl-smi">Array</s
pan > < span
class
= "pl-k" >
.<
/span>isArray,</
td >
< /tr>
< tr >
< td
id = "L283"
class
= "blob-num js-line-number"
data - line - number = "283" > < /td>
    < td
id = "LC283"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L284"
class
= "blob-num js-line-number"
data - line - number = "284" > < /td>
    < td
id = "LC284"
class
= "blob-code blob-code-inner js-file-line" > isWindow < span
class
= "pl-k" >
:<
/span> function( obj ) {</
td >
< /tr>
< tr >
< td
id = "L285"
class
= "blob-num js-line-number"
data - line - number = "285" > < /td>
    < td
id = "LC285"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> obj <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">&amp;&amp;</s
pan > obj < span
class
= "pl-k" >= == < /span> obj<span class="pl-k">.</s
pan > window;
<
/td>
< /tr>
< tr >
< td
id = "L286"
class
= "blob-num js-line-number"
data - line - number = "286" > < /td>
    < td
id = "LC286"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L287"
class
= "blob-num js-line-number"
data - line - number = "287" > < /td>
    < td
id = "LC287"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L288"
class
= "blob-num js-line-number"
data - line - number = "288" > < /td>
    < td
id = "LC288"
class
= "blob-code blob-code-inner js-file-line" > isNumeric < span
class
= "pl-k" >
:<
/span> function( obj ) {</
td >
< /tr>
< tr >
< td
id = "L289"
class
= "blob-num js-line-number"
data - line - number = "289" > < /td>
    < td
id = "LC289"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L290"
class
= "blob-num js-line-number"
data - line - number = "290" > < /td>
    < td
id = "LC290"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> As of jQuery 3.0, isNumeric is limited to</span></td>
    < /tr>
    < tr >
    < td
id = "L291"
class
= "blob-num js-line-number"
data - line - number = "291" > < /td>
    < td
id = "LC291"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> strings and numbers (primitives or objects)</span></td>
    < /tr>
    < tr >
    < td
id = "L292"
class
= "blob-num js-line-number"
data - line - number = "292" > < /td>
    < td
id = "LC292"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> that can be coerced to finite numbers (gh-2662)</span></td>
    < /tr>
    < tr >
    < td
id = "L293"
class
= "blob-num js-line-number"
data - line - number = "293" > < /td>
    < td
id = "LC293"
class
= "blob-code blob-code-inner js-file-line" >
var type
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > type(obj);
<
/td>
< /tr>
< tr >
< td
id = "L294"
class
= "blob-num js-line-number"
data - line - number = "294" > < /td>
    < td
id = "LC294"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ( type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>number<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">||</s
pan > type < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L295"
class
= "blob-num js-line-number"
data - line - number = "295" > < /td>
    < td
id = "LC295"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L296"
class
= "blob-num js-line-number"
data - line - number = "296" > < /td>
    < td
id = "LC296"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> parseFloat NaNs numeric-cast false positives (&quot;&quot;)</span></td>
    < /tr>
    < tr >
    < td
id = "L297"
class
= "blob-num js-line-number"
data - line - number = "297" > < /td>
    < td
id = "LC297"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ...but misinterprets leading-number strings, particularly hex literals (&quot;0x...&quot;)</span></td>
    < /tr>
    < tr >
    < td
id = "L298"
class
= "blob-num js-line-number"
data - line - number = "298" > < /td>
    < td
id = "LC298"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> subtraction forces infinities to NaN</span></td>
    < /tr>
    < tr >
    < td
id = "L299"
class
= "blob-num js-line-number"
data - line - number = "299" > < /td>
    < td
id = "LC299"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>isNaN( obj <span class="pl-k">-</s
pan > parseFloat(obj)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L300"
class
= "blob-num js-line-number"
data - line - number = "300" > < /td>
    < td
id = "LC300"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L301"
class
= "blob-num js-line-number"
data - line - number = "301" > < /td>
    < td
id = "LC301"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L302"
class
= "blob-num js-line-number"
data - line - number = "302" > < /td>
    < td
id = "LC302"
class
= "blob-code blob-code-inner js-file-line" > isPlainObject < span
class
= "pl-k" >
:<
/span> function( obj ) {</
td >
< /tr>
< tr >
< td
id = "L303"
class
= "blob-num js-line-number"
data - line - number = "303" > < /td>
    < td
id = "LC303"
class
= "blob-code blob-code-inner js-file-line" >
var proto, <
span
class
= "pl-smi" > Ctor < /span>;</
td >
< /tr>
< tr >
< td
id = "L304"
class
= "blob-num js-line-number"
data - line - number = "304" > < /td>
    < td
id = "LC304"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L305"
class
= "blob-num js-line-number"
data - line - number = "305" > < /td>
    < td
id = "LC305"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Detect obvious negatives</span></td>
    < /tr>
    < tr >
    < td
id = "L306"
class
= "blob-num js-line-number"
data - line - number = "306" > < /td>
    < td
id = "LC306"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use toString instead of jQuery.type to catch host objects</span></td>
    < /tr>
    < tr >
    < td
id = "L307"
class
= "blob-num js-line-number"
data - line - number = "307" > < /td>
    < td
id = "LC307"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > obj < span
class
= "pl-k" > || < /span> toString<span class="pl-k">.</s
pan > call(obj) < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>[object Object]<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L308"
class
= "blob-num js-line-number"
data - line - number = "308" > < /td>
    < td
id = "LC308"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L309"
class
= "blob-num js-line-number"
data - line - number = "309" > < /td>
    < td
id = "LC309"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L310"
class
= "blob-num js-line-number"
data - line - number = "310" > < /td>
    < td
id = "LC310"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L311"
class
= "blob-num js-line-number"
data - line - number = "311" > < /td>
    < td
id = "LC311"
class
= "blob-code blob-code-inner js-file-line" > proto < span
class
= "pl-k" >= < /span> getProto( obj );</
td >
< /tr>
< tr >
< td
id = "L312"
class
= "blob-num js-line-number"
data - line - number = "312" > < /td>
    < td
id = "LC312"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L313"
class
= "blob-num js-line-number"
data - line - number = "313" > < /td>
    < td
id = "LC313"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Objects with no prototype (e.g., `Object.create( null )`) are plain</span></td>
    < /tr>
    < tr >
    < td
id = "L314"
class
= "blob-num js-line-number"
data - line - number = "314" > < /td>
    < td
id = "LC314"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > proto
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L315"
class
    = "blob-num js-line-number"
    data - line - number = "315" > < /td>
        < td
    id = "LC315"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L316"
class
    = "blob-num js-line-number"
    data - line - number = "316" > < /td>
        < td
    id = "LC316"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L317"
class
= "blob-num js-line-number"
data - line - number = "317" > < /td>
    < td
id = "LC317"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L318"
class
= "blob-num js-line-number"
data - line - number = "318" > < /td>
    < td
id = "LC318"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Objects with prototype are plain iff they were constructed by a global Object function</span></td>
    < /tr>
    < tr >
    < td
id = "L319"
class
= "blob-num js-line-number"
data - line - number = "319" > < /td>
    < td
id = "LC319"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Ctor < /span> <span class="pl-k">=</s
pan > hasOwn < span
class
= "pl-k" >
.<
/span>call( proto, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > constructor < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" > &amp;&amp; < /span> proto<span class="pl-k">.</s
pan > constructor;
<
/td>
< /tr>
< tr >
< td
id = "L320"
class
= "blob-num js-line-number"
data - line - number = "320" > < /td>
    < td
id = "LC320"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> typeof <span class="pl-smi">Ctor</s
pan > < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > function<span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> fnToString<span class="pl-k">.</s
pan > call( < span
class
= "pl-smi" > Ctor < /span> ) <span class="pl-k">===</s
pan > < span
class
= "pl-smi" > ObjectFunctionString < /span>;</
td >
< /tr>
< tr >
< td
id = "L321"
class
= "blob-num js-line-number"
data - line - number = "321" > < /td>
    < td
id = "LC321"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L322"
class
= "blob-num js-line-number"
data - line - number = "322" > < /td>
    < td
id = "LC322"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L323"
class
= "blob-num js-line-number"
data - line - number = "323" > < /td>
    < td
id = "LC323"
class
= "blob-code blob-code-inner js-file-line" > isEmptyObject < span
class
= "pl-k" >
:<
/span> function( obj ) {</
td >
< /tr>
< tr >
< td
id = "L324"
class
= "blob-num js-line-number"
data - line - number = "324" > < /td>
    < td
id = "LC324"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L325"
class
= "blob-num js-line-number"
data - line - number = "325" > < /td>
    < td
id = "LC325"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> eslint-disable no-unused-vars <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L326"
class
= "blob-num js-line-number"
data - line - number = "326" > < /td>
    < td
id = "LC326"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> See https://github.com/eslint/eslint/issues/6125</span></td>
    < /tr>
    < tr >
    < td
id = "L327"
class
= "blob-num js-line-number"
data - line - number = "327" > < /td>
    < td
id = "LC327"
class
= "blob-code blob-code-inner js-file-line" >
var name;
<
/td>
< /tr>
< tr >
< td
id = "L328"
class
= "blob-num js-line-number"
data - line - number = "328" > < /td>
    < td
id = "LC328"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L329"
class
= "blob-num js-line-number"
data - line - number = "329" > < /td>
    < td
id = "LC329"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( name in obj ) {</
td >
< /tr>
< tr >
< td
id = "L330"
class
= "blob-num js-line-number"
data - line - number = "330" > < /td>
    < td
id = "LC330"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L331"
class
= "blob-num js-line-number"
data - line - number = "331" > < /td>
    < td
id = "LC331"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L332"
class
= "blob-num js-line-number"
data - line - number = "332" > < /td>
    < td
id = "LC332"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L333"
class
= "blob-num js-line-number"
data - line - number = "333" > < /td>
    < td
id = "LC333"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L334"
class
= "blob-num js-line-number"
data - line - number = "334" > < /td>
    < td
id = "LC334"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L335"
class
= "blob-num js-line-number"
data - line - number = "335" > < /td>
    < td
id = "LC335"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >
:<
/span> function( obj ) {</
td >
< /tr>
< tr >
< td
id = "L336"
class
= "blob-num js-line-number"
data - line - number = "336" > < /td>
    < td
id = "LC336"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( obj <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L337"
class
= "blob-num js-line-number"
data - line - number = "337" > < /td>
    < td
id = "LC337"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> obj <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L338"
class
= "blob-num js-line-number"
data - line - number = "338" > < /td>
    < td
id = "LC338"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L339"
class
= "blob-num js-line-number"
data - line - number = "339" > < /td>
    < td
id = "LC339"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L340"
class
= "blob-num js-line-number"
data - line - number = "340" > < /td>
    < td
id = "LC340"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android &lt;=2.3 only (functionish RegExp)</span></td>
    < /tr>
    < tr >
    < td
id = "L341"
class
= "blob-num js-line-number"
data - line - number = "341" > < /td>
    < td
id = "LC341"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> typeof obj <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">||</s
pan > typeof obj < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > function<span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L342"
class
= "blob-num js-line-number"
data - line - number = "342" > < /td>
    < td
id = "LC342"
class
= "blob-code blob-code-inner js-file-line" > class2type[toString < span
class
= "pl-k" >
.<
/span>call( obj ) ] <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L343"
class
= "blob-num js-line-number"
data - line - number = "343" > < /td>
    < td
id = "LC343"
class
= "blob-code blob-code-inner js-file-line" > typeof obj;
<
/td>
< /tr>
< tr >
< td
id = "L344"
class
= "blob-num js-line-number"
data - line - number = "344" > < /td>
    < td
id = "LC344"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L345"
class
= "blob-num js-line-number"
data - line - number = "345" > < /td>
    < td
id = "LC345"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L346"
class
= "blob-num js-line-number"
data - line - number = "346" > < /td>
    < td
id = "LC346"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Evaluates a script in a global context</span></td>
    < /tr>
    < tr >
    < td
id = "L347"
class
= "blob-num js-line-number"
data - line - number = "347" > < /td>
    < td
id = "LC347"
class
= "blob-code blob-code-inner js-file-line" > globalEval < span
class
= "pl-k" >
:<
/span> function( code ) {</
td >
< /tr>
< tr >
< td
id = "L348"
class
= "blob-num js-line-number"
data - line - number = "348" > < /td>
    < td
id = "LC348"
class
= "blob-code blob-code-inner js-file-line" > DOMEval(code);
<
/td>
< /tr>
< tr >
< td
id = "L349"
class
= "blob-num js-line-number"
data - line - number = "349" > < /td>
    < td
id = "LC349"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L350"
class
= "blob-num js-line-number"
data - line - number = "350" > < /td>
    < td
id = "LC350"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L351"
class
= "blob-num js-line-number"
data - line - number = "351" > < /td>
    < td
id = "LC351"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert dashed to camelCase; used by the css and data modules</span></td>
    < /tr>
    < tr >
    < td
id = "L352"
class
= "blob-num js-line-number"
data - line - number = "352" > < /td>
    < td
id = "LC352"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 - 11, Edge 12 - 13</span></td>
    < /tr>
    < tr >
    < td
id = "L353"
class
= "blob-num js-line-number"
data - line - number = "353" > < /td>
    < td
id = "LC353"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Microsoft forgot to hump their vendor prefix (#9572)</span></td>
    < /tr>
    < tr >
    < td
id = "L354"
class
= "blob-num js-line-number"
data - line - number = "354" > < /td>
    < td
id = "LC354"
class
= "blob-code blob-code-inner js-file-line" > camelCase < span
class
= "pl-k" >
:<
/span> function( string ) {</
td >
< /tr>
< tr >
< td
id = "L355"
class
= "blob-num js-line-number"
data - line - number = "355" > < /td>
    < td
id = "LC355"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> string<span class="pl-k">.</s
pan > replace(rmsPrefix, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ms-<span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > replace(rdashAlpha, fcamelCase);
<
/td>
< /tr>
< tr >
< td
id = "L356"
class
= "blob-num js-line-number"
data - line - number = "356" > < /td>
    < td
id = "LC356"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L357"
class
= "blob-num js-line-number"
data - line - number = "357" > < /td>
    < td
id = "LC357"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L358"
class
= "blob-num js-line-number"
data - line - number = "358" > < /td>
    < td
id = "LC358"
class
= "blob-code blob-code-inner js-file-line" > nodeName < span
class
= "pl-k" >
:<
/span> function( elem, name ) {</
td >
< /tr>
< tr >
< td
id = "L359"
class
= "blob-num js-line-number"
data - line - number = "359" > < /td>
    < td
id = "LC359"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > nodeName < span
class
= "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
pan > nodeName < span
class
= "pl-k" >
.<
/span>toLowerCase() <span class="pl-k">===</s
pan > name < span
class
= "pl-k" >
.<
/span>toLowerCase();</
td >
< /tr>
< tr >
< td
id = "L360"
class
= "blob-num js-line-number"
data - line - number = "360" > < /td>
    < td
id = "LC360"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L361"
class
= "blob-num js-line-number"
data - line - number = "361" > < /td>
    < td
id = "LC361"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L362"
class
= "blob-num js-line-number"
data - line - number = "362" > < /td>
    < td
id = "LC362"
class
= "blob-code blob-code-inner js-file-line" > each < span
class
= "pl-k" >
:<
/span> function( obj, callback ) {</
td >
< /tr>
< tr >
< td
id = "L363"
class
= "blob-num js-line-number"
data - line - number = "363" > < /td>
    < td
id = "LC363"
class
= "blob-code blob-code-inner js-file-line" >
var length, i
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L364"
class
= "blob-num js-line-number"
data - line - number = "364" > < /td>
    < td
id = "LC364"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L365"
class
= "blob-num js-line-number"
data - line - number = "365" > < /td>
    < td
id = "LC365"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( isArrayLike( obj ) ) {</
td >
< /tr>
< tr >
< td
id = "L366"
class
= "blob-num js-line-number"
data - line - number = "366" > < /td>
    < td
id = "LC366"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >= < /span> obj<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L367"
class
= "blob-num js-line-number"
data - line - number = "367" > < /td>
    < td
id = "LC367"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > length;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L368"
class
= "blob-num js-line-number"
data - line - number = "368" > < /td>
    < td
id = "LC368"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( callback<span class="pl-k">.</s
pan > call(obj[i], i, obj[i]) < span
class
= "pl-k" >= == < /span> <span class="pl-c1">false</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L369"
class
    = "blob-num js-line-number"
    data - line - number = "369" > < /td>
        < td
    id = "LC369"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    break
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L370"
class
    = "blob-num js-line-number"
    data - line - number = "370" > < /td>
        < td
    id = "LC370"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L371"
class
= "blob-num js-line-number"
data - line - number = "371" > < /td>
    < td
id = "LC371"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L372"
class
= "blob-num js-line-number"
data - line - number = "372" > < /td>
    < td
id = "LC372"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L373"
class
= "blob-num js-line-number"
data - line - number = "373" > < /td>
    < td
id = "LC373"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i in obj ) {</
td >
< /tr>
< tr >
< td
id = "L374"
class
= "blob-num js-line-number"
data - line - number = "374" > < /td>
    < td
id = "LC374"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( callback<span class="pl-k">.</s
pan > call(obj[i], i, obj[i]) < span
class
= "pl-k" >= == < /span> <span class="pl-c1">false</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L375"
class
    = "blob-num js-line-number"
    data - line - number = "375" > < /td>
        < td
    id = "LC375"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    break
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L376"
class
    = "blob-num js-line-number"
    data - line - number = "376" > < /td>
        < td
    id = "LC376"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L377"
class
= "blob-num js-line-number"
data - line - number = "377" > < /td>
    < td
id = "LC377"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L378"
class
= "blob-num js-line-number"
data - line - number = "378" > < /td>
    < td
id = "LC378"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L379"
class
= "blob-num js-line-number"
data - line - number = "379" > < /td>
    < td
id = "LC379"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L380"
class
= "blob-num js-line-number"
data - line - number = "380" > < /td>
    < td
id = "LC380"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> obj;</
td >
< /tr>
< tr >
< td
id = "L381"
class
= "blob-num js-line-number"
data - line - number = "381" > < /td>
    < td
id = "LC381"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L382"
class
= "blob-num js-line-number"
data - line - number = "382" > < /td>
    < td
id = "LC382"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L383"
class
= "blob-num js-line-number"
data - line - number = "383" > < /td>
    < td
id = "LC383"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android &lt;=4.0 only</span></td>
    < /tr>
    < tr >
    < td
id = "L384"
class
= "blob-num js-line-number"
data - line - number = "384" > < /td>
    < td
id = "LC384"
class
= "blob-code blob-code-inner js-file-line" > trim < span
class
= "pl-k" >
:<
/span> function( text ) {</
td >
< /tr>
< tr >
< td
id = "L385"
class
= "blob-num js-line-number"
data - line - number = "385" > < /td>
    < td
id = "LC385"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> text <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L386"
class
= "blob-num js-line-number"
data - line - number = "386" > < /td>
    < td
id = "LC386"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L387"
class
= "blob-num js-line-number"
data - line - number = "387" > < /td>
    < td
id = "LC387"
class
= "blob-code blob-code-inner js-file-line" > (text < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)<
span
class
= "pl-k" >
.<
/span>replace( rtrim, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L388"
class
= "blob-num js-line-number"
data - line - number = "388" > < /td>
    < td
id = "LC388"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L389"
class
= "blob-num js-line-number"
data - line - number = "389" > < /td>
    < td
id = "LC389"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L390"
class
= "blob-num js-line-number"
data - line - number = "390" > < /td>
    < td
id = "LC390"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> results is for internal usage only</span></td>
    < /tr>
    < tr >
    < td
id = "L391"
class
= "blob-num js-line-number"
data - line - number = "391" > < /td>
    < td
id = "LC391"
class
= "blob-code blob-code-inner js-file-line" > makeArray < span
class
= "pl-k" >
:<
/span> function( arr, results ) {</
td >
< /tr>
< tr >
< td
id = "L392"
class
= "blob-num js-line-number"
data - line - number = "392" > < /td>
    < td
id = "LC392"
class
= "blob-code blob-code-inner js-file-line" >
var ret
<
span
class
= "pl-k" >= < /span> results <span class="pl-k">||</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L393"
class
= "blob-num js-line-number"
data - line - number = "393" > < /td>
    < td
id = "LC393"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L394"
class
= "blob-num js-line-number"
data - line - number = "394" > < /td>
    < td
id = "LC394"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( arr <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L395"
class
= "blob-num js-line-number"
data - line - number = "395" > < /td>
    < td
id = "LC395"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( isArrayLike( Object( arr ) ) ) {</
td >
< /tr>
< tr >
< td
id = "L396"
class
= "blob-num js-line-number"
data - line - number = "396" > < /td>
    < td
id = "LC396"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>merge( ret,</
td >
< /tr>
< tr >
< td
id = "L397"
class
= "blob-num js-line-number"
data - line - number = "397" > < /td>
    < td
id = "LC397"
class
= "blob-code blob-code-inner js-file-line" > typeof arr < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L398"
class
= "blob-num js-line-number"
data - line - number = "398" > < /td>
    < td
id = "LC398"
class
= "blob-code blob-code-inner js-file-line" > [arr] < span
class
= "pl-k" >
:<
/span> arr</
td >
< /tr>
< tr >
< td
id = "L399"
class
= "blob-num js-line-number"
data - line - number = "399" > < /td>
    < td
id = "LC399"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L400"
class
= "blob-num js-line-number"
data - line - number = "400" > < /td>
    < td
id = "LC400"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L401"
class
= "blob-num js-line-number"
data - line - number = "401" > < /td>
    < td
id = "LC401"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >
.<
/span>call( ret, arr );</
td >
< /tr>
< tr >
< td
id = "L402"
class
= "blob-num js-line-number"
data - line - number = "402" > < /td>
    < td
id = "LC402"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L403"
class
= "blob-num js-line-number"
data - line - number = "403" > < /td>
    < td
id = "LC403"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L404"
class
= "blob-num js-line-number"
data - line - number = "404" > < /td>
    < td
id = "LC404"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L405"
class
= "blob-num js-line-number"
data - line - number = "405" > < /td>
    < td
id = "LC405"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L406"
class
= "blob-num js-line-number"
data - line - number = "406" > < /td>
    < td
id = "LC406"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L407"
class
= "blob-num js-line-number"
data - line - number = "407" > < /td>
    < td
id = "LC407"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L408"
class
= "blob-num js-line-number"
data - line - number = "408" > < /td>
    < td
id = "LC408"
class
= "blob-code blob-code-inner js-file-line" > inArray < span
class
= "pl-k" >
:<
/span> function( elem, arr, i ) {</
td >
< /tr>
< tr >
< td
id = "L409"
class
= "blob-num js-line-number"
data - line - number = "409" > < /td>
    < td
id = "LC409"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> arr <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan > < span
class
= "pl-k" >
:<
/span> indexOf<span class="pl-k">.</s
pan > call(arr, elem, i);
<
/td>
< /tr>
< tr >
< td
id = "L410"
class
= "blob-num js-line-number"
data - line - number = "410" > < /td>
    < td
id = "LC410"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L411"
class
= "blob-num js-line-number"
data - line - number = "411" > < /td>
    < td
id = "LC411"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L412"
class
= "blob-num js-line-number"
data - line - number = "412" > < /td>
    < td
id = "LC412"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android &lt;=4.0 only, PhantomJS 1 only</span></td>
    < /tr>
    < tr >
    < td
id = "L413"
class
= "blob-num js-line-number"
data - line - number = "413" > < /td>
    < td
id = "LC413"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> push.apply(_, arraylike) throws on ancient WebKit</span></td>
    < /tr>
    < tr >
    < td
id = "L414"
class
= "blob-num js-line-number"
data - line - number = "414" > < /td>
    < td
id = "LC414"
class
= "blob-code blob-code-inner js-file-line" > merge < span
class
= "pl-k" >
:<
/span> function( first, second ) {</
td >
< /tr>
< tr >
< td
id = "L415"
class
= "blob-num js-line-number"
data - line - number = "415" > < /td>
    < td
id = "LC415"
class
= "blob-code blob-code-inner js-file-line" >
var len
<
span
class
= "pl-k" >= < /span> <span class="pl-k">+</s
pan > second < span
class
= "pl-k" >
.<
/span>length,</
td >
< /tr>
< tr >
< td
id = "L416"
class
= "blob-num js-line-number"
data - line - number = "416" > < /td>
    < td
id = "LC416"
class
= "blob-code blob-code-inner js-file-line" > j < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L417"
class
= "blob-num js-line-number"
data - line - number = "417" > < /td>
    < td
id = "LC417"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> first<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L418"
class
= "blob-num js-line-number"
data - line - number = "418" > < /td>
    < td
id = "LC418"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L419"
class
= "blob-num js-line-number"
data - line - number = "419" > < /td>
    < td
id = "LC419"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; j <span class="pl-k">&lt;</s
pan > len;
j < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L420"
class
= "blob-num js-line-number"
data - line - number = "420" > < /td>
    < td
id = "LC420"
class
= "blob-code blob-code-inner js-file-line" > first[i < span
class
= "pl-k" > ++ < /span> ] <span class="pl-k">=</s
pan > second[j];
<
/td>
< /tr>
< tr >
< td
id = "L421"
class
= "blob-num js-line-number"
data - line - number = "421" > < /td>
    < td
id = "LC421"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L422"
class
= "blob-num js-line-number"
data - line - number = "422" > < /td>
    < td
id = "LC422"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L423"
class
= "blob-num js-line-number"
data - line - number = "423" > < /td>
    < td
id = "LC423"
class
= "blob-code blob-code-inner js-file-line" > first < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">=</s
pan > i;
<
/td>
< /tr>
< tr >
< td
id = "L424"
class
= "blob-num js-line-number"
data - line - number = "424" > < /td>
    < td
id = "LC424"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L425"
class
= "blob-num js-line-number"
data - line - number = "425" > < /td>
    < td
id = "LC425"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> first;</
td >
< /tr>
< tr >
< td
id = "L426"
class
= "blob-num js-line-number"
data - line - number = "426" > < /td>
    < td
id = "LC426"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L427"
class
= "blob-num js-line-number"
data - line - number = "427" > < /td>
    < td
id = "LC427"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L428"
class
= "blob-num js-line-number"
data - line - number = "428" > < /td>
    < td
id = "LC428"
class
= "blob-code blob-code-inner js-file-line" > grep < span
class
= "pl-k" >
:<
/span> function( elems, callback, invert ) {</
td >
< /tr>
< tr >
< td
id = "L429"
class
= "blob-num js-line-number"
data - line - number = "429" > < /td>
    < td
id = "LC429"
class
= "blob-code blob-code-inner js-file-line" >
var callbackInverse, <
/td>
< /tr>
< tr >
< td
id = "L430"
class
= "blob-num js-line-number"
data - line - number = "430" > < /td>
    < td
id = "LC430"
class
= "blob-code blob-code-inner js-file-line" > matches < span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L431"
class
= "blob-num js-line-number"
data - line - number = "431" > < /td>
    < td
id = "LC431"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L432"
class
= "blob-num js-line-number"
data - line - number = "432" > < /td>
    < td
id = "LC432"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >= < /span> elems<span class="pl-k">.</s
pan > length,
<
/td>
< /tr>
< tr >
< td
id = "L433"
class
= "blob-num js-line-number"
data - line - number = "433" > < /td>
    < td
id = "LC433"
class
= "blob-code blob-code-inner js-file-line" > callbackExpect < span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > invert;
<
/td>
< /tr>
< tr >
< td
id = "L434"
class
= "blob-num js-line-number"
data - line - number = "434" > < /td>
    < td
id = "LC434"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L435"
class
= "blob-num js-line-number"
data - line - number = "435" > < /td>
    < td
id = "LC435"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Go through the array, only saving the items</span></td>
    < /tr>
    < tr >
    < td
id = "L436"
class
= "blob-num js-line-number"
data - line - number = "436" > < /td>
    < td
id = "LC436"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> that pass the validator function</span></td>
    < /tr>
    < tr >
    < td
id = "L437"
class
= "blob-num js-line-number"
data - line - number = "437" > < /td>
    < td
id = "LC437"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > length;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L438"
class
= "blob-num js-line-number"
data - line - number = "438" > < /td>
    < td
id = "LC438"
class
= "blob-code blob-code-inner js-file-line" > callbackInverse < span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > callback(elems[i], i);
<
/td>
< /tr>
< tr >
< td
id = "L439"
class
= "blob-num js-line-number"
data - line - number = "439" > < /td>
    < td
id = "LC439"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( callbackInverse <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> callbackExpect ) {</
td >
< /tr>
< tr >
< td
id = "L440"
class
= "blob-num js-line-number"
data - line - number = "440" > < /td>
    < td
id = "LC440"
class
= "blob-code blob-code-inner js-file-line" > matches < span
class
= "pl-k" >
.<
/span>push( elems[ i ] );</
td >
< /tr>
< tr >
< td
id = "L441"
class
= "blob-num js-line-number"
data - line - number = "441" > < /td>
    < td
id = "LC441"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L442"
class
= "blob-num js-line-number"
data - line - number = "442" > < /td>
    < td
id = "LC442"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L443"
class
= "blob-num js-line-number"
data - line - number = "443" > < /td>
    < td
id = "LC443"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L444"
class
= "blob-num js-line-number"
data - line - number = "444" > < /td>
    < td
id = "LC444"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> matches;</
td >
< /tr>
< tr >
< td
id = "L445"
class
= "blob-num js-line-number"
data - line - number = "445" > < /td>
    < td
id = "LC445"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L446"
class
= "blob-num js-line-number"
data - line - number = "446" > < /td>
    < td
id = "LC446"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L447"
class
= "blob-num js-line-number"
data - line - number = "447" > < /td>
    < td
id = "LC447"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> arg is for internal usage only</span></td>
    < /tr>
    < tr >
    < td
id = "L448"
class
= "blob-num js-line-number"
data - line - number = "448" > < /td>
    < td
id = "LC448"
class
= "blob-code blob-code-inner js-file-line" > map < span
class
= "pl-k" >
:<
/span> function( elems, callback, arg ) {</
td >
< /tr>
< tr >
< td
id = "L449"
class
= "blob-num js-line-number"
data - line - number = "449" > < /td>
    < td
id = "LC449"
class
= "blob-code blob-code-inner js-file-line" >
var length, value, <
/td>
< /tr>
< tr >
< td
id = "L450"
class
= "blob-num js-line-number"
data - line - number = "450" > < /td>
    < td
id = "LC450"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L451"
class
= "blob-num js-line-number"
data - line - number = "451" > < /td>
    < td
id = "LC451"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >= < /span> [];</
td >
< /tr>
< tr >
< td
id = "L452"
class
= "blob-num js-line-number"
data - line - number = "452" > < /td>
    < td
id = "LC452"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L453"
class
= "blob-num js-line-number"
data - line - number = "453" > < /td>
    < td
id = "LC453"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Go through the array, translating each of the items to their new values</span></td>
    < /tr>
    < tr >
    < td
id = "L454"
class
= "blob-num js-line-number"
data - line - number = "454" > < /td>
    < td
id = "LC454"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( isArrayLike( elems ) ) {</
td >
< /tr>
< tr >
< td
id = "L455"
class
= "blob-num js-line-number"
data - line - number = "455" > < /td>
    < td
id = "LC455"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >= < /span> elems<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L456"
class
= "blob-num js-line-number"
data - line - number = "456" > < /td>
    < td
id = "LC456"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > length;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L457"
class
= "blob-num js-line-number"
data - line - number = "457" > < /td>
    < td
id = "LC457"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >= < /span> callback( elems[ i ], i, arg );</
td >
< /tr>
< tr >
< td
id = "L458"
class
= "blob-num js-line-number"
data - line - number = "458" > < /td>
    < td
id = "LC458"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L459"
class
= "blob-num js-line-number"
data - line - number = "459" > < /td>
    < td
id = "LC459"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( value <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L460"
class
= "blob-num js-line-number"
data - line - number = "460" > < /td>
    < td
id = "LC460"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >
.<
/span>push( value );</
td >
< /tr>
< tr >
< td
id = "L461"
class
= "blob-num js-line-number"
data - line - number = "461" > < /td>
    < td
id = "LC461"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L462"
class
= "blob-num js-line-number"
data - line - number = "462" > < /td>
    < td
id = "LC462"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L463"
class
= "blob-num js-line-number"
data - line - number = "463" > < /td>
    < td
id = "LC463"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L464"
class
= "blob-num js-line-number"
data - line - number = "464" > < /td>
    < td
id = "LC464"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Go through every key on the object,</span></td>
    < /tr>
    < tr >
    < td
id = "L465"
class
= "blob-num js-line-number"
data - line - number = "465" > < /td>
    < td
id = "LC465"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L466"
class
= "blob-num js-line-number"
data - line - number = "466" > < /td>
    < td
id = "LC466"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i in elems ) {</
td >
< /tr>
< tr >
< td
id = "L467"
class
= "blob-num js-line-number"
data - line - number = "467" > < /td>
    < td
id = "LC467"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >= < /span> callback( elems[ i ], i, arg );</
td >
< /tr>
< tr >
< td
id = "L468"
class
= "blob-num js-line-number"
data - line - number = "468" > < /td>
    < td
id = "LC468"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L469"
class
= "blob-num js-line-number"
data - line - number = "469" > < /td>
    < td
id = "LC469"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( value <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L470"
class
= "blob-num js-line-number"
data - line - number = "470" > < /td>
    < td
id = "LC470"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >
.<
/span>push( value );</
td >
< /tr>
< tr >
< td
id = "L471"
class
= "blob-num js-line-number"
data - line - number = "471" > < /td>
    < td
id = "LC471"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L472"
class
= "blob-num js-line-number"
data - line - number = "472" > < /td>
    < td
id = "LC472"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L473"
class
= "blob-num js-line-number"
data - line - number = "473" > < /td>
    < td
id = "LC473"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L474"
class
= "blob-num js-line-number"
data - line - number = "474" > < /td>
    < td
id = "LC474"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L475"
class
= "blob-num js-line-number"
data - line - number = "475" > < /td>
    < td
id = "LC475"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Flatten any nested arrays</span></td>
    < /tr>
    < tr >
    < td
id = "L476"
class
= "blob-num js-line-number"
data - line - number = "476" > < /td>
    < td
id = "LC476"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> concat<span class="pl-k">.</s
pan > apply([], ret);
<
/td>
< /tr>
< tr >
< td
id = "L477"
class
= "blob-num js-line-number"
data - line - number = "477" > < /td>
    < td
id = "LC477"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L478"
class
= "blob-num js-line-number"
data - line - number = "478" > < /td>
    < td
id = "LC478"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L479"
class
= "blob-num js-line-number"
data - line - number = "479" > < /td>
    < td
id = "LC479"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> A global GUID counter for objects</span></td>
    < /tr>
    < tr >
    < td
id = "L480"
class
= "blob-num js-line-number"
data - line - number = "480" > < /td>
    < td
id = "LC480"
class
= "blob-code blob-code-inner js-file-line" > guid < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">1</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L481"
class
= "blob-num js-line-number"
data - line - number = "481" > < /td>
    < td
id = "LC481"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L482"
class
= "blob-num js-line-number"
data - line - number = "482" > < /td>
    < td
id = "LC482"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Bind a function to a context, optionally partially applying any</span></td>
    < /tr>
    < tr >
    < td
id = "L483"
class
= "blob-num js-line-number"
data - line - number = "483" > < /td>
    < td
id = "LC483"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> arguments.</span></td>
    < /tr>
    < tr >
    < td
id = "L484"
class
= "blob-num js-line-number"
data - line - number = "484" > < /td>
    < td
id = "LC484"
class
= "blob-code blob-code-inner js-file-line" > proxy < span
class
= "pl-k" >
:<
/span> function( fn, context ) {</
td >
< /tr>
< tr >
< td
id = "L485"
class
= "blob-num js-line-number"
data - line - number = "485" > < /td>
    < td
id = "LC485"
class
= "blob-code blob-code-inner js-file-line" >
var tmp, args, proxy;
<
/td>
< /tr>
< tr >
< td
id = "L486"
class
= "blob-num js-line-number"
data - line - number = "486" > < /td>
    < td
id = "LC486"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L487"
class
= "blob-num js-line-number"
data - line - number = "487" > < /td>
    < td
id = "LC487"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof context <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L488"
class
= "blob-num js-line-number"
data - line - number = "488" > < /td>
    < td
id = "LC488"
class
= "blob-code blob-code-inner js-file-line" > tmp < span
class
= "pl-k" >= < /span> fn[ context ];</
td >
< /tr>
< tr >
< td
id = "L489"
class
= "blob-num js-line-number"
data - line - number = "489" > < /td>
    < td
id = "LC489"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" >= < /span> fn;</
td >
< /tr>
< tr >
< td
id = "L490"
class
= "blob-num js-line-number"
data - line - number = "490" > < /td>
    < td
id = "LC490"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >= < /span> tmp;</
td >
< /tr>
< tr >
< td
id = "L491"
class
= "blob-num js-line-number"
data - line - number = "491" > < /td>
    < td
id = "LC491"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L492"
class
= "blob-num js-line-number"
data - line - number = "492" > < /td>
    < td
id = "LC492"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L493"
class
= "blob-num js-line-number"
data - line - number = "493" > < /td>
    < td
id = "LC493"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Quick check to determine if target is callable, in the spec</span></td>
    < /tr>
    < tr >
    < td
id = "L494"
class
= "blob-num js-line-number"
data - line - number = "494" > < /td>
    < td
id = "LC494"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> this throws a TypeError, but we will just return undefined.</span></td>
    < /tr>
    < tr >
    < td
id = "L495"
class
= "blob-num js-line-number"
data - line - number = "495" > < /td>
    < td
id = "LC495"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>isFunction( fn ) ) {</
td >
< /tr>
< tr >
< td
id = "L496"
class
= "blob-num js-line-number"
data - line - number = "496" > < /td>
    < td
id = "LC496"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> undefined;</
td >
< /tr>
< tr >
< td
id = "L497"
class
= "blob-num js-line-number"
data - line - number = "497" > < /td>
    < td
id = "LC497"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L498"
class
= "blob-num js-line-number"
data - line - number = "498" > < /td>
    < td
id = "LC498"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L499"
class
= "blob-num js-line-number"
data - line - number = "499" > < /td>
    < td
id = "LC499"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Simulated bind</span></td>
    < /tr>
    < tr >
    < td
id = "L500"
class
= "blob-num js-line-number"
data - line - number = "500" > < /td>
    < td
id = "LC500"
class
= "blob-code blob-code-inner js-file-line" > args < span
class
= "pl-k" >= < /span> slice<span class="pl-k">.</s
pan > call(arguments, < span
class
= "pl-c1" > 2 < /span> );</
td >
< /tr>
< tr >
< td
id = "L501"
class
= "blob-num js-line-number"
data - line - number = "501" > < /td>
    < td
id = "LC501"
class
= "blob-code blob-code-inner js-file-line" > proxy < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L502"
class
= "blob-num js-line-number"
data - line - number = "502" > < /td>
    < td
id = "LC502"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> fn<span class="pl-k">.</s
pan > apply(context < span
class
= "pl-k" > || < /span> <span class="pl-c1">this</s
pan >, args < span
class
= "pl-k" >
.<
/span>concat( slice<span class="pl-k">.</s
pan > call(arguments)
) )
;
<
/td>
< /tr>
< tr >
< td
id = "L503"
class
= "blob-num js-line-number"
data - line - number = "503" > < /td>
    < td
id = "LC503"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L504"
class
= "blob-num js-line-number"
data - line - number = "504" > < /td>
    < td
id = "LC504"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L505"
class
= "blob-num js-line-number"
data - line - number = "505" > < /td>
    < td
id = "LC505"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set the guid of unique handler to the same of original handler, so it can be removed</span></td>
    < /tr>
    < tr >
    < td
id = "L506"
class
= "blob-num js-line-number"
data - line - number = "506" > < /td>
    < td
id = "LC506"
class
= "blob-code blob-code-inner js-file-line" > proxy < span
class
= "pl-k" >
.<
/span>guid <span class="pl-k">=</s
pan > fn < span
class
= "pl-k" >
.<
/span>guid <span class="pl-k">=</s
pan > fn < span
class
= "pl-k" >
.<
/span>guid <span class="pl-k">||</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>guid<span class="pl-k">++</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L507"
class
= "blob-num js-line-number"
data - line - number = "507" > < /td>
    < td
id = "LC507"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L508"
class
= "blob-num js-line-number"
data - line - number = "508" > < /td>
    < td
id = "LC508"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> proxy;</
td >
< /tr>
< tr >
< td
id = "L509"
class
= "blob-num js-line-number"
data - line - number = "509" > < /td>
    < td
id = "LC509"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L510"
class
= "blob-num js-line-number"
data - line - number = "510" > < /td>
    < td
id = "LC510"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L511"
class
= "blob-num js-line-number"
data - line - number = "511" > < /td>
    < td
id = "LC511"
class
= "blob-code blob-code-inner js-file-line" > now < span
class
= "pl-k" >
:<
/span> <span class="pl-smi">Date</s
pan > < span
class
= "pl-k" >
.<
/span>now,</
td >
< /tr>
< tr >
< td
id = "L512"
class
= "blob-num js-line-number"
data - line - number = "512" > < /td>
    < td
id = "LC512"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L513"
class
= "blob-num js-line-number"
data - line - number = "513" > < /td>
    < td
id = "LC513"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> jQuery.support is not used in Core but other projects attach their</span></td>
    < /tr>
    < tr >
    < td
id = "L514"
class
= "blob-num js-line-number"
data - line - number = "514" > < /td>
    < td
id = "LC514"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> properties to it so it needs to exist.</span></td>
    < /tr>
    < tr >
    < td
id = "L515"
class
= "blob-num js-line-number"
data - line - number = "515" > < /td>
    < td
id = "LC515"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
:<
/span> support</
td >
< /tr>
< tr >
< td
id = "L516"
class
= "blob-num js-line-number"
data - line - number = "516" > < /td>
    < td
id = "LC516"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L517"
class
= "blob-num js-line-number"
data - line - number = "517" > < /td>
    < td
id = "LC517"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L518"
class
= "blob-num js-line-number"
data - line - number = "518" > < /td>
    < td
id = "LC518"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof <span class="pl-smi">Symbol</s
pan > < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > function<span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L519"
class
    = "blob-num js-line-number"
    data - line - number = "519" > < /td>
        < td
    id = "LC519"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>fn[ <span class="pl-smi">Symbol</span><span class="pl-k">.</span>iterator ] <span class="pl-k">=</s
    pan > arr[ < span
class
    = "pl-smi" > Symbol < /span><span class="pl-k">.</s
    pan > iterator
]
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L520"
class
    = "blob-num js-line-number"
    data - line - number = "520" > < /td>
        < td
    id = "LC520"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L521"
class
= "blob-num js-line-number"
data - line - number = "521" > < /td>
    < td
id = "LC521"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L522"
class
= "blob-num js-line-number"
data - line - number = "522" > < /td>
    < td
id = "LC522"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Populate the class2type map</span></td>
    < /tr>
    < tr >
    < td
id = "L523"
class
= "blob-num js-line-number"
data - line - number = "523" > < /td>
    < td
id = "LC523"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > Boolean
Number
String
Function
Array
Date
RegExp
Object
Error
Symbol < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" >
.<
/span>split( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L524"
class
= "blob-num js-line-number"
data - line - number = "524" > < /td>
    < td
id = "LC524"
class
= "blob-code blob-code-inner js-file-line" > function (i, name) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L525"
class
    = "blob-num js-line-number"
    data - line - number = "525" > < /td>
        < td
    id = "LC525"
class
    = "blob-code blob-code-inner js-file-line" > class2type[ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>[object <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</s
    pan > < /span> ] <span class="pl-k">=</s
    pan > name < span
class
    = "pl-k" >
.<
    /span>toLowerCase();</
    td >
    < /tr>
    < tr >
    < td
    id = "L526"
class
    = "blob-num js-line-number"
    data - line - number = "526" > < /td>
        < td
    id = "LC526"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L527"
class
= "blob-num js-line-number"
data - line - number = "527" > < /td>
    < td
id = "LC527"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L528"
class
= "blob-num js-line-number"
data - line - number = "528" > < /td>
    < td
id = "LC528"
class
= "blob-code blob-code-inner js-file-line" > function isArrayLike(obj) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L529"
    class
        = "blob-num js-line-number"
        data - line - number = "529" > < /td>
            < td
        id = "LC529"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L530"
    class
        = "blob-num js-line-number"
        data - line - number = "530" > < /td>
            < td
        id = "LC530"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Support: real iOS 8.2 only (not reproducible in simulator)</span></td>
            < /tr>
            < tr >
            < td
        id = "L531"
    class
        = "blob-num js-line-number"
        data - line - number = "531" > < /td>
            < td
        id = "LC531"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> `in` check used to prevent JIT error (gh-2145)</span></td>
            < /tr>
            < tr >
            < td
        id = "L532"
    class
        = "blob-num js-line-number"
        data - line - number = "532" > < /td>
            < td
        id = "LC532"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> hasOwn isn&#39;t used here due to false negatives</span></td>
            < /tr>
            < tr >
            < td
        id = "L533"
    class
        = "blob-num js-line-number"
        data - line - number = "533" > < /td>
            < td
        id = "LC533"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> regarding Nodelist length in IE</span></td>
            < /tr>
            < tr >
            < td
        id = "L534"
    class
        = "blob-num js-line-number"
        data - line - number = "534" > < /td>
            < td
        id = "LC534"
    class
        = "blob-code blob-code-inner js-file-line" >
        var length
    <
        span
    class
        = "pl-k" >= < /span> <span class="pl-k">!!</s
        pan > obj < span
    class
        = "pl-k" > &amp;&amp; < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > length < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan > in obj < span
    class
        = "pl-k" > &amp;&amp; < /span> obj<span class="pl-k">.</s
        pan > length,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L535"
    class
        = "blob-num js-line-number"
        data - line - number = "535" > < /td>
            < td
        id = "LC535"
    class
        = "blob-code blob-code-inner js-file-line" > type < span
    class
        = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
        pan > type(obj);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L536"
    class
        = "blob-num js-line-number"
        data - line - number = "536" > < /td>
            < td
        id = "LC536"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L537"
    class
        = "blob-num js-line-number"
        data - line - number = "537" > < /td>
            < td
        id = "LC537"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( type <span class="pl-k">===</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>function<span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">||</s
        pan > jQuery < span
    class
        = "pl-k" >
    .<
        /span>isWindow( obj ) ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L538"
    class
        = "blob-num js-line-number"
        data - line - number = "538" > < /td>
            < td
        id = "LC538"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-c1">false</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L539"
    class
        = "blob-num js-line-number"
        data - line - number = "539" > < /td>
            < td
        id = "LC539"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L540"
class
= "blob-num js-line-number"
data - line - number = "540" > < /td>
    < td
id = "LC540"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L541"
class
= "blob-num js-line-number"
data - line - number = "541" > < /td>
    < td
id = "LC541"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>array<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">||</s
pan > length < span
class
= "pl-k" >= == < /span> <span class="pl-c1">0</s
pan > < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L542"
class
= "blob-num js-line-number"
data - line - number = "542" > < /td>
    < td
id = "LC542"
class
= "blob-code blob-code-inner js-file-line" > typeof length < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > number < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> length <span class="pl-k">&gt;</s
pan > < span
class
= "pl-c1" > 0 < /span> <span class="pl-k">&amp;&amp;</s
pan > (length < span
class
= "pl-k" > - < /span> <span class="pl-c1">1</s
pan >
) in
obj;
<
/td>
< /tr>
< tr >
< td
id = "L543"
class
= "blob-num js-line-number"
data - line - number = "543" > < /td>
    < td
id = "LC543"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L544"
class
= "blob-num js-line-number"
data - line - number = "544" > < /td>
    < td
id = "LC544"
class
= "blob-code blob-code-inner js-file-line" >
var <
span
class
= "pl-smi" > Sizzle < /span> <span class="pl-k">=</s
pan > < /td>
< /tr>
< tr >
< td
id = "L545"
class
= "blob-num js-line-number"
data - line - number = "545" > < /td>
    < td
id = "LC545"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span>!</span></td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Sizzle CSS Selector Engine v2.3.3</span></td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * https://sizzlejs.com/</span></td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         *</span></td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Copyright jQuery Foundation and other contributors</span></td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Released under the MIT license</span></td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * http://jquery.org/license</span></td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         *</span></td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Date: 2016-08-08</span></td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L555"
class
= "blob-num js-line-number"
data - line - number = "555" > < /td>
    < td
id = "LC555"
class
= "blob-code blob-code-inner js-file-line" > (function (window) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L556"
class
    = "blob-num js-line-number"
    data - line - number = "556" > < /td>
        < td
    id = "LC556"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L557"
class
    = "blob-num js-line-number"
    data - line - number = "557" > < /td>
        < td
    id = "LC557"
class
    = "blob-code blob-code-inner js-file-line" >
    var i, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L558"
class
    = "blob-num js-line-number"
    data - line - number = "558" > < /td>
        < td
    id = "LC558"
class
    = "blob-code blob-code-inner js-file-line" > support,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L559"
class
    = "blob-num js-line-number"
    data - line - number = "559" > < /td>
        < td
    id = "LC559"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-smi" > Expr < /span>,</
    td >
    < /tr>
    < tr >
    < td
    id = "L560"
class
    = "blob-num js-line-number"
    data - line - number = "560" > < /td>
        < td
    id = "LC560"
class
    = "blob-code blob-code-inner js-file-line" > getText,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L561"
class
    = "blob-num js-line-number"
    data - line - number = "561" > < /td>
        < td
    id = "LC561"
class
    = "blob-code blob-code-inner js-file-line" > isXML,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L562"
class
    = "blob-num js-line-number"
    data - line - number = "562" > < /td>
        < td
    id = "LC562"
class
    = "blob-code blob-code-inner js-file-line" > tokenize,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L563"
class
    = "blob-num js-line-number"
    data - line - number = "563" > < /td>
        < td
    id = "LC563"
class
    = "blob-code blob-code-inner js-file-line" > compile,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L564"
class
    = "blob-num js-line-number"
    data - line - number = "564" > < /td>
        < td
    id = "LC564"
class
    = "blob-code blob-code-inner js-file-line" > select,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L565"
class
    = "blob-num js-line-number"
    data - line - number = "565" > < /td>
        < td
    id = "LC565"
class
    = "blob-code blob-code-inner js-file-line" > outermostContext,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L566"
class
    = "blob-num js-line-number"
    data - line - number = "566" > < /td>
        < td
    id = "LC566"
class
    = "blob-code blob-code-inner js-file-line" > sortInput,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L567"
class
    = "blob-num js-line-number"
    data - line - number = "567" > < /td>
        < td
    id = "LC567"
class
    = "blob-code blob-code-inner js-file-line" > hasDuplicate,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L568"
class
    = "blob-num js-line-number"
    data - line - number = "568" > < /td>
        < td
    id = "LC568"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L569"
class
    = "blob-num js-line-number"
    data - line - number = "569" > < /td>
        < td
    id = "LC569"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Local document vars</span></td>
        < /tr>
        < tr >
        < td
    id = "L570"
class
    = "blob-num js-line-number"
    data - line - number = "570" > < /td>
        < td
    id = "LC570"
class
    = "blob-code blob-code-inner js-file-line" > setDocument,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L571"
class
    = "blob-num js-line-number"
    data - line - number = "571" > < /td>
        < td
    id = "LC571"
class
    = "blob-code blob-code-inner js-file-line" > document,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L572"
class
    = "blob-num js-line-number"
    data - line - number = "572" > < /td>
        < td
    id = "LC572"
class
    = "blob-code blob-code-inner js-file-line" > docElem,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L573"
class
    = "blob-num js-line-number"
    data - line - number = "573" > < /td>
        < td
    id = "LC573"
class
    = "blob-code blob-code-inner js-file-line" > documentIsHTML,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L574"
class
    = "blob-num js-line-number"
    data - line - number = "574" > < /td>
        < td
    id = "LC574"
class
    = "blob-code blob-code-inner js-file-line" > rbuggyQSA,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L575"
class
    = "blob-num js-line-number"
    data - line - number = "575" > < /td>
        < td
    id = "LC575"
class
    = "blob-code blob-code-inner js-file-line" > rbuggyMatches,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L576"
class
    = "blob-num js-line-number"
    data - line - number = "576" > < /td>
        < td
    id = "LC576"
class
    = "blob-code blob-code-inner js-file-line" > matches,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L577"
class
    = "blob-num js-line-number"
    data - line - number = "577" > < /td>
        < td
    id = "LC577"
class
    = "blob-code blob-code-inner js-file-line" > contains,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L578"
class
    = "blob-num js-line-number"
    data - line - number = "578" > < /td>
        < td
    id = "LC578"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L579"
class
    = "blob-num js-line-number"
    data - line - number = "579" > < /td>
        < td
    id = "LC579"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Instance-specific data</span></td>
        < /tr>
        < tr >
        < td
    id = "L580"
class
    = "blob-num js-line-number"
    data - line - number = "580" > < /td>
        < td
    id = "LC580"
class
    = "blob-code blob-code-inner js-file-line" > expando < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > sizzle < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > * < /span> <span class="pl-k">new</s
    pan > < span
class
    = "pl-smi" > Date < /span>(),</
    td >
    < /tr>
    < tr >
    < td
    id = "L581"
class
    = "blob-num js-line-number"
    data - line - number = "581" > < /td>
        < td
    id = "LC581"
class
    = "blob-code blob-code-inner js-file-line" > preferredDoc < span
class
    = "pl-k" >= < /span> window<span class="pl-k">.</s
    pan > document,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L582"
class
    = "blob-num js-line-number"
    data - line - number = "582" > < /td>
        < td
    id = "LC582"
class
    = "blob-code blob-code-inner js-file-line" > dirruns < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L583"
class
    = "blob-num js-line-number"
    data - line - number = "583" > < /td>
        < td
    id = "LC583"
class
    = "blob-code blob-code-inner js-file-line" > done < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L584"
class
    = "blob-num js-line-number"
    data - line - number = "584" > < /td>
        < td
    id = "LC584"
class
    = "blob-code blob-code-inner js-file-line" > classCache < span
class
    = "pl-k" >= < /span> createCache(),</
    td >
    < /tr>
    < tr >
    < td
    id = "L585"
class
    = "blob-num js-line-number"
    data - line - number = "585" > < /td>
        < td
    id = "LC585"
class
    = "blob-code blob-code-inner js-file-line" > tokenCache < span
class
    = "pl-k" >= < /span> createCache(),</
    td >
    < /tr>
    < tr >
    < td
    id = "L586"
class
    = "blob-num js-line-number"
    data - line - number = "586" > < /td>
        < td
    id = "LC586"
class
    = "blob-code blob-code-inner js-file-line" > compilerCache < span
class
    = "pl-k" >= < /span> createCache(),</
    td >
    < /tr>
    < tr >
    < td
    id = "L587"
class
    = "blob-num js-line-number"
    data - line - number = "587" > < /td>
        < td
    id = "LC587"
class
    = "blob-code blob-code-inner js-file-line" > sortOrder < span
class
    = "pl-k" >= < /span> function( a, b ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L588"
class
    = "blob-num js-line-number"
    data - line - number = "588" > < /td>
        < td
    id = "LC588"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( a <span class="pl-k">===</s
    pan > b
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L589"
class
    = "blob-num js-line-number"
    data - line - number = "589" > < /td>
        < td
    id = "LC589"
class
    = "blob-code blob-code-inner js-file-line" > hasDuplicate < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L590"
class
    = "blob-num js-line-number"
    data - line - number = "590" > < /td>
        < td
    id = "LC590"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L591"
class
= "blob-num js-line-number"
data - line - number = "591" > < /td>
    < td
id = "LC591"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L592"
class
= "blob-num js-line-number"
data - line - number = "592" > < /td>
    < td
id = "LC592"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L593"
class
= "blob-num js-line-number"
data - line - number = "593" > < /td>
    < td
id = "LC593"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L594"
class
= "blob-num js-line-number"
data - line - number = "594" > < /td>
    < td
id = "LC594"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Instance methods</span></td>
    < /tr>
    < tr >
    < td
id = "L595"
class
= "blob-num js-line-number"
data - line - number = "595" > < /td>
    < td
id = "LC595"
class
= "blob-code blob-code-inner js-file-line" > hasOwn < span
class
= "pl-k" >= < /span> ({})<span class="pl-k">.</s
pan > hasOwnProperty,
<
/td>
< /tr>
< tr >
< td
id = "L596"
class
= "blob-num js-line-number"
data - line - number = "596" > < /td>
    < td
id = "LC596"
class
= "blob-code blob-code-inner js-file-line" > arr < span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L597"
class
= "blob-num js-line-number"
data - line - number = "597" > < /td>
    < td
id = "LC597"
class
= "blob-code blob-code-inner js-file-line" > pop < span
class
= "pl-k" >= < /span> arr<span class="pl-k">.</s
pan > pop,
<
/td>
< /tr>
< tr >
< td
id = "L598"
class
= "blob-num js-line-number"
data - line - number = "598" > < /td>
    < td
id = "LC598"
class
= "blob-code blob-code-inner js-file-line" > push_native < span
class
= "pl-k" >= < /span> arr<span class="pl-k">.</s
pan > push,
<
/td>
< /tr>
< tr >
< td
id = "L599"
class
= "blob-num js-line-number"
data - line - number = "599" > < /td>
    < td
id = "LC599"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >= < /span> arr<span class="pl-k">.</s
pan > push,
<
/td>
< /tr>
< tr >
< td
id = "L600"
class
= "blob-num js-line-number"
data - line - number = "600" > < /td>
    < td
id = "LC600"
class
= "blob-code blob-code-inner js-file-line" > slice < span
class
= "pl-k" >= < /span> arr<span class="pl-k">.</s
pan > slice,
<
/td>
< /tr>
< tr >
< td
id = "L601"
class
= "blob-num js-line-number"
data - line - number = "601" > < /td>
    < td
id = "LC601"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use a stripped-down indexOf as it&#39;s faster than native</span></td>
    < /tr>
    < tr >
    < td
id = "L602"
class
= "blob-num js-line-number"
data - line - number = "602" > < /td>
    < td
id = "LC602"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://jsperf.com/thor-indexof-vs-for/5</span></td>
    < /tr>
    < tr >
    < td
id = "L603"
class
= "blob-num js-line-number"
data - line - number = "603" > < /td>
    < td
id = "LC603"
class
= "blob-code blob-code-inner js-file-line" > indexOf < span
class
= "pl-k" >= < /span> function( list, elem ) {</
td >
< /tr>
< tr >
< td
id = "L604"
class
= "blob-num js-line-number"
data - line - number = "604" > < /td>
    < td
id = "LC604"
class
= "blob-code blob-code-inner js-file-line" >
var i
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L605"
class
= "blob-num js-line-number"
data - line - number = "605" > < /td>
    < td
id = "LC605"
class
= "blob-code blob-code-inner js-file-line" > len < span
class
= "pl-k" >= < /span> list<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L606"
class
= "blob-num js-line-number"
data - line - number = "606" > < /td>
    < td
id = "LC606"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > len;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L607"
class
= "blob-num js-line-number"
data - line - number = "607" > < /td>
    < td
id = "LC607"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( list[i] <span class="pl-k">===</s
pan > elem
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L608"
class
    = "blob-num js-line-number"
    data - line - number = "608" > < /td>
        < td
    id = "LC608"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> i;</
    td >
    < /tr>
    < tr >
    < td
    id = "L609"
class
    = "blob-num js-line-number"
    data - line - number = "609" > < /td>
        < td
    id = "LC609"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L610"
class
= "blob-num js-line-number"
data - line - number = "610" > < /td>
    < td
id = "LC610"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L611"
class
= "blob-num js-line-number"
data - line - number = "611" > < /td>
    < td
id = "LC611"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span>;</
td >
< /tr>
< tr >
< td
id = "L612"
class
= "blob-num js-line-number"
data - line - number = "612" > < /td>
    < td
id = "LC612"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L613"
class
= "blob-num js-line-number"
data - line - number = "613" > < /td>
    < td
id = "LC613"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L614"
class
= "blob-num js-line-number"
data - line - number = "614" > < /td>
    < td
id = "LC614"
class
= "blob-code blob-code-inner js-file-line" > booleans < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > checked | selected | async | autofocus | autoplay | controls | defer | disabled | hidden | ismap | loop | multiple | open | readonly | required | scoped < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L615"
class
= "blob-num js-line-number"
data - line - number = "615" > < /td>
    < td
id = "LC615"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L616"
class
= "blob-num js-line-number"
data - line - number = "616" > < /td>
    < td
id = "LC616"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Regular expressions</span></td>
    < /tr>
    < tr >
    < td
id = "L617"
class
= "blob-num js-line-number"
data - line - number = "617" > < /td>
    < td
id = "LC617"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L618"
class
= "blob-num js-line-number"
data - line - number = "618" > < /td>
    < td
id = "LC618"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> http://www.w3.org/TR/css3-selectors/#whitespace</span></td>
    < /tr>
    < tr >
    < td
id = "L619"
class
= "blob-num js-line-number"
data - line - number = "619" > < /td>
    < td
id = "LC619"
class
= "blob-code blob-code-inner js-file-line" > whitespace < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > [ < span
class
= "pl-cce" >\\<
/span>x20<span class="pl-cce">\\</s
pan > t < span
class
= "pl-cce" >\\<
/span>r<span class="pl-cce">\\</s
pan > n < span
class
= "pl-cce" >\\<
/span>f]<span class="pl-pds">&quot;</s
pan > < /span>,</
td >
< /tr>
< tr >
< td
id = "L620"
class
= "blob-num js-line-number"
data - line - number = "620" > < /td>
    < td
id = "LC620"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L621"
class
= "blob-num js-line-number"
data - line - number = "621" > < /td>
    < td
id = "LC621"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier</span></td>
    < /tr>
    < tr >
    < td
id = "L622"
class
= "blob-num js-line-number"
data - line - number = "622" > < /td>
    < td
id = "LC622"
class
= "blob-code blob-code-inner js-file-line" > identifier < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > (? : < span
class
= "pl-cce" >\\\\<
/span>.|[<span class="pl-cce">\\</span>w-]|[^<span class="pl-cce">\0</span>-<span class="pl-cce">\\</span>xa0])+<span class="pl-pds">&quot;</s
pan > < /span>,</
td >
< /tr>
< tr >
< td
id = "L623"
class
= "blob-num js-line-number"
data - line - number = "623" > < /td>
    < td
id = "LC623"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L624"
class
= "blob-num js-line-number"
data - line - number = "624" > < /td>
    < td
id = "LC624"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors</span></td>
    < /tr>
    < tr >
    < td
id = "L625"
class
= "blob-num js-line-number"
data - line - number = "625" > < /td>
    < td
id = "LC625"
class
= "blob-code blob-code-inner js-file-line" > attributes < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-cce" >\\<
/span>[<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> whitespace <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>*(<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> identifier <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)(?:<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> whitespace <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> Operator (capture 2)</span></td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code blob-code-inner js-file-line">                    <span class="pl-s"><span class="pl-pds">&quot;</span>*([*^$|!~]?=)<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > whitespace < span
class
= "pl-k" > + < /span></
td >
< /tr>
< tr >
< td
id = "L628"
class
= "blob-num js-line-number"
data - line - number = "628" > < /td>
    < td
id = "LC628"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> &quot;Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L629"
class
= "blob-num js-line-number"
data - line - number = "629" > < /td>
    < td
id = "LC629"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*(?:&#39;((?:<span class="pl-cce">\\\\</s
pan >
.|
[ ^ < span
class
= "pl-cce" >\\\\<
/span>&#39;])*)&#39;|<span class="pl-cce">\&quot;</s
pan > ((? : < span
class
= "pl-cce" >\\\\<
/span>.|[^<span class="pl-cce">\\\\\&quot;</span>])*)<span class="pl-cce">\&quot;</s
pan > | ( < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> identifier <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>))|)<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > whitespace < span
class
= "pl-k" > + < /span></
td >
< /tr>
< tr >
< td
id = "L630"
class
= "blob-num js-line-number"
data - line - number = "630" > < /td>
    < td
id = "LC630"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-cce">\\</s
pan >
]<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L631"
class
= "blob-num js-line-number"
data - line - number = "631" > < /td>
    < td
id = "LC631"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L632"
class
= "blob-num js-line-number"
data - line - number = "632" > < /td>
    < td
id = "LC632"
class
= "blob-code blob-code-inner js-file-line" > pseudos < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan >
:
( < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> identifier <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>)(?:<span class="pl-cce">\\</s
pan > (( < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span></
td >
< /tr>
< tr >
< td
id = "L633"
class
= "blob-num js-line-number"
data - line - number = "633" > < /td>
    < td
id = "LC633"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:</span></td>
    < /tr>
    < tr >
    < td
id = "L634"
class
= "blob-num js-line-number"
data - line - number = "634" > < /td>
    < td
id = "LC634"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> 1. quoted (capture 3; capture 4 or capture 5)</span></td>
    < /tr>
    < tr >
    < td
id = "L635"
class
= "blob-num js-line-number"
data - line - number = "635" > < /td>
    < td
id = "LC635"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>(&#39;((?:<span class="pl-cce">\\\\</s
pan >
.|
[ ^ < span
class
= "pl-cce" >\\\\<
/span>&#39;])*)&#39;|<span class="pl-cce">\&quot;</s
pan > ((? : < span
class
= "pl-cce" >\\\\<
/span>.|[^<span class="pl-cce">\\\\\&quot;</span>])*)<span class="pl-cce">\&quot;</s
pan >
)|<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span></
td >
< /tr>
< tr >
< td
id = "L636"
class
= "blob-num js-line-number"
data - line - number = "636" > < /td>
    < td
id = "LC636"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> 2. simple (capture 6)</span></td>
    < /tr>
    < tr >
    < td
id = "L637"
class
= "blob-num js-line-number"
data - line - number = "637" > < /td>
    < td
id = "LC637"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>((?:<span class="pl-cce">\\\\</s
pan >
.|
[ ^ < span
class
= "pl-cce" >\\\\<
/span>()[<span class="pl-cce">\\</span>]]|<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > attributes < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan >
)*)|<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span></
td >
< /tr>
< tr >
< td
id = "L638"
class
= "blob-num js-line-number"
data - line - number = "638" > < /td>
    < td
id = "LC638"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> 3. anything else (capture 2)</span></td>
    < /tr>
    < tr >
    < td
id = "L639"
class
= "blob-num js-line-number"
data - line - number = "639" > < /td>
    < td
id = "LC639"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>.*<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > < /td>
< /tr>
< tr >
< td
id = "L640"
class
= "blob-num js-line-number"
data - line - number = "640" > < /td>
    < td
id = "LC640"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>)<span class="pl-cce">\\</s
pan >
)|)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L641"
class
= "blob-num js-line-number"
data - line - number = "641" > < /td>
    < td
id = "LC641"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L642"
class
= "blob-num js-line-number"
data - line - number = "642" > < /td>
    < td
id = "LC642"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter</span></td>
    < /tr>
    < tr >
    < td
id = "L643"
class
= "blob-num js-line-number"
data - line - number = "643" > < /td>
    < td
id = "LC643"
class
= "blob-code blob-code-inner js-file-line" > rwhitespace < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>+<span class="pl-pds">&quot;</s
pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > g < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L644"
class
= "blob-num js-line-number"
data - line - number = "644" > < /td>
    < td
id = "LC644"
class
= "blob-code blob-code-inner js-file-line" > rtrim < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ^ < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>+|((?:^|[^<span class="pl-cce">\\\\</span>])(?:<span class="pl-cce">\\\\</s
pan >
.)*)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>+$<span class="pl-pds">&quot;</s
pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > g < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L645"
class
= "blob-num js-line-number"
data - line - number = "645" > < /td>
    < td
id = "LC645"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L646"
class
= "blob-num js-line-number"
data - line - number = "646" > < /td>
    < td
id = "LC646"
class
= "blob-code blob-code-inner js-file-line" > rcomma < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ^ < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*,<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > whitespace < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > * < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L647"
class
= "blob-num js-line-number"
data - line - number = "647" > < /td>
    < td
id = "LC647"
class
= "blob-code blob-code-inner js-file-line" > rcombinators < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ^ < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*([&gt;+~]|<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > whitespace < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan >
)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L648"
class
= "blob-num js-line-number"
data - line - number = "648" > < /td>
    < td
id = "LC648"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L649"
class
= "blob-num js-line-number"
data - line - number = "649" > < /td>
    < td
id = "LC649"
class
= "blob-code blob-code-inner js-file-line" > rattributeQuotes < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan >= < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*([^<span class="pl-cce">\\</span>]&#39;<span class="pl-cce">\&quot;</s
pan >
]*
    ?
)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-cce">\\</s
pan >
]<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>g<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L650"
class
= "blob-num js-line-number"
data - line - number = "650" > < /td>
    < td
id = "LC650"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L651"
class
= "blob-num js-line-number"
data - line - number = "651" > < /td>
    < td
id = "LC651"
class
= "blob-code blob-code-inner js-file-line" > rpseudo < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( pseudos ),</
td >
< /tr>
< tr >
< td
id = "L652"
class
= "blob-num js-line-number"
data - line - number = "652" > < /td>
    < td
id = "LC652"
class
= "blob-code blob-code-inner js-file-line" > ridentifier < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ^ < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> identifier <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>$<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L653"
class
= "blob-num js-line-number"
data - line - number = "653" > < /td>
    < td
id = "LC653"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L654"
class
= "blob-num js-line-number"
data - line - number = "654" > < /td>
    < td
id = "LC654"
class
= "blob-code blob-code-inner js-file-line" > matchExpr < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L655"
class
= "blob-num js-line-number"
data - line - number = "655" > < /td>
    < td
id = "LC655"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ID<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>^#(<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > identifier < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan >
)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L656"
class
= "blob-num js-line-number"
data - line - number = "656" > < /td>
    < td
id = "LC656"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>CLASS<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>^<span class="pl-cce">\\</s
pan >
.
( < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> identifier <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>)<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L657"
class
= "blob-num js-line-number"
data - line - number = "657" > < /td>
    < td
id = "LC657"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>TAG<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>^(<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > identifier < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > | [ *
])<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L658"
class
= "blob-num js-line-number"
data - line - number = "658" > < /td>
    < td
id = "LC658"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ATTR<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>^<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > attributes
),<
/td>
< /tr>
< tr >
< td
id = "L659"
class
= "blob-num js-line-number"
data - line - number = "659" > < /td>
    < td
id = "LC659"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>PSEUDO<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>^<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > pseudos
),<
/td>
< /tr>
< tr >
< td
id = "L660"
class
= "blob-num js-line-number"
data - line - number = "660" > < /td>
    < td
id = "LC660"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>CHILD<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>^:(only|first|last|nth|nth-last)-(child|of-type)(?:<span class="pl-cce">\\</s
pan > ( < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < /td>
< /tr>
< tr >
< td
id = "L661"
class
= "blob-num js-line-number"
data - line - number = "661" > < /td>
    < td
id = "LC661"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*(even|odd|(([+-]|)(<span class="pl-cce">\\</s
pan > d *
)
n |
)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*(?:([+-]|)<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > whitespace < span
class
= "pl-k" > + < /span></
td >
< /tr>
< tr >
< td
id = "L662"
class
= "blob-num js-line-number"
data - line - number = "662" > < /td>
    < td
id = "LC662"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*(<span class="pl-cce">\\</s
pan > d +
)|))<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-cce">\\</s
pan >
)|)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>i<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L663"
class
= "blob-num js-line-number"
data - line - number = "663" > < /td>
    < td
id = "LC663"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>bool<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>^(?:<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > booleans < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan >
)
$ < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>i<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L664"
class
= "blob-num js-line-number"
data - line - number = "664" > < /td>
    < td
id = "LC664"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> For use in libraries implementing .is()</span></td>
    < /tr>
    < tr >
    < td
id = "L665"
class
= "blob-num js-line-number"
data - line - number = "665" > < /td>
    < td
id = "LC665"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> We use this for POS matching in `select`</span></td>
    < /tr>
    < tr >
    < td
id = "L666"
class
= "blob-num js-line-number"
data - line - number = "666" > < /td>
    < td
id = "LC666"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>needsContext<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>^<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > whitespace < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > * [ &gt; +~
]|:
(even | odd | eq | gt | lt | nth | first | last)(? : < span
class
= "pl-cce" >\\<
/span>(<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > < /td>
< /tr>
< tr >
< td
id = "L667"
class
= "blob-num js-line-number"
data - line - number = "667" > < /td>
    < td
id = "LC667"
class
= "blob-code blob-code-inner js-file-line" > whitespace < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > * ((? : - < span
class
= "pl-cce" >\\<
/span>d)?<span class="pl-cce">\\</s
pan > d *
)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-cce">\\</s
pan >
)|)
(? = [ ^ -
]|
$
)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>i<span class="pl-pds">&quot;</s
pan > < /span> )</
td >
< /tr>
< tr >
< td
id = "L668"
class
= "blob-num js-line-number"
data - line - number = "668" > < /td>
    < td
id = "LC668"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L669"
class
= "blob-num js-line-number"
data - line - number = "669" > < /td>
    < td
id = "LC669"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L670"
class
= "blob-num js-line-number"
data - line - number = "670" > < /td>
    < td
id = "LC670"
class
= "blob-code blob-code-inner js-file-line" > rinputs < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>input<span class="pl-k">|</s
pan > select < span
class
= "pl-k" > | < /span>textarea<span class="pl-k">|</s
pan > button
)
$ < span
class
= "pl-k" > / < /span>i,</
td >
< /tr>
< tr >
< td
id = "L671"
class
= "blob-num js-line-number"
data - line - number = "671" > < /td>
    < td
id = "LC671"
class
= "blob-code blob-code-inner js-file-line" > rheader < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > h\d$ < span
class
= "pl-k" > / < /span>i,</
td >
< /tr>
< tr >
< td
id = "L672"
class
= "blob-num js-line-number"
data - line - number = "672" > < /td>
    < td
id = "LC672"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L673"
class
= "blob-num js-line-number"
data - line - number = "673" > < /td>
    < td
id = "LC673"
class
= "blob-code blob-code-inner js-file-line" > rnative < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > [ < span
class
= "pl-k" > ^ < /span>{]<span class="pl-k">+</s
pan >\{\s < span
class
    = "pl-k" > * < /span>\[<span class="pl-k">native</s
    pan > \w < span
class
    = "pl-k" > / < /span>,</
    td >
    < /tr>
    < tr >
    < td
    id = "L674"
class
    = "blob-num js-line-number"
    data - line - number = "674" > < /td>
        < td
    id = "LC674"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L675"
class
    = "blob-num js-line-number"
    data - line - number = "675" > < /td>
        < td
    id = "LC675"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Easily-parseable/retrievable ID or TAG or CLASS selectors</span></td>
        < /tr>
        < tr >
        < td
    id = "L676"
class
    = "blob-num js-line-number"
    data - line - number = "676" > < /td>
        < td
    id = "LC676"
class
    = "blob-code blob-code-inner js-file-line" > rquickExpr < span
class
    = "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
    pan > ( < span
class
    = "pl-k" > ? :
<
    /span>#([\w<span class="pl-k">-</span>]<span class="pl-k">+</s
    pan >
)<
    span
class
    = "pl-k" > | < /span>(\w<span class="pl-k">+</s
    pan >
)
<
span
class
= "pl-k" > | < /span>\<span class="pl-c1">.</s
pan > ([\w < span
class
= "pl-k" > - < /span>]<span class="pl-k">+</s
pan >
))
$ < span
class
= "pl-k" > / < /span>,</
td >
< /tr>
< tr >
< td
id = "L677"
class
= "blob-num js-line-number"
data - line - number = "677" > < /td>
    < td
id = "LC677"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L678"
class
= "blob-num js-line-number"
data - line - number = "678" > < /td>
    < td
id = "LC678"
class
= "blob-code blob-code-inner js-file-line" > rsibling < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>[<span class="pl-k">+</span><span class="pl-k">~</span>]<span class="pl-k">/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L679"
class
= "blob-num js-line-number"
data - line - number = "679" > < /td>
    < td
id = "LC679"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L680"
class
= "blob-num js-line-number"
data - line - number = "680" > < /td>
    < td
id = "LC680"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> CSS escapes</span></td>
    < /tr>
    < tr >
    < td
id = "L681"
class
= "blob-num js-line-number"
data - line - number = "681" > < /td>
    < td
id = "LC681"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> http://www.w3.org/TR/CSS21/syndata.html#escaped-characters</span></td>
    < /tr>
    < tr >
    < td
id = "L682"
class
= "blob-num js-line-number"
data - line - number = "682" > < /td>
    < td
id = "LC682"
class
= "blob-code blob-code-inner js-file-line" > runescape < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-cce" >\\\\<
/span>([<span class="pl-cce">\\</span>da-f]{1,6}<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > whitespace < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ?
|
( < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> whitespace <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>)|.)<span class="pl-pds">&quot;</s
pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ig < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L683"
class
= "blob-num js-line-number"
data - line - number = "683" > < /td>
    < td
id = "LC683"
class
= "blob-code blob-code-inner js-file-line" > funescape < span
class
= "pl-k" >= < /span> function( _, escaped, escapedWhitespace ) {</
td >
< /tr>
< tr >
< td
id = "L684"
class
= "blob-num js-line-number"
data - line - number = "684" > < /td>
    < td
id = "LC684"
class
= "blob-code blob-code-inner js-file-line" >
var high
<
span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > 0
x < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> escaped <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 0x10000 < /span>;</
td >
< /tr>
< tr >
< td
id = "L685"
class
= "blob-num js-line-number"
data - line - number = "685" > < /td>
    < td
id = "LC685"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> NaN means non-codepoint</span></td>
    < /tr>
    < tr >
    < td
id = "L686"
class
= "blob-num js-line-number"
data - line - number = "686" > < /td>
    < td
id = "LC686"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Firefox&lt;24</span></td>
    < /tr>
    < tr >
    < td
id = "L687"
class
= "blob-num js-line-number"
data - line - number = "687" > < /td>
    < td
id = "LC687"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Workaround erroneous numeric interpretation of +&quot;0x&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L688"
class
= "blob-num js-line-number"
data - line - number = "688" > < /td>
    < td
id = "LC688"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> high <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> high <span class="pl-k">||</s
pan > escapedWhitespace < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L689"
class
= "blob-num js-line-number"
data - line - number = "689" > < /td>
    < td
id = "LC689"
class
= "blob-code blob-code-inner js-file-line" > escaped < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L690"
class
= "blob-num js-line-number"
data - line - number = "690" > < /td>
    < td
id = "LC690"
class
= "blob-code blob-code-inner js-file-line" > high < span
class
= "pl-k" > &lt; < /span> <span class="pl-c1">0</s
pan > < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L691"
class
= "blob-num js-line-number"
data - line - number = "691" > < /td>
    < td
id = "LC691"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> BMP codepoint</span></td>
    < /tr>
    < tr >
    < td
id = "L692"
class
= "blob-num js-line-number"
data - line - number = "692" > < /td>
    < td
id = "LC692"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > String < /span><span class="pl-k">.</s
pan > fromCharCode(high < span
class
= "pl-k" > + < /span> <span class="pl-c1">0x10000</s
pan >
) <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L693"
class
= "blob-num js-line-number"
data - line - number = "693" > < /td>
    < td
id = "LC693"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Supplemental Plane codepoint (surrogate pair)</span></td>
    < /tr>
    < tr >
    < td
id = "L694"
class
= "blob-num js-line-number"
data - line - number = "694" > < /td>
    < td
id = "LC694"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > String < /span><span class="pl-k">.</s
pan > fromCharCode(high < span
class
= "pl-k" > &gt;&gt; < /span> <span class="pl-c1">10</s
pan > < span
class
= "pl-k" > | < /span> <span class="pl-c1">0xD800</s
pan >, high < span
class
= "pl-k" > &amp; < /span> <span class="pl-c1">0x3FF</s
pan > < span
class
= "pl-k" > | < /span> <span class="pl-c1">0xDC00</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L695"
class
= "blob-num js-line-number"
data - line - number = "695" > < /td>
    < td
id = "LC695"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L696"
class
= "blob-num js-line-number"
data - line - number = "696" > < /td>
    < td
id = "LC696"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L697"
class
= "blob-num js-line-number"
data - line - number = "697" > < /td>
    < td
id = "LC697"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> CSS string/identifier serialization</span></td>
    < /tr>
    < tr >
    < td
id = "L698"
class
= "blob-num js-line-number"
data - line - number = "698" > < /td>
    < td
id = "LC698"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://drafts.csswg.org/cssom/#common-serializing-idioms</span></td>
    < /tr>
    < tr >
    < td
id = "L699"
class
= "blob-num js-line-number"
data - line - number = "699" > < /td>
    < td
id = "LC699"
class
= "blob-code blob-code-inner js-file-line" > rcssescape < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>([\<span class="pl-c1">0</span><span class="pl-k">-</span>\x1f\x7f]<span class="pl-k">|^</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-k">?</s
pan >\d
)<
span
class
= "pl-k" > | ^ < /span><span class="pl-k">-</s
pan > $ < span
class
= "pl-k" > | < /span>[<span class="pl-k">^</span>\<span class="pl-c1">0</span><span class="pl-k">-</span>\x1f\x7f<span class="pl-k">-</span>\uFFFF\w<span class="pl-k">-</span>]<span class="pl-k">/ < /span>g,</
td >
< /tr>
< tr >
< td
id = "L700"
class
= "blob-num js-line-number"
data - line - number = "700" > < /td>
    < td
id = "LC700"
class
= "blob-code blob-code-inner js-file-line" > fcssescape < span
class
= "pl-k" >= < /span> function( ch, asCodePoint ) {</
td >
< /tr>
< tr >
< td
id = "L701"
class
= "blob-num js-line-number"
data - line - number = "701" > < /td>
    < td
id = "LC701"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( asCodePoint ) {</
td >
< /tr>
< tr >
< td
id = "L702"
class
= "blob-num js-line-number"
data - line - number = "702" > < /td>
    < td
id = "LC702"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L703"
class
= "blob-num js-line-number"
data - line - number = "703" > < /td>
    < td
id = "LC703"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER</span></td>
    < /tr>
    < tr >
    < td
id = "L704"
class
= "blob-num js-line-number"
data - line - number = "704" > < /td>
    < td
id = "LC704"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ch <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-cce">\0</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L705"
class
    = "blob-num js-line-number"
    data - line - number = "705" > < /td>
        < td
    id = "LC705"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-cce" >\u < /span>FFFD<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L706"
class
    = "blob-num js-line-number"
    data - line - number = "706" > < /td>
        < td
    id = "LC706"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L707"
class
= "blob-num js-line-number"
data - line - number = "707" > < /td>
    < td
id = "LC707"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L708"
class
= "blob-num js-line-number"
data - line - number = "708" > < /td>
    < td
id = "LC708"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Control characters and (dependent upon position) numbers get escaped as code points</span></td>
    < /tr>
    < tr >
    < td
id = "L709"
class
= "blob-num js-line-number"
data - line - number = "709" > < /td>
    < td
id = "LC709"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ch<span class="pl-k">.</s
pan > slice( < span
class
= "pl-c1" > 0 < /span>, <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span> ) <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-cce">\\</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> ch<span class="pl-k">.</s
pan > charCodeAt(ch < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span> )<span class="pl-k">.</s
pan > toString( < span
class
= "pl-c1" > 16 < /span> ) <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L710"
class
= "blob-num js-line-number"
data - line - number = "710" > < /td>
    < td
id = "LC710"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L711"
class
= "blob-num js-line-number"
data - line - number = "711" > < /td>
    < td
id = "LC711"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L712"
class
= "blob-num js-line-number"
data - line - number = "712" > < /td>
    < td
id = "LC712"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Other potentially-special ASCII characters get backslash-escaped</span></td>
    < /tr>
    < tr >
    < td
id = "L713"
class
= "blob-num js-line-number"
data - line - number = "713" > < /td>
    < td
id = "LC713"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-cce" >\\<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > ch;
<
/td>
< /tr>
< tr >
< td
id = "L714"
class
= "blob-num js-line-number"
data - line - number = "714" > < /td>
    < td
id = "LC714"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L715"
class
= "blob-num js-line-number"
data - line - number = "715" > < /td>
    < td
id = "LC715"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L716"
class
= "blob-num js-line-number"
data - line - number = "716" > < /td>
    < td
id = "LC716"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Used for iframes</span></td>
    < /tr>
    < tr >
    < td
id = "L717"
class
= "blob-num js-line-number"
data - line - number = "717" > < /td>
    < td
id = "LC717"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> See setDocument()</span></td>
    < /tr>
    < tr >
    < td
id = "L718"
class
= "blob-num js-line-number"
data - line - number = "718" > < /td>
    < td
id = "LC718"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Removing the function wrapper causes a &quot;Permission Denied&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L719"
class
= "blob-num js-line-number"
data - line - number = "719" > < /td>
    < td
id = "LC719"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> error in IE</span></td>
    < /tr>
    < tr >
    < td
id = "L720"
class
= "blob-num js-line-number"
data - line - number = "720" > < /td>
    < td
id = "LC720"
class
= "blob-code blob-code-inner js-file-line" > unloadHandler < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L721"
class
= "blob-num js-line-number"
data - line - number = "721" > < /td>
    < td
id = "LC721"
class
= "blob-code blob-code-inner js-file-line" > setDocument();
<
/td>
< /tr>
< tr >
< td
id = "L722"
class
= "blob-num js-line-number"
data - line - number = "722" > < /td>
    < td
id = "LC722"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L723"
class
= "blob-num js-line-number"
data - line - number = "723" > < /td>
    < td
id = "LC723"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L724"
class
= "blob-num js-line-number"
data - line - number = "724" > < /td>
    < td
id = "LC724"
class
= "blob-code blob-code-inner js-file-line" > disabledAncestor < span
class
= "pl-k" >= < /span> addCombinator(</
td >
< /tr>
< tr >
< td
id = "L725"
class
= "blob-num js-line-number"
data - line - number = "725" > < /td>
    < td
id = "LC725"
class
= "blob-code blob-code-inner js-file-line" > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L726"
class
    = "blob-num js-line-number"
    data - line - number = "726" > < /td>
        < td
    id = "LC726"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem<span class="pl-k">.</s
    pan > disabled < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">true</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> (<span class="pl-s"><span class="pl-pds">&quot;</s
    pan > form < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > in elem < span
class
    = "pl-k" > || < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > label < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > in elem
);
<
/td>
< /tr>
< tr >
< td
id = "L727"
class
= "blob-num js-line-number"
data - line - number = "727" > < /td>
    < td
id = "LC727"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L728"
class
= "blob-num js-line-number"
data - line - number = "728" > < /td>
    < td
id = "LC728"
class
= "blob-code blob-code-inner js-file-line" > {dir < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > parentNode < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, next < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > legend < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
}<
/td>
< /tr>
< tr >
< td
id = "L729"
class
= "blob-num js-line-number"
data - line - number = "729" > < /td>
    < td
id = "LC729"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L730"
class
= "blob-num js-line-number"
data - line - number = "730" > < /td>
    < td
id = "LC730"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L731"
class
= "blob-num js-line-number"
data - line - number = "731" > < /td>
    < td
id = "LC731"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Optimize for push.apply( _, NodeList )</span></td>
    < /tr>
    < tr >
    < td
id = "L732"
class
= "blob-num js-line-number"
data - line - number = "732" > < /td>
    < td
id = "LC732"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
try
<
/span> {</
td >
< /tr>
< tr >
< td
id = "L733"
class
= "blob-num js-line-number"
data - line - number = "733" > < /td>
    < td
id = "LC733"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >
.<
/span>apply(</
td >
< /tr>
< tr >
< td
id = "L734"
class
= "blob-num js-line-number"
data - line - number = "734" > < /td>
    < td
id = "LC734"
class
= "blob-code blob-code-inner js-file-line" > (arr < span
class
= "pl-k" >= < /span> slice<span class="pl-k">.</s
pan > call(preferredDoc < span
class
= "pl-k" >
.<
/span>childNodes )),</
td >
< /tr>
< tr >
< td
id = "L735"
class
= "blob-num js-line-number"
data - line - number = "735" > < /td>
    < td
id = "LC735"
class
= "blob-code blob-code-inner js-file-line" > preferredDoc < span
class
= "pl-k" >
.<
/span>childNodes</
td >
< /tr>
< tr >
< td
id = "L736"
class
= "blob-num js-line-number"
data - line - number = "736" > < /td>
    < td
id = "LC736"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L737"
class
= "blob-num js-line-number"
data - line - number = "737" > < /td>
    < td
id = "LC737"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android&lt;4.0</span></td>
    < /tr>
    < tr >
    < td
id = "L738"
class
= "blob-num js-line-number"
data - line - number = "738" > < /td>
    < td
id = "LC738"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Detect silently failing push.apply</span></td>
    < /tr>
    < tr >
    < td
id = "L739"
class
= "blob-num js-line-number"
data - line - number = "739" > < /td>
    < td
id = "LC739"
class
= "blob-code blob-code-inner js-file-line" > arr[preferredDoc < span
class
= "pl-k" >
.<
/span>childNodes<span class="pl-k">.</s
pan > length
]<
span
class
= "pl-k" >
.<
/span>nodeType;</
td >
< /tr>
< tr >
< td
id = "L740"
class
= "blob-num js-line-number"
data - line - number = "740" > < /td>
    < td
id = "LC740"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> ( e ) {</
td >
< /tr>
< tr >
< td
id = "L741"
class
= "blob-num js-line-number"
data - line - number = "741" > < /td>
    < td
id = "LC741"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >= < /span> { apply<span class="pl-k">:</s
pan > arr < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L742"
class
= "blob-num js-line-number"
data - line - number = "742" > < /td>
    < td
id = "LC742"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L743"
class
= "blob-num js-line-number"
data - line - number = "743" > < /td>
    < td
id = "LC743"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Leverage slice if possible</span></td>
    < /tr>
    < tr >
    < td
id = "L744"
class
= "blob-num js-line-number"
data - line - number = "744" > < /td>
    < td
id = "LC744"
class
= "blob-code blob-code-inner js-file-line" > function (target, els) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L745"
class
    = "blob-num js-line-number"
    data - line - number = "745" > < /td>
        < td
    id = "LC745"
class
    = "blob-code blob-code-inner js-file-line" > push_native < span
class
    = "pl-k" >
.<
    /span>apply( target, slice<span class="pl-k">.</s
    pan > call(els)
);
<
/td>
< /tr>
< tr >
< td
id = "L746"
class
= "blob-num js-line-number"
data - line - number = "746" > < /td>
    < td
id = "LC746"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L747"
class
= "blob-num js-line-number"
data - line - number = "747" > < /td>
    < td
id = "LC747"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L748"
class
= "blob-num js-line-number"
data - line - number = "748" > < /td>
    < td
id = "LC748"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE&lt;9</span></td>
    < /tr>
    < tr >
    < td
id = "L749"
class
= "blob-num js-line-number"
data - line - number = "749" > < /td>
    < td
id = "LC749"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise append directly</span></td>
    < /tr>
    < tr >
    < td
id = "L750"
class
= "blob-num js-line-number"
data - line - number = "750" > < /td>
    < td
id = "LC750"
class
= "blob-code blob-code-inner js-file-line" > function (target, els) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L751"
    class
        = "blob-num js-line-number"
        data - line - number = "751" > < /td>
            < td
        id = "LC751"
    class
        = "blob-code blob-code-inner js-file-line" >
        var j
    <
        span
    class
        = "pl-k" >= < /span> target<span class="pl-k">.</s
        pan > length,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L752"
    class
        = "blob-num js-line-number"
        data - line - number = "752" > < /td>
            < td
        id = "LC752"
    class
        = "blob-code blob-code-inner js-file-line" > i < span
    class
        = "pl-k" >= < /span> <span class="pl-c1">0</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L753"
    class
        = "blob-num js-line-number"
        data - line - number = "753" > < /td>
            < td
        id = "LC753"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Can&#39;t trust NodeList.length</span></td>
            < /tr>
            < tr >
            < td
        id = "L754"
    class
        = "blob-num js-line-number"
        data - line - number = "754" > < /td>
            < td
        id = "LC754"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        while<
        /span> ( (target[j<span class="pl-k">++</span>] <span class="pl-k">=</s
        pan > els[i < span
    class
        = "pl-k" > ++ < /span>]) ) {}</
        td >
        < /tr>
        < tr >
        < td
        id = "L755"
    class
        = "blob-num js-line-number"
        data - line - number = "755" > < /td>
            < td
        id = "LC755"
    class
        = "blob-code blob-code-inner js-file-line" > target < span
    class
        = "pl-k" >
    .<
        /span>length <span class="pl-k">=</s
        pan > j < span
    class
        = "pl-k" > - < /span> <span class="pl-c1">1</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L756"
    class
        = "blob-num js-line-number"
        data - line - number = "756" > < /td>
            < td
        id = "LC756"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L757"
class
= "blob-num js-line-number"
data - line - number = "757" > < /td>
    < td
id = "LC757"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L758"
class
= "blob-num js-line-number"
data - line - number = "758" > < /td>
    < td
id = "LC758"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L759"
class
= "blob-num js-line-number"
data - line - number = "759" > < /td>
    < td
id = "LC759"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L760"
class
= "blob-num js-line-number"
data - line - number = "760" > < /td>
    < td
id = "LC760"
class
= "blob-code blob-code-inner js-file-line" > function Sizzle(selector, context, results, seed) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L761"
    class
        = "blob-num js-line-number"
        data - line - number = "761" > < /td>
            < td
        id = "LC761"
    class
        = "blob-code blob-code-inner js-file-line" >
        var m, i, elem, nid, match, groups, newSelector, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L762"
    class
        = "blob-num js-line-number"
        data - line - number = "762" > < /td>
            < td
        id = "LC762"
    class
        = "blob-code blob-code-inner js-file-line" > newContext < span
    class
        = "pl-k" >= < /span> context <span class="pl-k">&amp;&amp;</s
        pan > context < span
    class
        = "pl-k" >
    .<
        /span>ownerDocument,</
        td >
        < /tr>
        < tr >
        < td
        id = "L763"
    class
        = "blob-num js-line-number"
        data - line - number = "763" > < /td>
            < td
        id = "LC763"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L764"
    class
        = "blob-num js-line-number"
        data - line - number = "764" > < /td>
            < td
        id = "LC764"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> nodeType defaults to 9, since context defaults to document</span></td>
            < /tr>
            < tr >
            < td
        id = "L765"
    class
        = "blob-num js-line-number"
        data - line - number = "765" > < /td>
            < td
        id = "LC765"
    class
        = "blob-code blob-code-inner js-file-line" > nodeType < span
    class
        = "pl-k" >= < /span> context <span class="pl-k">?</s
        pan > context < span
    class
        = "pl-k" >
    .<
        /span>nodeType <span class="pl-k">:</s
        pan > < span
    class
        = "pl-c1" > 9 < /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L766"
    class
        = "blob-num js-line-number"
        data - line - number = "766" > < /td>
            < td
        id = "LC766"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L767"
    class
        = "blob-num js-line-number"
        data - line - number = "767" > < /td>
            < td
        id = "LC767"
    class
        = "blob-code blob-code-inner js-file-line" > results < span
    class
        = "pl-k" >= < /span> results <span class="pl-k">||</s
        pan > [];
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L768"
    class
        = "blob-num js-line-number"
        data - line - number = "768" > < /td>
            < td
        id = "LC768"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L769"
    class
        = "blob-num js-line-number"
        data - line - number = "769" > < /td>
            < td
        id = "LC769"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Return early from calls with invalid selector or context</span></td>
            < /tr>
            < tr >
            < td
        id = "L770"
    class
        = "blob-num js-line-number"
        data - line - number = "770" > < /td>
            < td
        id = "LC770"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( typeof selector <span class="pl-k">!=</s
        pan > < span
    class
        = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > string < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan > < span
    class
        = "pl-k" > || < /span> <span class="pl-k">!</s
        pan > selector < span
    class
        = "pl-k" > || < /span></
        td >
        < /tr>
        < tr >
        < td
        id = "L771"
    class
        = "blob-num js-line-number"
        data - line - number = "771" > < /td>
            < td
        id = "LC771"
    class
        = "blob-code blob-code-inner js-file-line" > nodeType < span
    class
        = "pl-k" > != < /span><span class="pl-k">=</s
        pan > < span
    class
        = "pl-c1" > 1 < /span> <span class="pl-k">&amp;&amp;</s
        pan > nodeType < span
    class
        = "pl-k" > != < /span><span class="pl-k">=</s
        pan > < span
    class
        = "pl-c1" > 9 < /span> <span class="pl-k">&amp;&amp;</s
        pan > nodeType < span
    class
        = "pl-k" > != < /span><span class="pl-k">=</s
        pan > < span
    class
        = "pl-c1" > 11 < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L772"
    class
        = "blob-num js-line-number"
        data - line - number = "772" > < /td>
            < td
        id = "LC772"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L773"
    class
        = "blob-num js-line-number"
        data - line - number = "773" > < /td>
            < td
        id = "LC773"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> results;</
        td >
        < /tr>
        < tr >
        < td
        id = "L774"
    class
        = "blob-num js-line-number"
        data - line - number = "774" > < /td>
            < td
        id = "LC774"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L775"
class
= "blob-num js-line-number"
data - line - number = "775" > < /td>
    < td
id = "LC775"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L776"
class
= "blob-num js-line-number"
data - line - number = "776" > < /td>
    < td
id = "LC776"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Try to shortcut find operations (as opposed to filters) in HTML documents</span></td>
    < /tr>
    < tr >
    < td
id = "L777"
class
= "blob-num js-line-number"
data - line - number = "777" > < /td>
    < td
id = "LC777"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > seed
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L778"
class
    = "blob-num js-line-number"
    data - line - number = "778" > < /td>
        < td
    id = "LC778"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L779"
class
    = "blob-num js-line-number"
    data - line - number = "779" > < /td>
        < td
    id = "LC779"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( ( context <span class="pl-k">?</s
    pan > context < span
class
    = "pl-k" >
.<
    /span>ownerDocument <span class="pl-k">||</s
    pan > context < span
class
    = "pl-k" >
:<
    /span> preferredDoc ) <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> document ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L780"
class
    = "blob-num js-line-number"
    data - line - number = "780" > < /td>
        < td
    id = "LC780"
class
    = "blob-code blob-code-inner js-file-line" > setDocument(context);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L781"
class
    = "blob-num js-line-number"
    data - line - number = "781" > < /td>
        < td
    id = "LC781"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L782"
class
= "blob-num js-line-number"
data - line - number = "782" > < /td>
    < td
id = "LC782"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" >= < /span> context <span class="pl-k">||</s
pan > document;
<
/td>
< /tr>
< tr >
< td
id = "L783"
class
= "blob-num js-line-number"
data - line - number = "783" > < /td>
    < td
id = "LC783"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L784"
class
= "blob-num js-line-number"
data - line - number = "784" > < /td>
    < td
id = "LC784"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( documentIsHTML ) {</
td >
< /tr>
< tr >
< td
id = "L785"
class
= "blob-num js-line-number"
data - line - number = "785" > < /td>
    < td
id = "LC785"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L786"
class
= "blob-num js-line-number"
data - line - number = "786" > < /td>
    < td
id = "LC786"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If the selector is sufficiently simple, try using a &quot;get*By*&quot; DOM method</span></td>
    < /tr>
    < tr >
    < td
id = "L787"
class
= "blob-num js-line-number"
data - line - number = "787" > < /td>
    < td
id = "LC787"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (excepting DocumentFragment context, where the methods don&#39;t exist)</span></td>
    < /tr>
    < tr >
    < td
id = "L788"
class
= "blob-num js-line-number"
data - line - number = "788" > < /td>
    < td
id = "LC788"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( nodeType <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">11</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> (match <span class="pl-k">=</s
pan > rquickExpr < span
class
= "pl-k" >
.<
/span>exec( selector )) ) {</
td >
< /tr>
< tr >
< td
id = "L789"
class
= "blob-num js-line-number"
data - line - number = "789" > < /td>
    < td
id = "LC789"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L790"
class
= "blob-num js-line-number"
data - line - number = "790" > < /td>
    < td
id = "LC790"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ID selector</span></td>
    < /tr>
    < tr >
    < td
id = "L791"
class
= "blob-num js-line-number"
data - line - number = "791" > < /td>
    < td
id = "LC791"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (m <span class="pl-k">=</s
pan > match[ < span
class
= "pl-c1" > 1 < /span>]) ) {</
td >
< /tr>
< tr >
< td
id = "L792"
class
= "blob-num js-line-number"
data - line - number = "792" > < /td>
    < td
id = "LC792"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L793"
class
= "blob-num js-line-number"
data - line - number = "793" > < /td>
    < td
id = "LC793"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Document context</span></td>
    < /tr>
    < tr >
    < td
id = "L794"
class
= "blob-num js-line-number"
data - line - number = "794" > < /td>
    < td
id = "LC794"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 9 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L795"
class
= "blob-num js-line-number"
data - line - number = "795" > < /td>
    < td
id = "LC795"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (elem <span class="pl-k">=</s
pan > context < span
class
= "pl-k" >
.<
/span>getElementById( m )) ) {</
td >
< /tr>
< tr >
< td
id = "L796"
class
= "blob-num js-line-number"
data - line - number = "796" > < /td>
    < td
id = "LC796"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L797"
class
= "blob-num js-line-number"
data - line - number = "797" > < /td>
    < td
id = "LC797"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE, Opera, Webkit</span></td>
    < /tr>
    < tr >
    < td
id = "L798"
class
= "blob-num js-line-number"
data - line - number = "798" > < /td>
    < td
id = "LC798"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> TODO: identify versions</span></td>
    < /tr>
    < tr >
    < td
id = "L799"
class
= "blob-num js-line-number"
data - line - number = "799" > < /td>
    < td
id = "LC799"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> getElementById can match elements by name instead of ID</span></td>
    < /tr>
    < tr >
    < td
id = "L800"
class
= "blob-num js-line-number"
data - line - number = "800" > < /td>
    < td
id = "LC800"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem<span class="pl-k">.</s
pan > id < span
class
= "pl-k" >= == < /span> m ) {</
td >
< /tr>
< tr >
< td
id = "L801"
class
= "blob-num js-line-number"
data - line - number = "801" > < /td>
    < td
id = "LC801"
class
= "blob-code blob-code-inner js-file-line" > results < span
class
= "pl-k" >
.<
/span>push( elem );</
td >
< /tr>
< tr >
< td
id = "L802"
class
= "blob-num js-line-number"
data - line - number = "802" > < /td>
    < td
id = "LC802"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> results;</
td >
< /tr>
< tr >
< td
id = "L803"
class
= "blob-num js-line-number"
data - line - number = "803" > < /td>
    < td
id = "LC803"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L804"
class
= "blob-num js-line-number"
data - line - number = "804" > < /td>
    < td
id = "LC804"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L805"
class
= "blob-num js-line-number"
data - line - number = "805" > < /td>
    < td
id = "LC805"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> results;</
td >
< /tr>
< tr >
< td
id = "L806"
class
= "blob-num js-line-number"
data - line - number = "806" > < /td>
    < td
id = "LC806"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L807"
class
= "blob-num js-line-number"
data - line - number = "807" > < /td>
    < td
id = "LC807"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L808"
class
= "blob-num js-line-number"
data - line - number = "808" > < /td>
    < td
id = "LC808"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Element context</span></td>
    < /tr>
    < tr >
    < td
id = "L809"
class
= "blob-num js-line-number"
data - line - number = "809" > < /td>
    < td
id = "LC809"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L810"
class
= "blob-num js-line-number"
data - line - number = "810" > < /td>
    < td
id = "LC810"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L811"
class
= "blob-num js-line-number"
data - line - number = "811" > < /td>
    < td
id = "LC811"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE, Opera, Webkit</span></td>
    < /tr>
    < tr >
    < td
id = "L812"
class
= "blob-num js-line-number"
data - line - number = "812" > < /td>
    < td
id = "LC812"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> TODO: identify versions</span></td>
    < /tr>
    < tr >
    < td
id = "L813"
class
= "blob-num js-line-number"
data - line - number = "813" > < /td>
    < td
id = "LC813"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> getElementById can match elements by name instead of ID</span></td>
    < /tr>
    < tr >
    < td
id = "L814"
class
= "blob-num js-line-number"
data - line - number = "814" > < /td>
    < td
id = "LC814"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( newContext <span class="pl-k">&amp;&amp;</s
pan > (elem < span
class
= "pl-k" >= < /span> newContext<span class="pl-k">.</s
pan > getElementById(m)
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L815"
class
= "blob-num js-line-number"
data - line - number = "815" > < /td>
    < td
id = "LC815"
class
= "blob-code blob-code-inner js-file-line" > contains(context, elem) < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L816"
class
= "blob-num js-line-number"
data - line - number = "816" > < /td>
    < td
id = "LC816"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>id <span class="pl-k">===</s
pan > m
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L817"
class
    = "blob-num js-line-number"
    data - line - number = "817" > < /td>
        < td
    id = "LC817"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L818"
class
    = "blob-num js-line-number"
    data - line - number = "818" > < /td>
        < td
    id = "LC818"
class
    = "blob-code blob-code-inner js-file-line" > results < span
class
    = "pl-k" >
.<
    /span>push( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L819"
class
    = "blob-num js-line-number"
    data - line - number = "819" > < /td>
        < td
    id = "LC819"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> results;</
    td >
    < /tr>
    < tr >
    < td
    id = "L820"
class
    = "blob-num js-line-number"
    data - line - number = "820" > < /td>
        < td
    id = "LC820"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L821"
class
= "blob-num js-line-number"
data - line - number = "821" > < /td>
    < td
id = "LC821"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L822"
class
= "blob-num js-line-number"
data - line - number = "822" > < /td>
    < td
id = "LC822"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L823"
class
= "blob-num js-line-number"
data - line - number = "823" > < /td>
    < td
id = "LC823"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Type selector</span></td>
    < /tr>
    < tr >
    < td
id = "L824"
class
= "blob-num js-line-number"
data - line - number = "824" > < /td>
    < td
id = "LC824"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (match[ < span
class
= "pl-c1" > 2 < /span>] ) {</
td >
< /tr>
< tr >
< td
id = "L825"
class
= "blob-num js-line-number"
data - line - number = "825" > < /td>
    < td
id = "LC825"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >
.<
/span>apply( results, context<span class="pl-k">.</s
pan > getElementsByTagName(selector)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L826"
class
= "blob-num js-line-number"
data - line - number = "826" > < /td>
    < td
id = "LC826"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> results;</
td >
< /tr>
< tr >
< td
id = "L827"
class
= "blob-num js-line-number"
data - line - number = "827" > < /td>
    < td
id = "LC827"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L828"
class
= "blob-num js-line-number"
data - line - number = "828" > < /td>
    < td
id = "LC828"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Class selector</span></td>
    < /tr>
    < tr >
    < td
id = "L829"
class
= "blob-num js-line-number"
data - line - number = "829" > < /td>
    < td
id = "LC829"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > ((m < span
class
= "pl-k" >= < /span> match[<span class="pl-c1">3</span>]) <span class="pl-k">&amp;&amp;</s
pan > support < span
class
= "pl-k" >
.<
/span>getElementsByClassName <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L830"
class
= "blob-num js-line-number"
data - line - number = "830" > < /td>
    < td
id = "LC830"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" >
.<
/span>getElementsByClassName ) {</
td >
< /tr>
< tr >
< td
id = "L831"
class
= "blob-num js-line-number"
data - line - number = "831" > < /td>
    < td
id = "LC831"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L832"
class
= "blob-num js-line-number"
data - line - number = "832" > < /td>
    < td
id = "LC832"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >
.<
/span>apply( results, context<span class="pl-k">.</s
pan > getElementsByClassName(m)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L833"
class
= "blob-num js-line-number"
data - line - number = "833" > < /td>
    < td
id = "LC833"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> results;</
td >
< /tr>
< tr >
< td
id = "L834"
class
= "blob-num js-line-number"
data - line - number = "834" > < /td>
    < td
id = "LC834"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L835"
class
= "blob-num js-line-number"
data - line - number = "835" > < /td>
    < td
id = "LC835"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L836"
class
= "blob-num js-line-number"
data - line - number = "836" > < /td>
    < td
id = "LC836"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L837"
class
= "blob-num js-line-number"
data - line - number = "837" > < /td>
    < td
id = "LC837"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Take advantage of querySelectorAll</span></td>
    < /tr>
    < tr >
    < td
id = "L838"
class
= "blob-num js-line-number"
data - line - number = "838" > < /td>
    < td
id = "LC838"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( support<span class="pl-k">.</s
pan > qsa < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L839"
class
= "blob-num js-line-number"
data - line - number = "839" > < /td>
    < td
id = "LC839"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>compilerCache[ selector <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> ] <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L840"
class
= "blob-num js-line-number"
data - line - number = "840" > < /td>
    < td
id = "LC840"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-k" > ! < /span>rbuggyQSA <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>rbuggyQSA<span class="pl-k">.</s
pan > test(selector)
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L841"
class
    = "blob-num js-line-number"
    data - line - number = "841" > < /td>
        < td
    id = "LC841"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L842"
class
    = "blob-num js-line-number"
    data - line - number = "842" > < /td>
        < td
    id = "LC842"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( nodeType <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-c1">1</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L843"
class
    = "blob-num js-line-number"
    data - line - number = "843" > < /td>
        < td
    id = "LC843"
class
    = "blob-code blob-code-inner js-file-line" > newContext < span
class
    = "pl-k" >= < /span> context;</
    td >
    < /tr>
    < tr >
    < td
    id = "L844"
class
    = "blob-num js-line-number"
    data - line - number = "844" > < /td>
        < td
    id = "LC844"
class
    = "blob-code blob-code-inner js-file-line" > newSelector < span
class
    = "pl-k" >= < /span> selector;</
    td >
    < /tr>
    < tr >
    < td
    id = "L845"
class
    = "blob-num js-line-number"
    data - line - number = "845" > < /td>
        < td
    id = "LC845"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L846"
class
    = "blob-num js-line-number"
    data - line - number = "846" > < /td>
        < td
    id = "LC846"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> qSA looks outside Element context, which is not what we want</span></td>
        < /tr>
        < tr >
        < td
    id = "L847"
class
    = "blob-num js-line-number"
    data - line - number = "847" > < /td>
        < td
    id = "LC847"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Thanks to Andrew Dupont for this workaround technique</span></td>
        < /tr>
        < tr >
        < td
    id = "L848"
class
    = "blob-num js-line-number"
    data - line - number = "848" > < /td>
        < td
    id = "LC848"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE &lt;=8</span></td>
        < /tr>
        < tr >
        < td
    id = "L849"
class
    = "blob-num js-line-number"
    data - line - number = "849" > < /td>
        < td
    id = "LC849"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Exclude object elements</span></td>
        < /tr>
        < tr >
        < td
    id = "L850"
class
    = "blob-num js-line-number"
    data - line - number = "850" > < /td>
        < td
    id = "LC850"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (context < span
class
= "pl-k" >
.<
/span>nodeName<span class="pl-k">.</s
pan > toLowerCase() < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L851"
class
= "blob-num js-line-number"
data - line - number = "851" > < /td>
    < td
id = "LC851"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L852"
class
= "blob-num js-line-number"
data - line - number = "852" > < /td>
    < td
id = "LC852"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Capture the context ID, setting it first if necessary</span></td>
    < /tr>
    < tr >
    < td
id = "L853"
class
= "blob-num js-line-number"
data - line - number = "853" > < /td>
    < td
id = "LC853"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (nid <span class="pl-k">=</s
pan > context < span
class
= "pl-k" >
.<
/span>getAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > id < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L854"
class
    = "blob-num js-line-number"
    data - line - number = "854" > < /td>
        < td
    id = "LC854"
class
    = "blob-code blob-code-inner js-file-line" > nid < span
class
    = "pl-k" >= < /span> nid<span class="pl-k">.</s
    pan > replace(rcssescape, fcssescape);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L855"
class
    = "blob-num js-line-number"
    data - line - number = "855" > < /td>
        < td
    id = "LC855"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L856"
class
= "blob-num js-line-number"
data - line - number = "856" > < /td>
    < td
id = "LC856"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" >
.<
/span>setAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > id < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, (nid < span
class
= "pl-k" >= < /span> expando) );</
td >
< /tr>
< tr >
< td
id = "L857"
class
= "blob-num js-line-number"
data - line - number = "857" > < /td>
    < td
id = "LC857"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L858"
class
= "blob-num js-line-number"
data - line - number = "858" > < /td>
    < td
id = "LC858"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L859"
class
= "blob-num js-line-number"
data - line - number = "859" > < /td>
    < td
id = "LC859"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Prefix every selector in the list</span></td>
    < /tr>
    < tr >
    < td
id = "L860"
class
= "blob-num js-line-number"
data - line - number = "860" > < /td>
    < td
id = "LC860"
class
= "blob-code blob-code-inner js-file-line" > groups < span
class
= "pl-k" >= < /span> tokenize( selector );</
td >
< /tr>
< tr >
< td
id = "L861"
class
= "blob-num js-line-number"
data - line - number = "861" > < /td>
    < td
id = "LC861"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> groups<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L862"
class
= "blob-num js-line-number"
data - line - number = "862" > < /td>
    < td
id = "LC862"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L863"
class
    = "blob-num js-line-number"
    data - line - number = "863" > < /td>
        < td
    id = "LC863"
class
    = "blob-code blob-code-inner js-file-line" > groups[i] < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > # < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> nid <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > toSelector(groups[i]);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L864"
class
    = "blob-num js-line-number"
    data - line - number = "864" > < /td>
        < td
    id = "LC864"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L865"
class
= "blob-num js-line-number"
data - line - number = "865" > < /td>
    < td
id = "LC865"
class
= "blob-code blob-code-inner js-file-line" > newSelector < span
class
= "pl-k" >= < /span> groups<span class="pl-k">.</s
pan > join( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>,<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L866"
class
= "blob-num js-line-number"
data - line - number = "866" > < /td>
    < td
id = "LC866"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L867"
class
= "blob-num js-line-number"
data - line - number = "867" > < /td>
    < td
id = "LC867"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Expand context for sibling selectors</span></td>
    < /tr>
    < tr >
    < td
id = "L868"
class
= "blob-num js-line-number"
data - line - number = "868" > < /td>
    < td
id = "LC868"
class
= "blob-code blob-code-inner js-file-line" > newContext < span
class
= "pl-k" >= < /span> rsibling<span class="pl-k">.</s
pan > test(selector) < span
class
= "pl-k" > &amp;&amp; < /span> testContext( context<span class="pl-k">.</s
pan > parentNode
) <
span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L869"
class
= "blob-num js-line-number"
data - line - number = "869" > < /td>
    < td
id = "LC869"
class
= "blob-code blob-code-inner js-file-line" > context;
<
/td>
< /tr>
< tr >
< td
id = "L870"
class
= "blob-num js-line-number"
data - line - number = "870" > < /td>
    < td
id = "LC870"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L871"
class
= "blob-num js-line-number"
data - line - number = "871" > < /td>
    < td
id = "LC871"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L872"
class
= "blob-num js-line-number"
data - line - number = "872" > < /td>
    < td
id = "LC872"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( newSelector ) {</
td >
< /tr>
< tr >
< td
id = "L873"
class
= "blob-num js-line-number"
data - line - number = "873" > < /td>
    < td
id = "LC873"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
try
<
/span> {</
td >
< /tr>
< tr >
< td
id = "L874"
class
= "blob-num js-line-number"
data - line - number = "874" > < /td>
    < td
id = "LC874"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >
.<
/span>apply( results,</
td >
< /tr>
< tr >
< td
id = "L875"
class
= "blob-num js-line-number"
data - line - number = "875" > < /td>
    < td
id = "LC875"
class
= "blob-code blob-code-inner js-file-line" > newContext < span
class
= "pl-k" >
.<
/span>querySelectorAll( newSelector )</
td >
< /tr>
< tr >
< td
id = "L876"
class
= "blob-num js-line-number"
data - line - number = "876" > < /td>
    < td
id = "LC876"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L877"
class
= "blob-num js-line-number"
data - line - number = "877" > < /td>
    < td
id = "LC877"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> results;</
td >
< /tr>
< tr >
< td
id = "L878"
class
= "blob-num js-line-number"
data - line - number = "878" > < /td>
    < td
id = "LC878"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> ( qsaError ) {</
td >
< /tr>
< tr >
< td
id = "L879"
class
= "blob-num js-line-number"
data - line - number = "879" > < /td>
    < td
id = "LC879"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
finally<
/span> {</
td >
< /tr>
< tr >
< td
id = "L880"
class
= "blob-num js-line-number"
data - line - number = "880" > < /td>
    < td
id = "LC880"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( nid <span class="pl-k">===</s
pan > expando
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L881"
class
    = "blob-num js-line-number"
    data - line - number = "881" > < /td>
        < td
    id = "LC881"
class
    = "blob-code blob-code-inner js-file-line" > context < span
class
    = "pl-k" >
.<
    /span>removeAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > id < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L882"
class
= "blob-num js-line-number"
data - line - number = "882" > < /td>
    < td
id = "LC882"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L883"
class
= "blob-num js-line-number"
data - line - number = "883" > < /td>
    < td
id = "LC883"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L884"
class
= "blob-num js-line-number"
data - line - number = "884" > < /td>
    < td
id = "LC884"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L885"
class
= "blob-num js-line-number"
data - line - number = "885" > < /td>
    < td
id = "LC885"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L886"
class
= "blob-num js-line-number"
data - line - number = "886" > < /td>
    < td
id = "LC886"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L887"
class
= "blob-num js-line-number"
data - line - number = "887" > < /td>
    < td
id = "LC887"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L888"
class
= "blob-num js-line-number"
data - line - number = "888" > < /td>
    < td
id = "LC888"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L889"
class
= "blob-num js-line-number"
data - line - number = "889" > < /td>
    < td
id = "LC889"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> All others</span></td>
    < /tr>
    < tr >
    < td
id = "L890"
class
= "blob-num js-line-number"
data - line - number = "890" > < /td>
    < td
id = "LC890"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> select( selector<span class="pl-k">.</s
pan > replace(rtrim, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>$1<span class="pl-pds">&quot;</s
pan > < /span> ), context, results, seed );</
td >
< /tr>
< tr >
< td
id = "L891"
class
= "blob-num js-line-number"
data - line - number = "891" > < /td>
    < td
id = "LC891"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L892"
class
= "blob-num js-line-number"
data - line - number = "892" > < /td>
    < td
id = "LC892"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L893"
class
= "blob-num js-line-number"
data - line - number = "893" > < /td>
    < td
id = "LC893"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
 <td id="LC894" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Create key-value caches of limited size</span></td>
 </tr>
 <tr>
 <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
 <td id="LC895" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@return</span>s {function(string, object)} Returns the Object data after storing it on itself with</span></td>
 </tr>
 <tr>
 <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
 <td id="LC896" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             *    property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)</span></td>
 </tr>
 <tr>
 <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
 <td id="LC897" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             *    deleting the oldest entry</span></td>
 </tr>
 <tr>
 <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
 <td id="LC898" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L899"
class
= "blob-num js-line-number"
data - line - number = "899" > < /td>
    < td
id = "LC899"
class
= "blob-code blob-code-inner js-file-line" > function createCache() {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L900"
class
    = "blob-num js-line-number"
    data - line - number = "900" > < /td>
        < td
    id = "LC900"
class
    = "blob-code blob-code-inner js-file-line" >
    var keys
<
    span
class
    = "pl-k" >= < /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L901"
class
    = "blob-num js-line-number"
    data - line - number = "901" > < /td>
        < td
    id = "LC901"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L902"
class
    = "blob-num js-line-number"
    data - line - number = "902" > < /td>
        < td
    id = "LC902"
class
    = "blob-code blob-code-inner js-file-line" > function cache(key, value) {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L903"
        class
            = "blob-num js-line-number"
            data - line - number = "903" > < /td>
                < td
            id = "LC903"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-c" > < span
        class
            = "pl-c" >//</span> Use (key + &quot; &quot;) to avoid collision with native prototype properties (see Issue #157)</span></td>
                < /tr>
                < tr >
                < td
            id = "L904"
        class
            = "blob-num js-line-number"
            data - line - number = "904" > < /td>
                < td
            id = "LC904"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-k" >
            if<
            /span> ( keys<span class="pl-k">.</s
            pan > push(key < span
        class
            = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
            pan > < span
        class
            = "pl-pds" > & quot;
        <
            /span></s
            pan >
        ) <
            span
        class
            = "pl-k" > &gt; < /span> <span class="pl-smi">Expr</s
            pan > < span
        class
            = "pl-k" >
        .<
            /span>cacheLength ) {</
            td >
            < /tr>
            < tr >
            < td
            id = "L905"
        class
            = "blob-num js-line-number"
            data - line - number = "905" > < /td>
                < td
            id = "LC905"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-c" > < span
        class
            = "pl-c" >//</span> Only keep the most recent entries</span></td>
                < /tr>
                < tr >
                < td
            id = "L906"
        class
            = "blob-num js-line-number"
            data - line - number = "906" > < /td>
                < td
            id = "LC906"
        class
            = "blob-code blob-code-inner js-file-line" > delete cache[keys < span
        class
            = "pl-k" >
        .<
            /span>shift() ];</
            td >
            < /tr>
            < tr >
            < td
            id = "L907"
        class
            = "blob-num js-line-number"
            data - line - number = "907" > < /td>
                < td
            id = "LC907"
        class
            = "blob-code blob-code-inner js-file-line" >
        } < /td>
        < /tr>
        < tr >
        < td
    id = "L908"
class
    = "blob-num js-line-number"
    data - line - number = "908" > < /td>
        < td
    id = "LC908"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> (cache[ key <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> ] <span class="pl-k">=</s
    pan > value
);
<
/td>
< /tr>
< tr >
< td
id = "L909"
class
= "blob-num js-line-number"
data - line - number = "909" > < /td>
    < td
id = "LC909"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L910"
class
= "blob-num js-line-number"
data - line - number = "910" > < /td>
    < td
id = "LC910"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> cache;</
td >
< /tr>
< tr >
< td
id = "L911"
class
= "blob-num js-line-number"
data - line - number = "911" > < /td>
    < td
id = "LC911"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L912"
class
= "blob-num js-line-number"
data - line - number = "912" > < /td>
    < td
id = "LC912"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L913"
class
= "blob-num js-line-number"
data - line - number = "913" > < /td>
    < td
id = "LC913"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
 <td id="LC914" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Mark a function for special use by Sizzle</span></td>
 </tr>
 <tr>
 <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
 <td id="LC915" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Function} fn The function to mark</span></td>
 </tr>
 <tr>
 <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
 <td id="LC916" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L917"
class
= "blob-num js-line-number"
data - line - number = "917" > < /td>
    < td
id = "LC917"
class
= "blob-code blob-code-inner js-file-line" > function markFunction(fn) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L918"
    class
        = "blob-num js-line-number"
        data - line - number = "918" > < /td>
            < td
        id = "LC918"
    class
        = "blob-code blob-code-inner js-file-line" > fn[expando] < span
    class
        = "pl-k" >= < /span> <span class="pl-c1">true</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L919"
    class
        = "blob-num js-line-number"
        data - line - number = "919" > < /td>
            < td
        id = "LC919"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> fn;</
        td >
        < /tr>
        < tr >
        < td
        id = "L920"
    class
        = "blob-num js-line-number"
        data - line - number = "920" > < /td>
            < td
        id = "LC920"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L921"
class
= "blob-num js-line-number"
data - line - number = "921" > < /td>
    < td
id = "LC921"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L922"
class
= "blob-num js-line-number"
data - line - number = "922" > < /td>
    < td
id = "LC922"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
 <td id="LC923" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Support testing using an element</span></td>
 </tr>
 <tr>
 <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
 <td id="LC924" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Function} fn Passed the created element and returns a boolean result</span></td>
 </tr>
 <tr>
 <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
 <td id="LC925" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L926"
class
= "blob-num js-line-number"
data - line - number = "926" > < /td>
    < td
id = "LC926"
class
= "blob-code blob-code-inner js-file-line" > function assert(fn) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L927"
class
    = "blob-num js-line-number"
    data - line - number = "927" > < /td>
        < td
    id = "LC927"
class
    = "blob-code blob-code-inner js-file-line" >
    var el
<
    span
class
    = "pl-k" >= < /span> document<span class="pl-k">.</s
    pan > createElement( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>fieldset<span class="pl-pds">&quot;</s
    pan > < /span>);</
    td >
    < /tr>
    < tr >
    < td
    id = "L928"
class
    = "blob-num js-line-number"
    data - line - number = "928" > < /td>
        < td
    id = "LC928"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L929"
class
    = "blob-num js-line-number"
    data - line - number = "929" > < /td>
        < td
    id = "LC929"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    try
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L930"
class
    = "blob-num js-line-number"
    data - line - number = "930" > < /td>
        < td
    id = "LC930"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">!!</s
    pan > fn(el);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L931"
class
    = "blob-num js-line-number"
    data - line - number = "931" > < /td>
        < td
    id = "LC931"
class
    = "blob-code blob-code-inner js-file-line" >
} < span
class
= "pl-k" >
catch<
/span> (e) {</
td >
< /tr>
< tr >
< td
id = "L932"
class
= "blob-num js-line-number"
data - line - number = "932" > < /td>
    < td
id = "LC932"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L933"
class
= "blob-num js-line-number"
data - line - number = "933" > < /td>
    < td
id = "LC933"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
finally<
/span> {</
td >
< /tr>
< tr >
< td
id = "L934"
class
= "blob-num js-line-number"
data - line - number = "934" > < /td>
    < td
id = "LC934"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove from its parent by default</span></td>
    < /tr>
    < tr >
    < td
id = "L935"
class
= "blob-num js-line-number"
data - line - number = "935" > < /td>
    < td
id = "LC935"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( el<span class="pl-k">.</s
pan > parentNode
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L936"
class
    = "blob-num js-line-number"
    data - line - number = "936" > < /td>
        < td
    id = "LC936"
class
    = "blob-code blob-code-inner js-file-line" > el < span
class
    = "pl-k" >
.<
    /span>parentNode<span class="pl-k">.</s
    pan > removeChild(el);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L937"
class
    = "blob-num js-line-number"
    data - line - number = "937" > < /td>
        < td
    id = "LC937"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L938"
class
= "blob-num js-line-number"
data - line - number = "938" > < /td>
    < td
id = "LC938"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> release memory in IE</span></td>
    < /tr>
    < tr >
    < td
id = "L939"
class
= "blob-num js-line-number"
data - line - number = "939" > < /td>
    < td
id = "LC939"
class
= "blob-code blob-code-inner js-file-line" > el < span
class
= "pl-k" >= < /span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L940"
class
= "blob-num js-line-number"
data - line - number = "940" > < /td>
    < td
id = "LC940"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L941"
class
= "blob-num js-line-number"
data - line - number = "941" > < /td>
    < td
id = "LC941"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L942"
class
= "blob-num js-line-number"
data - line - number = "942" > < /td>
    < td
id = "LC942"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L943"
class
= "blob-num js-line-number"
data - line - number = "943" > < /td>
    < td
id = "LC943"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
 <td id="LC944" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Adds the same handler for all of the specified attrs</span></td>
 </tr>
 <tr>
 <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
 <td id="LC945" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {String} attrs Pipe-separated list of attributes</span></td>
 </tr>
 <tr>
 <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
 <td id="LC946" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Function} handler The method that will be applied</span></td>
 </tr>
 <tr>
 <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
 <td id="LC947" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L948"
class
= "blob-num js-line-number"
data - line - number = "948" > < /td>
    < td
id = "LC948"
class
= "blob-code blob-code-inner js-file-line" > function addHandle(attrs, handler) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L949"
    class
        = "blob-num js-line-number"
        data - line - number = "949" > < /td>
            < td
        id = "LC949"
    class
        = "blob-code blob-code-inner js-file-line" >
        var arr
    <
        span
    class
        = "pl-k" >= < /span> attrs<span class="pl-k">.</s
        pan > split( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>|<span class="pl-pds">&quot;</s
        pan > < /span>),</
        td >
        < /tr>
        < tr >
        < td
        id = "L950"
    class
        = "blob-num js-line-number"
        data - line - number = "950" > < /td>
            < td
        id = "LC950"
    class
        = "blob-code blob-code-inner js-file-line" > i < span
    class
        = "pl-k" >= < /span> arr<span class="pl-k">.</s
        pan > length;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L951"
    class
        = "blob-num js-line-number"
        data - line - number = "951" > < /td>
            < td
        id = "LC951"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L952"
    class
        = "blob-num js-line-number"
        data - line - number = "952" > < /td>
            < td
        id = "LC952"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        while<
        /span> ( i<span class="pl-k">--</s
        pan >
    )
        {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L953"
        class
            = "blob-num js-line-number"
            data - line - number = "953" > < /td>
                < td
            id = "LC953"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-smi" > Expr < /span><span class="pl-k">.</s
            pan > attrHandle[arr[i]] < span
        class
            = "pl-k" >= < /span> handler;</
            td >
            < /tr>
            < tr >
            < td
            id = "L954"
        class
            = "blob-num js-line-number"
            data - line - number = "954" > < /td>
                < td
            id = "LC954"
        class
            = "blob-code blob-code-inner js-file-line" >
        }
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L955"
    class
        = "blob-num js-line-number"
        data - line - number = "955" > < /td>
            < td
        id = "LC955"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L956"
class
= "blob-num js-line-number"
data - line - number = "956" > < /td>
    < td
id = "LC956"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L957"
class
= "blob-num js-line-number"
data - line - number = "957" > < /td>
    < td
id = "LC957"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
 <td id="LC958" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Checks document order of two siblings</span></td>
 </tr>
 <tr>
 <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
 <td id="LC959" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Element} a</span></td>
 </tr>
 <tr>
 <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
 <td id="LC960" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Element} b</span></td>
 </tr>
 <tr>
 <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
 <td id="LC961" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@return</span>s {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b</span></td>
 </tr>
 <tr>
 <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
 <td id="LC962" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L963"
class
= "blob-num js-line-number"
data - line - number = "963" > < /td>
    < td
id = "LC963"
class
= "blob-code blob-code-inner js-file-line" > function siblingCheck(a, b) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L964"
    class
        = "blob-num js-line-number"
        data - line - number = "964" > < /td>
            < td
        id = "LC964"
    class
        = "blob-code blob-code-inner js-file-line" >
        var cur
    <
        span
    class
        = "pl-k" >= < /span> b <span class="pl-k">&amp;&amp;</s
        pan > a,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L965"
    class
        = "blob-num js-line-number"
        data - line - number = "965" > < /td>
            < td
        id = "LC965"
    class
        = "blob-code blob-code-inner js-file-line" > diff < span
    class
        = "pl-k" >= < /span> cur <span class="pl-k">&amp;&amp;</s
        pan > a < span
    class
        = "pl-k" >
    .<
        /span>nodeType <span class="pl-k">===</s
        pan > < span
    class
        = "pl-c1" > 1 < /span> <span class="pl-k">&amp;&amp;</s
        pan > b < span
    class
        = "pl-k" >
    .<
        /span>nodeType <span class="pl-k">===</s
        pan > < span
    class
        = "pl-c1" > 1 < /span> <span class="pl-k">&amp;&amp;</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L966"
    class
        = "blob-num js-line-number"
        data - line - number = "966" > < /td>
            < td
        id = "LC966"
    class
        = "blob-code blob-code-inner js-file-line" > a < span
    class
        = "pl-k" >
    .<
        /span>sourceIndex <span class="pl-k">-</s
        pan > b < span
    class
        = "pl-k" >
    .<
        /span>sourceIndex;</
        td >
        < /tr>
        < tr >
        < td
        id = "L967"
    class
        = "blob-num js-line-number"
        data - line - number = "967" > < /td>
            < td
        id = "LC967"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L968"
    class
        = "blob-num js-line-number"
        data - line - number = "968" > < /td>
            < td
        id = "LC968"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Use IE sourceIndex if available on both nodes</span></td>
            < /tr>
            < tr >
            < td
        id = "L969"
    class
        = "blob-num js-line-number"
        data - line - number = "969" > < /td>
            < td
        id = "LC969"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( diff ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L970"
    class
        = "blob-num js-line-number"
        data - line - number = "970" > < /td>
            < td
        id = "LC970"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> diff;</
        td >
        < /tr>
        < tr >
        < td
        id = "L971"
    class
        = "blob-num js-line-number"
        data - line - number = "971" > < /td>
            < td
        id = "LC971"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L972"
class
= "blob-num js-line-number"
data - line - number = "972" > < /td>
    < td
id = "LC972"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L973"
class
= "blob-num js-line-number"
data - line - number = "973" > < /td>
    < td
id = "LC973"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check if b follows a</span></td>
    < /tr>
    < tr >
    < td
id = "L974"
class
= "blob-num js-line-number"
data - line - number = "974" > < /td>
    < td
id = "LC974"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( cur ) {</
td >
< /tr>
< tr >
< td
id = "L975"
class
= "blob-num js-line-number"
data - line - number = "975" > < /td>
    < td
id = "LC975"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( (cur <span class="pl-k">=</s
pan > cur < span
class
= "pl-k" >
.<
/span>nextSibling) ) {</
td >
< /tr>
< tr >
< td
id = "L976"
class
= "blob-num js-line-number"
data - line - number = "976" > < /td>
    < td
id = "LC976"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( cur <span class="pl-k">===</s
pan > b
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L977"
class
    = "blob-num js-line-number"
    data - line - number = "977" > < /td>
        < td
    id = "LC977"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">-</s
    pan > < span
class
    = "pl-c1" > 1 < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L978"
class
    = "blob-num js-line-number"
    data - line - number = "978" > < /td>
        < td
    id = "LC978"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L979"
class
= "blob-num js-line-number"
data - line - number = "979" > < /td>
    < td
id = "LC979"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L980"
class
= "blob-num js-line-number"
data - line - number = "980" > < /td>
    < td
id = "LC980"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L981"
class
= "blob-num js-line-number"
data - line - number = "981" > < /td>
    < td
id = "LC981"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L982"
class
= "blob-num js-line-number"
data - line - number = "982" > < /td>
    < td
id = "LC982"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> a <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L983"
class
= "blob-num js-line-number"
data - line - number = "983" > < /td>
    < td
id = "LC983"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L984"
class
= "blob-num js-line-number"
data - line - number = "984" > < /td>
    < td
id = "LC984"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L985"
class
= "blob-num js-line-number"
data - line - number = "985" > < /td>
    < td
id = "LC985"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
 <td id="LC986" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Returns a function to use in pseudos for input types</span></td>
 </tr>
 <tr>
 <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
 <td id="LC987" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {String} type</span></td>
 </tr>
 <tr>
 <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
 <td id="LC988" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L989"
class
= "blob-num js-line-number"
data - line - number = "989" > < /td>
    < td
id = "LC989"
class
= "blob-code blob-code-inner js-file-line" > function createInputPseudo(type) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L990"
class
    = "blob-num js-line-number"
    data - line - number = "990" > < /td>
        < td
    id = "LC990"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> function( elem ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L991"
class
    = "blob-num js-line-number"
    data - line - number = "991" > < /td>
        < td
    id = "LC991"
class
    = "blob-code blob-code-inner js-file-line" >
    var name
<
    span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > nodeName < span
class
    = "pl-k" >
.<
    /span>toLowerCase();</
    td >
    < /tr>
    < tr >
    < td
    id = "L992"
class
    = "blob-num js-line-number"
    data - line - number = "992" > < /td>
        < td
    id = "LC992"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> name <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>input<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > elem < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">===</s
    pan > type;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L993"
class
    = "blob-num js-line-number"
    data - line - number = "993" > < /td>
        < td
    id = "LC993"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L994"
class
= "blob-num js-line-number"
data - line - number = "994" > < /td>
    < td
id = "LC994"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L995"
class
= "blob-num js-line-number"
data - line - number = "995" > < /td>
    < td
id = "LC995"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L996"
class
= "blob-num js-line-number"
data - line - number = "996" > < /td>
    < td
id = "LC996"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
 <td id="LC997" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Returns a function to use in pseudos for buttons</span></td>
 </tr>
 <tr>
 <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
 <td id="LC998" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {String} type</span></td>
 </tr>
 <tr>
 <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
 <td id="LC999" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1000"
class
= "blob-num js-line-number"
data - line - number = "1000" > < /td>
    < td
id = "LC1000"
class
= "blob-code blob-code-inner js-file-line" > function createButtonPseudo(type) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1001"
class
    = "blob-num js-line-number"
    data - line - number = "1001" > < /td>
        < td
    id = "LC1001"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> function( elem ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1002"
class
    = "blob-num js-line-number"
    data - line - number = "1002" > < /td>
        < td
    id = "LC1002"
class
    = "blob-code blob-code-inner js-file-line" >
    var name
<
    span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > nodeName < span
class
    = "pl-k" >
.<
    /span>toLowerCase();</
    td >
    < /tr>
    < tr >
    < td
    id = "L1003"
class
    = "blob-num js-line-number"
    data - line - number = "1003" > < /td>
        < td
    id = "LC1003"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> (name <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>input<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">||</s
    pan > name < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > button < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) < span
class
= "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
pan > type < span
class
= "pl-k" >= == < /span> type;</
td >
< /tr>
< tr >
< td
id = "L1004"
class
= "blob-num js-line-number"
data - line - number = "1004" > < /td>
    < td
id = "LC1004"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1005"
class
= "blob-num js-line-number"
data - line - number = "1005" > < /td>
    < td
id = "LC1005"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1006"
class
= "blob-num js-line-number"
data - line - number = "1006" > < /td>
    < td
id = "LC1006"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1007"
class
= "blob-num js-line-number"
data - line - number = "1007" > < /td>
    < td
id = "LC1007"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
 <td id="LC1008" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Returns a function to use in pseudos for :enabled/:disabled</span></td>
 </tr>
 <tr>
 <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
 <td id="LC1009" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Boolean} disabled true for :disabled; false for :enabled</span></td>
 </tr>
 <tr>
 <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
 <td id="LC1010" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1011"
class
= "blob-num js-line-number"
data - line - number = "1011" > < /td>
    < td
id = "LC1011"
class
= "blob-code blob-code-inner js-file-line" > function createDisabledPseudo(disabled) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1012"
class
    = "blob-num js-line-number"
    data - line - number = "1012" > < /td>
        < td
    id = "LC1012"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1013"
class
    = "blob-num js-line-number"
    data - line - number = "1013" > < /td>
        < td
    id = "LC1013"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Known :disabled false positives: fieldset[disabled] &gt; legend:nth-of-type(n+2) :can-disable</span></td>
        < /tr>
        < tr >
        < td
    id = "L1014"
class
    = "blob-num js-line-number"
    data - line - number = "1014" > < /td>
        < td
    id = "LC1014"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> function( elem ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1015"
class
    = "blob-num js-line-number"
    data - line - number = "1015" > < /td>
        < td
    id = "LC1015"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1016"
class
    = "blob-num js-line-number"
    data - line - number = "1016" > < /td>
        < td
    id = "LC1016"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Only certain elements can match :enabled or :disabled</span></td>
        < /tr>
        < tr >
        < td
    id = "L1017"
class
    = "blob-num js-line-number"
    data - line - number = "1017" > < /td>
        < td
    id = "LC1017"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled</span></td>
        < /tr>
        < tr >
        < td
    id = "L1018"
class
    = "blob-num js-line-number"
    data - line - number = "1018" > < /td>
        < td
    id = "LC1018"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled</span></td>
        < /tr>
        < tr >
        < td
    id = "L1019"
class
    = "blob-num js-line-number"
    data - line - number = "1019" > < /td>
        < td
    id = "LC1019"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > form < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > in elem
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1020"
class
    = "blob-num js-line-number"
    data - line - number = "1020" > < /td>
        < td
    id = "LC1020"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1021"
class
    = "blob-num js-line-number"
    data - line - number = "1021" > < /td>
        < td
    id = "LC1021"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Check for inherited disabledness on relevant non-disabled elements:</span></td>
        < /tr>
        < tr >
        < td
    id = "L1022"
class
    = "blob-num js-line-number"
    data - line - number = "1022" > < /td>
        < td
    id = "LC1022"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> * listed form-associated elements in a disabled fieldset</span></td>
        < /tr>
        < tr >
        < td
    id = "L1023"
class
    = "blob-num js-line-number"
    data - line - number = "1023" > < /td>
        < td
    id = "LC1023"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span>   https://html.spec.whatwg.org/multipage/forms.html#category-listed</span></td>
        < /tr>
        < tr >
        < td
    id = "L1024"
class
    = "blob-num js-line-number"
    data - line - number = "1024" > < /td>
        < td
    id = "LC1024"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span>   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled</span></td>
        < /tr>
        < tr >
        < td
    id = "L1025"
class
    = "blob-num js-line-number"
    data - line - number = "1025" > < /td>
        < td
    id = "LC1025"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> * option elements in a disabled optgroup</span></td>
        < /tr>
        < tr >
        < td
    id = "L1026"
class
    = "blob-num js-line-number"
    data - line - number = "1026" > < /td>
        < td
    id = "LC1026"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span>   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled</span></td>
        < /tr>
        < tr >
        < td
    id = "L1027"
class
    = "blob-num js-line-number"
    data - line - number = "1027" > < /td>
        < td
    id = "LC1027"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> All such elements have a &quot;form&quot; property.</span></td>
        < /tr>
        < tr >
        < td
    id = "L1028"
class
    = "blob-num js-line-number"
    data - line - number = "1028" > < /td>
        < td
    id = "LC1028"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > parentNode < span
class
    = "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
    pan > disabled < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">false</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1029"
class
    = "blob-num js-line-number"
    data - line - number = "1029" > < /td>
        < td
    id = "LC1029"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1030"
class
    = "blob-num js-line-number"
    data - line - number = "1030" > < /td>
        < td
    id = "LC1030"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Option elements defer to a parent optgroup if present</span></td>
        < /tr>
        < tr >
        < td
    id = "L1031"
class
    = "blob-num js-line-number"
    data - line - number = "1031" > < /td>
        < td
    id = "LC1031"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > label < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > in elem
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1032"
class
    = "blob-num js-line-number"
    data - line - number = "1032" > < /td>
        < td
    id = "LC1032"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > label < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > in elem < span
class
    = "pl-k" >
.<
    /span>parentNode ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1033"
class
    = "blob-num js-line-number"
    data - line - number = "1033" > < /td>
        < td
    id = "LC1033"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem<span class="pl-k">.</s
    pan > parentNode < span
class
    = "pl-k" >
.<
    /span>disabled <span class="pl-k">===</s
    pan > disabled;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1034"
class
    = "blob-num js-line-number"
    data - line - number = "1034" > < /td>
        < td
    id = "LC1034"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L1035"
class
= "blob-num js-line-number"
data - line - number = "1035" > < /td>
    < td
id = "LC1035"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > disabled < span
class
= "pl-k" >= == < /span> disabled;</
td >
< /tr>
< tr >
< td
id = "L1036"
class
= "blob-num js-line-number"
data - line - number = "1036" > < /td>
    < td
id = "LC1036"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1037"
class
= "blob-num js-line-number"
data - line - number = "1037" > < /td>
    < td
id = "LC1037"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1038"
class
= "blob-num js-line-number"
data - line - number = "1038" > < /td>
    < td
id = "LC1038"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1039"
class
= "blob-num js-line-number"
data - line - number = "1039" > < /td>
    < td
id = "LC1039"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE 6 - 11</span></td>
    < /tr>
    < tr >
    < td
id = "L1040"
class
= "blob-num js-line-number"
data - line - number = "1040" > < /td>
    < td
id = "LC1040"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use the isDisabled shortcut property to check for disabled fieldset ancestors</span></td>
    < /tr>
    < tr >
    < td
id = "L1041"
class
= "blob-num js-line-number"
data - line - number = "1041" > < /td>
    < td
id = "LC1041"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > isDisabled < span
class
= "pl-k" >= == < /span> disabled <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1042"
class
= "blob-num js-line-number"
data - line - number = "1042" > < /td>
    < td
id = "LC1042"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1043"
class
= "blob-num js-line-number"
data - line - number = "1043" > < /td>
    < td
id = "LC1043"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Where there is no isDisabled, check manually</span></td>
    < /tr>
    < tr >
    < td
id = "L1044"
class
= "blob-num js-line-number"
data - line - number = "1044" > < /td>
    < td
id = "LC1044"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> jshint -W018 <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1045"
class
= "blob-num js-line-number"
data - line - number = "1045" > < /td>
    < td
id = "LC1045"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>isDisabled <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > disabled < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L1046"
class
= "blob-num js-line-number"
data - line - number = "1046" > < /td>
    < td
id = "LC1046"
class
= "blob-code blob-code-inner js-file-line" > disabledAncestor(elem) < span
class
= "pl-k" >= == < /span> disabled;</
td >
< /tr>
< tr >
< td
id = "L1047"
class
= "blob-num js-line-number"
data - line - number = "1047" > < /td>
    < td
id = "LC1047"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1048"
class
= "blob-num js-line-number"
data - line - number = "1048" > < /td>
    < td
id = "LC1048"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1049"
class
= "blob-num js-line-number"
data - line - number = "1049" > < /td>
    < td
id = "LC1049"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > disabled < span
class
= "pl-k" >= == < /span> disabled;</
td >
< /tr>
< tr >
< td
id = "L1050"
class
= "blob-num js-line-number"
data - line - number = "1050" > < /td>
    < td
id = "LC1050"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1051"
class
= "blob-num js-line-number"
data - line - number = "1051" > < /td>
    < td
id = "LC1051"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Try to winnow out elements that can&#39;t be disabled before trusting the disabled property.</span></td>
    < /tr>
    < tr >
    < td
id = "L1052"
class
= "blob-num js-line-number"
data - line - number = "1052" > < /td>
    < td
id = "LC1052"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Some victims get caught in our net (label, legend, menu, track), but it shouldn&#39;t</span></td>
    < /tr>
    < tr >
    < td
id = "L1053"
class
= "blob-num js-line-number"
data - line - number = "1053" > < /td>
    < td
id = "LC1053"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> even exist on them, let alone have a boolean value.</span></td>
    < /tr>
    < tr >
    < td
id = "L1054"
class
= "blob-num js-line-number"
data - line - number = "1054" > < /td>
    < td
id = "LC1054"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>label<span class="pl-pds">&quot;</s
pan > < /span> in elem ) {</
td >
< /tr>
< tr >
< td
id = "L1055"
class
= "blob-num js-line-number"
data - line - number = "1055" > < /td>
    < td
id = "LC1055"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > disabled < span
class
= "pl-k" >= == < /span> disabled;</
td >
< /tr>
< tr >
< td
id = "L1056"
class
= "blob-num js-line-number"
data - line - number = "1056" > < /td>
    < td
id = "LC1056"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1057"
class
= "blob-num js-line-number"
data - line - number = "1057" > < /td>
    < td
id = "LC1057"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1058"
class
= "blob-num js-line-number"
data - line - number = "1058" > < /td>
    < td
id = "LC1058"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remaining elements are neither :enabled nor :disabled</span></td>
    < /tr>
    < tr >
    < td
id = "L1059"
class
= "blob-num js-line-number"
data - line - number = "1059" > < /td>
    < td
id = "LC1059"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L1060"
class
= "blob-num js-line-number"
data - line - number = "1060" > < /td>
    < td
id = "LC1060"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1061"
class
= "blob-num js-line-number"
data - line - number = "1061" > < /td>
    < td
id = "LC1061"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1062"
class
= "blob-num js-line-number"
data - line - number = "1062" > < /td>
    < td
id = "LC1062"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1063"
class
= "blob-num js-line-number"
data - line - number = "1063" > < /td>
    < td
id = "LC1063"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
 <td id="LC1064" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Returns a function to use in pseudos for positionals</span></td>
 </tr>
 <tr>
 <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
 <td id="LC1065" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Function} fn</span></td>
 </tr>
 <tr>
 <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
 <td id="LC1066" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1067"
class
= "blob-num js-line-number"
data - line - number = "1067" > < /td>
    < td
id = "LC1067"
class
= "blob-code blob-code-inner js-file-line" > function createPositionalPseudo(fn) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1068"
class
    = "blob-num js-line-number"
    data - line - number = "1068" > < /td>
        < td
    id = "LC1068"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> markFunction(function( argument ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1069"
class
    = "blob-num js-line-number"
    data - line - number = "1069" > < /td>
        < td
    id = "LC1069"
class
    = "blob-code blob-code-inner js-file-line" > argument < span
class
    = "pl-k" >= < /span> <span class="pl-k">+</s
    pan > argument;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1070"
class
    = "blob-num js-line-number"
    data - line - number = "1070" > < /td>
        < td
    id = "LC1070"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> markFunction(function( seed, matches ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1071"
class
    = "blob-num js-line-number"
    data - line - number = "1071" > < /td>
        < td
    id = "LC1071"
class
    = "blob-code blob-code-inner js-file-line" >
    var j, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L1072"
class
    = "blob-num js-line-number"
    data - line - number = "1072" > < /td>
        < td
    id = "LC1072"
class
    = "blob-code blob-code-inner js-file-line" > matchIndexes < span
class
    = "pl-k" >= < /span> fn( [], seed<span class="pl-k">.</s
    pan > length, argument
),
<
/td>
< /tr>
< tr >
< td
id = "L1073"
class
= "blob-num js-line-number"
data - line - number = "1073" > < /td>
    < td
id = "LC1073"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> matchIndexes<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L1074"
class
= "blob-num js-line-number"
data - line - number = "1074" > < /td>
    < td
id = "LC1074"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1075"
class
= "blob-num js-line-number"
data - line - number = "1075" > < /td>
    < td
id = "LC1075"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Match elements found at the specified indexes</span></td>
    < /tr>
    < tr >
    < td
id = "L1076"
class
= "blob-num js-line-number"
data - line - number = "1076" > < /td>
    < td
id = "LC1076"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1077"
class
    = "blob-num js-line-number"
    data - line - number = "1077" > < /td>
        < td
    id = "LC1077"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( seed[ (j <span class="pl-k">=</span> matchIndexes[i]) ] ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1078"
class
    = "blob-num js-line-number"
    data - line - number = "1078" > < /td>
        < td
    id = "LC1078"
class
    = "blob-code blob-code-inner js-file-line" > seed[j] < span
class
    = "pl-k" >= < /span> <span class="pl-k">!</s
    pan > (matches[j] < span
class
    = "pl-k" >= < /span> seed[j]);</
    td >
    < /tr>
    < tr >
    < td
    id = "L1079"
class
    = "blob-num js-line-number"
    data - line - number = "1079" > < /td>
        < td
    id = "LC1079"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1080"
class
= "blob-num js-line-number"
data - line - number = "1080" > < /td>
    < td
id = "LC1080"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1081"
class
= "blob-num js-line-number"
data - line - number = "1081" > < /td>
    < td
id = "LC1081"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L1082"
class
= "blob-num js-line-number"
data - line - number = "1082" > < /td>
    < td
id = "LC1082"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L1083"
class
= "blob-num js-line-number"
data - line - number = "1083" > < /td>
    < td
id = "LC1083"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1084"
class
= "blob-num js-line-number"
data - line - number = "1084" > < /td>
    < td
id = "LC1084"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1085"
class
= "blob-num js-line-number"
data - line - number = "1085" > < /td>
    < td
id = "LC1085"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
 <td id="LC1086" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Checks a node for validity as a Sizzle context</span></td>
 </tr>
 <tr>
 <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
 <td id="LC1087" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Element|Object=} context</span></td>
 </tr>
 <tr>
 <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
 <td id="LC1088" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@return</span>s {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value</span></td>
 </tr>
 <tr>
 <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
 <td id="LC1089" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1090"
class
= "blob-num js-line-number"
data - line - number = "1090" > < /td>
    < td
id = "LC1090"
class
= "blob-code blob-code-inner js-file-line" > function testContext(context) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1091"
    class
        = "blob-num js-line-number"
        data - line - number = "1091" > < /td>
            < td
        id = "LC1091"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> context <span class="pl-k">&amp;&amp;</s
        pan > typeof context < span
    class
        = "pl-k" >
    .<
        /span>getElementsByTagName <span class="pl-k">!=</s
        pan > < span
    class
        = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > undefined < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan > < span
    class
        = "pl-k" > &amp;&amp; < /span> context;</
        td >
        < /tr>
        < tr >
        < td
        id = "L1092"
    class
        = "blob-num js-line-number"
        data - line - number = "1092" > < /td>
            < td
        id = "LC1092"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L1093"
class
= "blob-num js-line-number"
data - line - number = "1093" > < /td>
    < td
id = "LC1093"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1094"
class
= "blob-num js-line-number"
data - line - number = "1094" > < /td>
    < td
id = "LC1094"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Expose support vars for convenience</span></td>
    < /tr>
    < tr >
    < td
id = "L1095"
class
= "blob-num js-line-number"
data - line - number = "1095" > < /td>
    < td
id = "LC1095"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >= < /span> <span class="pl-smi">Sizzle</s
pan > < span
class
= "pl-k" >
.<
/span>support <span class="pl-k">=</s
pan > {};
<
/td>
< /tr>
< tr >
< td
id = "L1096"
class
= "blob-num js-line-number"
data - line - number = "1096" > < /td>
    < td
id = "LC1096"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1097"
class
= "blob-num js-line-number"
data - line - number = "1097" > < /td>
    < td
id = "LC1097"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
 <td id="LC1098" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Detects XML nodes</span></td>
 </tr>
 <tr>
 <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
 <td id="LC1099" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Element|Object} elem An element or a document</span></td>
 </tr>
 <tr>
 <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
 <td id="LC1100" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@return</span>s {Boolean} True iff elem is a non-HTML XML node</span></td>
 </tr>
 <tr>
 <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
 <td id="LC1101" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1102"
class
= "blob-num js-line-number"
data - line - number = "1102" > < /td>
    < td
id = "LC1102"
class
= "blob-code blob-code-inner js-file-line" > isXML < span
class
= "pl-k" >= < /span> <span class="pl-smi">Sizzle</s
pan > < span
class
= "pl-k" >
.<
/span>isXML <span class="pl-k">=</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1103"
class
    = "blob-num js-line-number"
    data - line - number = "1103" > < /td>
        < td
    id = "LC1103"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> documentElement is verified for cases where it doesn&#39;t yet exist</span></td>
        < /tr>
        < tr >
        < td
    id = "L1104"
class
    = "blob-num js-line-number"
    data - line - number = "1104" > < /td>
        < td
    id = "LC1104"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> (such as loading iframes in IE - #4833)</span></td>
        < /tr>
        < tr >
        < td
    id = "L1105"
class
    = "blob-num js-line-number"
    data - line - number = "1105" > < /td>
        < td
    id = "LC1105"
class
    = "blob-code blob-code-inner js-file-line" >
    var documentElement
<
    span
class
    = "pl-k" >= < /span> elem <span class="pl-k">&amp;&amp;</s
    pan > (elem < span
class
    = "pl-k" >
.<
    /span>ownerDocument <span class="pl-k">||</s
    pan > elem
)<
    span
class
    = "pl-k" >
.<
    /span>documentElement;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1106"
class
    = "blob-num js-line-number"
    data - line - number = "1106" > < /td>
        < td
    id = "LC1106"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> documentElement <span class="pl-k">?</s
    pan > documentElement < span
class
    = "pl-k" >
.<
    /span>nodeName <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > HTML < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" >
:<
    /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1107"
class
    = "blob-num js-line-number"
    data - line - number = "1107" > < /td>
        < td
    id = "LC1107"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L1108"
class
= "blob-num js-line-number"
data - line - number = "1108" > < /td>
    < td
id = "LC1108"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1109"
class
= "blob-num js-line-number"
data - line - number = "1109" > < /td>
    < td
id = "LC1109"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
 <td id="LC1110" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Sets document-related variables once based on the current document</span></td>
 </tr>
 <tr>
 <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
 <td id="LC1111" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Element|Object} [doc] An element or document object to use to set the document</span></td>
 </tr>
 <tr>
 <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
 <td id="LC1112" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@return</span>s {Object} Returns the current document</span></td>
 </tr>
 <tr>
 <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
 <td id="LC1113" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1114"
class
= "blob-num js-line-number"
data - line - number = "1114" > < /td>
    < td
id = "LC1114"
class
= "blob-code blob-code-inner js-file-line" > setDocument < span
class
= "pl-k" >= < /span> <span class="pl-smi">Sizzle</s
pan > < span
class
= "pl-k" >
.<
/span>setDocument <span class="pl-k">=</s
pan > function (node) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1115"
class
    = "blob-num js-line-number"
    data - line - number = "1115" > < /td>
        < td
    id = "LC1115"
class
    = "blob-code blob-code-inner js-file-line" >
    var hasCompare, subWindow, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L1116"
class
    = "blob-num js-line-number"
    data - line - number = "1116" > < /td>
        < td
    id = "LC1116"
class
    = "blob-code blob-code-inner js-file-line" > doc < span
class
    = "pl-k" >= < /span> node <span class="pl-k">?</s
    pan > node < span
class
    = "pl-k" >
.<
    /span>ownerDocument <span class="pl-k">||</s
    pan > node < span
class
    = "pl-k" >
:<
    /span> preferredDoc;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1117"
class
    = "blob-num js-line-number"
    data - line - number = "1117" > < /td>
        < td
    id = "LC1117"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1118"
class
    = "blob-num js-line-number"
    data - line - number = "1118" > < /td>
        < td
    id = "LC1118"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Return early if doc is invalid or already selected</span></td>
        < /tr>
        < tr >
        < td
    id = "L1119"
class
    = "blob-num js-line-number"
    data - line - number = "1119" > < /td>
        < td
    id = "LC1119"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( doc <span class="pl-k">===</s
    pan > document < span
class
    = "pl-k" > || < /span> doc<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > 9 < /span> <span class="pl-k">||</s
    pan > < span
class
    = "pl-k" > ! < /span>doc<span class="pl-k">.</s
    pan > documentElement
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1120"
class
    = "blob-num js-line-number"
    data - line - number = "1120" > < /td>
        < td
    id = "LC1120"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> document;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1121"
class
    = "blob-num js-line-number"
    data - line - number = "1121" > < /td>
        < td
    id = "LC1121"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1122"
class
= "blob-num js-line-number"
data - line - number = "1122" > < /td>
    < td
id = "LC1122"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1123"
class
= "blob-num js-line-number"
data - line - number = "1123" > < /td>
    < td
id = "LC1123"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Update global variables</span></td>
    < /tr>
    < tr >
    < td
id = "L1124"
class
= "blob-num js-line-number"
data - line - number = "1124" > < /td>
    < td
id = "LC1124"
class
= "blob-code blob-code-inner js-file-line" > document < span
class
= "pl-k" >= < /span> doc;</
td >
< /tr>
< tr >
< td
id = "L1125"
class
= "blob-num js-line-number"
data - line - number = "1125" > < /td>
    < td
id = "LC1125"
class
= "blob-code blob-code-inner js-file-line" > docElem < span
class
= "pl-k" >= < /span> document<span class="pl-k">.</s
pan > documentElement;
<
/td>
< /tr>
< tr >
< td
id = "L1126"
class
= "blob-num js-line-number"
data - line - number = "1126" > < /td>
    < td
id = "LC1126"
class
= "blob-code blob-code-inner js-file-line" > documentIsHTML < span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > isXML(document);
<
/td>
< /tr>
< tr >
< td
id = "L1127"
class
= "blob-num js-line-number"
data - line - number = "1127" > < /td>
    < td
id = "LC1127"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1128"
class
= "blob-num js-line-number"
data - line - number = "1128" > < /td>
    < td
id = "LC1128"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE 9-11, Edge</span></td>
    < /tr>
    < tr >
    < td
id = "L1129"
class
= "blob-num js-line-number"
data - line - number = "1129" > < /td>
    < td
id = "LC1129"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Accessing iframe documents after unload throws &quot;permission denied&quot; errors (jQuery #13936)</span></td>
    < /tr>
    < tr >
    < td
id = "L1130"
class
= "blob-num js-line-number"
data - line - number = "1130" > < /td>
    < td
id = "LC1130"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( preferredDoc <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> document <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1131"
class
= "blob-num js-line-number"
data - line - number = "1131" > < /td>
    < td
id = "LC1131"
class
= "blob-code blob-code-inner js-file-line" > (subWindow < span
class
= "pl-k" >= < /span> document<span class="pl-k">.</s
pan > defaultView
) <
span
class
= "pl-k" > &amp;&amp; < /span> subWindow<span class="pl-k">.</s
pan > top < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > subWindow
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1132"
class
    = "blob-num js-line-number"
    data - line - number = "1132" > < /td>
        < td
    id = "LC1132"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1133"
class
    = "blob-num js-line-number"
    data - line - number = "1133" > < /td>
        < td
    id = "LC1133"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE 11, Edge</span></td>
        < /tr>
        < tr >
        < td
    id = "L1134"
class
    = "blob-num js-line-number"
    data - line - number = "1134" > < /td>
        < td
    id = "LC1134"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( subWindow<span class="pl-k">.</s
    pan > addEventListener
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1135"
class
    = "blob-num js-line-number"
    data - line - number = "1135" > < /td>
        < td
    id = "LC1135"
class
    = "blob-code blob-code-inner js-file-line" > subWindow < span
class
    = "pl-k" >
.<
    /span>addEventListener( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > unload < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >, unloadHandler,
<
    span
class
    = "pl-c1" > false < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L1136"
class
    = "blob-num js-line-number"
    data - line - number = "1136" > < /td>
        < td
    id = "LC1136"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1137"
class
    = "blob-num js-line-number"
    data - line - number = "1137" > < /td>
        < td
    id = "LC1137"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE 9 - 10 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L1138"
class
    = "blob-num js-line-number"
    data - line - number = "1138" > < /td>
        < td
    id = "LC1138"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (subWindow < span
class
= "pl-k" >
.<
/span>attachEvent ) {</
td >
< /tr>
< tr >
< td
id = "L1139"
class
= "blob-num js-line-number"
data - line - number = "1139" > < /td>
    < td
id = "LC1139"
class
= "blob-code blob-code-inner js-file-line" > subWindow < span
class
= "pl-k" >
.<
/span>attachEvent( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > onunload < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, unloadHandler
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1140"
class
= "blob-num js-line-number"
data - line - number = "1140" > < /td>
    < td
id = "LC1140"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1141"
class
= "blob-num js-line-number"
data - line - number = "1141" > < /td>
    < td
id = "LC1141"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1142"
class
= "blob-num js-line-number"
data - line - number = "1142" > < /td>
    < td
id = "LC1142"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1143"
class
= "blob-num js-line-number"
data - line - number = "1143" > < /td>
    < td
id = "LC1143"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> Attributes</span></td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 ---------------------------------------------------------------------- <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1145"
class
= "blob-num js-line-number"
data - line - number = "1145" > < /td>
    < td
id = "LC1145"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1146"
class
= "blob-num js-line-number"
data - line - number = "1146" > < /td>
    < td
id = "LC1146"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE&lt;8</span></td>
    < /tr>
    < tr >
    < td
id = "L1147"
class
= "blob-num js-line-number"
data - line - number = "1147" > < /td>
    < td
id = "LC1147"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Verify that getAttribute really returns attributes and not properties</span></td>
    < /tr>
    < tr >
    < td
id = "L1148"
class
= "blob-num js-line-number"
data - line - number = "1148" > < /td>
    < td
id = "LC1148"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (excepting IE8 booleans)</span></td>
    < /tr>
    < tr >
    < td
id = "L1149"
class
= "blob-num js-line-number"
data - line - number = "1149" > < /td>
    < td
id = "LC1149"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>attributes <span class="pl-k">=</s
pan > assert(function (el) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1150"
class
    = "blob-num js-line-number"
    data - line - number = "1150" > < /td>
        < td
    id = "LC1150"
class
    = "blob-code blob-code-inner js-file-line" > el < span
class
    = "pl-k" >
.<
    /span>className <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>i<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1151"
class
    = "blob-num js-line-number"
    data - line - number = "1151" > < /td>
        < td
    id = "LC1151"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">!</s
    pan > el < span
class
    = "pl-k" >
.<
    /span>getAttribute(<span class="pl-s"><span class="pl-pds">&quot;</s
    pan > className < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
);
<
/td>
< /tr>
< tr >
< td
id = "L1152"
class
= "blob-num js-line-number"
data - line - number = "1152" > < /td>
    < td
id = "LC1152"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L1153"
class
= "blob-num js-line-number"
data - line - number = "1153" > < /td>
    < td
id = "LC1153"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1154"
class
= "blob-num js-line-number"
data - line - number = "1154" > < /td>
    < td
id = "LC1154"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> getElement(s)By*</span></td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 ---------------------------------------------------------------------- <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1156"
class
= "blob-num js-line-number"
data - line - number = "1156" > < /td>
    < td
id = "LC1156"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1157"
class
= "blob-num js-line-number"
data - line - number = "1157" > < /td>
    < td
id = "LC1157"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check if getElementsByTagName(&quot;*&quot;) returns only elements</span></td>
    < /tr>
    < tr >
    < td
id = "L1158"
class
= "blob-num js-line-number"
data - line - number = "1158" > < /td>
    < td
id = "LC1158"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>getElementsByTagName <span class="pl-k">=</s
pan > assert(function (el) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1159"
class
    = "blob-num js-line-number"
    data - line - number = "1159" > < /td>
        < td
    id = "LC1159"
class
    = "blob-code blob-code-inner js-file-line" > el < span
class
    = "pl-k" >
.<
    /span>appendChild( document<span class="pl-k">.</s
    pan > createComment( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span><span class="pl-pds">&quot;</s
    pan > < /span>) );</
    td >
    < /tr>
    < tr >
    < td
    id = "L1160"
class
    = "blob-num js-line-number"
    data - line - number = "1160" > < /td>
        < td
    id = "LC1160"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">!</s
    pan > el < span
class
    = "pl-k" >
.<
    /span>getElementsByTagName(<span class="pl-s"><span class="pl-pds">&quot;</s
    pan > * < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)<
    span
class
    = "pl-k" >
.<
    /span>length;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1161"
class
    = "blob-num js-line-number"
    data - line - number = "1161" > < /td>
        < td
    id = "LC1161"
class
    = "blob-code blob-code-inner js-file-line" >
});
<
/td>
< /tr>
< tr >
< td
id = "L1162"
class
= "blob-num js-line-number"
data - line - number = "1162" > < /td>
    < td
id = "LC1162"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1163"
class
= "blob-num js-line-number"
data - line - number = "1163" > < /td>
    < td
id = "LC1163"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE&lt;9</span></td>
    < /tr>
    < tr >
    < td
id = "L1164"
class
= "blob-num js-line-number"
data - line - number = "1164" > < /td>
    < td
id = "LC1164"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>getElementsByClassName <span class="pl-k">=</s
pan > rnative < span
class
= "pl-k" >
.<
/span>test( document<span class="pl-k">.</s
pan > getElementsByClassName
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1165"
class
= "blob-num js-line-number"
data - line - number = "1165" > < /td>
    < td
id = "LC1165"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1166"
class
= "blob-num js-line-number"
data - line - number = "1166" > < /td>
    < td
id = "LC1166"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE&lt;10</span></td>
    < /tr>
    < tr >
    < td
id = "L1167"
class
= "blob-num js-line-number"
data - line - number = "1167" > < /td>
    < td
id = "LC1167"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check if getElementById returns elements by name</span></td>
    < /tr>
    < tr >
    < td
id = "L1168"
class
= "blob-num js-line-number"
data - line - number = "1168" > < /td>
    < td
id = "LC1168"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The broken getElementById methods don&#39;t pick up programmatically-set names,</span></td>
    < /tr>
    < tr >
    < td
id = "L1169"
class
= "blob-num js-line-number"
data - line - number = "1169" > < /td>
    < td
id = "LC1169"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> so use a roundabout getElementsByName test</span></td>
    < /tr>
    < tr >
    < td
id = "L1170"
class
= "blob-num js-line-number"
data - line - number = "1170" > < /td>
    < td
id = "LC1170"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>getById <span class="pl-k">=</s
pan > assert(function (el) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1171"
class
    = "blob-num js-line-number"
    data - line - number = "1171" > < /td>
        < td
    id = "LC1171"
class
    = "blob-code blob-code-inner js-file-line" > docElem < span
class
    = "pl-k" >
.<
    /span>appendChild( el )<span class="pl-k">.</s
    pan > id < span
class
    = "pl-k" >= < /span> expando;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1172"
class
    = "blob-num js-line-number"
    data - line - number = "1172" > < /td>
        < td
    id = "LC1172"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">!</s
    pan > document < span
class
    = "pl-k" >
.<
    /span>getElementsByName <span class="pl-k">||</s
    pan > < span
class
    = "pl-k" > ! < /span>document<span class="pl-k">.</s
    pan > getElementsByName(expando) < span
class
    = "pl-k" >
.<
    /span>length;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1173"
class
    = "blob-num js-line-number"
    data - line - number = "1173" > < /td>
        < td
    id = "LC1173"
class
    = "blob-code blob-code-inner js-file-line" >
});
<
/td>
< /tr>
< tr >
< td
id = "L1174"
class
= "blob-num js-line-number"
data - line - number = "1174" > < /td>
    < td
id = "LC1174"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1175"
class
= "blob-num js-line-number"
data - line - number = "1175" > < /td>
    < td
id = "LC1175"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ID filter and find</span></td>
    < /tr>
    < tr >
    < td
id = "L1176"
class
= "blob-num js-line-number"
data - line - number = "1176" > < /td>
    < td
id = "LC1176"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( support<span class="pl-k">.</s
pan > getById
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1177"
class
    = "blob-num js-line-number"
    data - line - number = "1177" > < /td>
        < td
    id = "LC1177"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-smi" > Expr < /span><span class="pl-k">.</s
    pan > filter[ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>ID<span class="pl-pds">&quot;</s
    pan > < /span>] <span class="pl-k">=</s
    pan > function (id) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1178"
    class
        = "blob-num js-line-number"
        data - line - number = "1178" > < /td>
            < td
        id = "LC1178"
    class
        = "blob-code blob-code-inner js-file-line" >
        var attrId
    <
        span
    class
        = "pl-k" >= < /span> id<span class="pl-k">.</s
        pan > replace(runescape, funescape);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1179"
    class
        = "blob-num js-line-number"
        data - line - number = "1179" > < /td>
            < td
        id = "LC1179"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> function( elem ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L1180"
    class
        = "blob-num js-line-number"
        data - line - number = "1180" > < /td>
            < td
        id = "LC1180"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> elem<span class="pl-k">.</s
        pan > getAttribute( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>id<span class="pl-pds">&quot;</s
        pan > < /span>) <span class="pl-k">===</s
        pan > attrId;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1181"
    class
        = "blob-num js-line-number"
        data - line - number = "1181" > < /td>
            < td
        id = "LC1181"
    class
        = "blob-code blob-code-inner js-file-line" >
    };
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1182"
class
    = "blob-num js-line-number"
    data - line - number = "1182" > < /td>
        < td
    id = "LC1182"
class
    = "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1183"
class
= "blob-num js-line-number"
data - line - number = "1183" > < /td>
    < td
id = "LC1183"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > find[ < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ID<span class="pl-pds">&quot;</s
pan > < /span>] <span class="pl-k">=</s
pan > function (id, context) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1184"
class
    = "blob-num js-line-number"
    data - line - number = "1184" > < /td>
        < td
    id = "LC1184"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof context<span class="pl-k">.</s
    pan > getElementById < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>undefined<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > documentIsHTML
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1185"
class
    = "blob-num js-line-number"
    data - line - number = "1185" > < /td>
        < td
    id = "LC1185"
class
    = "blob-code blob-code-inner js-file-line" >
    var elem
<
    span
class
    = "pl-k" >= < /span> context<span class="pl-k">.</s
    pan > getElementById(id);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1186"
class
    = "blob-num js-line-number"
    data - line - number = "1186" > < /td>
        < td
    id = "LC1186"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem <span class="pl-k">?</s
    pan > [elem] < span
class
    = "pl-k" >
:<
    /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L1187"
class
    = "blob-num js-line-number"
    data - line - number = "1187" > < /td>
        < td
    id = "LC1187"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1188"
class
= "blob-num js-line-number"
data - line - number = "1188" > < /td>
    < td
id = "LC1188"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1189"
class
= "blob-num js-line-number"
data - line - number = "1189" > < /td>
    < td
id = "LC1189"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L1190"
class
= "blob-num js-line-number"
data - line - number = "1190" > < /td>
    < td
id = "LC1190"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > filter[ < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ID<span class="pl-pds">&quot;</s
pan > < /span>] <span class="pl-k">=</s
pan > function (id) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1191"
class
    = "blob-num js-line-number"
    data - line - number = "1191" > < /td>
        < td
    id = "LC1191"
class
    = "blob-code blob-code-inner js-file-line" >
    var attrId
<
    span
class
    = "pl-k" >= < /span> id<span class="pl-k">.</s
    pan > replace(runescape, funescape);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1192"
class
    = "blob-num js-line-number"
    data - line - number = "1192" > < /td>
        < td
    id = "LC1192"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> function( elem ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1193"
class
    = "blob-num js-line-number"
    data - line - number = "1193" > < /td>
        < td
    id = "LC1193"
class
    = "blob-code blob-code-inner js-file-line" >
    var node
<
    span
class
    = "pl-k" >= < /span> typeof elem<span class="pl-k">.</s
    pan > getAttributeNode < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>undefined<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1194"
class
    = "blob-num js-line-number"
    data - line - number = "1194" > < /td>
        < td
    id = "LC1194"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>getAttributeNode(<span class="pl-s"><span class="pl-pds">&quot;</s
    pan > id < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
);
<
/td>
< /tr>
< tr >
< td
id = "L1195"
class
= "blob-num js-line-number"
data - line - number = "1195" > < /td>
    < td
id = "LC1195"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> node <span class="pl-k">&amp;&amp;</s
pan > node < span
class
= "pl-k" >
.<
/span>value <span class="pl-k">===</s
pan > attrId;
<
/td>
< /tr>
< tr >
< td
id = "L1196"
class
= "blob-num js-line-number"
data - line - number = "1196" > < /td>
    < td
id = "LC1196"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1197"
class
= "blob-num js-line-number"
data - line - number = "1197" > < /td>
    < td
id = "LC1197"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1198"
class
= "blob-num js-line-number"
data - line - number = "1198" > < /td>
    < td
id = "LC1198"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1199"
class
= "blob-num js-line-number"
data - line - number = "1199" > < /td>
    < td
id = "LC1199"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE 6 - 7 only</span></td>
    < /tr>
    < tr >
    < td
id = "L1200"
class
= "blob-num js-line-number"
data - line - number = "1200" > < /td>
    < td
id = "LC1200"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> getElementById is not reliable as a find shortcut</span></td>
    < /tr>
    < tr >
    < td
id = "L1201"
class
= "blob-num js-line-number"
data - line - number = "1201" > < /td>
    < td
id = "LC1201"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > find[ < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ID<span class="pl-pds">&quot;</s
pan > < /span>] <span class="pl-k">=</s
pan > function (id, context) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1202"
class
    = "blob-num js-line-number"
    data - line - number = "1202" > < /td>
        < td
    id = "LC1202"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof context<span class="pl-k">.</s
    pan > getElementById < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>undefined<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > documentIsHTML
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1203"
class
    = "blob-num js-line-number"
    data - line - number = "1203" > < /td>
        < td
    id = "LC1203"
class
    = "blob-code blob-code-inner js-file-line" >
    var node, i, elems, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L1204"
class
    = "blob-num js-line-number"
    data - line - number = "1204" > < /td>
        < td
    id = "LC1204"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >= < /span> context<span class="pl-k">.</s
    pan > getElementById(id);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1205"
class
    = "blob-num js-line-number"
    data - line - number = "1205" > < /td>
        < td
    id = "LC1205"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1206"
class
    = "blob-num js-line-number"
    data - line - number = "1206" > < /td>
        < td
    id = "LC1206"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1207"
class
    = "blob-num js-line-number"
    data - line - number = "1207" > < /td>
        < td
    id = "LC1207"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1208"
class
    = "blob-num js-line-number"
    data - line - number = "1208" > < /td>
        < td
    id = "LC1208"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Verify the id attribute</span></td>
        < /tr>
        < tr >
        < td
    id = "L1209"
class
    = "blob-num js-line-number"
    data - line - number = "1209" > < /td>
        < td
    id = "LC1209"
class
    = "blob-code blob-code-inner js-file-line" > node < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > getAttributeNode( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>id<span class="pl-pds">&quot;</s
    pan > < /span>);</
    td >
    < /tr>
    < tr >
    < td
    id = "L1210"
class
    = "blob-num js-line-number"
    data - line - number = "1210" > < /td>
        < td
    id = "LC1210"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( node <span class="pl-k">&amp;&amp;</s
    pan > node < span
class
    = "pl-k" >
.<
    /span>value <span class="pl-k">===</s
    pan > id
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1211"
    class
        = "blob-num js-line-number"
        data - line - number = "1211" > < /td>
            < td
        id = "LC1211"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> [ elem ];</
        td >
        < /tr>
        < tr >
        < td
        id = "L1212"
    class
        = "blob-num js-line-number"
        data - line - number = "1212" > < /td>
            < td
        id = "LC1212"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1213"
class
    = "blob-num js-line-number"
    data - line - number = "1213" > < /td>
        < td
    id = "LC1213"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1214"
class
    = "blob-num js-line-number"
    data - line - number = "1214" > < /td>
        < td
    id = "LC1214"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Fall back on getElementsByName</span></td>
        < /tr>
        < tr >
        < td
    id = "L1215"
class
    = "blob-num js-line-number"
    data - line - number = "1215" > < /td>
        < td
    id = "LC1215"
class
    = "blob-code blob-code-inner js-file-line" > elems < span
class
    = "pl-k" >= < /span> context<span class="pl-k">.</s
    pan > getElementsByName(id);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1216"
class
    = "blob-num js-line-number"
    data - line - number = "1216" > < /td>
        < td
    id = "LC1216"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1217"
class
    = "blob-num js-line-number"
    data - line - number = "1217" > < /td>
        < td
    id = "LC1217"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( (elem <span class="pl-k">=</s
    pan > elems[i < span
class
    = "pl-k" > ++ < /span>]) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1218"
class
    = "blob-num js-line-number"
    data - line - number = "1218" > < /td>
        < td
    id = "LC1218"
class
    = "blob-code blob-code-inner js-file-line" > node < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > getAttributeNode( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>id<span class="pl-pds">&quot;</s
    pan > < /span>);</
    td >
    < /tr>
    < tr >
    < td
    id = "L1219"
class
    = "blob-num js-line-number"
    data - line - number = "1219" > < /td>
        < td
    id = "LC1219"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( node <span class="pl-k">&amp;&amp;</s
    pan > node < span
class
    = "pl-k" >
.<
    /span>value <span class="pl-k">===</s
    pan > id
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1220"
    class
        = "blob-num js-line-number"
        data - line - number = "1220" > < /td>
            < td
        id = "LC1220"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> [ elem ];</
        td >
        < /tr>
        < tr >
        < td
        id = "L1221"
    class
        = "blob-num js-line-number"
        data - line - number = "1221" > < /td>
            < td
        id = "LC1221"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1222"
class
    = "blob-num js-line-number"
    data - line - number = "1222" > < /td>
        < td
    id = "LC1222"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1223"
class
= "blob-num js-line-number"
data - line - number = "1223" > < /td>
    < td
id = "LC1223"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1224"
class
= "blob-num js-line-number"
data - line - number = "1224" > < /td>
    < td
id = "LC1224"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1225"
class
= "blob-num js-line-number"
data - line - number = "1225" > < /td>
    < td
id = "LC1225"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> [];</
td >
< /tr>
< tr >
< td
id = "L1226"
class
= "blob-num js-line-number"
data - line - number = "1226" > < /td>
    < td
id = "LC1226"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1227"
class
= "blob-num js-line-number"
data - line - number = "1227" > < /td>
    < td
id = "LC1227"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1228"
class
= "blob-num js-line-number"
data - line - number = "1228" > < /td>
    < td
id = "LC1228"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1229"
class
= "blob-num js-line-number"
data - line - number = "1229" > < /td>
    < td
id = "LC1229"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1230"
class
= "blob-num js-line-number"
data - line - number = "1230" > < /td>
    < td
id = "LC1230"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Tag</span></td>
    < /tr>
    < tr >
    < td
id = "L1231"
class
= "blob-num js-line-number"
data - line - number = "1231" > < /td>
    < td
id = "LC1231"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > find[ < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>TAG<span class="pl-pds">&quot;</s
pan > < /span>] <span class="pl-k">=</s
pan > support < span
class
= "pl-k" >
.<
/span>getElementsByTagName <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1232"
class
= "blob-num js-line-number"
data - line - number = "1232" > < /td>
    < td
id = "LC1232"
class
= "blob-code blob-code-inner js-file-line" > function (tag, context) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1233"
class
    = "blob-num js-line-number"
    data - line - number = "1233" > < /td>
        < td
    id = "LC1233"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof context<span class="pl-k">.</s
    pan > getElementsByTagName < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>undefined<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1234"
class
    = "blob-num js-line-number"
    data - line - number = "1234" > < /td>
        < td
    id = "LC1234"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> context<span class="pl-k">.</s
    pan > getElementsByTagName(tag);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1235"
class
    = "blob-num js-line-number"
    data - line - number = "1235" > < /td>
        < td
    id = "LC1235"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1236"
class
    = "blob-num js-line-number"
    data - line - number = "1236" > < /td>
        < td
    id = "LC1236"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> DocumentFragment nodes don&#39;t have gEBTN</span></td>
        < /tr>
        < tr >
        < td
    id = "L1237"
class
    = "blob-num js-line-number"
    data - line - number = "1237" > < /td>
        < td
    id = "LC1237"
class
    = "blob-code blob-code-inner js-file-line" >
} < span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (support < span
class
= "pl-k" >
.<
/span>qsa ) {</
td >
< /tr>
< tr >
< td
id = "L1238"
class
= "blob-num js-line-number"
data - line - number = "1238" > < /td>
    < td
id = "LC1238"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> context<span class="pl-k">.</s
pan > querySelectorAll(tag);
<
/td>
< /tr>
< tr >
< td
id = "L1239"
class
= "blob-num js-line-number"
data - line - number = "1239" > < /td>
    < td
id = "LC1239"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1240"
class
= "blob-num js-line-number"
data - line - number = "1240" > < /td>
    < td
id = "LC1240"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1241"
class
= "blob-num js-line-number"
data - line - number = "1241" > < /td>
    < td
id = "LC1241"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1242"
class
= "blob-num js-line-number"
data - line - number = "1242" > < /td>
    < td
id = "LC1242"
class
= "blob-code blob-code-inner js-file-line" > function (tag, context) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1243"
class
    = "blob-num js-line-number"
    data - line - number = "1243" > < /td>
        < td
    id = "LC1243"
class
    = "blob-code blob-code-inner js-file-line" >
    var elem, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L1244"
class
    = "blob-num js-line-number"
    data - line - number = "1244" > < /td>
        < td
    id = "LC1244"
class
    = "blob-code blob-code-inner js-file-line" > tmp < span
class
    = "pl-k" >= < /span> [],</
    td >
    < /tr>
    < tr >
    < td
    id = "L1245"
class
    = "blob-num js-line-number"
    data - line - number = "1245" > < /td>
        < td
    id = "LC1245"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1246"
class
    = "blob-num js-line-number"
    data - line - number = "1246" > < /td>
        < td
    id = "LC1246"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too</span></td>
        < /tr>
        < tr >
        < td
    id = "L1247"
class
    = "blob-num js-line-number"
    data - line - number = "1247" > < /td>
        < td
    id = "LC1247"
class
    = "blob-code blob-code-inner js-file-line" > results < span
class
    = "pl-k" >= < /span> context<span class="pl-k">.</s
    pan > getElementsByTagName(tag);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1248"
class
    = "blob-num js-line-number"
    data - line - number = "1248" > < /td>
        < td
    id = "LC1248"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1249"
class
    = "blob-num js-line-number"
    data - line - number = "1249" > < /td>
        < td
    id = "LC1249"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Filter out possible comments</span></td>
        < /tr>
        < tr >
        < td
    id = "L1250"
class
    = "blob-num js-line-number"
    data - line - number = "1250" > < /td>
        < td
    id = "LC1250"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( tag <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>*<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1251"
class
    = "blob-num js-line-number"
    data - line - number = "1251" > < /td>
        < td
    id = "LC1251"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( (elem <span class="pl-k">=</s
    pan > results[i < span
class
    = "pl-k" > ++ < /span>]) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1252"
class
    = "blob-num js-line-number"
    data - line - number = "1252" > < /td>
        < td
    id = "LC1252"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1253"
class
    = "blob-num js-line-number"
    data - line - number = "1253" > < /td>
        < td
    id = "LC1253"
class
    = "blob-code blob-code-inner js-file-line" > tmp < span
class
    = "pl-k" >
.<
    /span>push( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L1254"
class
    = "blob-num js-line-number"
    data - line - number = "1254" > < /td>
        < td
    id = "LC1254"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1255"
class
= "blob-num js-line-number"
data - line - number = "1255" > < /td>
    < td
id = "LC1255"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1256"
class
= "blob-num js-line-number"
data - line - number = "1256" > < /td>
    < td
id = "LC1256"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1257"
class
= "blob-num js-line-number"
data - line - number = "1257" > < /td>
    < td
id = "LC1257"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> tmp;</
td >
< /tr>
< tr >
< td
id = "L1258"
class
= "blob-num js-line-number"
data - line - number = "1258" > < /td>
    < td
id = "LC1258"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1259"
class
= "blob-num js-line-number"
data - line - number = "1259" > < /td>
    < td
id = "LC1259"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> results;</
td >
< /tr>
< tr >
< td
id = "L1260"
class
= "blob-num js-line-number"
data - line - number = "1260" > < /td>
    < td
id = "LC1260"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1261"
class
= "blob-num js-line-number"
data - line - number = "1261" > < /td>
    < td
id = "LC1261"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1262"
class
= "blob-num js-line-number"
data - line - number = "1262" > < /td>
    < td
id = "LC1262"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Class</span></td>
    < /tr>
    < tr >
    < td
id = "L1263"
class
= "blob-num js-line-number"
data - line - number = "1263" > < /td>
    < td
id = "LC1263"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > find[ < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>CLASS<span class="pl-pds">&quot;</s
pan > < /span>] <span class="pl-k">=</s
pan > support < span
class
= "pl-k" >
.<
/span>getElementsByClassName <span class="pl-k">&amp;&amp;</s
pan > function (className, context) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1264"
class
    = "blob-num js-line-number"
    data - line - number = "1264" > < /td>
        < td
    id = "LC1264"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof context<span class="pl-k">.</s
    pan > getElementsByClassName < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>undefined<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > documentIsHTML
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1265"
class
    = "blob-num js-line-number"
    data - line - number = "1265" > < /td>
        < td
    id = "LC1265"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> context<span class="pl-k">.</s
    pan > getElementsByClassName(className);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1266"
class
    = "blob-num js-line-number"
    data - line - number = "1266" > < /td>
        < td
    id = "LC1266"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1267"
class
= "blob-num js-line-number"
data - line - number = "1267" > < /td>
    < td
id = "LC1267"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1268"
class
= "blob-num js-line-number"
data - line - number = "1268" > < /td>
    < td
id = "LC1268"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1269"
class
= "blob-num js-line-number"
data - line - number = "1269" > < /td>
    < td
id = "LC1269"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> QSA/matchesSelector</span></td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 ---------------------------------------------------------------------- <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1271"
class
= "blob-num js-line-number"
data - line - number = "1271" > < /td>
    < td
id = "LC1271"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1272"
class
= "blob-num js-line-number"
data - line - number = "1272" > < /td>
    < td
id = "LC1272"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> QSA and matchesSelector support</span></td>
    < /tr>
    < tr >
    < td
id = "L1273"
class
= "blob-num js-line-number"
data - line - number = "1273" > < /td>
    < td
id = "LC1273"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1274"
class
= "blob-num js-line-number"
data - line - number = "1274" > < /td>
    < td
id = "LC1274"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> matchesSelector(:active) reports false when true (IE9/Opera 11.5)</span></td>
    < /tr>
    < tr >
    < td
id = "L1275"
class
= "blob-num js-line-number"
data - line - number = "1275" > < /td>
    < td
id = "LC1275"
class
= "blob-code blob-code-inner js-file-line" > rbuggyMatches < span
class
= "pl-k" >= < /span> [];</
td >
< /tr>
< tr >
< td
id = "L1276"
class
= "blob-num js-line-number"
data - line - number = "1276" > < /td>
    < td
id = "LC1276"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1277"
class
= "blob-num js-line-number"
data - line - number = "1277" > < /td>
    < td
id = "LC1277"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> qSa(:focus) reports false when true (Chrome 21)</span></td>
    < /tr>
    < tr >
    < td
id = "L1278"
class
= "blob-num js-line-number"
data - line - number = "1278" > < /td>
    < td
id = "LC1278"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> We allow this because of a bug in IE8/9 that throws an error</span></td>
    < /tr>
    < tr >
    < td
id = "L1279"
class
= "blob-num js-line-number"
data - line - number = "1279" > < /td>
    < td
id = "LC1279"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> whenever `document.activeElement` is accessed on an iframe</span></td>
    < /tr>
    < tr >
    < td
id = "L1280"
class
= "blob-num js-line-number"
data - line - number = "1280" > < /td>
    < td
id = "LC1280"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> So, we allow :focus to pass through QSA all the time to avoid the IE error</span></td>
    < /tr>
    < tr >
    < td
id = "L1281"
class
= "blob-num js-line-number"
data - line - number = "1281" > < /td>
    < td
id = "LC1281"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> See https://bugs.jquery.com/ticket/13378</span></td>
    < /tr>
    < tr >
    < td
id = "L1282"
class
= "blob-num js-line-number"
data - line - number = "1282" > < /td>
    < td
id = "LC1282"
class
= "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
class
= "pl-k" >= < /span> [];</
td >
< /tr>
< tr >
< td
id = "L1283"
class
= "blob-num js-line-number"
data - line - number = "1283" > < /td>
    < td
id = "LC1283"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1284"
class
= "blob-num js-line-number"
data - line - number = "1284" > < /td>
    < td
id = "LC1284"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (support<span class="pl-k">.</s
pan > qsa < span
class
= "pl-k" >= < /span> rnative<span class="pl-k">.</s
pan > test(document < span
class
= "pl-k" >
.<
/span>querySelectorAll )) ) {</
td >
< /tr>
< tr >
< td
id = "L1285"
class
= "blob-num js-line-number"
data - line - number = "1285" > < /td>
    < td
id = "LC1285"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Build QSA regex</span></td>
    < /tr>
    < tr >
    < td
id = "L1286"
class
= "blob-num js-line-number"
data - line - number = "1286" > < /td>
    < td
id = "LC1286"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Regex strategy adopted from Diego Perini</span></td>
    < /tr>
    < tr >
    < td
id = "L1287"
class
= "blob-num js-line-number"
data - line - number = "1287" > < /td>
    < td
id = "LC1287"
class
= "blob-code blob-code-inner js-file-line" > assert(function (el) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1288"
class
    = "blob-num js-line-number"
    data - line - number = "1288" > < /td>
        < td
    id = "LC1288"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Select is set to empty string on purpose</span></td>
        < /tr>
        < tr >
        < td
    id = "L1289"
class
    = "blob-num js-line-number"
    data - line - number = "1289" > < /td>
        < td
    id = "LC1289"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> This is to test IE&#39;s treatment of not explicitly</span></td>
        < /tr>
        < tr >
        < td
    id = "L1290"
class
    = "blob-num js-line-number"
    data - line - number = "1290" > < /td>
        < td
    id = "LC1290"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> setting a boolean content attribute,</span></td>
        < /tr>
        < tr >
        < td
    id = "L1291"
class
    = "blob-num js-line-number"
    data - line - number = "1291" > < /td>
        < td
    id = "LC1291"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> since its presence should be enough</span></td>
        < /tr>
        < tr >
        < td
    id = "L1292"
class
    = "blob-num js-line-number"
    data - line - number = "1292" > < /td>
        < td
    id = "LC1292"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> https://bugs.jquery.com/ticket/12359</span></td>
        < /tr>
        < tr >
        < td
    id = "L1293"
class
    = "blob-num js-line-number"
    data - line - number = "1293" > < /td>
        < td
    id = "LC1293"
class
    = "blob-code blob-code-inner js-file-line" > docElem < span
class
    = "pl-k" >
.<
    /span>appendChild( el )<span class="pl-k">.</s
    pan > innerHTML < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > &lt; a
    id =
&
    #39;
<
    span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> expando <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>&#39;&gt;&lt;/
    a &gt; < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L1294"
class
    = "blob-num js-line-number"
    data - line - number = "1294" > < /td>
        < td
    id = "LC1294"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>&lt;select id=&#39;<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > expando < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > - < span
class
    = "pl-cce" >\r\\<
    /span>&#39; msallowcapture=&#39;&#39;&gt;<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1295"
class
    = "blob-num js-line-number"
    data - line - number = "1295" > < /td>
        < td
    id = "LC1295"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>&lt;option selected=&#39;&#39;&gt;&lt;/
    option &gt; &lt; /select&gt;<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1296"
class
    = "blob-num js-line-number"
    data - line - number = "1296" > < /td>
        < td
    id = "LC1296"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1297"
class
    = "blob-num js-line-number"
    data - line - number = "1297" > < /td>
        < td
    id = "LC1297"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE8, Opera 11-12.16</span></td>
        < /tr>
        < tr >
        < td
    id = "L1298"
class
    = "blob-num js-line-number"
    data - line - number = "1298" > < /td>
        < td
    id = "LC1298"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Nothing should be selected when empty strings follow ^= or $= or *=</span></td>
        < /tr>
        < tr >
        < td
    id = "L1299"
class
    = "blob-num js-line-number"
    data - line - number = "1299" > < /td>
        < td
    id = "LC1299"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> The test attribute must be unknown in Opera but &quot;safe&quot; for WinRT</span></td>
        < /tr>
        < tr >
        < td
    id = "L1300"
class
    = "blob-num js-line-number"
    data - line - number = "1300" > < /td>
        < td
    id = "LC1300"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section</span></td>
        < /tr>
        < tr >
        < td
    id = "L1301"
class
    = "blob-num js-line-number"
    data - line - number = "1301" > < /td>
        < td
    id = "LC1301"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( el<span class="pl-k">.</s
    pan > querySelectorAll( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>[msallowcapture^=&#39;&#39;]<span class="pl-pds">&quot;</s
    pan > < /span>)<span class="pl-k">.</s
    pan > length
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1302"
    class
        = "blob-num js-line-number"
        data - line - number = "1302" > < /td>
            < td
        id = "LC1302"
    class
        = "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
    class
        = "pl-k" >
    .<
        /span>push( <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > [ * ^ $
    ]
        =
    <
        span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan > < span
    class
        = "pl-k" > + < /span> whitespace <span class="pl-k">+</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>*(?:&#39;&#39;|<span class="pl-cce">\&quot;\&quot;</s
        pan >
    ) < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1303"
class
= "blob-num js-line-number"
data - line - number = "1303" > < /td>
    < td
id = "LC1303"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1304"
class
= "blob-num js-line-number"
data - line - number = "1304" > < /td>
    < td
id = "LC1304"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1305"
class
= "blob-num js-line-number"
data - line - number = "1305" > < /td>
    < td
id = "LC1305"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE8</span></td>
    < /tr>
    < tr >
    < td
id = "L1306"
class
= "blob-num js-line-number"
data - line - number = "1306" > < /td>
    < td
id = "LC1306"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Boolean attributes and &quot;value&quot; are not treated correctly</span></td>
    < /tr>
    < tr >
    < td
id = "L1307"
class
= "blob-num js-line-number"
data - line - number = "1307" > < /td>
    < td
id = "LC1307"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > el < span
class
= "pl-k" >
.<
/span>querySelectorAll(<span class="pl-s"><span class="pl-pds">&quot;</s
pan > [selected] < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)<
span
class
= "pl-k" >
.<
/span>length ) {</
td >
< /tr>
< tr >
< td
id = "L1308"
class
= "blob-num js-line-number"
data - line - number = "1308" > < /td>
    < td
id = "LC1308"
class
= "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
class
= "pl-k" >
.<
/span>push( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-cce" >\\<
/span>[<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> whitespace <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>*(?:value|<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> booleans <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span> );</td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code blob-code-inner js-file-line">                        }</td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> Support: Chrome&lt;29, Android&lt;4.4, Safari&lt;7.0+, iOS&lt;7.0+, PhantomJS&lt;1.9.8+</span></td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">if</span> ( <span class="pl-k">!</span>el<span class="pl-k">.</span>querySelectorAll( <span class="pl-s"><span class="pl-pds">&quot;</span>[id~=<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> expando <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>-]<span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1313"
class
    = "blob-num js-line-number"
    data - line - number = "1313" > < /td>
        < td
    id = "LC1313"
class
    = "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
class
    = "pl-k" >
.<
    /span>push(<span class="pl-s"><span class="pl-pds">&quot;</s
    pan > ~ =
<
    span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1314"
class
= "blob-num js-line-number"
data - line - number = "1314" > < /td>
    < td
id = "LC1314"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1315"
class
= "blob-num js-line-number"
data - line - number = "1315" > < /td>
    < td
id = "LC1315"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1316"
class
= "blob-num js-line-number"
data - line - number = "1316" > < /td>
    < td
id = "LC1316"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Webkit/Opera - :checked should return selected option elements</span></td>
    < /tr>
    < tr >
    < td
id = "L1317"
class
= "blob-num js-line-number"
data - line - number = "1317" > < /td>
    < td
id = "LC1317"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked</span></td>
    < /tr>
    < tr >
    < td
id = "L1318"
class
= "blob-num js-line-number"
data - line - number = "1318" > < /td>
    < td
id = "LC1318"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> IE8 throws error here and will not see later tests</span></td>
    < /tr>
    < tr >
    < td
id = "L1319"
class
= "blob-num js-line-number"
data - line - number = "1319" > < /td>
    < td
id = "LC1319"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > el < span
class
= "pl-k" >
.<
/span>querySelectorAll(<span class="pl-s"><span class="pl-pds">&quot;</s
pan >
:
checked < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)<
span
class
= "pl-k" >
.<
/span>length ) {</
td >
< /tr>
< tr >
< td
id = "L1320"
class
= "blob-num js-line-number"
data - line - number = "1320" > < /td>
    < td
id = "LC1320"
class
= "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
class
= "pl-k" >
.<
/span>push(<span class="pl-s"><span class="pl-pds">&quot;</s
pan >
:
checked < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1321"
class
= "blob-num js-line-number"
data - line - number = "1321" > < /td>
    < td
id = "LC1321"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1322"
class
= "blob-num js-line-number"
data - line - number = "1322" > < /td>
    < td
id = "LC1322"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1323"
class
= "blob-num js-line-number"
data - line - number = "1323" > < /td>
    < td
id = "LC1323"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Safari 8+, iOS 8+</span></td>
    < /tr>
    < tr >
    < td
id = "L1324"
class
= "blob-num js-line-number"
data - line - number = "1324" > < /td>
    < td
id = "LC1324"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://bugs.webkit.org/show_bug.cgi?id=136851</span></td>
    < /tr>
    < tr >
    < td
id = "L1325"
class
= "blob-num js-line-number"
data - line - number = "1325" > < /td>
    < td
id = "LC1325"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> In-page `selector#id sibling-combinator selector` fails</span></td>
    < /tr>
    < tr >
    < td
id = "L1326"
class
= "blob-num js-line-number"
data - line - number = "1326" > < /td>
    < td
id = "LC1326"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > el < span
class
= "pl-k" >
.<
/span>querySelectorAll( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > a
# < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> expando <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>+*<span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1327"
class
    = "blob-num js-line-number"
    data - line - number = "1327" > < /td>
        < td
    id = "LC1327"
class
    = "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
class
    = "pl-k" >
.<
    /span>push(<span class="pl-s"><span class="pl-pds">&quot;</s
    pan >
.
    #. + [+~] < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1328"
class
= "blob-num js-line-number"
data - line - number = "1328" > < /td>
    < td
id = "LC1328"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1329"
class
= "blob-num js-line-number"
data - line - number = "1329" > < /td>
    < td
id = "LC1329"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L1330"
class
= "blob-num js-line-number"
data - line - number = "1330" > < /td>
    < td
id = "LC1330"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1331"
class
= "blob-num js-line-number"
data - line - number = "1331" > < /td>
    < td
id = "LC1331"
class
= "blob-code blob-code-inner js-file-line" > assert(function (el) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1332"
    class
        = "blob-num js-line-number"
        data - line - number = "1332" > < /td>
            < td
        id = "LC1332"
    class
        = "blob-code blob-code-inner js-file-line" > el < span
    class
        = "pl-k" >
    .<
        /span>innerHTML <span class="pl-k">=</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>&lt;a href=&#39;&#39; disabled=&#39;disabled&#39;&gt;&lt;/
        a &gt; < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan > < span
    class
        = "pl-k" > + < /span></
        td >
        < /tr>
        < tr >
        < td
        id = "L1333"
    class
        = "blob-num js-line-number"
        data - line - number = "1333" > < /td>
            < td
        id = "LC1333"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>&lt;select disabled=&#39;disabled&#39;&gt;&lt;option/ &gt; &lt; /select&gt;<span class="pl-pds">&quot;</s
        pan > < /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L1334"
    class
        = "blob-num js-line-number"
        data - line - number = "1334" > < /td>
            < td
        id = "LC1334"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L1335"
    class
        = "blob-num js-line-number"
        data - line - number = "1335" > < /td>
            < td
        id = "LC1335"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Support: Windows 8 Native Apps</span></td>
            < /tr>
            < tr >
            < td
        id = "L1336"
    class
        = "blob-num js-line-number"
        data - line - number = "1336" > < /td>
            < td
        id = "LC1336"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> The type and name attributes are restricted during .innerHTML assignment</span></td>
            < /tr>
            < tr >
            < td
        id = "L1337"
    class
        = "blob-num js-line-number"
        data - line - number = "1337" > < /td>
            < td
        id = "LC1337"
    class
        = "blob-code blob-code-inner js-file-line" >
        var input
    <
        span
    class
        = "pl-k" >= < /span> document<span class="pl-k">.</s
        pan > createElement( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>input<span class="pl-pds">&quot;</s
        pan > < /span>);</
        td >
        < /tr>
        < tr >
        < td
        id = "L1338"
    class
        = "blob-num js-line-number"
        data - line - number = "1338" > < /td>
            < td
        id = "LC1338"
    class
        = "blob-code blob-code-inner js-file-line" > input < span
    class
        = "pl-k" >
    .<
        /span>setAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > type < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan >,
    <
        span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>hidden<span class="pl-pds">&quot;</s
        pan > < /span> );</
        td >
        < /tr>
        < tr >
        < td
        id = "L1339"
    class
        = "blob-num js-line-number"
        data - line - number = "1339" > < /td>
            < td
        id = "LC1339"
    class
        = "blob-code blob-code-inner js-file-line" > el < span
    class
        = "pl-k" >
    .<
        /span>appendChild( input )<span class="pl-k">.</s
        pan > setAttribute( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>name<span class="pl-pds">&quot;</s
        pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > D < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan >
    )
        ;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1340"
    class
        = "blob-num js-line-number"
        data - line - number = "1340" > < /td>
            < td
        id = "LC1340"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L1341"
    class
        = "blob-num js-line-number"
        data - line - number = "1341" > < /td>
            < td
        id = "LC1341"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Support: IE8</span></td>
            < /tr>
            < tr >
            < td
        id = "L1342"
    class
        = "blob-num js-line-number"
        data - line - number = "1342" > < /td>
            < td
        id = "LC1342"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Enforce case-sensitivity of name attribute</span></td>
            < /tr>
            < tr >
            < td
        id = "L1343"
    class
        = "blob-num js-line-number"
        data - line - number = "1343" > < /td>
            < td
        id = "LC1343"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( el<span class="pl-k">.</s
        pan > querySelectorAll( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>[name=d]<span class="pl-pds">&quot;</s
        pan > < /span>)<span class="pl-k">.</s
        pan > length
    )
        {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L1344"
        class
            = "blob-num js-line-number"
            data - line - number = "1344" > < /td>
                < td
            id = "LC1344"
        class
            = "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
        class
            = "pl-k" >
        .<
            /span>push( <span class="pl-s"><span class="pl-pds">&quot;</s
            pan > name < span
        class
            = "pl-pds" > & quot;
        <
            /span></s
            pan > < span
        class
            = "pl-k" > + < /span> whitespace <span class="pl-k">+</s
            pan > < span
        class
            = "pl-s" > < span
        class
            = "pl-pds" > & quot;
        <
            /span>*[*^$|!~]?=<span class="pl-pds">&quot;</s
            pan > < /span> );</
            td >
            < /tr>
            < tr >
            < td
            id = "L1345"
        class
            = "blob-num js-line-number"
            data - line - number = "1345" > < /td>
                < td
            id = "LC1345"
        class
            = "blob-code blob-code-inner js-file-line" >
        }
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1346"
    class
        = "blob-num js-line-number"
        data - line - number = "1346" > < /td>
            < td
        id = "LC1346"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L1347"
    class
        = "blob-num js-line-number"
        data - line - number = "1347" > < /td>
            < td
        id = "LC1347"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)</span></td>
            < /tr>
            < tr >
            < td
        id = "L1348"
    class
        = "blob-num js-line-number"
        data - line - number = "1348" > < /td>
            < td
        id = "LC1348"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> IE8 throws error here and will not see later tests</span></td>
            < /tr>
            < tr >
            < td
        id = "L1349"
    class
        = "blob-num js-line-number"
        data - line - number = "1349" > < /td>
            < td
        id = "LC1349"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( el<span class="pl-k">.</s
        pan > querySelectorAll( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>:enabled<span class="pl-pds">&quot;</s
        pan > < /span>)<span class="pl-k">.</s
        pan > length < span
    class
        = "pl-k" > != < /span><span class="pl-k">=</s
        pan > < span
    class
        = "pl-c1" > 2 < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L1350"
    class
        = "blob-num js-line-number"
        data - line - number = "1350" > < /td>
            < td
        id = "LC1350"
    class
        = "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
    class
        = "pl-k" >
    .<
        /span>push( <span class="pl-s"><span class="pl-pds">&quot;</s
        pan >
    :
        enabled < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan >,
    <
        span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>:disabled<span class="pl-pds">&quot;</s
        pan > < /span> );</
        td >
        < /tr>
        < tr >
        < td
        id = "L1351"
    class
        = "blob-num js-line-number"
        data - line - number = "1351" > < /td>
            < td
        id = "LC1351"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L1352"
class
= "blob-num js-line-number"
data - line - number = "1352" > < /td>
    < td
id = "LC1352"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1353"
class
= "blob-num js-line-number"
data - line - number = "1353" > < /td>
    < td
id = "LC1353"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE9-11+</span></td>
    < /tr>
    < tr >
    < td
id = "L1354"
class
= "blob-num js-line-number"
data - line - number = "1354" > < /td>
    < td
id = "LC1354"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> IE&#39;s :disabled selector does not pick up the children of disabled fieldsets</span></td>
    < /tr>
    < tr >
    < td
id = "L1355"
class
= "blob-num js-line-number"
data - line - number = "1355" > < /td>
    < td
id = "LC1355"
class
= "blob-code blob-code-inner js-file-line" > docElem < span
class
= "pl-k" >
.<
/span>appendChild( el )<span class="pl-k">.</s
pan > disabled < span
class
= "pl-k" >= < /span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L1356"
class
= "blob-num js-line-number"
data - line - number = "1356" > < /td>
    < td
id = "LC1356"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( el<span class="pl-k">.</s
pan > querySelectorAll( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>:disabled<span class="pl-pds">&quot;</s
pan > < /span>)<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 2 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L1357"
class
= "blob-num js-line-number"
data - line - number = "1357" > < /td>
    < td
id = "LC1357"
class
= "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
class
= "pl-k" >
.<
/span>push( <span class="pl-s"><span class="pl-pds">&quot;</s
pan >
:
enabled < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>:disabled<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L1358"
class
= "blob-num js-line-number"
data - line - number = "1358" > < /td>
    < td
id = "LC1358"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1359"
class
= "blob-num js-line-number"
data - line - number = "1359" > < /td>
    < td
id = "LC1359"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1360"
class
= "blob-num js-line-number"
data - line - number = "1360" > < /td>
    < td
id = "LC1360"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Opera 10-11 does not throw on post-comma invalid pseudos</span></td>
    < /tr>
    < tr >
    < td
id = "L1361"
class
= "blob-num js-line-number"
data - line - number = "1361" > < /td>
    < td
id = "LC1361"
class
= "blob-code blob-code-inner js-file-line" > el < span
class
= "pl-k" >
.<
/span>querySelectorAll(<span class="pl-s"><span class="pl-pds">&quot;</s
pan > *,
:
x < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1362"
class
= "blob-num js-line-number"
data - line - number = "1362" > < /td>
    < td
id = "LC1362"
class
= "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
class
= "pl-k" >
.<
/span>push(<span class="pl-s"><span class="pl-pds">&quot;</s
pan >,
.*:<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1363"
class
= "blob-num js-line-number"
data - line - number = "1363" > < /td>
    < td
id = "LC1363"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L1364"
class
= "blob-num js-line-number"
data - line - number = "1364" > < /td>
    < td
id = "LC1364"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1365"
class
= "blob-num js-line-number"
data - line - number = "1365" > < /td>
    < td
id = "LC1365"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1366"
class
= "blob-num js-line-number"
data - line - number = "1366" > < /td>
    < td
id = "LC1366"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (support<span class="pl-k">.</s
pan > matchesSelector < span
class
= "pl-k" >= < /span> rnative<span class="pl-k">.</s
pan > test((matches < span
class
= "pl-k" >= < /span> docElem<span class="pl-k">.</s
pan > matches < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L1367"
class
= "blob-num js-line-number"
data - line - number = "1367" > < /td>
    < td
id = "LC1367"
class
= "blob-code blob-code-inner js-file-line" > docElem < span
class
= "pl-k" >
.<
/span>webkitMatchesSelector <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1368"
class
= "blob-num js-line-number"
data - line - number = "1368" > < /td>
    < td
id = "LC1368"
class
= "blob-code blob-code-inner js-file-line" > docElem < span
class
= "pl-k" >
.<
/span>mozMatchesSelector <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1369"
class
= "blob-num js-line-number"
data - line - number = "1369" > < /td>
    < td
id = "LC1369"
class
= "blob-code blob-code-inner js-file-line" > docElem < span
class
= "pl-k" >
.<
/span>oMatchesSelector <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1370"
class
= "blob-num js-line-number"
data - line - number = "1370" > < /td>
    < td
id = "LC1370"
class
= "blob-code blob-code-inner js-file-line" > docElem < span
class
= "pl-k" >
.<
/span>msMatchesSelector) )) ) {</
td >
< /tr>
< tr >
< td
id = "L1371"
class
= "blob-num js-line-number"
data - line - number = "1371" > < /td>
    < td
id = "LC1371"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1372"
class
= "blob-num js-line-number"
data - line - number = "1372" > < /td>
    < td
id = "LC1372"
class
= "blob-code blob-code-inner js-file-line" > assert(function (el) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1373"
class
    = "blob-num js-line-number"
    data - line - number = "1373" > < /td>
        < td
    id = "LC1373"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Check to see if it&#39;s possible to do matchesSelector</span></td>
        < /tr>
        < tr >
        < td
    id = "L1374"
class
    = "blob-num js-line-number"
    data - line - number = "1374" > < /td>
        < td
    id = "LC1374"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> on a disconnected node (IE 9)</span></td>
        < /tr>
        < tr >
        < td
    id = "L1375"
class
    = "blob-num js-line-number"
    data - line - number = "1375" > < /td>
        < td
    id = "LC1375"
class
    = "blob-code blob-code-inner js-file-line" > support < span
class
    = "pl-k" >
.<
    /span>disconnectedMatch <span class="pl-k">=</s
    pan > matches < span
class
    = "pl-k" >
.<
    /span>call( el, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > * < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
);
<
/td>
< /tr>
< tr >
< td
id = "L1376"
class
= "blob-num js-line-number"
data - line - number = "1376" > < /td>
    < td
id = "LC1376"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1377"
class
= "blob-num js-line-number"
data - line - number = "1377" > < /td>
    < td
id = "LC1377"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> This should fail with an exception</span></td>
    < /tr>
    < tr >
    < td
id = "L1378"
class
= "blob-num js-line-number"
data - line - number = "1378" > < /td>
    < td
id = "LC1378"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Gecko does not error, returns false instead</span></td>
    < /tr>
    < tr >
    < td
id = "L1379"
class
= "blob-num js-line-number"
data - line - number = "1379" > < /td>
    < td
id = "LC1379"
class
= "blob-code blob-code-inner js-file-line" > matches < span
class
= "pl-k" >
.<
/span>call( el, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > [s != & #39;
&
#39;
]:
x < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1380"
class
= "blob-num js-line-number"
data - line - number = "1380" > < /td>
    < td
id = "LC1380"
class
= "blob-code blob-code-inner js-file-line" > rbuggyMatches < span
class
= "pl-k" >
.<
/span>push( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > != < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, pseudos
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1381"
class
= "blob-num js-line-number"
data - line - number = "1381" > < /td>
    < td
id = "LC1381"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L1382"
class
= "blob-num js-line-number"
data - line - number = "1382" > < /td>
    < td
id = "LC1382"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1383"
class
= "blob-num js-line-number"
data - line - number = "1383" > < /td>
    < td
id = "LC1383"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1384"
class
= "blob-num js-line-number"
data - line - number = "1384" > < /td>
    < td
id = "LC1384"
class
= "blob-code blob-code-inner js-file-line" > rbuggyQSA < span
class
= "pl-k" >= < /span> rbuggyQSA<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( rbuggyQSA<span class="pl-k">.</s
pan > join( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>|<span class="pl-pds">&quot;</s
pan > < /span>) );</
td >
< /tr>
< tr >
< td
id = "L1385"
class
= "blob-num js-line-number"
data - line - number = "1385" > < /td>
    < td
id = "LC1385"
class
= "blob-code blob-code-inner js-file-line" > rbuggyMatches < span
class
= "pl-k" >= < /span> rbuggyMatches<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( rbuggyMatches<span class="pl-k">.</s
pan > join( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>|<span class="pl-pds">&quot;</s
pan > < /span>) );</
td >
< /tr>
< tr >
< td
id = "L1386"
class
= "blob-num js-line-number"
data - line - number = "1386" > < /td>
    < td
id = "LC1386"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1387"
class
= "blob-num js-line-number"
data - line - number = "1387" > < /td>
    < td
id = "LC1387"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> Contains</span></td>
      </tr>
      <tr>
        <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
        <td id="LC1388" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 ---------------------------------------------------------------------- <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1389"
class
= "blob-num js-line-number"
data - line - number = "1389" > < /td>
    < td
id = "LC1389"
class
= "blob-code blob-code-inner js-file-line" > hasCompare < span
class
= "pl-k" >= < /span> rnative<span class="pl-k">.</s
pan > test(docElem < span
class
= "pl-k" >
.<
/span>compareDocumentPosition );</
td >
< /tr>
< tr >
< td
id = "L1390"
class
= "blob-num js-line-number"
data - line - number = "1390" > < /td>
    < td
id = "LC1390"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1391"
class
= "blob-num js-line-number"
data - line - number = "1391" > < /td>
    < td
id = "LC1391"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Element contains another</span></td>
    < /tr>
    < tr >
    < td
id = "L1392"
class
= "blob-num js-line-number"
data - line - number = "1392" > < /td>
    < td
id = "LC1392"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Purposefully self-exclusive</span></td>
    < /tr>
    < tr >
    < td
id = "L1393"
class
= "blob-num js-line-number"
data - line - number = "1393" > < /td>
    < td
id = "LC1393"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> As in, an element does not contain itself</span></td>
    < /tr>
    < tr >
    < td
id = "L1394"
class
= "blob-num js-line-number"
data - line - number = "1394" > < /td>
    < td
id = "LC1394"
class
= "blob-code blob-code-inner js-file-line" > contains < span
class
= "pl-k" >= < /span> hasCompare <span class="pl-k">||</s
pan > rnative < span
class
= "pl-k" >
.<
/span>test( docElem<span class="pl-k">.</s
pan > contains
) <
span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L1395"
class
= "blob-num js-line-number"
data - line - number = "1395" > < /td>
    < td
id = "LC1395"
class
= "blob-code blob-code-inner js-file-line" > function (a, b) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1396"
class
    = "blob-num js-line-number"
    data - line - number = "1396" > < /td>
        < td
    id = "LC1396"
class
    = "blob-code blob-code-inner js-file-line" >
    var adown
<
    span
class
    = "pl-k" >= < /span> a<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">9</s
    pan > < span
class
    = "pl-k" > ?
<
    /span> a<span class="pl-k">.</s
    pan > documentElement < span
class
    = "pl-k" >
:<
    /span> a,</
    td >
    < /tr>
    < tr >
    < td
    id = "L1397"
class
    = "blob-num js-line-number"
    data - line - number = "1397" > < /td>
        < td
    id = "LC1397"
class
    = "blob-code blob-code-inner js-file-line" > bup < span
class
    = "pl-k" >= < /span> b <span class="pl-k">&amp;&amp;</s
    pan > b < span
class
    = "pl-k" >
.<
    /span>parentNode;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1398"
class
    = "blob-num js-line-number"
    data - line - number = "1398" > < /td>
        < td
    id = "LC1398"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> a <span class="pl-k">===</s
    pan > bup < span
class
    = "pl-k" > || < /span> <span class="pl-k">!!</s
    pan > (bup < span
class
    = "pl-k" > &amp;&amp; < /span> bup<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> (</
    td >
    < /tr>
    < tr >
    < td
    id = "L1399"
class
    = "blob-num js-line-number"
    data - line - number = "1399" > < /td>
        < td
    id = "LC1399"
class
    = "blob-code blob-code-inner js-file-line" > adown < span
class
    = "pl-k" >
.<
    /span>contains <span class="pl-k">?</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1400"
class
    = "blob-num js-line-number"
    data - line - number = "1400" > < /td>
        < td
    id = "LC1400"
class
    = "blob-code blob-code-inner js-file-line" > adown < span
class
    = "pl-k" >
.<
    /span>contains( bup ) <span class="pl-k">:</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1401"
class
    = "blob-num js-line-number"
    data - line - number = "1401" > < /td>
        < td
    id = "LC1401"
class
    = "blob-code blob-code-inner js-file-line" > a < span
class
    = "pl-k" >
.<
    /span>compareDocumentPosition <span class="pl-k">&amp;&amp;</s
    pan > a < span
class
    = "pl-k" >
.<
    /span>compareDocumentPosition( bup ) <span class="pl-k">&amp;</s
    pan > < span
class
    = "pl-c1" > 16 < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L1402"
class
    = "blob-num js-line-number"
    data - line - number = "1402" > < /td>
        < td
    id = "LC1402"
class
    = "blob-code blob-code-inner js-file-line" >
));
<
/td>
< /tr>
< tr >
< td
id = "L1403"
class
= "blob-num js-line-number"
data - line - number = "1403" > < /td>
    < td
id = "LC1403"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1404"
class
= "blob-num js-line-number"
data - line - number = "1404" > < /td>
    < td
id = "LC1404"
class
= "blob-code blob-code-inner js-file-line" > function (a, b) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1405"
class
    = "blob-num js-line-number"
    data - line - number = "1405" > < /td>
        < td
    id = "LC1405"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( b ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1406"
class
    = "blob-num js-line-number"
    data - line - number = "1406" > < /td>
        < td
    id = "LC1406"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( (b <span class="pl-k">=</s
    pan > b < span
class
    = "pl-k" >
.<
    /span>parentNode) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1407"
class
    = "blob-num js-line-number"
    data - line - number = "1407" > < /td>
        < td
    id = "LC1407"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( b <span class="pl-k">===</s
    pan > a
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1408"
class
    = "blob-num js-line-number"
    data - line - number = "1408" > < /td>
        < td
    id = "LC1408"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1409"
class
    = "blob-num js-line-number"
    data - line - number = "1409" > < /td>
        < td
    id = "LC1409"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1410"
class
= "blob-num js-line-number"
data - line - number = "1410" > < /td>
    < td
id = "LC1410"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1411"
class
= "blob-num js-line-number"
data - line - number = "1411" > < /td>
    < td
id = "LC1411"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1412"
class
= "blob-num js-line-number"
data - line - number = "1412" > < /td>
    < td
id = "LC1412"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L1413"
class
= "blob-num js-line-number"
data - line - number = "1413" > < /td>
    < td
id = "LC1413"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1414"
class
= "blob-num js-line-number"
data - line - number = "1414" > < /td>
    < td
id = "LC1414"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1415"
class
= "blob-num js-line-number"
data - line - number = "1415" > < /td>
    < td
id = "LC1415"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> Sorting</span></td>
      </tr>
      <tr>
        <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
        <td id="LC1416" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 ---------------------------------------------------------------------- <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1417"
class
= "blob-num js-line-number"
data - line - number = "1417" > < /td>
    < td
id = "LC1417"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1418"
class
= "blob-num js-line-number"
data - line - number = "1418" > < /td>
    < td
id = "LC1418"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Document order sorting</span></td>
    < /tr>
    < tr >
    < td
id = "L1419"
class
= "blob-num js-line-number"
data - line - number = "1419" > < /td>
    < td
id = "LC1419"
class
= "blob-code blob-code-inner js-file-line" > sortOrder < span
class
= "pl-k" >= < /span> hasCompare <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1420"
class
= "blob-num js-line-number"
data - line - number = "1420" > < /td>
    < td
id = "LC1420"
class
= "blob-code blob-code-inner js-file-line" > function (a, b) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1421"
class
    = "blob-num js-line-number"
    data - line - number = "1421" > < /td>
        < td
    id = "LC1421"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1422"
class
    = "blob-num js-line-number"
    data - line - number = "1422" > < /td>
        < td
    id = "LC1422"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Flag for duplicate removal</span></td>
        < /tr>
        < tr >
        < td
    id = "L1423"
class
    = "blob-num js-line-number"
    data - line - number = "1423" > < /td>
        < td
    id = "LC1423"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( a <span class="pl-k">===</s
    pan > b
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1424"
class
    = "blob-num js-line-number"
    data - line - number = "1424" > < /td>
        < td
    id = "LC1424"
class
    = "blob-code blob-code-inner js-file-line" > hasDuplicate < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1425"
class
    = "blob-num js-line-number"
    data - line - number = "1425" > < /td>
        < td
    id = "LC1425"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1426"
class
    = "blob-num js-line-number"
    data - line - number = "1426" > < /td>
        < td
    id = "LC1426"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1427"
class
= "blob-num js-line-number"
data - line - number = "1427" > < /td>
    < td
id = "LC1427"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1428"
class
= "blob-num js-line-number"
data - line - number = "1428" > < /td>
    < td
id = "LC1428"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Sort on method existence if only one input has compareDocumentPosition</span></td>
    < /tr>
    < tr >
    < td
id = "L1429"
class
= "blob-num js-line-number"
data - line - number = "1429" > < /td>
    < td
id = "LC1429"
class
= "blob-code blob-code-inner js-file-line" >
var compare
<
span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > a < span
class
= "pl-k" >
.<
/span>compareDocumentPosition <span class="pl-k">-</s
pan > < span
class
= "pl-k" > ! < /span>b<span class="pl-k">.</s
pan > compareDocumentPosition;
<
/td>
< /tr>
< tr >
< td
id = "L1430"
class
= "blob-num js-line-number"
data - line - number = "1430" > < /td>
    < td
id = "LC1430"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( compare ) {</
td >
< /tr>
< tr >
< td
id = "L1431"
class
= "blob-num js-line-number"
data - line - number = "1431" > < /td>
    < td
id = "LC1431"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> compare;</
td >
< /tr>
< tr >
< td
id = "L1432"
class
= "blob-num js-line-number"
data - line - number = "1432" > < /td>
    < td
id = "LC1432"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1433"
class
= "blob-num js-line-number"
data - line - number = "1433" > < /td>
    < td
id = "LC1433"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1434"
class
= "blob-num js-line-number"
data - line - number = "1434" > < /td>
    < td
id = "LC1434"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Calculate position if both inputs belong to the same document</span></td>
    < /tr>
    < tr >
    < td
id = "L1435"
class
= "blob-num js-line-number"
data - line - number = "1435" > < /td>
    < td
id = "LC1435"
class
= "blob-code blob-code-inner js-file-line" > compare < span
class
= "pl-k" >= < /span> ( a<span class="pl-k">.</s
pan > ownerDocument < span
class
= "pl-k" > || < /span> a ) <span class="pl-k">===</s
pan > (b < span
class
= "pl-k" >
.<
/span>ownerDocument <span class="pl-k">||</s
pan > b
) <
span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L1436"
class
= "blob-num js-line-number"
data - line - number = "1436" > < /td>
    < td
id = "LC1436"
class
= "blob-code blob-code-inner js-file-line" > a < span
class
= "pl-k" >
.<
/span>compareDocumentPosition( b ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1437"
class
= "blob-num js-line-number"
data - line - number = "1437" > < /td>
    < td
id = "LC1437"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1438"
class
= "blob-num js-line-number"
data - line - number = "1438" > < /td>
    < td
id = "LC1438"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise we know they are disconnected</span></td>
    < /tr>
    < tr >
    < td
id = "L1439"
class
= "blob-num js-line-number"
data - line - number = "1439" > < /td>
    < td
id = "LC1439"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > 1 < /span>;</
td >
< /tr>
< tr >
< td
id = "L1440"
class
= "blob-num js-line-number"
data - line - number = "1440" > < /td>
    < td
id = "LC1440"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1441"
class
= "blob-num js-line-number"
data - line - number = "1441" > < /td>
    < td
id = "LC1441"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Disconnected nodes</span></td>
    < /tr>
    < tr >
    < td
id = "L1442"
class
= "blob-num js-line-number"
data - line - number = "1442" > < /td>
    < td
id = "LC1442"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( compare <span class="pl-k">&amp;</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1443"
class
= "blob-num js-line-number"
data - line - number = "1443" > < /td>
    < td
id = "LC1443"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-k" > ! < /span>support<span class="pl-k">.</s
pan > sortDetached < span
class
= "pl-k" > &amp;&amp; < /span> b<span class="pl-k">.</s
pan > compareDocumentPosition(a) < span
class
= "pl-k" >= == < /span> compare) ) {</
td >
< /tr>
< tr >
< td
id = "L1444"
class
= "blob-num js-line-number"
data - line - number = "1444" > < /td>
    < td
id = "LC1444"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1445"
class
= "blob-num js-line-number"
data - line - number = "1445" > < /td>
    < td
id = "LC1445"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Choose the first element that is related to our preferred document</span></td>
    < /tr>
    < tr >
    < td
id = "L1446"
class
= "blob-num js-line-number"
data - line - number = "1446" > < /td>
    < td
id = "LC1446"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( a <span class="pl-k">===</s
pan > document < span
class
= "pl-k" > || < /span> a<span class="pl-k">.</s
pan > ownerDocument < span
class
= "pl-k" >= == < /span> preferredDoc <span class="pl-k">&amp;&amp;</s
pan > contains(preferredDoc, a)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1447"
class
    = "blob-num js-line-number"
    data - line - number = "1447" > < /td>
        < td
    id = "LC1447"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">-</s
    pan > < span
class
    = "pl-c1" > 1 < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1448"
class
    = "blob-num js-line-number"
    data - line - number = "1448" > < /td>
        < td
    id = "LC1448"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1449"
class
= "blob-num js-line-number"
data - line - number = "1449" > < /td>
    < td
id = "LC1449"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( b <span class="pl-k">===</s
pan > document < span
class
= "pl-k" > || < /span> b<span class="pl-k">.</s
pan > ownerDocument < span
class
= "pl-k" >= == < /span> preferredDoc <span class="pl-k">&amp;&amp;</s
pan > contains(preferredDoc, b)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1450"
class
    = "blob-num js-line-number"
    data - line - number = "1450" > < /td>
        < td
    id = "LC1450"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">1</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1451"
class
    = "blob-num js-line-number"
    data - line - number = "1451" > < /td>
        < td
    id = "LC1451"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1452"
class
= "blob-num js-line-number"
data - line - number = "1452" > < /td>
    < td
id = "LC1452"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1453"
class
= "blob-num js-line-number"
data - line - number = "1453" > < /td>
    < td
id = "LC1453"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Maintain original order</span></td>
    < /tr>
    < tr >
    < td
id = "L1454"
class
= "blob-num js-line-number"
data - line - number = "1454" > < /td>
    < td
id = "LC1454"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> sortInput <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1455"
class
= "blob-num js-line-number"
data - line - number = "1455" > < /td>
    < td
id = "LC1455"
class
= "blob-code blob-code-inner js-file-line" > (indexOf(sortInput, a) < span
class
= "pl-k" > - < /span> indexOf( sortInput, b ) ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1456"
class
= "blob-num js-line-number"
data - line - number = "1456" > < /td>
    < td
id = "LC1456"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L1457"
class
= "blob-num js-line-number"
data - line - number = "1457" > < /td>
    < td
id = "LC1457"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1458"
class
= "blob-num js-line-number"
data - line - number = "1458" > < /td>
    < td
id = "LC1458"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1459"
class
= "blob-num js-line-number"
data - line - number = "1459" > < /td>
    < td
id = "LC1459"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> compare <span class="pl-k">&amp;</s
pan > < span
class
= "pl-c1" > 4 < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan > < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L1460"
class
= "blob-num js-line-number"
data - line - number = "1460" > < /td>
    < td
id = "LC1460"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1461"
class
= "blob-num js-line-number"
data - line - number = "1461" > < /td>
    < td
id = "LC1461"
class
= "blob-code blob-code-inner js-file-line" > function (a, b) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1462"
class
    = "blob-num js-line-number"
    data - line - number = "1462" > < /td>
        < td
    id = "LC1462"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Exit early if the nodes are identical</span></td>
        < /tr>
        < tr >
        < td
    id = "L1463"
class
    = "blob-num js-line-number"
    data - line - number = "1463" > < /td>
        < td
    id = "LC1463"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( a <span class="pl-k">===</s
    pan > b
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1464"
class
    = "blob-num js-line-number"
    data - line - number = "1464" > < /td>
        < td
    id = "LC1464"
class
    = "blob-code blob-code-inner js-file-line" > hasDuplicate < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1465"
class
    = "blob-num js-line-number"
    data - line - number = "1465" > < /td>
        < td
    id = "LC1465"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1466"
class
    = "blob-num js-line-number"
    data - line - number = "1466" > < /td>
        < td
    id = "LC1466"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1467"
class
= "blob-num js-line-number"
data - line - number = "1467" > < /td>
    < td
id = "LC1467"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1468"
class
= "blob-num js-line-number"
data - line - number = "1468" > < /td>
    < td
id = "LC1468"
class
= "blob-code blob-code-inner js-file-line" >
var cur, <
/td>
< /tr>
< tr >
< td
id = "L1469"
class
= "blob-num js-line-number"
data - line - number = "1469" > < /td>
    < td
id = "LC1469"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L1470"
class
= "blob-num js-line-number"
data - line - number = "1470" > < /td>
    < td
id = "LC1470"
class
= "blob-code blob-code-inner js-file-line" > aup < span
class
= "pl-k" >= < /span> a<span class="pl-k">.</s
pan > parentNode,
<
/td>
< /tr>
< tr >
< td
id = "L1471"
class
= "blob-num js-line-number"
data - line - number = "1471" > < /td>
    < td
id = "LC1471"
class
= "blob-code blob-code-inner js-file-line" > bup < span
class
= "pl-k" >= < /span> b<span class="pl-k">.</s
pan > parentNode,
<
/td>
< /tr>
< tr >
< td
id = "L1472"
class
= "blob-num js-line-number"
data - line - number = "1472" > < /td>
    < td
id = "LC1472"
class
= "blob-code blob-code-inner js-file-line" > ap < span
class
= "pl-k" >= < /span> [ a ],</
td >
< /tr>
< tr >
< td
id = "L1473"
class
= "blob-num js-line-number"
data - line - number = "1473" > < /td>
    < td
id = "LC1473"
class
= "blob-code blob-code-inner js-file-line" > bp < span
class
= "pl-k" >= < /span> [ b ];</
td >
< /tr>
< tr >
< td
id = "L1474"
class
= "blob-num js-line-number"
data - line - number = "1474" > < /td>
    < td
id = "LC1474"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1475"
class
= "blob-num js-line-number"
data - line - number = "1475" > < /td>
    < td
id = "LC1475"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Parentless nodes are either documents or disconnected</span></td>
    < /tr>
    < tr >
    < td
id = "L1476"
class
= "blob-num js-line-number"
data - line - number = "1476" > < /td>
    < td
id = "LC1476"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > aup < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > bup
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1477"
class
    = "blob-num js-line-number"
    data - line - number = "1477" > < /td>
        < td
    id = "LC1477"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> a <span class="pl-k">===</s
    pan > document < span
class
    = "pl-k" > ?
<
    /span> <span class="pl-k">-</s
    pan > < span
class
    = "pl-c1" > 1 < /span> <span class="pl-k">:</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1478"
class
    = "blob-num js-line-number"
    data - line - number = "1478" > < /td>
        < td
    id = "LC1478"
class
    = "blob-code blob-code-inner js-file-line" > b < span
class
    = "pl-k" >= == < /span> document <span class="pl-k">?</s
    pan > < span
class
    = "pl-c1" > 1 < /span> <span class="pl-k">:</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1479"
class
    = "blob-num js-line-number"
    data - line - number = "1479" > < /td>
        < td
    id = "LC1479"
class
    = "blob-code blob-code-inner js-file-line" > aup < span
class
    = "pl-k" > ?
<
    /span> <span class="pl-k">-</s
    pan > < span
class
    = "pl-c1" > 1 < /span> <span class="pl-k">:</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1480"
class
    = "blob-num js-line-number"
    data - line - number = "1480" > < /td>
        < td
    id = "LC1480"
class
    = "blob-code blob-code-inner js-file-line" > bup < span
class
    = "pl-k" > ?
<
    /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" >
:<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L1481"
class
    = "blob-num js-line-number"
    data - line - number = "1481" > < /td>
        < td
    id = "LC1481"
class
    = "blob-code blob-code-inner js-file-line" > sortInput < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L1482"
class
    = "blob-num js-line-number"
    data - line - number = "1482" > < /td>
        < td
    id = "LC1482"
class
    = "blob-code blob-code-inner js-file-line" > (indexOf(sortInput, a) < span
class
    = "pl-k" > - < /span> indexOf( sortInput, b ) ) <span class="pl-k">:</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1483"
class
    = "blob-num js-line-number"
    data - line - number = "1483" > < /td>
        < td
    id = "LC1483"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > 0 < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1484"
class
    = "blob-num js-line-number"
    data - line - number = "1484" > < /td>
        < td
    id = "LC1484"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1485"
class
    = "blob-num js-line-number"
    data - line - number = "1485" > < /td>
        < td
    id = "LC1485"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If the nodes are siblings, we can do a quick check</span></td>
        < /tr>
        < tr >
        < td
    id = "L1486"
class
    = "blob-num js-line-number"
    data - line - number = "1486" > < /td>
        < td
    id = "LC1486"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (aup < span
class
= "pl-k" >= == < /span> bup ) {</
td >
< /tr>
< tr >
< td
id = "L1487"
class
= "blob-num js-line-number"
data - line - number = "1487" > < /td>
    < td
id = "LC1487"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> siblingCheck( a, b );</
td >
< /tr>
< tr >
< td
id = "L1488"
class
= "blob-num js-line-number"
data - line - number = "1488" > < /td>
    < td
id = "LC1488"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1489"
class
= "blob-num js-line-number"
data - line - number = "1489" > < /td>
    < td
id = "LC1489"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1490"
class
= "blob-num js-line-number"
data - line - number = "1490" > < /td>
    < td
id = "LC1490"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise we need full lists of their ancestors for comparison</span></td>
    < /tr>
    < tr >
    < td
id = "L1491"
class
= "blob-num js-line-number"
data - line - number = "1491" > < /td>
    < td
id = "LC1491"
class
= "blob-code blob-code-inner js-file-line" > cur < span
class
= "pl-k" >= < /span> a;</
td >
< /tr>
< tr >
< td
id = "L1492"
class
= "blob-num js-line-number"
data - line - number = "1492" > < /td>
    < td
id = "LC1492"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( (cur <span class="pl-k">=</s
pan > cur < span
class
= "pl-k" >
.<
/span>parentNode) ) {</
td >
< /tr>
< tr >
< td
id = "L1493"
class
= "blob-num js-line-number"
data - line - number = "1493" > < /td>
    < td
id = "LC1493"
class
= "blob-code blob-code-inner js-file-line" > ap < span
class
= "pl-k" >
.<
/span>unshift( cur );</
td >
< /tr>
< tr >
< td
id = "L1494"
class
= "blob-num js-line-number"
data - line - number = "1494" > < /td>
    < td
id = "LC1494"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1495"
class
= "blob-num js-line-number"
data - line - number = "1495" > < /td>
    < td
id = "LC1495"
class
= "blob-code blob-code-inner js-file-line" > cur < span
class
= "pl-k" >= < /span> b;</
td >
< /tr>
< tr >
< td
id = "L1496"
class
= "blob-num js-line-number"
data - line - number = "1496" > < /td>
    < td
id = "LC1496"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( (cur <span class="pl-k">=</s
pan > cur < span
class
= "pl-k" >
.<
/span>parentNode) ) {</
td >
< /tr>
< tr >
< td
id = "L1497"
class
= "blob-num js-line-number"
data - line - number = "1497" > < /td>
    < td
id = "LC1497"
class
= "blob-code blob-code-inner js-file-line" > bp < span
class
= "pl-k" >
.<
/span>unshift( cur );</
td >
< /tr>
< tr >
< td
id = "L1498"
class
= "blob-num js-line-number"
data - line - number = "1498" > < /td>
    < td
id = "LC1498"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1499"
class
= "blob-num js-line-number"
data - line - number = "1499" > < /td>
    < td
id = "LC1499"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1500"
class
= "blob-num js-line-number"
data - line - number = "1500" > < /td>
    < td
id = "LC1500"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Walk down the tree looking for a discrepancy</span></td>
    < /tr>
    < tr >
    < td
id = "L1501"
class
= "blob-num js-line-number"
data - line - number = "1501" > < /td>
    < td
id = "LC1501"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ap[i] <span class="pl-k">===</s
pan > bp[i]
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1502"
class
    = "blob-num js-line-number"
    data - line - number = "1502" > < /td>
        < td
    id = "LC1502"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" > ++ < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1503"
class
    = "blob-num js-line-number"
    data - line - number = "1503" > < /td>
        < td
    id = "LC1503"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1504"
class
= "blob-num js-line-number"
data - line - number = "1504" > < /td>
    < td
id = "LC1504"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1505"
class
= "blob-num js-line-number"
data - line - number = "1505" > < /td>
    < td
id = "LC1505"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> i <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1506"
class
= "blob-num js-line-number"
data - line - number = "1506" > < /td>
    < td
id = "LC1506"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Do a sibling check if the nodes have a common ancestor</span></td>
    < /tr>
    < tr >
    < td
id = "L1507"
class
= "blob-num js-line-number"
data - line - number = "1507" > < /td>
    < td
id = "LC1507"
class
= "blob-code blob-code-inner js-file-line" > siblingCheck(ap[i], bp[i]) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1508"
class
= "blob-num js-line-number"
data - line - number = "1508" > < /td>
    < td
id = "LC1508"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1509"
class
= "blob-num js-line-number"
data - line - number = "1509" > < /td>
    < td
id = "LC1509"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise nodes in our document sort first</span></td>
    < /tr>
    < tr >
    < td
id = "L1510"
class
= "blob-num js-line-number"
data - line - number = "1510" > < /td>
    < td
id = "LC1510"
class
= "blob-code blob-code-inner js-file-line" > ap[i] < span
class
= "pl-k" >= == < /span> preferredDoc <span class="pl-k">?</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan > < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1511"
class
= "blob-num js-line-number"
data - line - number = "1511" > < /td>
    < td
id = "LC1511"
class
= "blob-code blob-code-inner js-file-line" > bp[i] < span
class
= "pl-k" >= == < /span> preferredDoc <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1512"
class
= "blob-num js-line-number"
data - line - number = "1512" > < /td>
    < td
id = "LC1512"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L1513"
class
= "blob-num js-line-number"
data - line - number = "1513" > < /td>
    < td
id = "LC1513"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1514"
class
= "blob-num js-line-number"
data - line - number = "1514" > < /td>
    < td
id = "LC1514"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1515"
class
= "blob-num js-line-number"
data - line - number = "1515" > < /td>
    < td
id = "LC1515"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> document;</
td >
< /tr>
< tr >
< td
id = "L1516"
class
= "blob-num js-line-number"
data - line - number = "1516" > < /td>
    < td
id = "LC1516"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1517"
class
= "blob-num js-line-number"
data - line - number = "1517" > < /td>
    < td
id = "LC1517"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1518"
class
= "blob-num js-line-number"
data - line - number = "1518" > < /td>
    < td
id = "LC1518"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > matches < span
class
= "pl-k" >= < /span> function( expr, elements ) {</
td >
< /tr>
< tr >
< td
id = "L1519"
class
= "blob-num js-line-number"
data - line - number = "1519" > < /td>
    < td
id = "LC1519"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> Sizzle( expr, <span class="pl-c1">null</s
pan >,
<
span
class
= "pl-c1" > null < /span>, elements );</
td >
< /tr>
< tr >
< td
id = "L1520"
class
= "blob-num js-line-number"
data - line - number = "1520" > < /td>
    < td
id = "LC1520"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1521"
class
= "blob-num js-line-number"
data - line - number = "1521" > < /td>
    < td
id = "LC1521"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1522"
class
= "blob-num js-line-number"
data - line - number = "1522" > < /td>
    < td
id = "LC1522"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > matchesSelector < span
class
= "pl-k" >= < /span> function( elem, expr ) {</
td >
< /tr>
< tr >
< td
id = "L1523"
class
= "blob-num js-line-number"
data - line - number = "1523" > < /td>
    < td
id = "LC1523"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set document vars if needed</span></td>
    < /tr>
    < tr >
    < td
id = "L1524"
class
= "blob-num js-line-number"
data - line - number = "1524" > < /td>
    < td
id = "LC1524"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ( elem<span class="pl-k">.</s
pan > ownerDocument < span
class
= "pl-k" > || < /span> elem ) <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> document ) {</
td >
< /tr>
< tr >
< td
id = "L1525"
class
= "blob-num js-line-number"
data - line - number = "1525" > < /td>
    < td
id = "LC1525"
class
= "blob-code blob-code-inner js-file-line" > setDocument(elem);
<
/td>
< /tr>
< tr >
< td
id = "L1526"
class
= "blob-num js-line-number"
data - line - number = "1526" > < /td>
    < td
id = "LC1526"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1527"
class
= "blob-num js-line-number"
data - line - number = "1527" > < /td>
    < td
id = "LC1527"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1528"
class
= "blob-num js-line-number"
data - line - number = "1528" > < /td>
    < td
id = "LC1528"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure that attribute selectors are quoted</span></td>
    < /tr>
    < tr >
    < td
id = "L1529"
class
= "blob-num js-line-number"
data - line - number = "1529" > < /td>
    < td
id = "LC1529"
class
= "blob-code blob-code-inner js-file-line" > expr < span
class
= "pl-k" >= < /span> expr<span class="pl-k">.</s
pan > replace(rattributeQuotes, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>=&#39;$1&#39;]<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L1530"
class
= "blob-num js-line-number"
data - line - number = "1530" > < /td>
    < td
id = "LC1530"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1531"
class
= "blob-num js-line-number"
data - line - number = "1531" > < /td>
    < td
id = "LC1531"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( support<span class="pl-k">.</s
pan > matchesSelector < span
class
= "pl-k" > &amp;&amp; < /span> documentIsHTML <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1532"
class
= "blob-num js-line-number"
data - line - number = "1532" > < /td>
    < td
id = "LC1532"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>compilerCache[ expr <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> ] <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1533"
class
= "blob-num js-line-number"
data - line - number = "1533" > < /td>
    < td
id = "LC1533"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-k" > ! < /span>rbuggyMatches <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>rbuggyMatches<span class="pl-k">.</s
pan > test(expr)
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L1534"
class
= "blob-num js-line-number"
data - line - number = "1534" > < /td>
    < td
id = "LC1534"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-k" > ! < /span>rbuggyQSA     <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>rbuggyQSA<span class="pl-k">.</s
pan > test(expr)
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1535"
class
    = "blob-num js-line-number"
    data - line - number = "1535" > < /td>
        < td
    id = "LC1535"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1536"
class
    = "blob-num js-line-number"
    data - line - number = "1536" > < /td>
        < td
    id = "LC1536"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    try
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1537"
class
    = "blob-num js-line-number"
    data - line - number = "1537" > < /td>
        < td
    id = "LC1537"
class
    = "blob-code blob-code-inner js-file-line" >
    var ret
<
    span
class
    = "pl-k" >= < /span> matches<span class="pl-k">.</s
    pan > call(elem, expr);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1538"
class
    = "blob-num js-line-number"
    data - line - number = "1538" > < /td>
        < td
    id = "LC1538"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1539"
class
    = "blob-num js-line-number"
    data - line - number = "1539" > < /td>
        < td
    id = "LC1539"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> IE 9&#39;s matchesSelector returns false on disconnected nodes</span></td>
        < /tr>
        < tr >
        < td
    id = "L1540"
class
    = "blob-num js-line-number"
    data - line - number = "1540" > < /td>
        < td
    id = "LC1540"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( ret <span class="pl-k">||</s
    pan > support < span
class
    = "pl-k" >
.<
    /span>disconnectedMatch <span class="pl-k">||</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1541"
class
    = "blob-num js-line-number"
    data - line - number = "1541" > < /td>
        < td
    id = "LC1541"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> As well, disconnected nodes are said to be in a document</span></td>
        < /tr>
        < tr >
        < td
    id = "L1542"
class
    = "blob-num js-line-number"
    data - line - number = "1542" > < /td>
        < td
    id = "LC1542"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> fragment in IE 9</span></td>
        < /tr>
        < tr >
        < td
    id = "L1543"
class
    = "blob-num js-line-number"
    data - line - number = "1543" > < /td>
        < td
    id = "LC1543"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>document <span class="pl-k">&amp;&amp;</s
    pan > elem < span
class
    = "pl-k" >
.<
    /span>document<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > 11 < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1544"
class
    = "blob-num js-line-number"
    data - line - number = "1544" > < /td>
        < td
    id = "LC1544"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> ret;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1545"
class
    = "blob-num js-line-number"
    data - line - number = "1545" > < /td>
        < td
    id = "LC1545"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1546"
class
= "blob-num js-line-number"
data - line - number = "1546" > < /td>
    < td
id = "LC1546"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> (e) {}</
td >
< /tr>
< tr >
< td
id = "L1547"
class
= "blob-num js-line-number"
data - line - number = "1547" > < /td>
    < td
id = "LC1547"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1548"
class
= "blob-num js-line-number"
data - line - number = "1548" > < /td>
    < td
id = "LC1548"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1549"
class
= "blob-num js-line-number"
data - line - number = "1549" > < /td>
    < td
id = "LC1549"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> Sizzle( expr, document, <span class="pl-c1">null</s
pan >, [elem]
)<
span
class
= "pl-k" >
.<
/span>length <span class="pl-k">&gt;</s
pan > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L1550"
class
= "blob-num js-line-number"
data - line - number = "1550" > < /td>
    < td
id = "LC1550"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1551"
class
= "blob-num js-line-number"
data - line - number = "1551" > < /td>
    < td
id = "LC1551"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1552"
class
= "blob-num js-line-number"
data - line - number = "1552" > < /td>
    < td
id = "LC1552"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > contains < span
class
= "pl-k" >= < /span> function( context, elem ) {</
td >
< /tr>
< tr >
< td
id = "L1553"
class
= "blob-num js-line-number"
data - line - number = "1553" > < /td>
    < td
id = "LC1553"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set document vars if needed</span></td>
    < /tr>
    < tr >
    < td
id = "L1554"
class
= "blob-num js-line-number"
data - line - number = "1554" > < /td>
    < td
id = "LC1554"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ( context<span class="pl-k">.</s
pan > ownerDocument < span
class
= "pl-k" > || < /span> context ) <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> document ) {</
td >
< /tr>
< tr >
< td
id = "L1555"
class
= "blob-num js-line-number"
data - line - number = "1555" > < /td>
    < td
id = "LC1555"
class
= "blob-code blob-code-inner js-file-line" > setDocument(context);
<
/td>
< /tr>
< tr >
< td
id = "L1556"
class
= "blob-num js-line-number"
data - line - number = "1556" > < /td>
    < td
id = "LC1556"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1557"
class
= "blob-num js-line-number"
data - line - number = "1557" > < /td>
    < td
id = "LC1557"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> contains( context, elem );</
td >
< /tr>
< tr >
< td
id = "L1558"
class
= "blob-num js-line-number"
data - line - number = "1558" > < /td>
    < td
id = "LC1558"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1559"
class
= "blob-num js-line-number"
data - line - number = "1559" > < /td>
    < td
id = "LC1559"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1560"
class
= "blob-num js-line-number"
data - line - number = "1560" > < /td>
    < td
id = "LC1560"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > attr < span
class
= "pl-k" >= < /span> function( elem, name ) {</
td >
< /tr>
< tr >
< td
id = "L1561"
class
= "blob-num js-line-number"
data - line - number = "1561" > < /td>
    < td
id = "LC1561"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set document vars if needed</span></td>
    < /tr>
    < tr >
    < td
id = "L1562"
class
= "blob-num js-line-number"
data - line - number = "1562" > < /td>
    < td
id = "LC1562"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ( elem<span class="pl-k">.</s
pan > ownerDocument < span
class
= "pl-k" > || < /span> elem ) <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> document ) {</
td >
< /tr>
< tr >
< td
id = "L1563"
class
= "blob-num js-line-number"
data - line - number = "1563" > < /td>
    < td
id = "LC1563"
class
= "blob-code blob-code-inner js-file-line" > setDocument(elem);
<
/td>
< /tr>
< tr >
< td
id = "L1564"
class
= "blob-num js-line-number"
data - line - number = "1564" > < /td>
    < td
id = "LC1564"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1565"
class
= "blob-num js-line-number"
data - line - number = "1565" > < /td>
    < td
id = "LC1565"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1566"
class
= "blob-num js-line-number"
data - line - number = "1566" > < /td>
    < td
id = "LC1566"
class
= "blob-code blob-code-inner js-file-line" >
var fn
<
span
class
= "pl-k" >= < /span> <span class="pl-smi">Expr</s
pan > < span
class
= "pl-k" >
.<
/span>attrHandle[ name<span class="pl-k">.</span>toLowerCase() ],</
td >
< /tr>
< tr >
< td
id = "L1567"
class
= "blob-num js-line-number"
data - line - number = "1567" > < /td>
    < td
id = "LC1567"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t get fooled by Object.prototype properties (jQuery #13807)</span></td>
    < /tr>
    < tr >
    < td
id = "L1568"
class
= "blob-num js-line-number"
data - line - number = "1568" > < /td>
    < td
id = "LC1568"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >= < /span> fn <span class="pl-k">&amp;&amp;</s
pan > hasOwn < span
class
= "pl-k" >
.<
/span>call( <span class="pl-smi">Expr</s
pan > < span
class
= "pl-k" >
.<
/span>attrHandle, name<span class="pl-k">.</s
pan > toLowerCase()
) <
span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L1569"
class
= "blob-num js-line-number"
data - line - number = "1569" > < /td>
    < td
id = "LC1569"
class
= "blob-code blob-code-inner js-file-line" > fn(elem, name, < span
class
= "pl-k" > ! < /span>documentIsHTML ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1570"
class
= "blob-num js-line-number"
data - line - number = "1570" > < /td>
    < td
id = "LC1570"
class
= "blob-code blob-code-inner js-file-line" > undefined;
<
/td>
< /tr>
< tr >
< td
id = "L1571"
class
= "blob-num js-line-number"
data - line - number = "1571" > < /td>
    < td
id = "LC1571"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1572"
class
= "blob-num js-line-number"
data - line - number = "1572" > < /td>
    < td
id = "LC1572"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> val <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1573"
class
= "blob-num js-line-number"
data - line - number = "1573" > < /td>
    < td
id = "LC1573"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1574"
class
= "blob-num js-line-number"
data - line - number = "1574" > < /td>
    < td
id = "LC1574"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>attributes <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>documentIsHTML <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1575"
class
= "blob-num js-line-number"
data - line - number = "1575" > < /td>
    < td
id = "LC1575"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>getAttribute( name ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1576"
class
= "blob-num js-line-number"
data - line - number = "1576" > < /td>
    < td
id = "LC1576"
class
= "blob-code blob-code-inner js-file-line" > (val < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > getAttributeNode(name)
) <
span
class
= "pl-k" > &amp;&amp; < /span> val<span class="pl-k">.</s
pan > specified < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L1577"
class
= "blob-num js-line-number"
data - line - number = "1577" > < /td>
    < td
id = "LC1577"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >
.<
/span>value <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1578"
class
= "blob-num js-line-number"
data - line - number = "1578" > < /td>
    < td
id = "LC1578"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > null < /span>;</
td >
< /tr>
< tr >
< td
id = "L1579"
class
= "blob-num js-line-number"
data - line - number = "1579" > < /td>
    < td
id = "LC1579"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1580"
class
= "blob-num js-line-number"
data - line - number = "1580" > < /td>
    < td
id = "LC1580"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1581"
class
= "blob-num js-line-number"
data - line - number = "1581" > < /td>
    < td
id = "LC1581"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > escape < span
class
= "pl-k" >= < /span> function( sel ) {</
td >
< /tr>
< tr >
< td
id = "L1582"
class
= "blob-num js-line-number"
data - line - number = "1582" > < /td>
    < td
id = "LC1582"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> (sel <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>)<span class="pl-k">.</s
pan > replace(rcssescape, fcssescape);
<
/td>
< /tr>
< tr >
< td
id = "L1583"
class
= "blob-num js-line-number"
data - line - number = "1583" > < /td>
    < td
id = "LC1583"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1584"
class
= "blob-num js-line-number"
data - line - number = "1584" > < /td>
    < td
id = "LC1584"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1585"
class
= "blob-num js-line-number"
data - line - number = "1585" > < /td>
    < td
id = "LC1585"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > error < span
class
= "pl-k" >= < /span> function( msg ) {</
td >
< /tr>
< tr >
< td
id = "L1586"
class
= "blob-num js-line-number"
data - line - number = "1586" > < /td>
    < td
id = "LC1586"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
throw
<
/span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > Error < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > Syntax
error, unrecognized
expression: <
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> msg );</
td >
< /tr>
< tr >
< td
id = "L1587"
class
= "blob-num js-line-number"
data - line - number = "1587" > < /td>
    < td
id = "LC1587"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1588"
class
= "blob-num js-line-number"
data - line - number = "1588" > < /td>
    < td
id = "LC1588"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1589"
class
= "blob-num js-line-number"
data - line - number = "1589" > < /td>
    < td
id = "LC1589"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L1590" class="blob-num js-line-number" data-line-number="1590"></td>
 <td id="LC1590" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Document sorting and removing duplicates</span></td>
 </tr>
 <tr>
 <td id="L1591" class="blob-num js-line-number" data-line-number="1591"></td>
 <td id="LC1591" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {ArrayLike} results</span></td>
 </tr>
 <tr>
 <td id="L1592" class="blob-num js-line-number" data-line-number="1592"></td>
 <td id="LC1592" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1593"
class
= "blob-num js-line-number"
data - line - number = "1593" > < /td>
    < td
id = "LC1593"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > uniqueSort < span
class
= "pl-k" >= < /span> function( results ) {</
td >
< /tr>
< tr >
< td
id = "L1594"
class
= "blob-num js-line-number"
data - line - number = "1594" > < /td>
    < td
id = "LC1594"
class
= "blob-code blob-code-inner js-file-line" >
var elem, <
/td>
< /tr>
< tr >
< td
id = "L1595"
class
= "blob-num js-line-number"
data - line - number = "1595" > < /td>
    < td
id = "LC1595"
class
= "blob-code blob-code-inner js-file-line" > duplicates < span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L1596"
class
= "blob-num js-line-number"
data - line - number = "1596" > < /td>
    < td
id = "LC1596"
class
= "blob-code blob-code-inner js-file-line" > j < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L1597"
class
= "blob-num js-line-number"
data - line - number = "1597" > < /td>
    < td
id = "LC1597"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L1598"
class
= "blob-num js-line-number"
data - line - number = "1598" > < /td>
    < td
id = "LC1598"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1599"
class
= "blob-num js-line-number"
data - line - number = "1599" > < /td>
    < td
id = "LC1599"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Unless we *know* we can detect duplicates, assume their presence</span></td>
    < /tr>
    < tr >
    < td
id = "L1600"
class
= "blob-num js-line-number"
data - line - number = "1600" > < /td>
    < td
id = "LC1600"
class
= "blob-code blob-code-inner js-file-line" > hasDuplicate < span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>detectDuplicates;</
td >
< /tr>
< tr >
< td
id = "L1601"
class
= "blob-num js-line-number"
data - line - number = "1601" > < /td>
    < td
id = "LC1601"
class
= "blob-code blob-code-inner js-file-line" > sortInput < span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>sortStable <span class="pl-k">&amp;&amp;</s
pan > results < span
class
= "pl-k" >
.<
/span>slice( <span class="pl-c1">0</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1602"
class
= "blob-num js-line-number"
data - line - number = "1602" > < /td>
    < td
id = "LC1602"
class
= "blob-code blob-code-inner js-file-line" > results < span
class
= "pl-k" >
.<
/span>sort( sortOrder );</
td >
< /tr>
< tr >
< td
id = "L1603"
class
= "blob-num js-line-number"
data - line - number = "1603" > < /td>
    < td
id = "LC1603"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1604"
class
= "blob-num js-line-number"
data - line - number = "1604" > < /td>
    < td
id = "LC1604"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hasDuplicate ) {</
td >
< /tr>
< tr >
< td
id = "L1605"
class
= "blob-num js-line-number"
data - line - number = "1605" > < /td>
    < td
id = "LC1605"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( (elem <span class="pl-k">=</s
pan > results[i < span
class
= "pl-k" > ++ < /span>]) ) {</
td >
< /tr>
< tr >
< td
id = "L1606"
class
= "blob-num js-line-number"
data - line - number = "1606" > < /td>
    < td
id = "LC1606"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem <span class="pl-k">===</s
pan > results[i]
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1607"
class
    = "blob-num js-line-number"
    data - line - number = "1607" > < /td>
        < td
    id = "LC1607"
class
    = "blob-code blob-code-inner js-file-line" > j < span
class
    = "pl-k" >= < /span> duplicates<span class="pl-k">.</s
    pan > push(i);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1608"
class
    = "blob-num js-line-number"
    data - line - number = "1608" > < /td>
        < td
    id = "LC1608"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1609"
class
= "blob-num js-line-number"
data - line - number = "1609" > < /td>
    < td
id = "LC1609"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1610"
class
= "blob-num js-line-number"
data - line - number = "1610" > < /td>
    < td
id = "LC1610"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( j<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1611"
class
    = "blob-num js-line-number"
    data - line - number = "1611" > < /td>
        < td
    id = "LC1611"
class
    = "blob-code blob-code-inner js-file-line" > results < span
class
    = "pl-k" >
.<
    /span>splice( duplicates[ j ], <span class="pl-c1">1</s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1612"
class
= "blob-num js-line-number"
data - line - number = "1612" > < /td>
    < td
id = "LC1612"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1613"
class
= "blob-num js-line-number"
data - line - number = "1613" > < /td>
    < td
id = "LC1613"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1614"
class
= "blob-num js-line-number"
data - line - number = "1614" > < /td>
    < td
id = "LC1614"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1615"
class
= "blob-num js-line-number"
data - line - number = "1615" > < /td>
    < td
id = "LC1615"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Clear input after sorting to release objects</span></td>
    < /tr>
    < tr >
    < td
id = "L1616"
class
= "blob-num js-line-number"
data - line - number = "1616" > < /td>
    < td
id = "LC1616"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> See https://github.com/jquery/sizzle/pull/225</span></td>
    < /tr>
    < tr >
    < td
id = "L1617"
class
= "blob-num js-line-number"
data - line - number = "1617" > < /td>
    < td
id = "LC1617"
class
= "blob-code blob-code-inner js-file-line" > sortInput < span
class
= "pl-k" >= < /span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L1618"
class
= "blob-num js-line-number"
data - line - number = "1618" > < /td>
    < td
id = "LC1618"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1619"
class
= "blob-num js-line-number"
data - line - number = "1619" > < /td>
    < td
id = "LC1619"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> results;</
td >
< /tr>
< tr >
< td
id = "L1620"
class
= "blob-num js-line-number"
data - line - number = "1620" > < /td>
    < td
id = "LC1620"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1621"
class
= "blob-num js-line-number"
data - line - number = "1621" > < /td>
    < td
id = "LC1621"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1622"
class
= "blob-num js-line-number"
data - line - number = "1622" > < /td>
    < td
id = "LC1622"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L1623" class="blob-num js-line-number" data-line-number="1623"></td>
 <td id="LC1623" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * Utility function for retrieving the text value of an array of DOM nodes</span></td>
 </tr>
 <tr>
 <td id="L1624" class="blob-num js-line-number" data-line-number="1624"></td>
 <td id="LC1624" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Array|Element} elem</span></td>
 </tr>
 <tr>
 <td id="L1625" class="blob-num js-line-number" data-line-number="1625"></td>
 <td id="LC1625" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L1626"
class
= "blob-num js-line-number"
data - line - number = "1626" > < /td>
    < td
id = "LC1626"
class
= "blob-code blob-code-inner js-file-line" > getText < span
class
= "pl-k" >= < /span> <span class="pl-smi">Sizzle</s
pan > < span
class
= "pl-k" >
.<
/span>getText <span class="pl-k">=</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1627"
class
    = "blob-num js-line-number"
    data - line - number = "1627" > < /td>
        < td
    id = "LC1627"
class
    = "blob-code blob-code-inner js-file-line" >
    var node, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L1628"
class
    = "blob-num js-line-number"
    data - line - number = "1628" > < /td>
        < td
    id = "LC1628"
class
    = "blob-code blob-code-inner js-file-line" > ret < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1629"
class
    = "blob-num js-line-number"
    data - line - number = "1629" > < /td>
        < td
    id = "LC1629"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1630"
class
    = "blob-num js-line-number"
    data - line - number = "1630" > < /td>
        < td
    id = "LC1630"
class
    = "blob-code blob-code-inner js-file-line" > nodeType < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > nodeType;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1631"
class
    = "blob-num js-line-number"
    data - line - number = "1631" > < /td>
        < td
    id = "LC1631"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1632"
class
    = "blob-num js-line-number"
    data - line - number = "1632" > < /td>
        < td
    id = "LC1632"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > nodeType
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1633"
class
    = "blob-num js-line-number"
    data - line - number = "1633" > < /td>
        < td
    id = "LC1633"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If no nodeType, this is expected to be an array</span></td>
        < /tr>
        < tr >
        < td
    id = "L1634"
class
    = "blob-num js-line-number"
    data - line - number = "1634" > < /td>
        < td
    id = "LC1634"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( (node <span class="pl-k">=</s
    pan > elem[i < span
class
    = "pl-k" > ++ < /span>]) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1635"
class
    = "blob-num js-line-number"
    data - line - number = "1635" > < /td>
        < td
    id = "LC1635"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Do not traverse comment nodes</span></td>
        < /tr>
        < tr >
        < td
    id = "L1636"
class
    = "blob-num js-line-number"
    data - line - number = "1636" > < /td>
        < td
    id = "LC1636"
class
    = "blob-code blob-code-inner js-file-line" > ret < span
class
    = "pl-k" > +=
<
    /span> getText( node );</
    td >
    < /tr>
    < tr >
    < td
    id = "L1637"
class
    = "blob-num js-line-number"
    data - line - number = "1637" > < /td>
        < td
    id = "LC1637"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1638"
class
= "blob-num js-line-number"
data - line - number = "1638" > < /td>
    < td
id = "LC1638"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > || < /span> nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 9 < /span> <span class="pl-k">||</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">11</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1639"
class
    = "blob-num js-line-number"
    data - line - number = "1639" > < /td>
        < td
    id = "LC1639"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Use textContent for elements</span></td>
        < /tr>
        < tr >
        < td
    id = "L1640"
class
    = "blob-num js-line-number"
    data - line - number = "1640" > < /td>
        < td
    id = "LC1640"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> innerText usage removed for consistency of new lines (jQuery #11153)</span></td>
        < /tr>
        < tr >
        < td
    id = "L1641"
class
    = "blob-num js-line-number"
    data - line - number = "1641" > < /td>
        < td
    id = "LC1641"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof elem<span class="pl-k">.</s
    pan > textContent < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > string < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1642"
class
    = "blob-num js-line-number"
    data - line - number = "1642" > < /td>
        < td
    id = "LC1642"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem<span class="pl-k">.</s
    pan > textContent;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1643"
class
    = "blob-num js-line-number"
    data - line - number = "1643" > < /td>
        < td
    id = "LC1643"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L1644"
class
= "blob-num js-line-number"
data - line - number = "1644" > < /td>
    < td
id = "LC1644"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Traverse its children</span></td>
    < /tr>
    < tr >
    < td
id = "L1645"
class
= "blob-num js-line-number"
data - line - number = "1645" > < /td>
    < td
id = "LC1645"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( elem <span class="pl-k">=</s
pan > elem < span
class
= "pl-k" >
.<
/span>firstChild; elem; elem <span class="pl-k">=</s
pan > elem < span
class
= "pl-k" >
.<
/span>nextSibling ) {</
td >
< /tr>
< tr >
< td
id = "L1646"
class
= "blob-num js-line-number"
data - line - number = "1646" > < /td>
    < td
id = "LC1646"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" > +=
<
/span> getText( elem );</
td >
< /tr>
< tr >
< td
id = "L1647"
class
= "blob-num js-line-number"
data - line - number = "1647" > < /td>
    < td
id = "LC1647"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1648"
class
= "blob-num js-line-number"
data - line - number = "1648" > < /td>
    < td
id = "LC1648"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1649"
class
= "blob-num js-line-number"
data - line - number = "1649" > < /td>
    < td
id = "LC1649"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">3</s
pan > < span
class
= "pl-k" > || < /span> nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 4 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L1650"
class
= "blob-num js-line-number"
data - line - number = "1650" > < /td>
    < td
id = "LC1650"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > nodeValue;
<
/td>
< /tr>
< tr >
< td
id = "L1651"
class
= "blob-num js-line-number"
data - line - number = "1651" > < /td>
    < td
id = "LC1651"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1652"
class
= "blob-num js-line-number"
data - line - number = "1652" > < /td>
    < td
id = "LC1652"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Do not include comment or processing instruction nodes</span></td>
    < /tr>
    < tr >
    < td
id = "L1653"
class
= "blob-num js-line-number"
data - line - number = "1653" > < /td>
    < td
id = "LC1653"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1654"
class
= "blob-num js-line-number"
data - line - number = "1654" > < /td>
    < td
id = "LC1654"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L1655"
class
= "blob-num js-line-number"
data - line - number = "1655" > < /td>
    < td
id = "LC1655"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1656"
class
= "blob-num js-line-number"
data - line - number = "1656" > < /td>
    < td
id = "LC1656"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1657"
class
= "blob-num js-line-number"
data - line - number = "1657" > < /td>
    < td
id = "LC1657"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span> <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > selectors < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L1658"
class
= "blob-num js-line-number"
data - line - number = "1658" > < /td>
    < td
id = "LC1658"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1659"
class
= "blob-num js-line-number"
data - line - number = "1659" > < /td>
    < td
id = "LC1659"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Can be adjusted by the user</span></td>
    < /tr>
    < tr >
    < td
id = "L1660"
class
= "blob-num js-line-number"
data - line - number = "1660" > < /td>
    < td
id = "LC1660"
class
= "blob-code blob-code-inner js-file-line" > cacheLength < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">50</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L1661"
class
= "blob-num js-line-number"
data - line - number = "1661" > < /td>
    < td
id = "LC1661"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1662"
class
= "blob-num js-line-number"
data - line - number = "1662" > < /td>
    < td
id = "LC1662"
class
= "blob-code blob-code-inner js-file-line" > createPseudo < span
class
= "pl-k" >
:<
/span> markFunction,</
td >
< /tr>
< tr >
< td
id = "L1663"
class
= "blob-num js-line-number"
data - line - number = "1663" > < /td>
    < td
id = "LC1663"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1664"
class
= "blob-num js-line-number"
data - line - number = "1664" > < /td>
    < td
id = "LC1664"
class
= "blob-code blob-code-inner js-file-line" > match < span
class
= "pl-k" >
:<
/span> matchExpr,</
td >
< /tr>
< tr >
< td
id = "L1665"
class
= "blob-num js-line-number"
data - line - number = "1665" > < /td>
    < td
id = "LC1665"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1666"
class
= "blob-num js-line-number"
data - line - number = "1666" > < /td>
    < td
id = "LC1666"
class
= "blob-code blob-code-inner js-file-line" > attrHandle < span
class
= "pl-k" >
:<
/span> {},</
td >
< /tr>
< tr >
< td
id = "L1667"
class
= "blob-num js-line-number"
data - line - number = "1667" > < /td>
    < td
id = "LC1667"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1668"
class
= "blob-num js-line-number"
data - line - number = "1668" > < /td>
    < td
id = "LC1668"
class
= "blob-code blob-code-inner js-file-line" > find < span
class
= "pl-k" >
:<
/span> {},</
td >
< /tr>
< tr >
< td
id = "L1669"
class
= "blob-num js-line-number"
data - line - number = "1669" > < /td>
    < td
id = "LC1669"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1670"
class
= "blob-num js-line-number"
data - line - number = "1670" > < /td>
    < td
id = "LC1670"
class
= "blob-code blob-code-inner js-file-line" > relative < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L1671"
class
= "blob-num js-line-number"
data - line - number = "1671" > < /td>
    < td
id = "LC1671"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>&gt;<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > {dir < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > parentNode < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, first < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >
},<
/td>
< /tr>
< tr >
< td
id = "L1672"
class
= "blob-num js-line-number"
data - line - number = "1672" > < /td>
    < td
id = "LC1672"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > {dir < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > parentNode < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
},<
/td>
< /tr>
< tr >
< td
id = "L1673"
class
= "blob-num js-line-number"
data - line - number = "1673" > < /td>
    < td
id = "LC1673"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>+<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > {dir < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > previousSibling < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, first < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >
},<
/td>
< /tr>
< tr >
< td
id = "L1674"
class
= "blob-num js-line-number"
data - line - number = "1674" > < /td>
    < td
id = "LC1674"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>~<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > {dir < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > previousSibling < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
}<
/td>
< /tr>
< tr >
< td
id = "L1675"
class
= "blob-num js-line-number"
data - line - number = "1675" > < /td>
    < td
id = "LC1675"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L1676"
class
= "blob-num js-line-number"
data - line - number = "1676" > < /td>
    < td
id = "LC1676"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1677"
class
= "blob-num js-line-number"
data - line - number = "1677" > < /td>
    < td
id = "LC1677"
class
= "blob-code blob-code-inner js-file-line" > preFilter < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L1678"
class
= "blob-num js-line-number"
data - line - number = "1678" > < /td>
    < td
id = "LC1678"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ATTR<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (match) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1679"
class
    = "blob-num js-line-number"
    data - line - number = "1679" > < /td>
        < td
    id = "LC1679"
class
    = "blob-code blob-code-inner js-file-line" > match[ < span
class
    = "pl-c1" > 1 < /span>] <span class="pl-k">=</s
    pan > match[ < span
class
    = "pl-c1" > 1 < /span>]<span class="pl-k">.</s
    pan > replace(runescape, funescape);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1680"
class
    = "blob-num js-line-number"
    data - line - number = "1680" > < /td>
        < td
    id = "LC1680"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1681"
class
    = "blob-num js-line-number"
    data - line - number = "1681" > < /td>
        < td
    id = "LC1681"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Move the given value to match[3] whether quoted or unquoted</span></td>
        < /tr>
        < tr >
        < td
    id = "L1682"
class
    = "blob-num js-line-number"
    data - line - number = "1682" > < /td>
        < td
    id = "LC1682"
class
    = "blob-code blob-code-inner js-file-line" > match[ < span
class
    = "pl-c1" > 3 < /span>] <span class="pl-k">=</s
    pan > (match[ < span
class
    = "pl-c1" > 3 < /span>] <span class="pl-k">||</s
    pan > match[ < span
class
    = "pl-c1" > 4 < /span>] <span class="pl-k">||</s
    pan > match[ < span
class
    = "pl-c1" > 5 < /span>] <span class="pl-k">||</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span><span class="pl-pds">&quot;</s
    pan > < /span> )<span class="pl-k">.</s
    pan > replace(runescape, funescape);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1683"
class
    = "blob-num js-line-number"
    data - line - number = "1683" > < /td>
        < td
    id = "LC1683"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1684"
class
    = "blob-num js-line-number"
    data - line - number = "1684" > < /td>
        < td
    id = "LC1684"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( match[<span class="pl-c1">2</span>] <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>~=<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1685"
class
    = "blob-num js-line-number"
    data - line - number = "1685" > < /td>
        < td
    id = "LC1685"
class
    = "blob-code blob-code-inner js-file-line" > match[ < span
class
    = "pl-c1" > 3 < /span>] <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > match[ < span
class
    = "pl-c1" > 3 < /span>] <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1686"
class
    = "blob-num js-line-number"
    data - line - number = "1686" > < /td>
        < td
    id = "LC1686"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L1687"
class
= "blob-num js-line-number"
data - line - number = "1687" > < /td>
    < td
id = "LC1687"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1688"
class
= "blob-num js-line-number"
data - line - number = "1688" > < /td>
    < td
id = "LC1688"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> match<span class="pl-k">.</s
pan > slice( < span
class
= "pl-c1" > 0 < /span>, <span class="pl-c1">4</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1689"
class
= "blob-num js-line-number"
data - line - number = "1689" > < /td>
    < td
id = "LC1689"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L1690"
class
= "blob-num js-line-number"
data - line - number = "1690" > < /td>
    < td
id = "LC1690"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1691"
class
= "blob-num js-line-number"
data - line - number = "1691" > < /td>
    < td
id = "LC1691"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>CHILD<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (match) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1692"
class
    = "blob-num js-line-number"
    data - line - number = "1692" > < /td>
        < td
    id = "LC1692"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >/*</span> matches from matchExpr[&quot;CHILD&quot;]</span></td>
      </tr>
      <tr>
        <td id="L1693" class="blob-num js-line-number" data-line-number="1693"></td>
        <td id="LC1693" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         1 type (only|nth|...)</span></td>
      </tr>
      <tr>
        <td id="L1694" class="blob-num js-line-number" data-line-number="1694"></td>
        <td id="LC1694" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         2 what (child|of-type)</span></td>
      </tr>
      <tr>
        <td id="L1695" class="blob-num js-line-number" data-line-number="1695"></td>
        <td id="LC1695" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)</span></td>
      </tr>
      <tr>
        <td id="L1696" class="blob-num js-line-number" data-line-number="1696"></td>
        <td id="LC1696" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         4 xn-component of xn+y argument ([+-]?\d*n|)</span></td>
      </tr>
      <tr>
        <td id="L1697" class="blob-num js-line-number" data-line-number="1697"></td>
        <td id="LC1697" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         5 sign of xn-component</span></td>
      </tr>
      <tr>
        <td id="L1698" class="blob-num js-line-number" data-line-number="1698"></td>
        <td id="LC1698" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         6 x of xn-component</span></td>
      </tr>
      <tr>
        <td id="L1699" class="blob-num js-line-number" data-line-number="1699"></td>
        <td id="LC1699" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         7 sign of y-component</span></td>
      </tr>
      <tr>
        <td id="L1700" class="blob-num js-line-number" data-line-number="1700"></td>
        <td id="LC1700" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         8 y of y-component</span></td>
      </tr>
      <tr>
        <td id="L1701" class="blob-num js-line-number" data-line-number="1701"></td>
        <td id="LC1701" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         <span class="pl-c">*/ < /span></s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1702"
class
    = "blob-num js-line-number"
    data - line - number = "1702" > < /td>
        < td
    id = "LC1702"
class
    = "blob-code blob-code-inner js-file-line" > match[ < span
class
    = "pl-c1" > 1 < /span>] <span class="pl-k">=</s
    pan > match[ < span
class
    = "pl-c1" > 1 < /span>]<span class="pl-k">.</s
    pan > toLowerCase();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1703"
class
    = "blob-num js-line-number"
    data - line - number = "1703" > < /td>
        < td
    id = "LC1703"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1704"
class
    = "blob-num js-line-number"
    data - line - number = "1704" > < /td>
        < td
    id = "LC1704"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( match[<span class="pl-c1">1</span>]<span class="pl-k">.</s
    pan > slice( < span
class
    = "pl-c1" > 0 < /span>, <span class="pl-c1">3</s
    pan >
) <
    span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > nth < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1705"
class
    = "blob-num js-line-number"
    data - line - number = "1705" > < /td>
        < td
    id = "LC1705"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> nth-* requires argument</span></td>
        < /tr>
        < tr >
        < td
    id = "L1706"
class
    = "blob-num js-line-number"
    data - line - number = "1706" > < /td>
        < td
    id = "LC1706"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > match[ < span
class
    = "pl-c1" > 3 < /span>] ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1707"
class
    = "blob-num js-line-number"
    data - line - number = "1707" > < /td>
        < td
    id = "LC1707"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-smi" > Sizzle < /span><span class="pl-k">.</s
    pan > error(match[ < span
class
    = "pl-c1" > 0 < /span>] );</
    td >
    < /tr>
    < tr >
    < td
    id = "L1708"
class
    = "blob-num js-line-number"
    data - line - number = "1708" > < /td>
        < td
    id = "LC1708"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1709"
class
= "blob-num js-line-number"
data - line - number = "1709" > < /td>
    < td
id = "LC1709"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1710"
class
= "blob-num js-line-number"
data - line - number = "1710" > < /td>
    < td
id = "LC1710"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> numeric x and y parameters for Expr.filter.CHILD</span></td>
    < /tr>
    < tr >
    < td
id = "L1711"
class
= "blob-num js-line-number"
data - line - number = "1711" > < /td>
    < td
id = "LC1711"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> remember that false/true cast respectively to 0/1</span></td>
    < /tr>
    < tr >
    < td
id = "L1712"
class
= "blob-num js-line-number"
data - line - number = "1712" > < /td>
    < td
id = "LC1712"
class
= "blob-code blob-code-inner js-file-line" > match[ < span
class
= "pl-c1" > 4 < /span>] <span class="pl-k">=</s
pan > < span
class
= "pl-k" > + < /span>( match[<span class="pl-c1">4</span>] <span class="pl-k">?</s
pan > match[ < span
class
= "pl-c1" > 5 < /span>] <span class="pl-k">+</s
pan > (match[ < span
class
= "pl-c1" > 6 < /span>] <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > 1 < /span>) <span class="pl-k">:</s
pan > < span
class
= "pl-c1" > 2 < /span> <span class="pl-k">*</s
pan > (match[ < span
class
= "pl-c1" > 3 < /span>] <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>even<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">||</s
pan > match[ < span
class
= "pl-c1" > 3 < /span>] <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>odd<span class="pl-pds">&quot;</s
pan > < /span> ) );</
td >
< /tr>
< tr >
< td
id = "L1713"
class
= "blob-num js-line-number"
data - line - number = "1713" > < /td>
    < td
id = "LC1713"
class
= "blob-code blob-code-inner js-file-line" > match[ < span
class
= "pl-c1" > 5 < /span>] <span class="pl-k">=</s
pan > < span
class
= "pl-k" > + < /span>( ( match[<span class="pl-c1">7</span>] <span class="pl-k">+</s
pan > match[ < span
class
= "pl-c1" > 8 < /span>] ) <span class="pl-k">||</s
pan > match[ < span
class
= "pl-c1" > 3 < /span>] <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>odd<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L1714"
class
= "blob-num js-line-number"
data - line - number = "1714" > < /td>
    < td
id = "LC1714"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1715"
class
= "blob-num js-line-number"
data - line - number = "1715" > < /td>
    < td
id = "LC1715"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> other types prohibit arguments</span></td>
    < /tr>
    < tr >
    < td
id = "L1716"
class
= "blob-num js-line-number"
data - line - number = "1716" > < /td>
    < td
id = "LC1716"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (match[ < span
class
= "pl-c1" > 3 < /span>] ) {</
td >
< /tr>
< tr >
< td
id = "L1717"
class
= "blob-num js-line-number"
data - line - number = "1717" > < /td>
    < td
id = "LC1717"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > error(match[ < span
class
= "pl-c1" > 0 < /span>] );</
td >
< /tr>
< tr >
< td
id = "L1718"
class
= "blob-num js-line-number"
data - line - number = "1718" > < /td>
    < td
id = "LC1718"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1719"
class
= "blob-num js-line-number"
data - line - number = "1719" > < /td>
    < td
id = "LC1719"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1720"
class
= "blob-num js-line-number"
data - line - number = "1720" > < /td>
    < td
id = "LC1720"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> match;</
td >
< /tr>
< tr >
< td
id = "L1721"
class
= "blob-num js-line-number"
data - line - number = "1721" > < /td>
    < td
id = "LC1721"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L1722"
class
= "blob-num js-line-number"
data - line - number = "1722" > < /td>
    < td
id = "LC1722"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1723"
class
= "blob-num js-line-number"
data - line - number = "1723" > < /td>
    < td
id = "LC1723"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>PSEUDO<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (match) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1724"
class
    = "blob-num js-line-number"
    data - line - number = "1724" > < /td>
        < td
    id = "LC1724"
class
    = "blob-code blob-code-inner js-file-line" >
    var excess, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L1725"
class
    = "blob-num js-line-number"
    data - line - number = "1725" > < /td>
        < td
    id = "LC1725"
class
    = "blob-code blob-code-inner js-file-line" > unquoted < span
class
    = "pl-k" >= < /span> <span class="pl-k">!</s
    pan > match[ < span
class
    = "pl-c1" > 6 < /span>] <span class="pl-k">&amp;&amp;</s
    pan > match[ < span
class
    = "pl-c1" > 2 < /span>];</
    td >
    < /tr>
    < tr >
    < td
    id = "L1726"
class
    = "blob-num js-line-number"
    data - line - number = "1726" > < /td>
        < td
    id = "LC1726"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1727"
class
    = "blob-num js-line-number"
    data - line - number = "1727" > < /td>
        < td
    id = "LC1727"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( matchExpr[<span class="pl-s"><span class="pl-pds">&quot;</span>CHILD<span class="pl-pds">&quot;</span></span>]<span class="pl-k">.</s
    pan > test(match[ < span
class
    = "pl-c1" > 0 < /span>] ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1728"
class
    = "blob-num js-line-number"
    data - line - number = "1728" > < /td>
        < td
    id = "LC1728"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">null</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1729"
class
    = "blob-num js-line-number"
    data - line - number = "1729" > < /td>
        < td
    id = "LC1729"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L1730"
class
= "blob-num js-line-number"
data - line - number = "1730" > < /td>
    < td
id = "LC1730"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1731"
class
= "blob-num js-line-number"
data - line - number = "1731" > < /td>
    < td
id = "LC1731"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Accept quoted arguments as-is</span></td>
    < /tr>
    < tr >
    < td
id = "L1732"
class
= "blob-num js-line-number"
data - line - number = "1732" > < /td>
    < td
id = "LC1732"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( match[<span class="pl-c1">3</span>] ) {</
td >
< /tr>
< tr >
< td
id = "L1733"
class
= "blob-num js-line-number"
data - line - number = "1733" > < /td>
    < td
id = "LC1733"
class
= "blob-code blob-code-inner js-file-line" > match[ < span
class
= "pl-c1" > 2 < /span>] <span class="pl-k">=</s
pan > match[ < span
class
= "pl-c1" > 4 < /span>] <span class="pl-k">||</s
pan > match[ < span
class
= "pl-c1" > 5 < /span>] <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L1734"
class
= "blob-num js-line-number"
data - line - number = "1734" > < /td>
    < td
id = "LC1734"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1735"
class
= "blob-num js-line-number"
data - line - number = "1735" > < /td>
    < td
id = "LC1735"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Strip excess characters from unquoted arguments</span></td>
    < /tr>
    < tr >
    < td
id = "L1736"
class
= "blob-num js-line-number"
data - line - number = "1736" > < /td>
    < td
id = "LC1736"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (unquoted < span
class
= "pl-k" > &amp;&amp; < /span> rpseudo<span class="pl-k">.</s
pan > test(unquoted) < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L1737"
class
= "blob-num js-line-number"
data - line - number = "1737" > < /td>
    < td
id = "LC1737"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get excess from tokenize (recursively)</span></td>
    < /tr>
    < tr >
    < td
id = "L1738"
class
= "blob-num js-line-number"
data - line - number = "1738" > < /td>
    < td
id = "LC1738"
class
= "blob-code blob-code-inner js-file-line" > (excess < span
class
= "pl-k" >= < /span> tokenize( unquoted, <span class="pl-c1">true</s
pan >
)) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L1739"
class
= "blob-num js-line-number"
data - line - number = "1739" > < /td>
    < td
id = "LC1739"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> advance to the next closing parenthesis</span></td>
    < /tr>
    < tr >
    < td
id = "L1740"
class
= "blob-num js-line-number"
data - line - number = "1740" > < /td>
    < td
id = "LC1740"
class
= "blob-code blob-code-inner js-file-line" > (excess < span
class
= "pl-k" >= < /span> unquoted<span class="pl-k">.</s
pan > indexOf( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>)<span class="pl-pds">&quot;</s
pan > < /span>, unquoted<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > - < /span> excess ) <span class="pl-k">-</s
pan > unquoted < span
class
= "pl-k" >
.<
/span>length) ) {</
td >
< /tr>
< tr >
< td
id = "L1741"
class
= "blob-num js-line-number"
data - line - number = "1741" > < /td>
    < td
id = "LC1741"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1742"
class
= "blob-num js-line-number"
data - line - number = "1742" > < /td>
    < td
id = "LC1742"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> excess is a negative index</span></td>
    < /tr>
    < tr >
    < td
id = "L1743"
class
= "blob-num js-line-number"
data - line - number = "1743" > < /td>
    < td
id = "LC1743"
class
= "blob-code blob-code-inner js-file-line" > match[ < span
class
= "pl-c1" > 0 < /span>] <span class="pl-k">=</s
pan > match[ < span
class
= "pl-c1" > 0 < /span>]<span class="pl-k">.</s
pan > slice( < span
class
= "pl-c1" > 0 < /span>, excess );</
td >
< /tr>
< tr >
< td
id = "L1744"
class
= "blob-num js-line-number"
data - line - number = "1744" > < /td>
    < td
id = "LC1744"
class
= "blob-code blob-code-inner js-file-line" > match[ < span
class
= "pl-c1" > 2 < /span>] <span class="pl-k">=</s
pan > unquoted < span
class
= "pl-k" >
.<
/span>slice( <span class="pl-c1">0</s
pan >, excess
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1745"
class
= "blob-num js-line-number"
data - line - number = "1745" > < /td>
    < td
id = "LC1745"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1746"
class
= "blob-num js-line-number"
data - line - number = "1746" > < /td>
    < td
id = "LC1746"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1747"
class
= "blob-num js-line-number"
data - line - number = "1747" > < /td>
    < td
id = "LC1747"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return only captures needed by the pseudo filter method (type and argument)</span></td>
    < /tr>
    < tr >
    < td
id = "L1748"
class
= "blob-num js-line-number"
data - line - number = "1748" > < /td>
    < td
id = "LC1748"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> match<span class="pl-k">.</s
pan > slice( < span
class
= "pl-c1" > 0 < /span>, <span class="pl-c1">3</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1749"
class
= "blob-num js-line-number"
data - line - number = "1749" > < /td>
    < td
id = "LC1749"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1750"
class
= "blob-num js-line-number"
data - line - number = "1750" > < /td>
    < td
id = "LC1750"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L1751"
class
= "blob-num js-line-number"
data - line - number = "1751" > < /td>
    < td
id = "LC1751"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1752"
class
= "blob-num js-line-number"
data - line - number = "1752" > < /td>
    < td
id = "LC1752"
class
= "blob-code blob-code-inner js-file-line" > filter < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L1753"
class
= "blob-num js-line-number"
data - line - number = "1753" > < /td>
    < td
id = "LC1753"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1754"
class
= "blob-num js-line-number"
data - line - number = "1754" > < /td>
    < td
id = "LC1754"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>TAG<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (nodeNameSelector) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1755"
class
    = "blob-num js-line-number"
    data - line - number = "1755" > < /td>
        < td
    id = "LC1755"
class
    = "blob-code blob-code-inner js-file-line" >
    var nodeName
<
    span
class
    = "pl-k" >= < /span> nodeNameSelector<span class="pl-k">.</s
    pan > replace(runescape, funescape) < span
class
    = "pl-k" >
.<
    /span>toLowerCase();</
    td >
    < /tr>
    < tr >
    < td
    id = "L1756"
class
    = "blob-num js-line-number"
    data - line - number = "1756" > < /td>
        < td
    id = "LC1756"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> nodeNameSelector <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>*<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">?</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1757"
class
    = "blob-num js-line-number"
    data - line - number = "1757" > < /td>
        < td
    id = "LC1757"
class
    = "blob-code blob-code-inner js-file-line" > function () { <
        span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-c1">true</s
        pan >;
    } < span
class
    = "pl-k" >
:<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L1758"
class
    = "blob-num js-line-number"
    data - line - number = "1758" > < /td>
        < td
    id = "LC1758"
class
    = "blob-code blob-code-inner js-file-line" > function (elem) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1759"
    class
        = "blob-num js-line-number"
        data - line - number = "1759" > < /td>
            < td
        id = "LC1759"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> elem<span class="pl-k">.</s
        pan > nodeName < span
    class
        = "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
        pan > nodeName < span
    class
        = "pl-k" >
    .<
        /span>toLowerCase() <span class="pl-k">===</s
        pan > nodeName;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1760"
    class
        = "blob-num js-line-number"
        data - line - number = "1760" > < /td>
            < td
        id = "LC1760"
    class
        = "blob-code blob-code-inner js-file-line" >
    };
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1761"
class
    = "blob-num js-line-number"
    data - line - number = "1761" > < /td>
        < td
    id = "LC1761"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L1762"
class
= "blob-num js-line-number"
data - line - number = "1762" > < /td>
    < td
id = "LC1762"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1763"
class
= "blob-num js-line-number"
data - line - number = "1763" > < /td>
    < td
id = "LC1763"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>CLASS<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (className) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1764"
class
    = "blob-num js-line-number"
    data - line - number = "1764" > < /td>
        < td
    id = "LC1764"
class
    = "blob-code blob-code-inner js-file-line" >
    var pattern
<
    span
class
    = "pl-k" >= < /span> classCache[ className <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L1765"
class
    = "blob-num js-line-number"
    data - line - number = "1765" > < /td>
        < td
    id = "LC1765"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1766"
class
    = "blob-num js-line-number"
    data - line - number = "1766" > < /td>
        < td
    id = "LC1766"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> pattern <span class="pl-k">||</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1767"
class
    = "blob-num js-line-number"
    data - line - number = "1767" > < /td>
        < td
    id = "LC1767"
class
    = "blob-code blob-code-inner js-file-line" > (pattern < span
class
    = "pl-k" >= < /span> <span class="pl-k">new</s
    pan > < span
class
    = "pl-smi" > RegExp < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > ( ^ | < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> whitespace <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>)<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > className < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > ( < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> whitespace <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>|$)<span class="pl-pds">&quot;</s
    pan > < /span> )) <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1768"
class
    = "blob-num js-line-number"
    data - line - number = "1768" > < /td>
        < td
    id = "LC1768"
class
    = "blob-code blob-code-inner js-file-line" > classCache(className, function (elem) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1769"
    class
        = "blob-num js-line-number"
        data - line - number = "1769" > < /td>
            < td
        id = "LC1769"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> pattern<span class="pl-k">.</s
        pan > test(typeof elem < span
    class
        = "pl-k" >
    .<
        /span>className <span class="pl-k">===</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>string<span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">&amp;&amp;</s
        pan > elem < span
    class
        = "pl-k" >
    .<
        /span>className <span class="pl-k">||</s
        pan > typeof elem < span
    class
        = "pl-k" >
    .<
        /span>getAttribute <span class="pl-k">!=</s
        pan > < span
    class
        = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > undefined < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan > < span
    class
        = "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
        pan > getAttribute( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>class<span class="pl-pds">&quot;</s
        pan > < /span>) <span class="pl-k">||</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span><span class="pl-pds">&quot;</s
        pan > < /span> );</
        td >
        < /tr>
        < tr >
        < td
        id = "L1770"
    class
        = "blob-num js-line-number"
        data - line - number = "1770" > < /td>
            < td
        id = "LC1770"
    class
        = "blob-code blob-code-inner js-file-line" >
    });
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1771"
class
    = "blob-num js-line-number"
    data - line - number = "1771" > < /td>
        < td
    id = "LC1771"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L1772"
class
= "blob-num js-line-number"
data - line - number = "1772" > < /td>
    < td
id = "LC1772"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1773"
class
= "blob-num js-line-number"
data - line - number = "1773" > < /td>
    < td
id = "LC1773"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ATTR<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (name, operator, check) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1774"
class
    = "blob-num js-line-number"
    data - line - number = "1774" > < /td>
        < td
    id = "LC1774"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> function( elem ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1775"
class
    = "blob-num js-line-number"
    data - line - number = "1775" > < /td>
        < td
    id = "LC1775"
class
    = "blob-code blob-code-inner js-file-line" >
    var result
<
    span
class
    = "pl-k" >= < /span> <span class="pl-smi">Sizzle</s
    pan > < span
class
    = "pl-k" >
.<
    /span>attr( elem, name );</
    td >
    < /tr>
    < tr >
    < td
    id = "L1776"
class
    = "blob-num js-line-number"
    data - line - number = "1776" > < /td>
        < td
    id = "LC1776"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1777"
class
    = "blob-num js-line-number"
    data - line - number = "1777" > < /td>
        < td
    id = "LC1777"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( result <span class="pl-k">==</s
    pan > < span
class
    = "pl-c1" > null < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1778"
class
    = "blob-num js-line-number"
    data - line - number = "1778" > < /td>
        < td
    id = "LC1778"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> operator <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>!=<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1779"
class
    = "blob-num js-line-number"
    data - line - number = "1779" > < /td>
        < td
    id = "LC1779"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L1780"
class
= "blob-num js-line-number"
data - line - number = "1780" > < /td>
    < td
id = "LC1780"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > operator
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1781"
class
    = "blob-num js-line-number"
    data - line - number = "1781" > < /td>
        < td
    id = "LC1781"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1782"
class
    = "blob-num js-line-number"
    data - line - number = "1782" > < /td>
        < td
    id = "LC1782"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1783"
class
= "blob-num js-line-number"
data - line - number = "1783" > < /td>
    < td
id = "LC1783"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1784"
class
= "blob-num js-line-number"
data - line - number = "1784" > < /td>
    < td
id = "LC1784"
class
= "blob-code blob-code-inner js-file-line" > result < span
class
= "pl-k" > +=
<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L1785"
class
= "blob-num js-line-number"
data - line - number = "1785" > < /td>
    < td
id = "LC1785"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1786"
class
= "blob-num js-line-number"
data - line - number = "1786" > < /td>
    < td
id = "LC1786"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> operator <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>=<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">?</s
pan > result < span
class
= "pl-k" >= == < /span> check <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1787"
class
= "blob-num js-line-number"
data - line - number = "1787" > < /td>
    < td
id = "LC1787"
class
= "blob-code blob-code-inner js-file-line" > operator < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > != < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span> result <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> check <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1788"
class
= "blob-num js-line-number"
data - line - number = "1788" > < /td>
    < td
id = "LC1788"
class
= "blob-code blob-code-inner js-file-line" > operator < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ^=
<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span> check <span class="pl-k">&amp;&amp;</s
pan > result < span
class
= "pl-k" >
.<
/span>indexOf( check ) <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 0 < /span> <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1789"
class
= "blob-num js-line-number"
data - line - number = "1789" > < /td>
    < td
id = "LC1789"
class
= "blob-code blob-code-inner js-file-line" > operator < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > *=
<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span> check <span class="pl-k">&amp;&amp;</s
pan > result < span
class
= "pl-k" >
.<
/span>indexOf( check ) <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan > < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1790"
class
= "blob-num js-line-number"
data - line - number = "1790" > < /td>
    < td
id = "LC1790"
class
= "blob-code blob-code-inner js-file-line" > operator < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > $ =
<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span> check <span class="pl-k">&amp;&amp;</s
pan > result < span
class
= "pl-k" >
.<
/span>slice( <span class="pl-k">-</s
pan > check < span
class
= "pl-k" >
.<
/span>length ) <span class="pl-k">===</s
pan > check < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1791"
class
= "blob-num js-line-number"
data - line - number = "1791" > < /td>
    < td
id = "LC1791"
class
= "blob-code blob-code-inner js-file-line" > operator < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ~ =
<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span> ( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> result<span class="pl-k">.</s
pan > replace(rwhitespace, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > indexOf(check) < span
class
= "pl-k" > &gt; < /span> <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1792"
class
= "blob-num js-line-number"
data - line - number = "1792" > < /td>
    < td
id = "LC1792"
class
= "blob-code blob-code-inner js-file-line" > operator < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > |=
<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span> result <span class="pl-k">===</s
pan > check < span
class
= "pl-k" > || < /span> result<span class="pl-k">.</s
pan > slice( < span
class
= "pl-c1" > 0 < /span>, check<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > + < /span> <span class="pl-c1">1</s
pan >
) <
span
class
= "pl-k" >= == < /span> check <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>-<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1793"
class
= "blob-num js-line-number"
data - line - number = "1793" > < /td>
    < td
id = "LC1793"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > false < /span>;</
td >
< /tr>
< tr >
< td
id = "L1794"
class
= "blob-num js-line-number"
data - line - number = "1794" > < /td>
    < td
id = "LC1794"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1795"
class
= "blob-num js-line-number"
data - line - number = "1795" > < /td>
    < td
id = "LC1795"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L1796"
class
= "blob-num js-line-number"
data - line - number = "1796" > < /td>
    < td
id = "LC1796"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1797"
class
= "blob-num js-line-number"
data - line - number = "1797" > < /td>
    < td
id = "LC1797"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>CHILD<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (type, what, argument, first, last) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1798"
class
    = "blob-num js-line-number"
    data - line - number = "1798" > < /td>
        < td
    id = "LC1798"
class
    = "blob-code blob-code-inner js-file-line" >
    var simple
<
    span
class
    = "pl-k" >= < /span> type<span class="pl-k">.</s
    pan > slice( < span
class
    = "pl-c1" > 0 < /span>, <span class="pl-c1">3</s
    pan >
) <
    span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>nth<span class="pl-pds">&quot;</s
    pan > < /span>,</
    td >
    < /tr>
    < tr >
    < td
    id = "L1799"
class
    = "blob-num js-line-number"
    data - line - number = "1799" > < /td>
        < td
    id = "LC1799"
class
    = "blob-code blob-code-inner js-file-line" > forward < span
class
    = "pl-k" >= < /span> type<span class="pl-k">.</s
    pan > slice( < span
class
    = "pl-k" > - < /span><span class="pl-c1">4</s
    pan >
) <
    span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>last<span class="pl-pds">&quot;</s
    pan > < /span>,</
    td >
    < /tr>
    < tr >
    < td
    id = "L1800"
class
    = "blob-num js-line-number"
    data - line - number = "1800" > < /td>
        < td
    id = "LC1800"
class
    = "blob-code blob-code-inner js-file-line" > ofType < span
class
    = "pl-k" >= < /span> what <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>of-type<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1801"
class
    = "blob-num js-line-number"
    data - line - number = "1801" > < /td>
        < td
    id = "LC1801"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1802"
class
    = "blob-num js-line-number"
    data - line - number = "1802" > < /td>
        < td
    id = "LC1802"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> first <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 1 < /span> <span class="pl-k">&amp;&amp;</s
    pan > last < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">0</s
    pan > < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L1803"
class
    = "blob-num js-line-number"
    data - line - number = "1803" > < /td>
        < td
    id = "LC1803"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1804"
class
    = "blob-num js-line-number"
    data - line - number = "1804" > < /td>
        < td
    id = "LC1804"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Shortcut for :nth-*(n)</span></td>
        < /tr>
        < tr >
        < td
    id = "L1805"
class
    = "blob-num js-line-number"
    data - line - number = "1805" > < /td>
        < td
    id = "LC1805"
class
    = "blob-code blob-code-inner js-file-line" > function (elem) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1806"
    class
        = "blob-num js-line-number"
        data - line - number = "1806" > < /td>
            < td
        id = "LC1806"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-k">!!</s
        pan > elem < span
    class
        = "pl-k" >
    .<
        /span>parentNode;</
        td >
        < /tr>
        < tr >
        < td
        id = "L1807"
    class
        = "blob-num js-line-number"
        data - line - number = "1807" > < /td>
            < td
        id = "LC1807"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < span
class
    = "pl-k" >
:<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L1808"
class
    = "blob-num js-line-number"
    data - line - number = "1808" > < /td>
        < td
    id = "LC1808"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1809"
class
    = "blob-num js-line-number"
    data - line - number = "1809" > < /td>
        < td
    id = "LC1809"
class
    = "blob-code blob-code-inner js-file-line" > function (elem, context, xml) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1810"
    class
        = "blob-num js-line-number"
        data - line - number = "1810" > < /td>
            < td
        id = "LC1810"
    class
        = "blob-code blob-code-inner js-file-line" >
        var cache, uniqueCache, outerCache, node, nodeIndex, start, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1811"
    class
        = "blob-num js-line-number"
        data - line - number = "1811" > < /td>
            < td
        id = "LC1811"
    class
        = "blob-code blob-code-inner js-file-line" > dir < span
    class
        = "pl-k" >= < /span> simple <span class="pl-k">!=</s
        pan > < span
    class
        = "pl-k" >= < /span> forward <span class="pl-k">?</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>nextSibling<span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">:</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>previousSibling<span class="pl-pds">&quot;</s
        pan > < /span>,</
        td >
        < /tr>
        < tr >
        < td
        id = "L1812"
    class
        = "blob-num js-line-number"
        data - line - number = "1812" > < /td>
            < td
        id = "LC1812"
    class
        = "blob-code blob-code-inner js-file-line" > parent < span
    class
        = "pl-k" >= < /span> elem<span class="pl-k">.</s
        pan > parentNode,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1813"
    class
        = "blob-num js-line-number"
        data - line - number = "1813" > < /td>
            < td
        id = "LC1813"
    class
        = "blob-code blob-code-inner js-file-line" > name < span
    class
        = "pl-k" >= < /span> ofType <span class="pl-k">&amp;&amp;</s
        pan > elem < span
    class
        = "pl-k" >
    .<
        /span>nodeName<span class="pl-k">.</s
        pan > toLowerCase(),
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1814"
    class
        = "blob-num js-line-number"
        data - line - number = "1814" > < /td>
            < td
        id = "LC1814"
    class
        = "blob-code blob-code-inner js-file-line" > useCache < span
    class
        = "pl-k" >= < /span> <span class="pl-k">!</s
        pan > xml < span
    class
        = "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
        pan > ofType,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1815"
    class
        = "blob-num js-line-number"
        data - line - number = "1815" > < /td>
            < td
        id = "LC1815"
    class
        = "blob-code blob-code-inner js-file-line" > diff < span
    class
        = "pl-k" >= < /span> <span class="pl-c1">false</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1816"
    class
        = "blob-num js-line-number"
        data - line - number = "1816" > < /td>
            < td
        id = "LC1816"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L1817"
    class
        = "blob-num js-line-number"
        data - line - number = "1817" > < /td>
            < td
        id = "LC1817"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( parent ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L1818"
    class
        = "blob-num js-line-number"
        data - line - number = "1818" > < /td>
            < td
        id = "LC1818"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L1819"
    class
        = "blob-num js-line-number"
        data - line - number = "1819" > < /td>
            < td
        id = "LC1819"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> :(first|last|only)-(child|of-type)</span></td>
            < /tr>
            < tr >
            < td
        id = "L1820"
    class
        = "blob-num js-line-number"
        data - line - number = "1820" > < /td>
            < td
        id = "LC1820"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( simple ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L1821"
    class
        = "blob-num js-line-number"
        data - line - number = "1821" > < /td>
            < td
        id = "LC1821"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        while<
        /span> ( dir ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L1822"
    class
        = "blob-num js-line-number"
        data - line - number = "1822" > < /td>
            < td
        id = "LC1822"
    class
        = "blob-code blob-code-inner js-file-line" > node < span
    class
        = "pl-k" >= < /span> elem;</
        td >
        < /tr>
        < tr >
        < td
        id = "L1823"
    class
        = "blob-num js-line-number"
        data - line - number = "1823" > < /td>
            < td
        id = "LC1823"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        while<
        /span> ( (node <span class="pl-k">=</s
        pan > node[dir]
    )
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1824"
class
    = "blob-num js-line-number"
    data - line - number = "1824" > < /td>
        < td
    id = "LC1824"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( ofType <span class="pl-k">?</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1825"
class
    = "blob-num js-line-number"
    data - line - number = "1825" > < /td>
        < td
    id = "LC1825"
class
    = "blob-code blob-code-inner js-file-line" > node < span
class
    = "pl-k" >
.<
    /span>nodeName<span class="pl-k">.</s
    pan > toLowerCase() < span
class
    = "pl-k" >= == < /span> name <span class="pl-k">:</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1826"
class
    = "blob-num js-line-number"
    data - line - number = "1826" > < /td>
        < td
    id = "LC1826"
class
    = "blob-code blob-code-inner js-file-line" > node < span
class
    = "pl-k" >
.<
    /span>nodeType <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 1 < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1827"
class
    = "blob-num js-line-number"
    data - line - number = "1827" > < /td>
        < td
    id = "LC1827"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1828"
class
    = "blob-num js-line-number"
    data - line - number = "1828" > < /td>
        < td
    id = "LC1828"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1829"
class
    = "blob-num js-line-number"
    data - line - number = "1829" > < /td>
        < td
    id = "LC1829"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1830"
class
= "blob-num js-line-number"
data - line - number = "1830" > < /td>
    < td
id = "LC1830"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1831"
class
= "blob-num js-line-number"
data - line - number = "1831" > < /td>
    < td
id = "LC1831"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Reverse direction for :only-* (if we haven&#39;t yet done so)</span></td>
    < /tr>
    < tr >
    < td
id = "L1832"
class
= "blob-num js-line-number"
data - line - number = "1832" > < /td>
    < td
id = "LC1832"
class
= "blob-code blob-code-inner js-file-line" > start < span
class
= "pl-k" >= < /span> dir <span class="pl-k">=</s
pan > type < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > only < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
pan > start < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > nextSibling < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L1833"
class
= "blob-num js-line-number"
data - line - number = "1833" > < /td>
    < td
id = "LC1833"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1834"
class
= "blob-num js-line-number"
data - line - number = "1834" > < /td>
    < td
id = "LC1834"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L1835"
class
= "blob-num js-line-number"
data - line - number = "1835" > < /td>
    < td
id = "LC1835"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1836"
class
= "blob-num js-line-number"
data - line - number = "1836" > < /td>
    < td
id = "LC1836"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1837"
class
= "blob-num js-line-number"
data - line - number = "1837" > < /td>
    < td
id = "LC1837"
class
= "blob-code blob-code-inner js-file-line" > start < span
class
= "pl-k" >= < /span> [ forward <span class="pl-k">?</span> parent<span class="pl-k">.</span>firstChild <span class="pl-k">:</span> parent<span class="pl-k">.</span>lastChild ];</
td >
< /tr>
< tr >
< td
id = "L1838"
class
= "blob-num js-line-number"
data - line - number = "1838" > < /td>
    < td
id = "LC1838"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1839"
class
= "blob-num js-line-number"
data - line - number = "1839" > < /td>
    < td
id = "LC1839"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> non-xml :nth-child(...) stores cache data on `parent`</span></td>
    < /tr>
    < tr >
    < td
id = "L1840"
class
= "blob-num js-line-number"
data - line - number = "1840" > < /td>
    < td
id = "LC1840"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( forward <span class="pl-k">&amp;&amp;</s
pan > useCache
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1841"
class
    = "blob-num js-line-number"
    data - line - number = "1841" > < /td>
        < td
    id = "LC1841"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1842"
class
    = "blob-num js-line-number"
    data - line - number = "1842" > < /td>
        < td
    id = "LC1842"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Seek `elem` from a previously-cached index</span></td>
        < /tr>
        < tr >
        < td
    id = "L1843"
class
    = "blob-num js-line-number"
    data - line - number = "1843" > < /td>
        < td
    id = "LC1843"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1844"
class
    = "blob-num js-line-number"
    data - line - number = "1844" > < /td>
        < td
    id = "LC1844"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> ...in a gzip-friendly way</span></td>
        < /tr>
        < tr >
        < td
    id = "L1845"
class
    = "blob-num js-line-number"
    data - line - number = "1845" > < /td>
        < td
    id = "LC1845"
class
    = "blob-code blob-code-inner js-file-line" > node < span
class
    = "pl-k" >= < /span> parent;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1846"
class
    = "blob-num js-line-number"
    data - line - number = "1846" > < /td>
        < td
    id = "LC1846"
class
    = "blob-code blob-code-inner js-file-line" > outerCache < span
class
    = "pl-k" >= < /span> node[ expando ] <span class="pl-k">||</s
    pan > (node[expando] < span
class
    = "pl-k" >= < /span> {});</
    td >
    < /tr>
    < tr >
    < td
    id = "L1847"
class
    = "blob-num js-line-number"
    data - line - number = "1847" > < /td>
        < td
    id = "LC1847"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1848"
class
    = "blob-num js-line-number"
    data - line - number = "1848" > < /td>
        < td
    id = "LC1848"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE &lt;9 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L1849"
class
    = "blob-num js-line-number"
    data - line - number = "1849" > < /td>
        < td
    id = "LC1849"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Defend against cloned attroperties (jQuery gh-1709)</span></td>
        < /tr>
        < tr >
        < td
    id = "L1850"
class
    = "blob-num js-line-number"
    data - line - number = "1850" > < /td>
        < td
    id = "LC1850"
class
    = "blob-code blob-code-inner js-file-line" > uniqueCache < span
class
    = "pl-k" >= < /span> outerCache[ node<span class="pl-k">.</span>uniqueID ] <span class="pl-k">||</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1851"
class
    = "blob-num js-line-number"
    data - line - number = "1851" > < /td>
        < td
    id = "LC1851"
class
    = "blob-code blob-code-inner js-file-line" > (outerCache[node < span
class
    = "pl-k" >
.<
    /span>uniqueID ] <span class="pl-k">=</s
    pan > {}
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1852"
class
    = "blob-num js-line-number"
    data - line - number = "1852" > < /td>
        < td
    id = "LC1852"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1853"
class
    = "blob-num js-line-number"
    data - line - number = "1853" > < /td>
        < td
    id = "LC1853"
class
    = "blob-code blob-code-inner js-file-line" > cache < span
class
    = "pl-k" >= < /span> uniqueCache[ type ] <span class="pl-k">||</s
    pan > [];
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1854"
class
    = "blob-num js-line-number"
    data - line - number = "1854" > < /td>
        < td
    id = "LC1854"
class
    = "blob-code blob-code-inner js-file-line" > nodeIndex < span
class
    = "pl-k" >= < /span> cache[ <span class="pl-c1">0</span> ] <span class="pl-k">===</s
    pan > dirruns < span
class
    = "pl-k" > &amp;&amp; < /span> cache[ <span class="pl-c1">1</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L1855"
class
    = "blob-num js-line-number"
    data - line - number = "1855" > < /td>
        < td
    id = "LC1855"
class
    = "blob-code blob-code-inner js-file-line" > diff < span
class
    = "pl-k" >= < /span> nodeIndex <span class="pl-k">&amp;&amp;</s
    pan > cache[ < span
class
    = "pl-c1" > 2 < /span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L1856"
class
    = "blob-num js-line-number"
    data - line - number = "1856" > < /td>
        < td
    id = "LC1856"
class
    = "blob-code blob-code-inner js-file-line" > node < span
class
    = "pl-k" >= < /span> nodeIndex <span class="pl-k">&amp;&amp;</s
    pan > parent < span
class
    = "pl-k" >
.<
    /span>childNodes[ nodeIndex ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L1857"
class
    = "blob-num js-line-number"
    data - line - number = "1857" > < /td>
        < td
    id = "LC1857"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1858"
class
    = "blob-num js-line-number"
    data - line - number = "1858" > < /td>
        < td
    id = "LC1858"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( (node <span class="pl-k">=</s
    pan > < span
class
    = "pl-k" > ++ < /span>nodeIndex <span class="pl-k">&amp;&amp;</s
    pan > node < span
class
    = "pl-k" > &amp;&amp; < /span> node[ dir ] <span class="pl-k">||</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1859"
class
    = "blob-num js-line-number"
    data - line - number = "1859" > < /td>
        < td
    id = "LC1859"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1860"
class
    = "blob-num js-line-number"
    data - line - number = "1860" > < /td>
        < td
    id = "LC1860"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Fallback to seeking `elem` from the start</span></td>
        < /tr>
        < tr >
        < td
    id = "L1861"
class
    = "blob-num js-line-number"
    data - line - number = "1861" > < /td>
        < td
    id = "LC1861"
class
    = "blob-code blob-code-inner js-file-line" > (diff < span
class
    = "pl-k" >= < /span> nodeIndex <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > 0 < /span>) <span class="pl-k">||</s
    pan > start < span
class
    = "pl-k" >
.<
    /span>pop()) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1862"
class
    = "blob-num js-line-number"
    data - line - number = "1862" > < /td>
        < td
    id = "LC1862"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1863"
class
    = "blob-num js-line-number"
    data - line - number = "1863" > < /td>
        < td
    id = "LC1863"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> When found, cache indexes on `parent` and break</span></td>
        < /tr>
        < tr >
        < td
    id = "L1864"
class
    = "blob-num js-line-number"
    data - line - number = "1864" > < /td>
        < td
    id = "LC1864"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( node<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> <span class="pl-k">++</s
    pan > diff < span
class
    = "pl-k" > &amp;&amp; < /span> node <span class="pl-k">===</s
    pan > elem
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1865"
    class
        = "blob-num js-line-number"
        data - line - number = "1865" > < /td>
            < td
        id = "LC1865"
    class
        = "blob-code blob-code-inner js-file-line" > uniqueCache[type] < span
    class
        = "pl-k" >= < /span> [ dirruns, nodeIndex, diff ];</
        td >
        < /tr>
        < tr >
        < td
        id = "L1866"
    class
        = "blob-num js-line-number"
        data - line - number = "1866" > < /td>
            < td
        id = "LC1866"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        break
    <
        /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L1867"
    class
        = "blob-num js-line-number"
        data - line - number = "1867" > < /td>
            < td
        id = "LC1867"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1868"
class
    = "blob-num js-line-number"
    data - line - number = "1868" > < /td>
        < td
    id = "LC1868"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1869"
class
= "blob-num js-line-number"
data - line - number = "1869" > < /td>
    < td
id = "LC1869"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1870"
class
= "blob-num js-line-number"
data - line - number = "1870" > < /td>
    < td
id = "LC1870"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L1871"
class
= "blob-num js-line-number"
data - line - number = "1871" > < /td>
    < td
id = "LC1871"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use previously-cached element index if available</span></td>
    < /tr>
    < tr >
    < td
id = "L1872"
class
= "blob-num js-line-number"
data - line - number = "1872" > < /td>
    < td
id = "LC1872"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( useCache ) {</
td >
< /tr>
< tr >
< td
id = "L1873"
class
= "blob-num js-line-number"
data - line - number = "1873" > < /td>
    < td
id = "LC1873"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ...in a gzip-friendly way</span></td>
    < /tr>
    < tr >
    < td
id = "L1874"
class
= "blob-num js-line-number"
data - line - number = "1874" > < /td>
    < td
id = "LC1874"
class
= "blob-code blob-code-inner js-file-line" > node < span
class
= "pl-k" >= < /span> elem;</
td >
< /tr>
< tr >
< td
id = "L1875"
class
= "blob-num js-line-number"
data - line - number = "1875" > < /td>
    < td
id = "LC1875"
class
= "blob-code blob-code-inner js-file-line" > outerCache < span
class
= "pl-k" >= < /span> node[ expando ] <span class="pl-k">||</s
pan > (node[expando] < span
class
= "pl-k" >= < /span> {});</
td >
< /tr>
< tr >
< td
id = "L1876"
class
= "blob-num js-line-number"
data - line - number = "1876" > < /td>
    < td
id = "LC1876"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1877"
class
= "blob-num js-line-number"
data - line - number = "1877" > < /td>
    < td
id = "LC1877"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L1878"
class
= "blob-num js-line-number"
data - line - number = "1878" > < /td>
    < td
id = "LC1878"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Defend against cloned attroperties (jQuery gh-1709)</span></td>
    < /tr>
    < tr >
    < td
id = "L1879"
class
= "blob-num js-line-number"
data - line - number = "1879" > < /td>
    < td
id = "LC1879"
class
= "blob-code blob-code-inner js-file-line" > uniqueCache < span
class
= "pl-k" >= < /span> outerCache[ node<span class="pl-k">.</span>uniqueID ] <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1880"
class
= "blob-num js-line-number"
data - line - number = "1880" > < /td>
    < td
id = "LC1880"
class
= "blob-code blob-code-inner js-file-line" > (outerCache[node < span
class
= "pl-k" >
.<
/span>uniqueID ] <span class="pl-k">=</s
pan > {}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1881"
class
= "blob-num js-line-number"
data - line - number = "1881" > < /td>
    < td
id = "LC1881"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1882"
class
= "blob-num js-line-number"
data - line - number = "1882" > < /td>
    < td
id = "LC1882"
class
= "blob-code blob-code-inner js-file-line" > cache < span
class
= "pl-k" >= < /span> uniqueCache[ type ] <span class="pl-k">||</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L1883"
class
= "blob-num js-line-number"
data - line - number = "1883" > < /td>
    < td
id = "LC1883"
class
= "blob-code blob-code-inner js-file-line" > nodeIndex < span
class
= "pl-k" >= < /span> cache[ <span class="pl-c1">0</span> ] <span class="pl-k">===</s
pan > dirruns < span
class
= "pl-k" > &amp;&amp; < /span> cache[ <span class="pl-c1">1</span> ];</
td >
< /tr>
< tr >
< td
id = "L1884"
class
= "blob-num js-line-number"
data - line - number = "1884" > < /td>
    < td
id = "LC1884"
class
= "blob-code blob-code-inner js-file-line" > diff < span
class
= "pl-k" >= < /span> nodeIndex;</
td >
< /tr>
< tr >
< td
id = "L1885"
class
= "blob-num js-line-number"
data - line - number = "1885" > < /td>
    < td
id = "LC1885"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1886"
class
= "blob-num js-line-number"
data - line - number = "1886" > < /td>
    < td
id = "LC1886"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1887"
class
= "blob-num js-line-number"
data - line - number = "1887" > < /td>
    < td
id = "LC1887"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> xml :nth-child(...)</span></td>
    < /tr>
    < tr >
    < td
id = "L1888"
class
= "blob-num js-line-number"
data - line - number = "1888" > < /td>
    < td
id = "LC1888"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> or :nth-last-child(...) or :nth(-last)?-of-type(...)</span></td>
    < /tr>
    < tr >
    < td
id = "L1889"
class
= "blob-num js-line-number"
data - line - number = "1889" > < /td>
    < td
id = "LC1889"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( diff <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L1890"
class
= "blob-num js-line-number"
data - line - number = "1890" > < /td>
    < td
id = "LC1890"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use the same loop as above to seek `elem` from the start</span></td>
    < /tr>
    < tr >
    < td
id = "L1891"
class
= "blob-num js-line-number"
data - line - number = "1891" > < /td>
    < td
id = "LC1891"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( (node <span class="pl-k">=</s
pan > < span
class
= "pl-k" > ++ < /span>nodeIndex <span class="pl-k">&amp;&amp;</s
pan > node < span
class
= "pl-k" > &amp;&amp; < /span> node[ dir ] <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1892"
class
= "blob-num js-line-number"
data - line - number = "1892" > < /td>
    < td
id = "LC1892"
class
= "blob-code blob-code-inner js-file-line" > (diff < span
class
= "pl-k" >= < /span> nodeIndex <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 0 < /span>) <span class="pl-k">||</s
pan > start < span
class
= "pl-k" >
.<
/span>pop()) ) {</
td >
< /tr>
< tr >
< td
id = "L1893"
class
= "blob-num js-line-number"
data - line - number = "1893" > < /td>
    < td
id = "LC1893"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1894"
class
= "blob-num js-line-number"
data - line - number = "1894" > < /td>
    < td
id = "LC1894"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ( ofType <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1895"
class
= "blob-num js-line-number"
data - line - number = "1895" > < /td>
    < td
id = "LC1895"
class
= "blob-code blob-code-inner js-file-line" > node < span
class
= "pl-k" >
.<
/span>nodeName<span class="pl-k">.</s
pan > toLowerCase() < span
class
= "pl-k" >= == < /span> name <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1896"
class
= "blob-num js-line-number"
data - line - number = "1896" > < /td>
    < td
id = "LC1896"
class
= "blob-code blob-code-inner js-file-line" > node < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 1 < /span> ) <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1897"
class
= "blob-num js-line-number"
data - line - number = "1897" > < /td>
    < td
id = "LC1897"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ++ < /span>diff ) {</
td >
< /tr>
< tr >
< td
id = "L1898"
class
= "blob-num js-line-number"
data - line - number = "1898" > < /td>
    < td
id = "LC1898"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1899"
class
= "blob-num js-line-number"
data - line - number = "1899" > < /td>
    < td
id = "LC1899"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Cache the index of each encountered element</span></td>
    < /tr>
    < tr >
    < td
id = "L1900"
class
= "blob-num js-line-number"
data - line - number = "1900" > < /td>
    < td
id = "LC1900"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( useCache ) {</
td >
< /tr>
< tr >
< td
id = "L1901"
class
= "blob-num js-line-number"
data - line - number = "1901" > < /td>
    < td
id = "LC1901"
class
= "blob-code blob-code-inner js-file-line" > outerCache < span
class
= "pl-k" >= < /span> node[ expando ] <span class="pl-k">||</s
pan > (node[expando] < span
class
= "pl-k" >= < /span> {});</
td >
< /tr>
< tr >
< td
id = "L1902"
class
= "blob-num js-line-number"
data - line - number = "1902" > < /td>
    < td
id = "LC1902"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1903"
class
= "blob-num js-line-number"
data - line - number = "1903" > < /td>
    < td
id = "LC1903"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L1904"
class
= "blob-num js-line-number"
data - line - number = "1904" > < /td>
    < td
id = "LC1904"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Defend against cloned attroperties (jQuery gh-1709)</span></td>
    < /tr>
    < tr >
    < td
id = "L1905"
class
= "blob-num js-line-number"
data - line - number = "1905" > < /td>
    < td
id = "LC1905"
class
= "blob-code blob-code-inner js-file-line" > uniqueCache < span
class
= "pl-k" >= < /span> outerCache[ node<span class="pl-k">.</span>uniqueID ] <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L1906"
class
= "blob-num js-line-number"
data - line - number = "1906" > < /td>
    < td
id = "LC1906"
class
= "blob-code blob-code-inner js-file-line" > (outerCache[node < span
class
= "pl-k" >
.<
/span>uniqueID ] <span class="pl-k">=</s
pan > {}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L1907"
class
= "blob-num js-line-number"
data - line - number = "1907" > < /td>
    < td
id = "LC1907"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1908"
class
= "blob-num js-line-number"
data - line - number = "1908" > < /td>
    < td
id = "LC1908"
class
= "blob-code blob-code-inner js-file-line" > uniqueCache[type] < span
class
= "pl-k" >= < /span> [ dirruns, diff ];</
td >
< /tr>
< tr >
< td
id = "L1909"
class
= "blob-num js-line-number"
data - line - number = "1909" > < /td>
    < td
id = "LC1909"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1910"
class
= "blob-num js-line-number"
data - line - number = "1910" > < /td>
    < td
id = "LC1910"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1911"
class
= "blob-num js-line-number"
data - line - number = "1911" > < /td>
    < td
id = "LC1911"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( node <span class="pl-k">===</s
pan > elem
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1912"
class
    = "blob-num js-line-number"
    data - line - number = "1912" > < /td>
        < td
    id = "LC1912"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    break
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1913"
class
    = "blob-num js-line-number"
    data - line - number = "1913" > < /td>
        < td
    id = "LC1913"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1914"
class
= "blob-num js-line-number"
data - line - number = "1914" > < /td>
    < td
id = "LC1914"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1915"
class
= "blob-num js-line-number"
data - line - number = "1915" > < /td>
    < td
id = "LC1915"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1916"
class
= "blob-num js-line-number"
data - line - number = "1916" > < /td>
    < td
id = "LC1916"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1917"
class
= "blob-num js-line-number"
data - line - number = "1917" > < /td>
    < td
id = "LC1917"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1918"
class
= "blob-num js-line-number"
data - line - number = "1918" > < /td>
    < td
id = "LC1918"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1919"
class
= "blob-num js-line-number"
data - line - number = "1919" > < /td>
    < td
id = "LC1919"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Incorporate the offset, then check against cycle size</span></td>
    < /tr>
    < tr >
    < td
id = "L1920"
class
= "blob-num js-line-number"
data - line - number = "1920" > < /td>
    < td
id = "LC1920"
class
= "blob-code blob-code-inner js-file-line" > diff < span
class
= "pl-k" > -=
<
/span> last;</
td >
< /tr>
< tr >
< td
id = "L1921"
class
= "blob-num js-line-number"
data - line - number = "1921" > < /td>
    < td
id = "LC1921"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> diff <span class="pl-k">===</s
pan > first < span
class
= "pl-k" > || < /span> ( diff <span class="pl-k">%</s
pan > first < span
class
= "pl-k" >= == < /span> <span class="pl-c1">0</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> diff <span class="pl-k">/ < /span> first <span class="pl-k">&gt;=</s
pan > < span
class
= "pl-c1" > 0 < /span> );</
td >
< /tr>
< tr >
< td
id = "L1922"
class
= "blob-num js-line-number"
data - line - number = "1922" > < /td>
    < td
id = "LC1922"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1923"
class
= "blob-num js-line-number"
data - line - number = "1923" > < /td>
    < td
id = "LC1923"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1924"
class
= "blob-num js-line-number"
data - line - number = "1924" > < /td>
    < td
id = "LC1924"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L1925"
class
= "blob-num js-line-number"
data - line - number = "1925" > < /td>
    < td
id = "LC1925"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1926"
class
= "blob-num js-line-number"
data - line - number = "1926" > < /td>
    < td
id = "LC1926"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>PSEUDO<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (pseudo, argument) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1927"
class
    = "blob-num js-line-number"
    data - line - number = "1927" > < /td>
        < td
    id = "LC1927"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> pseudo-class names are case-insensitive</span></td>
        < /tr>
        < tr >
        < td
    id = "L1928"
class
    = "blob-num js-line-number"
    data - line - number = "1928" > < /td>
        < td
    id = "LC1928"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> http://www.w3.org/TR/selectors/#pseudo-classes</span></td>
        < /tr>
        < tr >
        < td
    id = "L1929"
class
    = "blob-num js-line-number"
    data - line - number = "1929" > < /td>
        < td
    id = "LC1929"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Prioritize by case sensitivity in case custom pseudos are added with uppercase letters</span></td>
        < /tr>
        < tr >
        < td
    id = "L1930"
class
    = "blob-num js-line-number"
    data - line - number = "1930" > < /td>
        < td
    id = "LC1930"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Remember that setFilters inherits from pseudos</span></td>
        < /tr>
        < tr >
        < td
    id = "L1931"
class
    = "blob-num js-line-number"
    data - line - number = "1931" > < /td>
        < td
    id = "LC1931"
class
    = "blob-code blob-code-inner js-file-line" >
    var args, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L1932"
class
    = "blob-num js-line-number"
    data - line - number = "1932" > < /td>
        < td
    id = "LC1932"
class
    = "blob-code blob-code-inner js-file-line" > fn < span
class
    = "pl-k" >= < /span> <span class="pl-smi">Expr</s
    pan > < span
class
    = "pl-k" >
.<
    /span>pseudos[ pseudo ] <span class="pl-k">||</s
    pan > < span
class
    = "pl-smi" > Expr < /span><span class="pl-k">.</s
    pan > setFilters[pseudo < span
class
    = "pl-k" >
.<
    /span>toLowerCase() ] <span class="pl-k">||</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1933"
class
    = "blob-num js-line-number"
    data - line - number = "1933" > < /td>
        < td
    id = "LC1933"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-smi" > Sizzle < /span><span class="pl-k">.</s
    pan > error( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>unsupported pseudo: <span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > pseudo
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1934"
class
    = "blob-num js-line-number"
    data - line - number = "1934" > < /td>
        < td
    id = "LC1934"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1935"
class
    = "blob-num js-line-number"
    data - line - number = "1935" > < /td>
        < td
    id = "LC1935"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> The user may use createPseudo to indicate that</span></td>
        < /tr>
        < tr >
        < td
    id = "L1936"
class
    = "blob-num js-line-number"
    data - line - number = "1936" > < /td>
        < td
    id = "LC1936"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> arguments are needed to create the filter function</span></td>
        < /tr>
        < tr >
        < td
    id = "L1937"
class
    = "blob-num js-line-number"
    data - line - number = "1937" > < /td>
        < td
    id = "LC1937"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> just as Sizzle does</span></td>
        < /tr>
        < tr >
        < td
    id = "L1938"
class
    = "blob-num js-line-number"
    data - line - number = "1938" > < /td>
        < td
    id = "LC1938"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( fn[ expando ] ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1939"
class
    = "blob-num js-line-number"
    data - line - number = "1939" > < /td>
        < td
    id = "LC1939"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> fn( argument );</
    td >
    < /tr>
    < tr >
    < td
    id = "L1940"
class
    = "blob-num js-line-number"
    data - line - number = "1940" > < /td>
        < td
    id = "LC1940"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L1941"
class
= "blob-num js-line-number"
data - line - number = "1941" > < /td>
    < td
id = "LC1941"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1942"
class
= "blob-num js-line-number"
data - line - number = "1942" > < /td>
    < td
id = "LC1942"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> But maintain support for old signatures</span></td>
    < /tr>
    < tr >
    < td
id = "L1943"
class
= "blob-num js-line-number"
data - line - number = "1943" > < /td>
    < td
id = "LC1943"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fn<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1944"
class
    = "blob-num js-line-number"
    data - line - number = "1944" > < /td>
        < td
    id = "LC1944"
class
    = "blob-code blob-code-inner js-file-line" > args < span
class
    = "pl-k" >= < /span> [ pseudo, pseudo, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, argument ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L1945"
class
    = "blob-num js-line-number"
    data - line - number = "1945" > < /td>
        < td
    id = "LC1945"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-smi">Expr</s
    pan > < span
class
    = "pl-k" >
.<
    /span>setFilters<span class="pl-k">.</s
    pan > hasOwnProperty(pseudo < span
class
    = "pl-k" >
.<
    /span>toLowerCase() ) <span class="pl-k">?</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1946"
class
    = "blob-num js-line-number"
    data - line - number = "1946" > < /td>
        < td
    id = "LC1946"
class
    = "blob-code blob-code-inner js-file-line" > markFunction(function (seed, matches) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1947"
    class
        = "blob-num js-line-number"
        data - line - number = "1947" > < /td>
            < td
        id = "LC1947"
    class
        = "blob-code blob-code-inner js-file-line" >
        var idx, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1948"
    class
        = "blob-num js-line-number"
        data - line - number = "1948" > < /td>
            < td
        id = "LC1948"
    class
        = "blob-code blob-code-inner js-file-line" > matched < span
    class
        = "pl-k" >= < /span> fn( seed, argument ),</
        td >
        < /tr>
        < tr >
        < td
        id = "L1949"
    class
        = "blob-num js-line-number"
        data - line - number = "1949" > < /td>
            < td
        id = "LC1949"
    class
        = "blob-code blob-code-inner js-file-line" > i < span
    class
        = "pl-k" >= < /span> matched<span class="pl-k">.</s
        pan > length;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L1950"
    class
        = "blob-num js-line-number"
        data - line - number = "1950" > < /td>
            < td
        id = "LC1950"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        while<
        /span> ( i<span class="pl-k">--</s
        pan >
    )
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1951"
    class
        = "blob-num js-line-number"
        data - line - number = "1951" > < /td>
            < td
        id = "LC1951"
    class
        = "blob-code blob-code-inner js-file-line" > idx < span
    class
        = "pl-k" >= < /span> indexOf( seed, matched[i] );</
        td >
        < /tr>
        < tr >
        < td
        id = "L1952"
    class
        = "blob-num js-line-number"
        data - line - number = "1952" > < /td>
            < td
        id = "LC1952"
    class
        = "blob-code blob-code-inner js-file-line" > seed[idx] < span
    class
        = "pl-k" >= < /span> <span class="pl-k">!</s
        pan > (matches[idx] < span
    class
        = "pl-k" >= < /span> matched[i] );</
        td >
        < /tr>
        < tr >
        < td
        id = "L1953"
    class
        = "blob-num js-line-number"
        data - line - number = "1953" > < /td>
            < td
        id = "LC1953"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1954"
class
    = "blob-num js-line-number"
    data - line - number = "1954" > < /td>
        < td
    id = "LC1954"
class
    = "blob-code blob-code-inner js-file-line" >
}
) <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1955"
class
= "blob-num js-line-number"
data - line - number = "1955" > < /td>
    < td
id = "LC1955"
class
= "blob-code blob-code-inner js-file-line" > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1956"
class
    = "blob-num js-line-number"
    data - line - number = "1956" > < /td>
        < td
    id = "LC1956"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> fn( elem, <span class="pl-c1">0</s
    pan >, args
);
<
/td>
< /tr>
< tr >
< td
id = "L1957"
class
= "blob-num js-line-number"
data - line - number = "1957" > < /td>
    < td
id = "LC1957"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L1958"
class
= "blob-num js-line-number"
data - line - number = "1958" > < /td>
    < td
id = "LC1958"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1959"
class
= "blob-num js-line-number"
data - line - number = "1959" > < /td>
    < td
id = "LC1959"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1960"
class
= "blob-num js-line-number"
data - line - number = "1960" > < /td>
    < td
id = "LC1960"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> fn;</
td >
< /tr>
< tr >
< td
id = "L1961"
class
= "blob-num js-line-number"
data - line - number = "1961" > < /td>
    < td
id = "LC1961"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1962"
class
= "blob-num js-line-number"
data - line - number = "1962" > < /td>
    < td
id = "LC1962"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L1963"
class
= "blob-num js-line-number"
data - line - number = "1963" > < /td>
    < td
id = "LC1963"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1964"
class
= "blob-num js-line-number"
data - line - number = "1964" > < /td>
    < td
id = "LC1964"
class
= "blob-code blob-code-inner js-file-line" > pseudos < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L1965"
class
= "blob-num js-line-number"
data - line - number = "1965" > < /td>
    < td
id = "LC1965"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Potentially complex pseudos</span></td>
    < /tr>
    < tr >
    < td
id = "L1966"
class
= "blob-num js-line-number"
data - line - number = "1966" > < /td>
    < td
id = "LC1966"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>not<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > markFunction(function (selector) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1967"
class
    = "blob-num js-line-number"
    data - line - number = "1967" > < /td>
        < td
    id = "LC1967"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Trim the selector passed to compile</span></td>
        < /tr>
        < tr >
        < td
    id = "L1968"
class
    = "blob-num js-line-number"
    data - line - number = "1968" > < /td>
        < td
    id = "LC1968"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> to avoid treating leading and trailing</span></td>
        < /tr>
        < tr >
        < td
    id = "L1969"
class
    = "blob-num js-line-number"
    data - line - number = "1969" > < /td>
        < td
    id = "LC1969"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> spaces as combinators</span></td>
        < /tr>
        < tr >
        < td
    id = "L1970"
class
    = "blob-num js-line-number"
    data - line - number = "1970" > < /td>
        < td
    id = "LC1970"
class
    = "blob-code blob-code-inner js-file-line" >
    var input
<
    span
class
    = "pl-k" >= < /span> [],</
    td >
    < /tr>
    < tr >
    < td
    id = "L1971"
class
    = "blob-num js-line-number"
    data - line - number = "1971" > < /td>
        < td
    id = "LC1971"
class
    = "blob-code blob-code-inner js-file-line" > results < span
class
    = "pl-k" >= < /span> [],</
    td >
    < /tr>
    < tr >
    < td
    id = "L1972"
class
    = "blob-num js-line-number"
    data - line - number = "1972" > < /td>
        < td
    id = "LC1972"
class
    = "blob-code blob-code-inner js-file-line" > matcher < span
class
    = "pl-k" >= < /span> compile( selector<span class="pl-k">.</s
    pan > replace(rtrim, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>$1<span class="pl-pds">&quot;</s
    pan > < /span> ) );</
    td >
    < /tr>
    < tr >
    < td
    id = "L1973"
class
    = "blob-num js-line-number"
    data - line - number = "1973" > < /td>
        < td
    id = "LC1973"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1974"
class
    = "blob-num js-line-number"
    data - line - number = "1974" > < /td>
        < td
    id = "LC1974"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> matcher[ expando ] <span class="pl-k">?</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L1975"
class
    = "blob-num js-line-number"
    data - line - number = "1975" > < /td>
        < td
    id = "LC1975"
class
    = "blob-code blob-code-inner js-file-line" > markFunction(function (seed, matches, context, xml) {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L1976"
        class
            = "blob-num js-line-number"
            data - line - number = "1976" > < /td>
                < td
            id = "LC1976"
        class
            = "blob-code blob-code-inner js-file-line" >
            var elem, <
            /td>
            < /tr>
            < tr >
            < td
            id = "L1977"
        class
            = "blob-num js-line-number"
            data - line - number = "1977" > < /td>
                < td
            id = "LC1977"
        class
            = "blob-code blob-code-inner js-file-line" > unmatched < span
        class
            = "pl-k" >= < /span> matcher( seed, <span class="pl-c1">null</s
            pan >, xml, []
        ), < /td>
        < /tr>
        < tr >
        < td
    id = "L1978"
class
    = "blob-num js-line-number"
    data - line - number = "1978" > < /td>
        < td
    id = "LC1978"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> seed<span class="pl-k">.</s
    pan > length;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1979"
class
    = "blob-num js-line-number"
    data - line - number = "1979" > < /td>
        < td
    id = "LC1979"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L1980"
class
    = "blob-num js-line-number"
    data - line - number = "1980" > < /td>
        < td
    id = "LC1980"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Match elements unmatched by `matcher`</span></td>
        < /tr>
        < tr >
        < td
    id = "L1981"
class
    = "blob-num js-line-number"
    data - line - number = "1981" > < /td>
        < td
    id = "LC1981"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( i<span class="pl-k">--</s
    pan >
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L1982"
    class
        = "blob-num js-line-number"
        data - line - number = "1982" > < /td>
            < td
        id = "LC1982"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( (elem <span class="pl-k">=</s
        pan > unmatched[i]
    ))
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1983"
class
    = "blob-num js-line-number"
    data - line - number = "1983" > < /td>
        < td
    id = "LC1983"
class
    = "blob-code blob-code-inner js-file-line" > seed[i] < span
class
    = "pl-k" >= < /span> <span class="pl-k">!</s
    pan > (matches[i] < span
class
    = "pl-k" >= < /span> elem);</
    td >
    < /tr>
    < tr >
    < td
    id = "L1984"
class
    = "blob-num js-line-number"
    data - line - number = "1984" > < /td>
        < td
    id = "LC1984"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L1985"
class
= "blob-num js-line-number"
data - line - number = "1985" > < /td>
    < td
id = "LC1985"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L1986"
class
= "blob-num js-line-number"
data - line - number = "1986" > < /td>
    < td
id = "LC1986"
class
= "blob-code blob-code-inner js-file-line" >
}) <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L1987"
class
= "blob-num js-line-number"
data - line - number = "1987" > < /td>
    < td
id = "LC1987"
class
= "blob-code blob-code-inner js-file-line" > function (elem, context, xml) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1988"
class
    = "blob-num js-line-number"
    data - line - number = "1988" > < /td>
        < td
    id = "LC1988"
class
    = "blob-code blob-code-inner js-file-line" > input[ < span
class
    = "pl-c1" > 0 < /span>] <span class="pl-k">=</s
    pan > elem;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1989"
class
    = "blob-num js-line-number"
    data - line - number = "1989" > < /td>
        < td
    id = "LC1989"
class
    = "blob-code blob-code-inner js-file-line" > matcher(input, < span
class
    = "pl-c1" > null < /span>, xml, results );</
    td >
    < /tr>
    < tr >
    < td
    id = "L1990"
class
    = "blob-num js-line-number"
    data - line - number = "1990" > < /td>
        < td
    id = "LC1990"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Don&#39;t keep the element (issue #299)</span></td>
        < /tr>
        < tr >
        < td
    id = "L1991"
class
    = "blob-num js-line-number"
    data - line - number = "1991" > < /td>
        < td
    id = "LC1991"
class
    = "blob-code blob-code-inner js-file-line" > input[ < span
class
    = "pl-c1" > 0 < /span>] <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > null < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L1992"
class
    = "blob-num js-line-number"
    data - line - number = "1992" > < /td>
        < td
    id = "LC1992"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">!</s
    pan > results < span
class
    = "pl-k" >
.<
    /span>pop();</
    td >
    < /tr>
    < tr >
    < td
    id = "L1993"
class
    = "blob-num js-line-number"
    data - line - number = "1993" > < /td>
        < td
    id = "LC1993"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L1994"
class
= "blob-num js-line-number"
data - line - number = "1994" > < /td>
    < td
id = "LC1994"
class
= "blob-code blob-code-inner js-file-line" >
}),<
/td>
< /tr>
< tr >
< td
id = "L1995"
class
= "blob-num js-line-number"
data - line - number = "1995" > < /td>
    < td
id = "LC1995"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L1996"
class
= "blob-num js-line-number"
data - line - number = "1996" > < /td>
    < td
id = "LC1996"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>has<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > markFunction(function (selector) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1997"
class
    = "blob-num js-line-number"
    data - line - number = "1997" > < /td>
        < td
    id = "LC1997"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> function( elem ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L1998"
class
    = "blob-num js-line-number"
    data - line - number = "1998" > < /td>
        < td
    id = "LC1998"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> Sizzle( selector, elem )<span class="pl-k">.</s
    pan > length < span
class
    = "pl-k" > &gt; < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L1999"
class
    = "blob-num js-line-number"
    data - line - number = "1999" > < /td>
        < td
    id = "LC1999"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L2000"
class
= "blob-num js-line-number"
data - line - number = "2000" > < /td>
    < td
id = "LC2000"
class
= "blob-code blob-code-inner js-file-line" >
}),<
/td>
< /tr>
< tr >
< td
id = "L2001"
class
= "blob-num js-line-number"
data - line - number = "2001" > < /td>
    < td
id = "LC2001"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2002"
class
= "blob-num js-line-number"
data - line - number = "2002" > < /td>
    < td
id = "LC2002"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>contains<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > markFunction(function (text) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2003"
class
    = "blob-num js-line-number"
    data - line - number = "2003" > < /td>
        < td
    id = "LC2003"
class
    = "blob-code blob-code-inner js-file-line" > text < span
class
    = "pl-k" >= < /span> text<span class="pl-k">.</s
    pan > replace(runescape, funescape);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2004"
class
    = "blob-num js-line-number"
    data - line - number = "2004" > < /td>
        < td
    id = "LC2004"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> function( elem ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2005"
class
    = "blob-num js-line-number"
    data - line - number = "2005" > < /td>
        < td
    id = "LC2005"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> ( elem<span class="pl-k">.</s
    pan > textContent < span
class
    = "pl-k" > || < /span> elem<span class="pl-k">.</s
    pan > innerText < span
class
    = "pl-k" > || < /span> getText( elem ) )<span class="pl-k">.</s
    pan > indexOf(text) < span
class
    = "pl-k" > &gt; < /span> <span class="pl-k">-</s
    pan > < span
class
    = "pl-c1" > 1 < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2006"
class
    = "blob-num js-line-number"
    data - line - number = "2006" > < /td>
        < td
    id = "LC2006"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L2007"
class
= "blob-num js-line-number"
data - line - number = "2007" > < /td>
    < td
id = "LC2007"
class
= "blob-code blob-code-inner js-file-line" >
}),<
/td>
< /tr>
< tr >
< td
id = "L2008"
class
= "blob-num js-line-number"
data - line - number = "2008" > < /td>
    < td
id = "LC2008"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2009"
class
= "blob-num js-line-number"
data - line - number = "2009" > < /td>
    < td
id = "LC2009"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> &quot;Whether an element is represented by a :lang() selector</span></td>
    < /tr>
    < tr >
    < td
id = "L2010"
class
= "blob-num js-line-number"
data - line - number = "2010" > < /td>
    < td
id = "LC2010"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> is based solely on the element&#39;s language value</span></td>
    < /tr>
    < tr >
    < td
id = "L2011"
class
= "blob-num js-line-number"
data - line - number = "2011" > < /td>
    < td
id = "LC2011"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> being equal to the identifier C,</span></td>
    < /tr>
    < tr >
    < td
id = "L2012"
class
= "blob-num js-line-number"
data - line - number = "2012" > < /td>
    < td
id = "LC2012"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> or beginning with the identifier C immediately followed by &quot;-&quot;.</span></td>
    < /tr>
    < tr >
    < td
id = "L2013"
class
= "blob-num js-line-number"
data - line - number = "2013" > < /td>
    < td
id = "LC2013"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The matching of C against the element&#39;s language value is performed case-insensitively.</span></td>
    < /tr>
    < tr >
    < td
id = "L2014"
class
= "blob-num js-line-number"
data - line - number = "2014" > < /td>
    < td
id = "LC2014"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The identifier C does not have to be a valid language name.&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L2015"
class
= "blob-num js-line-number"
data - line - number = "2015" > < /td>
    < td
id = "LC2015"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> http://www.w3.org/TR/selectors/#lang-pseudo</span></td>
    < /tr>
    < tr >
    < td
id = "L2016"
class
= "blob-num js-line-number"
data - line - number = "2016" > < /td>
    < td
id = "LC2016"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>lang<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > markFunction(function (lang) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2017"
    class
        = "blob-num js-line-number"
        data - line - number = "2017" > < /td>
            < td
        id = "LC2017"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> lang value must be a valid identifier</span></td>
            < /tr>
            < tr >
            < td
        id = "L2018"
    class
        = "blob-num js-line-number"
        data - line - number = "2018" > < /td>
            < td
        id = "LC2018"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( <span class="pl-k">!</s
        pan > ridentifier < span
    class
        = "pl-k" >
    .<
        /span>test(lang <span class="pl-k">||</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span><span class="pl-pds">&quot;</s
        pan > < /span>) ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L2019"
    class
        = "blob-num js-line-number"
        data - line - number = "2019" > < /td>
            < td
        id = "LC2019"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-smi" > Sizzle < /span><span class="pl-k">.</s
        pan > error( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>unsupported lang: <span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">+</s
        pan > lang
    )
        ;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2020"
    class
        = "blob-num js-line-number"
        data - line - number = "2020" > < /td>
            < td
        id = "LC2020"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L2021"
class
= "blob-num js-line-number"
data - line - number = "2021" > < /td>
    < td
id = "LC2021"
class
= "blob-code blob-code-inner js-file-line" > lang < span
class
= "pl-k" >= < /span> lang<span class="pl-k">.</s
pan > replace(runescape, funescape) < span
class
= "pl-k" >
.<
/span>toLowerCase();</
td >
< /tr>
< tr >
< td
id = "L2022"
class
= "blob-num js-line-number"
data - line - number = "2022" > < /td>
    < td
id = "LC2022"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L2023"
class
= "blob-num js-line-number"
data - line - number = "2023" > < /td>
    < td
id = "LC2023"
class
= "blob-code blob-code-inner js-file-line" >
var elemLang;
<
/td>
< /tr>
< tr >
< td
id = "L2024"
class
= "blob-num js-line-number"
data - line - number = "2024" > < /td>
    < td
id = "LC2024"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > do < /span> {</
td >
< /tr>
< tr >
< td
id = "L2025"
class
= "blob-num js-line-number"
data - line - number = "2025" > < /td>
    < td
id = "LC2025"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (elemLang <span class="pl-k">=</s
pan > documentIsHTML < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L2026"
class
= "blob-num js-line-number"
data - line - number = "2026" > < /td>
    < td
id = "LC2026"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>lang <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2027"
class
= "blob-num js-line-number"
data - line - number = "2027" > < /td>
    < td
id = "LC2027"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>getAttribute(<span class="pl-s"><span class="pl-pds">&quot;</s
pan > xml
:
lang < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" > || < /span> elem<span class="pl-k">.</s
pan > getAttribute( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>lang<span class="pl-pds">&quot;</s
pan > < /span>)) ) {</
td >
< /tr>
< tr >
< td
id = "L2028"
class
= "blob-num js-line-number"
data - line - number = "2028" > < /td>
    < td
id = "LC2028"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2029"
class
= "blob-num js-line-number"
data - line - number = "2029" > < /td>
    < td
id = "LC2029"
class
= "blob-code blob-code-inner js-file-line" > elemLang < span
class
= "pl-k" >= < /span> elemLang<span class="pl-k">.</s
pan > toLowerCase();
<
/td>
< /tr>
< tr >
< td
id = "L2030"
class
= "blob-num js-line-number"
data - line - number = "2030" > < /td>
    < td
id = "LC2030"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elemLang <span class="pl-k">===</s
pan > lang < span
class
= "pl-k" > || < /span> elemLang<span class="pl-k">.</s
pan > indexOf(lang < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > - < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" >= == < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2031"
class
= "blob-num js-line-number"
data - line - number = "2031" > < /td>
    < td
id = "LC2031"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2032"
class
= "blob-num js-line-number"
data - line - number = "2032" > < /td>
    < td
id = "LC2032"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
while<
/span> ( (elem <span class="pl-k">=</s
pan > elem < span
class
= "pl-k" >
.<
/span>parentNode) <span class="pl-k">&amp;&amp;</s
pan > elem < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 1 < /span> );</
td >
< /tr>
< tr >
< td
id = "L2033"
class
= "blob-num js-line-number"
data - line - number = "2033" > < /td>
    < td
id = "LC2033"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2034"
class
= "blob-num js-line-number"
data - line - number = "2034" > < /td>
    < td
id = "LC2034"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2035"
class
= "blob-num js-line-number"
data - line - number = "2035" > < /td>
    < td
id = "LC2035"
class
= "blob-code blob-code-inner js-file-line" >
}),<
/td>
< /tr>
< tr >
< td
id = "L2036"
class
= "blob-num js-line-number"
data - line - number = "2036" > < /td>
    < td
id = "LC2036"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2037"
class
= "blob-num js-line-number"
data - line - number = "2037" > < /td>
    < td
id = "LC2037"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Miscellaneous</span></td>
    < /tr>
    < tr >
    < td
id = "L2038"
class
= "blob-num js-line-number"
data - line - number = "2038" > < /td>
    < td
id = "LC2038"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>target<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2039"
class
    = "blob-num js-line-number"
    data - line - number = "2039" > < /td>
        < td
    id = "LC2039"
class
    = "blob-code blob-code-inner js-file-line" >
    var hash
<
    span
class
    = "pl-k" >= < /span> window<span class="pl-k">.</s
    pan > location < span
class
    = "pl-k" > &amp;&amp; < /span> window<span class="pl-k">.</s
    pan > location < span
class
    = "pl-k" >
.<
    /span>hash;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2040"
class
    = "blob-num js-line-number"
    data - line - number = "2040" > < /td>
        < td
    id = "LC2040"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> hash <span class="pl-k">&amp;&amp;</s
    pan > hash < span
class
    = "pl-k" >
.<
    /span>slice( <span class="pl-c1">1</s
    pan >
) < span
class
= "pl-k" >= == < /span> elem<span class="pl-k">.</s
pan > id;
<
/td>
< /tr>
< tr >
< td
id = "L2041"
class
= "blob-num js-line-number"
data - line - number = "2041" > < /td>
    < td
id = "LC2041"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L2042"
class
= "blob-num js-line-number"
data - line - number = "2042" > < /td>
    < td
id = "LC2042"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2043"
class
= "blob-num js-line-number"
data - line - number = "2043" > < /td>
    < td
id = "LC2043"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>root<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2044"
class
    = "blob-num js-line-number"
    data - line - number = "2044" > < /td>
        < td
    id = "LC2044"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem <span class="pl-k">===</s
    pan > docElem;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2045"
class
    = "blob-num js-line-number"
    data - line - number = "2045" > < /td>
        < td
    id = "LC2045"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L2046"
class
= "blob-num js-line-number"
data - line - number = "2046" > < /td>
    < td
id = "LC2046"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2047"
class
= "blob-num js-line-number"
data - line - number = "2047" > < /td>
    < td
id = "LC2047"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>focus<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2048"
class
    = "blob-num js-line-number"
    data - line - number = "2048" > < /td>
        < td
    id = "LC2048"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem <span class="pl-k">===</s
    pan > document < span
class
    = "pl-k" >
.<
    /span>activeElement <span class="pl-k">&amp;&amp;</s
    pan > ( < span
class
    = "pl-k" > ! < /span>document<span class="pl-k">.</s
    pan > hasFocus < span
class
    = "pl-k" > || < /span> document<span class="pl-k">.</s
    pan > hasFocus()
) <
    span
class
    = "pl-k" > &amp;&amp; < /span> <span class="pl-k">!!</s
    pan > (elem < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">||</s
    pan > elem < span
class
    = "pl-k" >
.<
    /span>href <span class="pl-k">||</s
    pan > < span
class
    = "pl-k" > ~ < /span>elem<span class="pl-k">.</s
    pan > tabIndex
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2049"
class
    = "blob-num js-line-number"
    data - line - number = "2049" > < /td>
        < td
    id = "LC2049"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L2050"
class
= "blob-num js-line-number"
data - line - number = "2050" > < /td>
    < td
id = "LC2050"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2051"
class
= "blob-num js-line-number"
data - line - number = "2051" > < /td>
    < td
id = "LC2051"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Boolean properties</span></td>
    < /tr>
    < tr >
    < td
id = "L2052"
class
= "blob-num js-line-number"
data - line - number = "2052" > < /td>
    < td
id = "LC2052"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>enabled<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > createDisabledPseudo( < span
class
= "pl-c1" > false < /span> ),</
td >
< /tr>
< tr >
< td
id = "L2053"
class
= "blob-num js-line-number"
data - line - number = "2053" > < /td>
    < td
id = "LC2053"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>disabled<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > createDisabledPseudo( < span
class
= "pl-c1" > true < /span> ),</
td >
< /tr>
< tr >
< td
id = "L2054"
class
= "blob-num js-line-number"
data - line - number = "2054" > < /td>
    < td
id = "LC2054"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2055"
class
= "blob-num js-line-number"
data - line - number = "2055" > < /td>
    < td
id = "LC2055"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>checked<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2056"
class
    = "blob-num js-line-number"
    data - line - number = "2056" > < /td>
        < td
    id = "LC2056"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> In CSS3, :checked should return both checked and selected elements</span></td>
        < /tr>
        < tr >
        < td
    id = "L2057"
class
    = "blob-num js-line-number"
    data - line - number = "2057" > < /td>
        < td
    id = "LC2057"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked</span></td>
        < /tr>
        < tr >
        < td
    id = "L2058"
class
    = "blob-num js-line-number"
    data - line - number = "2058" > < /td>
        < td
    id = "LC2058"
class
    = "blob-code blob-code-inner js-file-line" >
    var nodeName
<
    span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > nodeName < span
class
    = "pl-k" >
.<
    /span>toLowerCase();</
    td >
    < /tr>
    < tr >
    < td
    id = "L2059"
class
    = "blob-num js-line-number"
    data - line - number = "2059" > < /td>
        < td
    id = "LC2059"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> (nodeName <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>input<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > < span
class
    = "pl-k" > !! < /span>elem<span class="pl-k">.</s
    pan > checked
) < span
class
= "pl-k" > || < /span> (nodeName <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>option<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > !! < /span>elem<span class="pl-k">.</s
pan > selected
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2060"
class
= "blob-num js-line-number"
data - line - number = "2060" > < /td>
    < td
id = "LC2060"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L2061"
class
= "blob-num js-line-number"
data - line - number = "2061" > < /td>
    < td
id = "LC2061"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2062"
class
= "blob-num js-line-number"
data - line - number = "2062" > < /td>
    < td
id = "LC2062"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>selected<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2063"
class
    = "blob-num js-line-number"
    data - line - number = "2063" > < /td>
        < td
    id = "LC2063"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Accessing this property makes selected-by-default</span></td>
        < /tr>
        < tr >
        < td
    id = "L2064"
class
    = "blob-num js-line-number"
    data - line - number = "2064" > < /td>
        < td
    id = "LC2064"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> options in Safari work properly</span></td>
        < /tr>
        < tr >
        < td
    id = "L2065"
class
    = "blob-num js-line-number"
    data - line - number = "2065" > < /td>
        < td
    id = "LC2065"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > parentNode
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2066"
class
    = "blob-num js-line-number"
    data - line - number = "2066" > < /td>
        < td
    id = "LC2066"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>parentNode<span class="pl-k">.</s
    pan > selectedIndex;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2067"
class
    = "blob-num js-line-number"
    data - line - number = "2067" > < /td>
        < td
    id = "LC2067"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2068"
class
= "blob-num js-line-number"
data - line - number = "2068" > < /td>
    < td
id = "LC2068"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2069"
class
= "blob-num js-line-number"
data - line - number = "2069" > < /td>
    < td
id = "LC2069"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > selected < span
class
= "pl-k" >= == < /span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2070"
class
= "blob-num js-line-number"
data - line - number = "2070" > < /td>
    < td
id = "LC2070"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L2071"
class
= "blob-num js-line-number"
data - line - number = "2071" > < /td>
    < td
id = "LC2071"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2072"
class
= "blob-num js-line-number"
data - line - number = "2072" > < /td>
    < td
id = "LC2072"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Contents</span></td>
    < /tr>
    < tr >
    < td
id = "L2073"
class
= "blob-num js-line-number"
data - line - number = "2073" > < /td>
    < td
id = "LC2073"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>empty<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2074"
class
    = "blob-num js-line-number"
    data - line - number = "2074" > < /td>
        < td
    id = "LC2074"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> http://www.w3.org/TR/selectors/#empty-pseudo</span></td>
        < /tr>
        < tr >
        < td
    id = "L2075"
class
    = "blob-num js-line-number"
    data - line - number = "2075" > < /td>
        < td
    id = "LC2075"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),</span></td>
        < /tr>
        < tr >
        < td
    id = "L2076"
class
    = "blob-num js-line-number"
    data - line - number = "2076" > < /td>
        < td
    id = "LC2076"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span>   but not by others (comment: 8; processing instruction: 7; etc.)</span></td>
        < /tr>
        < tr >
        < td
    id = "L2077"
class
    = "blob-num js-line-number"
    data - line - number = "2077" > < /td>
        < td
    id = "LC2077"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> nodeType &lt; 6 works because attributes (2) do not appear as children</span></td>
        < /tr>
        < tr >
        < td
    id = "L2078"
class
    = "blob-num js-line-number"
    data - line - number = "2078" > < /td>
        < td
    id = "LC2078"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( elem <span class="pl-k">=</s
    pan > elem < span
class
    = "pl-k" >
.<
    /span>firstChild; elem; elem <span class="pl-k">=</s
    pan > elem < span
class
    = "pl-k" >
.<
    /span>nextSibling ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2079"
class
    = "blob-num js-line-number"
    data - line - number = "2079" > < /td>
        < td
    id = "LC2079"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" > &lt; < /span> <span class="pl-c1">6</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2080"
class
    = "blob-num js-line-number"
    data - line - number = "2080" > < /td>
        < td
    id = "LC2080"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2081"
class
    = "blob-num js-line-number"
    data - line - number = "2081" > < /td>
        < td
    id = "LC2081"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2082"
class
= "blob-num js-line-number"
data - line - number = "2082" > < /td>
    < td
id = "LC2082"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2083"
class
= "blob-num js-line-number"
data - line - number = "2083" > < /td>
    < td
id = "LC2083"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2084"
class
= "blob-num js-line-number"
data - line - number = "2084" > < /td>
    < td
id = "LC2084"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L2085"
class
= "blob-num js-line-number"
data - line - number = "2085" > < /td>
    < td
id = "LC2085"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2086"
class
= "blob-num js-line-number"
data - line - number = "2086" > < /td>
    < td
id = "LC2086"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>parent<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2087"
class
    = "blob-num js-line-number"
    data - line - number = "2087" > < /td>
        < td
    id = "LC2087"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">!</s
    pan > < span
class
    = "pl-smi" > Expr < /span><span class="pl-k">.</s
    pan > pseudos[ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>empty<span class="pl-pds">&quot;</s
    pan > < /span>]( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2088"
class
    = "blob-num js-line-number"
    data - line - number = "2088" > < /td>
        < td
    id = "LC2088"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L2089"
class
= "blob-num js-line-number"
data - line - number = "2089" > < /td>
    < td
id = "LC2089"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2090"
class
= "blob-num js-line-number"
data - line - number = "2090" > < /td>
    < td
id = "LC2090"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Element/input types</span></td>
    < /tr>
    < tr >
    < td
id = "L2091"
class
= "blob-num js-line-number"
data - line - number = "2091" > < /td>
    < td
id = "LC2091"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>header<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2092"
class
    = "blob-num js-line-number"
    data - line - number = "2092" > < /td>
        < td
    id = "LC2092"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> rheader<span class="pl-k">.</s
    pan > test(elem < span
class
    = "pl-k" >
.<
    /span>nodeName );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2093"
class
    = "blob-num js-line-number"
    data - line - number = "2093" > < /td>
        < td
    id = "LC2093"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L2094"
class
= "blob-num js-line-number"
data - line - number = "2094" > < /td>
    < td
id = "LC2094"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2095"
class
= "blob-num js-line-number"
data - line - number = "2095" > < /td>
    < td
id = "LC2095"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>input<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2096"
class
    = "blob-num js-line-number"
    data - line - number = "2096" > < /td>
        < td
    id = "LC2096"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> rinputs<span class="pl-k">.</s
    pan > test(elem < span
class
    = "pl-k" >
.<
    /span>nodeName );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2097"
class
    = "blob-num js-line-number"
    data - line - number = "2097" > < /td>
        < td
    id = "LC2097"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L2098"
class
= "blob-num js-line-number"
data - line - number = "2098" > < /td>
    < td
id = "LC2098"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2099"
class
= "blob-num js-line-number"
data - line - number = "2099" > < /td>
    < td
id = "LC2099"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>button<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2100"
class
    = "blob-num js-line-number"
    data - line - number = "2100" > < /td>
        < td
    id = "LC2100"
class
    = "blob-code blob-code-inner js-file-line" >
    var name
<
    span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > nodeName < span
class
    = "pl-k" >
.<
    /span>toLowerCase();</
    td >
    < /tr>
    < tr >
    < td
    id = "L2101"
class
    = "blob-num js-line-number"
    data - line - number = "2101" > < /td>
        < td
    id = "LC2101"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> name <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>input<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > elem < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>button<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">||</s
    pan > name < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > button < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2102"
class
    = "blob-num js-line-number"
    data - line - number = "2102" > < /td>
        < td
    id = "LC2102"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L2103"
class
= "blob-num js-line-number"
data - line - number = "2103" > < /td>
    < td
id = "LC2103"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2104"
class
= "blob-num js-line-number"
data - line - number = "2104" > < /td>
    < td
id = "LC2104"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>text<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2105"
class
    = "blob-num js-line-number"
    data - line - number = "2105" > < /td>
        < td
    id = "LC2105"
class
    = "blob-code blob-code-inner js-file-line" >
    var attr;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2106"
class
    = "blob-num js-line-number"
    data - line - number = "2106" > < /td>
        < td
    id = "LC2106"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem<span class="pl-k">.</s
    pan > nodeName < span
class
    = "pl-k" >
.<
    /span>toLowerCase() <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>input<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L2107"
class
    = "blob-num js-line-number"
    data - line - number = "2107" > < /td>
        < td
    id = "LC2107"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>text<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L2108"
class
    = "blob-num js-line-number"
    data - line - number = "2108" > < /td>
        < td
    id = "LC2108"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2109"
class
    = "blob-num js-line-number"
    data - line - number = "2109" > < /td>
        < td
    id = "LC2109"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE&lt;8</span></td>
        < /tr>
        < tr >
        < td
    id = "L2110"
class
    = "blob-num js-line-number"
    data - line - number = "2110" > < /td>
        < td
    id = "LC2110"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> New HTML5 attribute values (e.g., &quot;search&quot;) appear with elem.type === &quot;text&quot;</span></td>
        < /tr>
        < tr >
        < td
    id = "L2111"
class
    = "blob-num js-line-number"
    data - line - number = "2111" > < /td>
        < td
    id = "LC2111"
class
    = "blob-code blob-code-inner js-file-line" > ((attr < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > getAttribute( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>type<span class="pl-pds">&quot;</s
    pan > < /span>)) <span class="pl-k">==</s
    pan > < span
class
    = "pl-c1" > null < /span> <span class="pl-k">||</s
    pan > attr < span
class
    = "pl-k" >
.<
    /span>toLowerCase() <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>text<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2112"
class
    = "blob-num js-line-number"
    data - line - number = "2112" > < /td>
        < td
    id = "LC2112"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L2113"
class
= "blob-num js-line-number"
data - line - number = "2113" > < /td>
    < td
id = "LC2113"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2114"
class
= "blob-num js-line-number"
data - line - number = "2114" > < /td>
    < td
id = "LC2114"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Position-in-collection</span></td>
    < /tr>
    < tr >
    < td
id = "L2115"
class
= "blob-num js-line-number"
data - line - number = "2115" > < /td>
    < td
id = "LC2115"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>first<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > createPositionalPseudo(function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2116"
class
    = "blob-num js-line-number"
    data - line - number = "2116" > < /td>
        < td
    id = "LC2116"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> [ <span class="pl-c1">0</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2117"
class
    = "blob-num js-line-number"
    data - line - number = "2117" > < /td>
        < td
    id = "LC2117"
class
    = "blob-code blob-code-inner js-file-line" >
}),
<
/td>
< /tr>
< tr >
< td
id = "L2118"
class
= "blob-num js-line-number"
data - line - number = "2118" > < /td>
    < td
id = "LC2118"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2119"
class
= "blob-num js-line-number"
data - line - number = "2119" > < /td>
    < td
id = "LC2119"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>last<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > createPositionalPseudo(function (matchIndexes, length) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2120"
class
    = "blob-num js-line-number"
    data - line - number = "2120" > < /td>
        < td
    id = "LC2120"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> [ length <span class="pl-k">-</span> <span class="pl-c1">1</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2121"
class
    = "blob-num js-line-number"
    data - line - number = "2121" > < /td>
        < td
    id = "LC2121"
class
    = "blob-code blob-code-inner js-file-line" >
}),
<
/td>
< /tr>
< tr >
< td
id = "L2122"
class
= "blob-num js-line-number"
data - line - number = "2122" > < /td>
    < td
id = "LC2122"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2123"
class
= "blob-num js-line-number"
data - line - number = "2123" > < /td>
    < td
id = "LC2123"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>eq<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > createPositionalPseudo(function (matchIndexes, length, argument) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2124"
class
    = "blob-num js-line-number"
    data - line - number = "2124" > < /td>
        < td
    id = "LC2124"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> [ argument <span class="pl-k">&lt;</span> <span class="pl-c1">0</span> <span class="pl-k">?</span> argument <span class="pl-k">+</span> length <span class="pl-k">:</span> argument ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2125"
class
    = "blob-num js-line-number"
    data - line - number = "2125" > < /td>
        < td
    id = "LC2125"
class
    = "blob-code blob-code-inner js-file-line" >
}),
<
/td>
< /tr>
< tr >
< td
id = "L2126"
class
= "blob-num js-line-number"
data - line - number = "2126" > < /td>
    < td
id = "LC2126"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2127"
class
= "blob-num js-line-number"
data - line - number = "2127" > < /td>
    < td
id = "LC2127"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>even<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > createPositionalPseudo(function (matchIndexes, length) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2128"
class
    = "blob-num js-line-number"
    data - line - number = "2128" > < /td>
        < td
    id = "LC2128"
class
    = "blob-code blob-code-inner js-file-line" >
    var i
<
    span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2129"
class
    = "blob-num js-line-number"
    data - line - number = "2129" > < /td>
        < td
    id = "LC2129"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; i <span class="pl-k">&lt;</s
    pan > length;
    i < span
class
    = "pl-k" > +=
<
    /span> <span class="pl-c1">2</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2130"
class
    = "blob-num js-line-number"
    data - line - number = "2130" > < /td>
        < td
    id = "LC2130"
class
    = "blob-code blob-code-inner js-file-line" > matchIndexes < span
class
    = "pl-k" >
.<
    /span>push( i );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2131"
class
    = "blob-num js-line-number"
    data - line - number = "2131" > < /td>
        < td
    id = "LC2131"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2132"
class
= "blob-num js-line-number"
data - line - number = "2132" > < /td>
    < td
id = "LC2132"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> matchIndexes;</
td >
< /tr>
< tr >
< td
id = "L2133"
class
= "blob-num js-line-number"
data - line - number = "2133" > < /td>
    < td
id = "LC2133"
class
= "blob-code blob-code-inner js-file-line" >
}),<
/td>
< /tr>
< tr >
< td
id = "L2134"
class
= "blob-num js-line-number"
data - line - number = "2134" > < /td>
    < td
id = "LC2134"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2135"
class
= "blob-num js-line-number"
data - line - number = "2135" > < /td>
    < td
id = "LC2135"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>odd<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > createPositionalPseudo(function (matchIndexes, length) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2136"
class
    = "blob-num js-line-number"
    data - line - number = "2136" > < /td>
        < td
    id = "LC2136"
class
    = "blob-code blob-code-inner js-file-line" >
    var i
<
    span
class
    = "pl-k" >= < /span> <span class="pl-c1">1</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2137"
class
    = "blob-num js-line-number"
    data - line - number = "2137" > < /td>
        < td
    id = "LC2137"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; i <span class="pl-k">&lt;</s
    pan > length;
    i < span
class
    = "pl-k" > +=
<
    /span> <span class="pl-c1">2</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2138"
class
    = "blob-num js-line-number"
    data - line - number = "2138" > < /td>
        < td
    id = "LC2138"
class
    = "blob-code blob-code-inner js-file-line" > matchIndexes < span
class
    = "pl-k" >
.<
    /span>push( i );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2139"
class
    = "blob-num js-line-number"
    data - line - number = "2139" > < /td>
        < td
    id = "LC2139"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2140"
class
= "blob-num js-line-number"
data - line - number = "2140" > < /td>
    < td
id = "LC2140"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> matchIndexes;</
td >
< /tr>
< tr >
< td
id = "L2141"
class
= "blob-num js-line-number"
data - line - number = "2141" > < /td>
    < td
id = "LC2141"
class
= "blob-code blob-code-inner js-file-line" >
}),<
/td>
< /tr>
< tr >
< td
id = "L2142"
class
= "blob-num js-line-number"
data - line - number = "2142" > < /td>
    < td
id = "LC2142"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2143"
class
= "blob-num js-line-number"
data - line - number = "2143" > < /td>
    < td
id = "LC2143"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>lt<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > createPositionalPseudo(function (matchIndexes, length, argument) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2144"
class
    = "blob-num js-line-number"
    data - line - number = "2144" > < /td>
        < td
    id = "LC2144"
class
    = "blob-code blob-code-inner js-file-line" >
    var i
<
    span
class
    = "pl-k" >= < /span> argument <span class="pl-k">&lt;</s
    pan > < span
class
    = "pl-c1" > 0 < /span> <span class="pl-k">?</s
    pan > argument < span
class
    = "pl-k" > + < /span> length <span class="pl-k">:</s
    pan > argument;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2145"
class
    = "blob-num js-line-number"
    data - line - number = "2145" > < /td>
        < td
    id = "LC2145"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; <span class="pl-k">--</s
    pan > i < span
class
    = "pl-k" > &gt;= < /span> <span class="pl-c1">0</s
    pan >;
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2146"
class
    = "blob-num js-line-number"
    data - line - number = "2146" > < /td>
        < td
    id = "LC2146"
class
    = "blob-code blob-code-inner js-file-line" > matchIndexes < span
class
    = "pl-k" >
.<
    /span>push( i );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2147"
class
    = "blob-num js-line-number"
    data - line - number = "2147" > < /td>
        < td
    id = "LC2147"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2148"
class
= "blob-num js-line-number"
data - line - number = "2148" > < /td>
    < td
id = "LC2148"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> matchIndexes;</
td >
< /tr>
< tr >
< td
id = "L2149"
class
= "blob-num js-line-number"
data - line - number = "2149" > < /td>
    < td
id = "LC2149"
class
= "blob-code blob-code-inner js-file-line" >
}),<
/td>
< /tr>
< tr >
< td
id = "L2150"
class
= "blob-num js-line-number"
data - line - number = "2150" > < /td>
    < td
id = "LC2150"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2151"
class
= "blob-num js-line-number"
data - line - number = "2151" > < /td>
    < td
id = "LC2151"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>gt<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > createPositionalPseudo(function (matchIndexes, length, argument) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2152"
    class
        = "blob-num js-line-number"
        data - line - number = "2152" > < /td>
            < td
        id = "LC2152"
    class
        = "blob-code blob-code-inner js-file-line" >
        var i
    <
        span
    class
        = "pl-k" >= < /span> argument <span class="pl-k">&lt;</s
        pan > < span
    class
        = "pl-c1" > 0 < /span> <span class="pl-k">?</s
        pan > argument < span
    class
        = "pl-k" > + < /span> length <span class="pl-k">:</s
        pan > argument;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2153"
    class
        = "blob-num js-line-number"
        data - line - number = "2153" > < /td>
            < td
        id = "LC2153"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        for<
        /span> ( ; <span class="pl-k">++</s
        pan > i < span
    class
        = "pl-k" > &lt; < /span> length; ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L2154"
    class
        = "blob-num js-line-number"
        data - line - number = "2154" > < /td>
            < td
        id = "LC2154"
    class
        = "blob-code blob-code-inner js-file-line" > matchIndexes < span
    class
        = "pl-k" >
    .<
        /span>push( i );</
        td >
        < /tr>
        < tr >
        < td
        id = "L2155"
    class
        = "blob-num js-line-number"
        data - line - number = "2155" > < /td>
            < td
        id = "LC2155"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L2156"
class
= "blob-num js-line-number"
data - line - number = "2156" > < /td>
    < td
id = "LC2156"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> matchIndexes;</
td >
< /tr>
< tr >
< td
id = "L2157"
class
= "blob-num js-line-number"
data - line - number = "2157" > < /td>
    < td
id = "LC2157"
class
= "blob-code blob-code-inner js-file-line" >
})<
/td>
< /tr>
< tr >
< td
id = "L2158"
class
= "blob-num js-line-number"
data - line - number = "2158" > < /td>
    < td
id = "LC2158"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2159"
class
= "blob-num js-line-number"
data - line - number = "2159" > < /td>
    < td
id = "LC2159"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2160"
class
= "blob-num js-line-number"
data - line - number = "2160" > < /td>
    < td
id = "LC2160"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2161"
class
= "blob-num js-line-number"
data - line - number = "2161" > < /td>
    < td
id = "LC2161"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > pseudos[ < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>nth<span class="pl-pds">&quot;</s
pan > < /span>] <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > pseudos[ < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>eq<span class="pl-pds">&quot;</s
pan > < /span>];</
td >
< /tr>
< tr >
< td
id = "L2162"
class
= "blob-num js-line-number"
data - line - number = "2162" > < /td>
    < td
id = "LC2162"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2163"
class
= "blob-num js-line-number"
data - line - number = "2163" > < /td>
    < td
id = "LC2163"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add button/input type pseudos</span></td>
    < /tr>
    < tr >
    < td
id = "L2164"
class
= "blob-num js-line-number"
data - line - number = "2164" > < /td>
    < td
id = "LC2164"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i in { radio<span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>, checkbox<span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>, file<span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>, password<span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>, image<span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span> } ) {</
td >
< /tr>
< tr >
< td
id = "L2165"
class
= "blob-num js-line-number"
data - line - number = "2165" > < /td>
    < td
id = "LC2165"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > pseudos[i] < span
class
= "pl-k" >= < /span> createInputPseudo( i );</
td >
< /tr>
< tr >
< td
id = "L2166"
class
= "blob-num js-line-number"
data - line - number = "2166" > < /td>
    < td
id = "LC2166"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2167"
class
= "blob-num js-line-number"
data - line - number = "2167" > < /td>
    < td
id = "LC2167"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i in { submit<span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>, reset<span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span> } ) {</
td >
< /tr>
< tr >
< td
id = "L2168"
class
= "blob-num js-line-number"
data - line - number = "2168" > < /td>
    < td
id = "LC2168"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > pseudos[i] < span
class
= "pl-k" >= < /span> createButtonPseudo( i );</
td >
< /tr>
< tr >
< td
id = "L2169"
class
= "blob-num js-line-number"
data - line - number = "2169" > < /td>
    < td
id = "LC2169"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2170"
class
= "blob-num js-line-number"
data - line - number = "2170" > < /td>
    < td
id = "LC2170"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2171"
class
= "blob-num js-line-number"
data - line - number = "2171" > < /td>
    < td
id = "LC2171"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Easy API for creating new setFilters</span></td>
    < /tr>
    < tr >
    < td
id = "L2172"
class
= "blob-num js-line-number"
data - line - number = "2172" > < /td>
    < td
id = "LC2172"
class
= "blob-code blob-code-inner js-file-line" > function setFilters() {
    } < /td>
    < /tr>
    < tr >
    < td
id = "L2173"
class
= "blob-num js-line-number"
data - line - number = "2173" > < /td>
    < td
id = "LC2173"
class
= "blob-code blob-code-inner js-file-line" > setFilters < span
class
= "pl-k" >
.<
/span>prototype <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > filters < span
class
= "pl-k" >= < /span> <span class="pl-smi">Expr</s
pan > < span
class
= "pl-k" >
.<
/span>pseudos;</
td >
< /tr>
< tr >
< td
id = "L2174"
class
= "blob-num js-line-number"
data - line - number = "2174" > < /td>
    < td
id = "LC2174"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > setFilters < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > setFilters();
<
/td>
< /tr>
< tr >
< td
id = "L2175"
class
= "blob-num js-line-number"
data - line - number = "2175" > < /td>
    < td
id = "LC2175"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2176"
class
= "blob-num js-line-number"
data - line - number = "2176" > < /td>
    < td
id = "LC2176"
class
= "blob-code blob-code-inner js-file-line" > tokenize < span
class
= "pl-k" >= < /span> <span class="pl-smi">Sizzle</s
pan > < span
class
= "pl-k" >
.<
/span>tokenize <span class="pl-k">=</s
pan > function (selector, parseOnly) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2177"
class
    = "blob-num js-line-number"
    data - line - number = "2177" > < /td>
        < td
    id = "LC2177"
class
    = "blob-code blob-code-inner js-file-line" >
    var matched, match, tokens, type, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L2178"
class
    = "blob-num js-line-number"
    data - line - number = "2178" > < /td>
        < td
    id = "LC2178"
class
    = "blob-code blob-code-inner js-file-line" > soFar, groups, preFilters,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2179"
class
    = "blob-num js-line-number"
    data - line - number = "2179" > < /td>
        < td
    id = "LC2179"
class
    = "blob-code blob-code-inner js-file-line" > cached < span
class
    = "pl-k" >= < /span> tokenCache[ selector <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2180"
class
    = "blob-num js-line-number"
    data - line - number = "2180" > < /td>
        < td
    id = "LC2180"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2181"
class
    = "blob-num js-line-number"
    data - line - number = "2181" > < /td>
        < td
    id = "LC2181"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( cached ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2182"
class
    = "blob-num js-line-number"
    data - line - number = "2182" > < /td>
        < td
    id = "LC2182"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> parseOnly <span class="pl-k">?</s
    pan > < span
class
    = "pl-c1" > 0 < /span> <span class="pl-k">:</s
    pan > cached < span
class
    = "pl-k" >
.<
    /span>slice( <span class="pl-c1">0</s
    pan >
);
<
/td>
< /tr>
< tr >
< td
id = "L2183"
class
= "blob-num js-line-number"
data - line - number = "2183" > < /td>
    < td
id = "LC2183"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2184"
class
= "blob-num js-line-number"
data - line - number = "2184" > < /td>
    < td
id = "LC2184"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2185"
class
= "blob-num js-line-number"
data - line - number = "2185" > < /td>
    < td
id = "LC2185"
class
= "blob-code blob-code-inner js-file-line" > soFar < span
class
= "pl-k" >= < /span> selector;</
td >
< /tr>
< tr >
< td
id = "L2186"
class
= "blob-num js-line-number"
data - line - number = "2186" > < /td>
    < td
id = "LC2186"
class
= "blob-code blob-code-inner js-file-line" > groups < span
class
= "pl-k" >= < /span> [];</
td >
< /tr>
< tr >
< td
id = "L2187"
class
= "blob-num js-line-number"
data - line - number = "2187" > < /td>
    < td
id = "LC2187"
class
= "blob-code blob-code-inner js-file-line" > preFilters < span
class
= "pl-k" >= < /span> <span class="pl-smi">Expr</s
pan > < span
class
= "pl-k" >
.<
/span>preFilter;</
td >
< /tr>
< tr >
< td
id = "L2188"
class
= "blob-num js-line-number"
data - line - number = "2188" > < /td>
    < td
id = "LC2188"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2189"
class
= "blob-num js-line-number"
data - line - number = "2189" > < /td>
    < td
id = "LC2189"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( soFar ) {</
td >
< /tr>
< tr >
< td
id = "L2190"
class
= "blob-num js-line-number"
data - line - number = "2190" > < /td>
    < td
id = "LC2190"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2191"
class
= "blob-num js-line-number"
data - line - number = "2191" > < /td>
    < td
id = "LC2191"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Comma and first run</span></td>
    < /tr>
    < tr >
    < td
id = "L2192"
class
= "blob-num js-line-number"
data - line - number = "2192" > < /td>
    < td
id = "LC2192"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > matched < span
class
= "pl-k" > || < /span> (match <span class="pl-k">=</s
pan > rcomma < span
class
= "pl-k" >
.<
/span>exec( soFar )) ) {</
td >
< /tr>
< tr >
< td
id = "L2193"
class
= "blob-num js-line-number"
data - line - number = "2193" > < /td>
    < td
id = "LC2193"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( match ) {</
td >
< /tr>
< tr >
< td
id = "L2194"
class
= "blob-num js-line-number"
data - line - number = "2194" > < /td>
    < td
id = "LC2194"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t consume trailing commas as valid</span></td>
    < /tr>
    < tr >
    < td
id = "L2195"
class
= "blob-num js-line-number"
data - line - number = "2195" > < /td>
    < td
id = "LC2195"
class
= "blob-code blob-code-inner js-file-line" > soFar < span
class
= "pl-k" >= < /span> soFar<span class="pl-k">.</s
pan > slice(match[ < span
class
= "pl-c1" > 0 < /span>]<span class="pl-k">.</s
pan > length
) <
span
class
= "pl-k" > || < /span> soFar;</
td >
< /tr>
< tr >
< td
id = "L2196"
class
= "blob-num js-line-number"
data - line - number = "2196" > < /td>
    < td
id = "LC2196"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2197"
class
= "blob-num js-line-number"
data - line - number = "2197" > < /td>
    < td
id = "LC2197"
class
= "blob-code blob-code-inner js-file-line" > groups < span
class
= "pl-k" >
.<
/span>push( (tokens <span class="pl-k">=</s
pan > []
) )
;
<
/td>
< /tr>
< tr >
< td
id = "L2198"
class
= "blob-num js-line-number"
data - line - number = "2198" > < /td>
    < td
id = "LC2198"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2199"
class
= "blob-num js-line-number"
data - line - number = "2199" > < /td>
    < td
id = "LC2199"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2200"
class
= "blob-num js-line-number"
data - line - number = "2200" > < /td>
    < td
id = "LC2200"
class
= "blob-code blob-code-inner js-file-line" > matched < span
class
= "pl-k" >= < /span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2201"
class
= "blob-num js-line-number"
data - line - number = "2201" > < /td>
    < td
id = "LC2201"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2202"
class
= "blob-num js-line-number"
data - line - number = "2202" > < /td>
    < td
id = "LC2202"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Combinators</span></td>
    < /tr>
    < tr >
    < td
id = "L2203"
class
= "blob-num js-line-number"
data - line - number = "2203" > < /td>
    < td
id = "LC2203"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (match <span class="pl-k">=</s
pan > rcombinators < span
class
= "pl-k" >
.<
/span>exec( soFar )) ) {</
td >
< /tr>
< tr >
< td
id = "L2204"
class
= "blob-num js-line-number"
data - line - number = "2204" > < /td>
    < td
id = "LC2204"
class
= "blob-code blob-code-inner js-file-line" > matched < span
class
= "pl-k" >= < /span> match<span class="pl-k">.</s
pan > shift();
<
/td>
< /tr>
< tr >
< td
id = "L2205"
class
= "blob-num js-line-number"
data - line - number = "2205" > < /td>
    < td
id = "LC2205"
class
= "blob-code blob-code-inner js-file-line" > tokens < span
class
= "pl-k" >
.<
/span>push({</
td >
< /tr>
< tr >
< td
id = "L2206"
class
= "blob-num js-line-number"
data - line - number = "2206" > < /td>
    < td
id = "LC2206"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >
:<
/span> matched,</
td >
< /tr>
< tr >
< td
id = "L2207"
class
= "blob-num js-line-number"
data - line - number = "2207" > < /td>
    < td
id = "LC2207"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Cast descendant combinators to space</span></td>
    < /tr>
    < tr >
    < td
id = "L2208"
class
= "blob-num js-line-number"
data - line - number = "2208" > < /td>
    < td
id = "LC2208"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >
:<
/span> match[<span class="pl-c1">0</span>]<span class="pl-k">.</s
pan > replace(rtrim, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span> )</
td >
< /tr>
< tr >
< td
id = "L2209"
class
= "blob-num js-line-number"
data - line - number = "2209" > < /td>
    < td
id = "LC2209"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L2210"
class
= "blob-num js-line-number"
data - line - number = "2210" > < /td>
    < td
id = "LC2210"
class
= "blob-code blob-code-inner js-file-line" > soFar < span
class
= "pl-k" >= < /span> soFar<span class="pl-k">.</s
pan > slice(matched < span
class
= "pl-k" >
.<
/span>length );</
td >
< /tr>
< tr >
< td
id = "L2211"
class
= "blob-num js-line-number"
data - line - number = "2211" > < /td>
    < td
id = "LC2211"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2212"
class
= "blob-num js-line-number"
data - line - number = "2212" > < /td>
    < td
id = "LC2212"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2213"
class
= "blob-num js-line-number"
data - line - number = "2213" > < /td>
    < td
id = "LC2213"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Filters</span></td>
    < /tr>
    < tr >
    < td
id = "L2214"
class
= "blob-num js-line-number"
data - line - number = "2214" > < /td>
    < td
id = "LC2214"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( type in <span class="pl-smi">Expr</s
pan > < span
class
= "pl-k" >
.<
/span>filter ) {</
td >
< /tr>
< tr >
< td
id = "L2215"
class
= "blob-num js-line-number"
data - line - number = "2215" > < /td>
    < td
id = "LC2215"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (match <span class="pl-k">=</s
pan > matchExpr[type] < span
class
= "pl-k" >
.<
/span>exec( soFar )) <span class="pl-k">&amp;&amp;</s
pan > ( < span
class
= "pl-k" > ! < /span>preFilters[ type ] <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2216"
class
= "blob-num js-line-number"
data - line - number = "2216" > < /td>
    < td
id = "LC2216"
class
= "blob-code blob-code-inner js-file-line" > (match < span
class
= "pl-k" >= < /span> preFilters[ type ]( match ))) ) {</
td >
< /tr>
< tr >
< td
id = "L2217"
class
= "blob-num js-line-number"
data - line - number = "2217" > < /td>
    < td
id = "LC2217"
class
= "blob-code blob-code-inner js-file-line" > matched < span
class
= "pl-k" >= < /span> match<span class="pl-k">.</s
pan > shift();
<
/td>
< /tr>
< tr >
< td
id = "L2218"
class
= "blob-num js-line-number"
data - line - number = "2218" > < /td>
    < td
id = "LC2218"
class
= "blob-code blob-code-inner js-file-line" > tokens < span
class
= "pl-k" >
.<
/span>push({</
td >
< /tr>
< tr >
< td
id = "L2219"
class
= "blob-num js-line-number"
data - line - number = "2219" > < /td>
    < td
id = "LC2219"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >
:<
/span> matched,</
td >
< /tr>
< tr >
< td
id = "L2220"
class
= "blob-num js-line-number"
data - line - number = "2220" > < /td>
    < td
id = "LC2220"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >
:<
/span> type,</
td >
< /tr>
< tr >
< td
id = "L2221"
class
= "blob-num js-line-number"
data - line - number = "2221" > < /td>
    < td
id = "LC2221"
class
= "blob-code blob-code-inner js-file-line" > matches < span
class
= "pl-k" >
:<
/span> match</
td >
< /tr>
< tr >
< td
id = "L2222"
class
= "blob-num js-line-number"
data - line - number = "2222" > < /td>
    < td
id = "LC2222"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L2223"
class
= "blob-num js-line-number"
data - line - number = "2223" > < /td>
    < td
id = "LC2223"
class
= "blob-code blob-code-inner js-file-line" > soFar < span
class
= "pl-k" >= < /span> soFar<span class="pl-k">.</s
pan > slice(matched < span
class
= "pl-k" >
.<
/span>length );</
td >
< /tr>
< tr >
< td
id = "L2224"
class
= "blob-num js-line-number"
data - line - number = "2224" > < /td>
    < td
id = "LC2224"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2225"
class
= "blob-num js-line-number"
data - line - number = "2225" > < /td>
    < td
id = "LC2225"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2226"
class
= "blob-num js-line-number"
data - line - number = "2226" > < /td>
    < td
id = "LC2226"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2227"
class
= "blob-num js-line-number"
data - line - number = "2227" > < /td>
    < td
id = "LC2227"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > matched
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2228"
class
    = "blob-num js-line-number"
    data - line - number = "2228" > < /td>
        < td
    id = "LC2228"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    break
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2229"
class
    = "blob-num js-line-number"
    data - line - number = "2229" > < /td>
        < td
    id = "LC2229"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2230"
class
= "blob-num js-line-number"
data - line - number = "2230" > < /td>
    < td
id = "LC2230"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2231"
class
= "blob-num js-line-number"
data - line - number = "2231" > < /td>
    < td
id = "LC2231"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2232"
class
= "blob-num js-line-number"
data - line - number = "2232" > < /td>
    < td
id = "LC2232"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return the length of the invalid excess</span></td>
    < /tr>
    < tr >
    < td
id = "L2233"
class
= "blob-num js-line-number"
data - line - number = "2233" > < /td>
    < td
id = "LC2233"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> if we&#39;re just parsing</span></td>
    < /tr>
    < tr >
    < td
id = "L2234"
class
= "blob-num js-line-number"
data - line - number = "2234" > < /td>
    < td
id = "LC2234"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise, throw an error or return tokens</span></td>
    < /tr>
    < tr >
    < td
id = "L2235"
class
= "blob-num js-line-number"
data - line - number = "2235" > < /td>
    < td
id = "LC2235"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> parseOnly <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2236"
class
= "blob-num js-line-number"
data - line - number = "2236" > < /td>
    < td
id = "LC2236"
class
= "blob-code blob-code-inner js-file-line" > soFar < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2237"
class
= "blob-num js-line-number"
data - line - number = "2237" > < /td>
    < td
id = "LC2237"
class
= "blob-code blob-code-inner js-file-line" > soFar < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L2238"
class
= "blob-num js-line-number"
data - line - number = "2238" > < /td>
    < td
id = "LC2238"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > error(selector) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L2239"
class
= "blob-num js-line-number"
data - line - number = "2239" > < /td>
    < td
id = "LC2239"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Cache the tokens</span></td>
    < /tr>
    < tr >
    < td
id = "L2240"
class
= "blob-num js-line-number"
data - line - number = "2240" > < /td>
    < td
id = "LC2240"
class
= "blob-code blob-code-inner js-file-line" > tokenCache(selector, groups) < span
class
= "pl-k" >
.<
/span>slice( <span class="pl-c1">0</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2241"
class
= "blob-num js-line-number"
data - line - number = "2241" > < /td>
    < td
id = "LC2241"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2242"
class
= "blob-num js-line-number"
data - line - number = "2242" > < /td>
    < td
id = "LC2242"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2243"
class
= "blob-num js-line-number"
data - line - number = "2243" > < /td>
    < td
id = "LC2243"
class
= "blob-code blob-code-inner js-file-line" > function toSelector(tokens) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2244"
    class
        = "blob-num js-line-number"
        data - line - number = "2244" > < /td>
            < td
        id = "LC2244"
    class
        = "blob-code blob-code-inner js-file-line" >
        var i
    <
        span
    class
        = "pl-k" >= < /span> <span class="pl-c1">0</s
        pan >,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2245"
    class
        = "blob-num js-line-number"
        data - line - number = "2245" > < /td>
            < td
        id = "LC2245"
    class
        = "blob-code blob-code-inner js-file-line" > len < span
    class
        = "pl-k" >= < /span> tokens<span class="pl-k">.</s
        pan > length,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2246"
    class
        = "blob-num js-line-number"
        data - line - number = "2246" > < /td>
            < td
        id = "LC2246"
    class
        = "blob-code blob-code-inner js-file-line" > selector < span
    class
        = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2247"
    class
        = "blob-num js-line-number"
        data - line - number = "2247" > < /td>
            < td
        id = "LC2247"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        for<
        /span> ( ; i <span class="pl-k">&lt;</s
        pan > len;
        i < span
    class
        = "pl-k" > ++ < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L2248"
    class
        = "blob-num js-line-number"
        data - line - number = "2248" > < /td>
            < td
        id = "LC2248"
    class
        = "blob-code blob-code-inner js-file-line" > selector < span
    class
        = "pl-k" > +=
    <
        /span> tokens[i]<span class="pl-k">.</s
        pan > value;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2249"
    class
        = "blob-num js-line-number"
        data - line - number = "2249" > < /td>
            < td
        id = "LC2249"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L2250"
class
= "blob-num js-line-number"
data - line - number = "2250" > < /td>
    < td
id = "LC2250"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> selector;</
td >
< /tr>
< tr >
< td
id = "L2251"
class
= "blob-num js-line-number"
data - line - number = "2251" > < /td>
    < td
id = "LC2251"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2252"
class
= "blob-num js-line-number"
data - line - number = "2252" > < /td>
    < td
id = "LC2252"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2253"
class
= "blob-num js-line-number"
data - line - number = "2253" > < /td>
    < td
id = "LC2253"
class
= "blob-code blob-code-inner js-file-line" > function addCombinator(matcher, combinator, base) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2254"
class
    = "blob-num js-line-number"
    data - line - number = "2254" > < /td>
        < td
    id = "LC2254"
class
    = "blob-code blob-code-inner js-file-line" >
    var dir
<
    span
class
    = "pl-k" >= < /span> combinator<span class="pl-k">.</s
    pan > dir,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2255"
class
    = "blob-num js-line-number"
    data - line - number = "2255" > < /td>
        < td
    id = "LC2255"
class
    = "blob-code blob-code-inner js-file-line" > skip < span
class
    = "pl-k" >= < /span> combinator<span class="pl-k">.</s
    pan > next,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2256"
class
    = "blob-num js-line-number"
    data - line - number = "2256" > < /td>
        < td
    id = "LC2256"
class
    = "blob-code blob-code-inner js-file-line" > key < span
class
    = "pl-k" >= < /span> skip <span class="pl-k">||</s
    pan > dir,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2257"
class
    = "blob-num js-line-number"
    data - line - number = "2257" > < /td>
        < td
    id = "LC2257"
class
    = "blob-code blob-code-inner js-file-line" > checkNonElements < span
class
    = "pl-k" >= < /span> base <span class="pl-k">&amp;&amp;</s
    pan > key < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > parentNode < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2258"
class
    = "blob-num js-line-number"
    data - line - number = "2258" > < /td>
        < td
    id = "LC2258"
class
    = "blob-code blob-code-inner js-file-line" > doneName < span
class
    = "pl-k" >= < /span> done<span class="pl-k">++</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2259"
class
    = "blob-num js-line-number"
    data - line - number = "2259" > < /td>
        < td
    id = "LC2259"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2260"
class
    = "blob-num js-line-number"
    data - line - number = "2260" > < /td>
        < td
    id = "LC2260"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> combinator<span class="pl-k">.</s
    pan > first < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L2261"
class
    = "blob-num js-line-number"
    data - line - number = "2261" > < /td>
        < td
    id = "LC2261"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Check against closest ancestor/preceding element</span></td>
        < /tr>
        < tr >
        < td
    id = "L2262"
class
    = "blob-num js-line-number"
    data - line - number = "2262" > < /td>
        < td
    id = "LC2262"
class
    = "blob-code blob-code-inner js-file-line" > function (elem, context, xml) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2263"
    class
        = "blob-num js-line-number"
        data - line - number = "2263" > < /td>
            < td
        id = "LC2263"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        while<
        /span> ( (elem <span class="pl-k">=</s
        pan > elem[dir]
    )
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2264"
class
    = "blob-num js-line-number"
    data - line - number = "2264" > < /td>
        < td
    id = "LC2264"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > || < /span> checkNonElements ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2265"
class
    = "blob-num js-line-number"
    data - line - number = "2265" > < /td>
        < td
    id = "LC2265"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> matcher( elem, context, xml );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2266"
class
    = "blob-num js-line-number"
    data - line - number = "2266" > < /td>
        < td
    id = "LC2266"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2267"
class
= "blob-num js-line-number"
data - line - number = "2267" > < /td>
    < td
id = "LC2267"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2268"
class
= "blob-num js-line-number"
data - line - number = "2268" > < /td>
    < td
id = "LC2268"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2269"
class
= "blob-num js-line-number"
data - line - number = "2269" > < /td>
    < td
id = "LC2269"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L2270"
class
= "blob-num js-line-number"
data - line - number = "2270" > < /td>
    < td
id = "LC2270"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2271"
class
= "blob-num js-line-number"
data - line - number = "2271" > < /td>
    < td
id = "LC2271"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check against all ancestor/preceding elements</span></td>
    < /tr>
    < tr >
    < td
id = "L2272"
class
= "blob-num js-line-number"
data - line - number = "2272" > < /td>
    < td
id = "LC2272"
class
= "blob-code blob-code-inner js-file-line" > function (elem, context, xml) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2273"
class
    = "blob-num js-line-number"
    data - line - number = "2273" > < /td>
        < td
    id = "LC2273"
class
    = "blob-code blob-code-inner js-file-line" >
    var oldCache, uniqueCache, outerCache, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L2274"
class
    = "blob-num js-line-number"
    data - line - number = "2274" > < /td>
        < td
    id = "LC2274"
class
    = "blob-code blob-code-inner js-file-line" > newCache < span
class
    = "pl-k" >= < /span> [ dirruns, doneName ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2275"
class
    = "blob-num js-line-number"
    data - line - number = "2275" > < /td>
        < td
    id = "LC2275"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2276"
class
    = "blob-num js-line-number"
    data - line - number = "2276" > < /td>
        < td
    id = "LC2276"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> We can&#39;t set arbitrary data on XML nodes, so they don&#39;t benefit from combinator caching</span></td>
        < /tr>
        < tr >
        < td
    id = "L2277"
class
    = "blob-num js-line-number"
    data - line - number = "2277" > < /td>
        < td
    id = "LC2277"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( xml ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2278"
class
    = "blob-num js-line-number"
    data - line - number = "2278" > < /td>
        < td
    id = "LC2278"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( (elem <span class="pl-k">=</s
    pan > elem[dir]
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2279"
class
    = "blob-num js-line-number"
    data - line - number = "2279" > < /td>
        < td
    id = "LC2279"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > || < /span> checkNonElements ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2280"
class
    = "blob-num js-line-number"
    data - line - number = "2280" > < /td>
        < td
    id = "LC2280"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( matcher( elem, context, xml ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2281"
class
    = "blob-num js-line-number"
    data - line - number = "2281" > < /td>
        < td
    id = "LC2281"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2282"
class
    = "blob-num js-line-number"
    data - line - number = "2282" > < /td>
        < td
    id = "LC2282"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2283"
class
= "blob-num js-line-number"
data - line - number = "2283" > < /td>
    < td
id = "LC2283"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2284"
class
= "blob-num js-line-number"
data - line - number = "2284" > < /td>
    < td
id = "LC2284"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2285"
class
= "blob-num js-line-number"
data - line - number = "2285" > < /td>
    < td
id = "LC2285"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L2286"
class
= "blob-num js-line-number"
data - line - number = "2286" > < /td>
    < td
id = "LC2286"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( (elem <span class="pl-k">=</s
pan > elem[dir]
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2287"
class
    = "blob-num js-line-number"
    data - line - number = "2287" > < /td>
        < td
    id = "LC2287"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > || < /span> checkNonElements ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2288"
class
    = "blob-num js-line-number"
    data - line - number = "2288" > < /td>
        < td
    id = "LC2288"
class
    = "blob-code blob-code-inner js-file-line" > outerCache < span
class
    = "pl-k" >= < /span> elem[ expando ] <span class="pl-k">||</s
    pan > (elem[expando] < span
class
    = "pl-k" >= < /span> {});</
    td >
    < /tr>
    < tr >
    < td
    id = "L2289"
class
    = "blob-num js-line-number"
    data - line - number = "2289" > < /td>
        < td
    id = "LC2289"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2290"
class
    = "blob-num js-line-number"
    data - line - number = "2290" > < /td>
        < td
    id = "LC2290"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE &lt;9 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L2291"
class
    = "blob-num js-line-number"
    data - line - number = "2291" > < /td>
        < td
    id = "LC2291"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Defend against cloned attroperties (jQuery gh-1709)</span></td>
        < /tr>
        < tr >
        < td
    id = "L2292"
class
    = "blob-num js-line-number"
    data - line - number = "2292" > < /td>
        < td
    id = "LC2292"
class
    = "blob-code blob-code-inner js-file-line" > uniqueCache < span
class
    = "pl-k" >= < /span> outerCache[ elem<span class="pl-k">.</span>uniqueID ] <span class="pl-k">||</s
    pan > (outerCache[elem < span
class
    = "pl-k" >
.<
    /span>uniqueID ] <span class="pl-k">=</s
    pan > {}
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2293"
class
    = "blob-num js-line-number"
    data - line - number = "2293" > < /td>
        < td
    id = "LC2293"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2294"
class
    = "blob-num js-line-number"
    data - line - number = "2294" > < /td>
        < td
    id = "LC2294"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( skip <span class="pl-k">&amp;&amp;</s
    pan > skip < span
class
    = "pl-k" >= == < /span> elem<span class="pl-k">.</s
    pan > nodeName < span
class
    = "pl-k" >
.<
    /span>toLowerCase() ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2295"
class
    = "blob-num js-line-number"
    data - line - number = "2295" > < /td>
        < td
    id = "LC2295"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >= < /span> elem[ dir ] <span class="pl-k">||</s
    pan > elem;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2296"
class
    = "blob-num js-line-number"
    data - line - number = "2296" > < /td>
        < td
    id = "LC2296"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > ((oldCache < span
class
= "pl-k" >= < /span> uniqueCache[ key ]) <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2297"
class
= "blob-num js-line-number"
data - line - number = "2297" > < /td>
    < td
id = "LC2297"
class
= "blob-code blob-code-inner js-file-line" > oldCache[ < span
class
= "pl-c1" > 0 < /span> ] <span class="pl-k">===</s
pan > dirruns < span
class
= "pl-k" > &amp;&amp; < /span> oldCache[ <span class="pl-c1">1</span> ] <span class="pl-k">===</s
pan > doneName
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2298"
class
    = "blob-num js-line-number"
    data - line - number = "2298" > < /td>
        < td
    id = "LC2298"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2299"
class
    = "blob-num js-line-number"
    data - line - number = "2299" > < /td>
        < td
    id = "LC2299"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Assign to newCache so results back-propagate to previous elements</span></td>
        < /tr>
        < tr >
        < td
    id = "L2300"
class
    = "blob-num js-line-number"
    data - line - number = "2300" > < /td>
        < td
    id = "LC2300"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> (newCache[ <span class="pl-c1">2</span> ] <span class="pl-k">=</s
    pan > oldCache[ < span
class
    = "pl-c1" > 2 < /span> ]);</
    td >
    < /tr>
    < tr >
    < td
    id = "L2301"
class
    = "blob-num js-line-number"
    data - line - number = "2301" > < /td>
        < td
    id = "LC2301"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L2302"
class
= "blob-num js-line-number"
data - line - number = "2302" > < /td>
    < td
id = "LC2302"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Reuse newcache so results back-propagate to previous elements</span></td>
    < /tr>
    < tr >
    < td
id = "L2303"
class
= "blob-num js-line-number"
data - line - number = "2303" > < /td>
    < td
id = "LC2303"
class
= "blob-code blob-code-inner js-file-line" > uniqueCache[key] < span
class
= "pl-k" >= < /span> newCache;</
td >
< /tr>
< tr >
< td
id = "L2304"
class
= "blob-num js-line-number"
data - line - number = "2304" > < /td>
    < td
id = "LC2304"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2305"
class
= "blob-num js-line-number"
data - line - number = "2305" > < /td>
    < td
id = "LC2305"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> A match means we&#39;re done; a fail means we have to keep checking</span></td>
    < /tr>
    < tr >
    < td
id = "L2306"
class
= "blob-num js-line-number"
data - line - number = "2306" > < /td>
    < td
id = "LC2306"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (newCache[ <span class="pl-c1">2</span> ] <span class="pl-k">=</s
pan > matcher(elem, context, xml)
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2307"
class
    = "blob-num js-line-number"
    data - line - number = "2307" > < /td>
        < td
    id = "LC2307"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2308"
class
    = "blob-num js-line-number"
    data - line - number = "2308" > < /td>
        < td
    id = "LC2308"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2309"
class
= "blob-num js-line-number"
data - line - number = "2309" > < /td>
    < td
id = "LC2309"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2310"
class
= "blob-num js-line-number"
data - line - number = "2310" > < /td>
    < td
id = "LC2310"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2311"
class
= "blob-num js-line-number"
data - line - number = "2311" > < /td>
    < td
id = "LC2311"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2312"
class
= "blob-num js-line-number"
data - line - number = "2312" > < /td>
    < td
id = "LC2312"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2313"
class
= "blob-num js-line-number"
data - line - number = "2313" > < /td>
    < td
id = "LC2313"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2314"
class
= "blob-num js-line-number"
data - line - number = "2314" > < /td>
    < td
id = "LC2314"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2315"
class
= "blob-num js-line-number"
data - line - number = "2315" > < /td>
    < td
id = "LC2315"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2316"
class
= "blob-num js-line-number"
data - line - number = "2316" > < /td>
    < td
id = "LC2316"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2317"
class
= "blob-num js-line-number"
data - line - number = "2317" > < /td>
    < td
id = "LC2317"
class
= "blob-code blob-code-inner js-file-line" > function elementMatcher(matchers) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2318"
class
    = "blob-num js-line-number"
    data - line - number = "2318" > < /td>
        < td
    id = "LC2318"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> matchers<span class="pl-k">.</s
    pan > length < span
class
    = "pl-k" > &gt; < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L2319"
class
    = "blob-num js-line-number"
    data - line - number = "2319" > < /td>
        < td
    id = "LC2319"
class
    = "blob-code blob-code-inner js-file-line" > function (elem, context, xml) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2320"
    class
        = "blob-num js-line-number"
        data - line - number = "2320" > < /td>
            < td
        id = "LC2320"
    class
        = "blob-code blob-code-inner js-file-line" >
        var i
    <
        span
    class
        = "pl-k" >= < /span> matchers<span class="pl-k">.</s
        pan > length;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2321"
    class
        = "blob-num js-line-number"
        data - line - number = "2321" > < /td>
            < td
        id = "LC2321"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        while<
        /span> ( i<span class="pl-k">--</s
        pan >
    )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2322"
class
    = "blob-num js-line-number"
    data - line - number = "2322" > < /td>
        < td
    id = "LC2322"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > matchers[i](elem, context, xml)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2323"
class
    = "blob-num js-line-number"
    data - line - number = "2323" > < /td>
        < td
    id = "LC2323"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2324"
class
    = "blob-num js-line-number"
    data - line - number = "2324" > < /td>
        < td
    id = "LC2324"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2325"
class
= "blob-num js-line-number"
data - line - number = "2325" > < /td>
    < td
id = "LC2325"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2326"
class
= "blob-num js-line-number"
data - line - number = "2326" > < /td>
    < td
id = "LC2326"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2327"
class
= "blob-num js-line-number"
data - line - number = "2327" > < /td>
    < td
id = "LC2327"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L2328"
class
= "blob-num js-line-number"
data - line - number = "2328" > < /td>
    < td
id = "LC2328"
class
= "blob-code blob-code-inner js-file-line" > matchers[ < span
class
= "pl-c1" > 0 < /span>];</
td >
< /tr>
< tr >
< td
id = "L2329"
class
= "blob-num js-line-number"
data - line - number = "2329" > < /td>
    < td
id = "LC2329"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2330"
class
= "blob-num js-line-number"
data - line - number = "2330" > < /td>
    < td
id = "LC2330"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2331"
class
= "blob-num js-line-number"
data - line - number = "2331" > < /td>
    < td
id = "LC2331"
class
= "blob-code blob-code-inner js-file-line" > function multipleContexts(selector, contexts, results) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2332"
    class
        = "blob-num js-line-number"
        data - line - number = "2332" > < /td>
            < td
        id = "LC2332"
    class
        = "blob-code blob-code-inner js-file-line" >
        var i
    <
        span
    class
        = "pl-k" >= < /span> <span class="pl-c1">0</s
        pan >,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2333"
    class
        = "blob-num js-line-number"
        data - line - number = "2333" > < /td>
            < td
        id = "LC2333"
    class
        = "blob-code blob-code-inner js-file-line" > len < span
    class
        = "pl-k" >= < /span> contexts<span class="pl-k">.</s
        pan > length;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2334"
    class
        = "blob-num js-line-number"
        data - line - number = "2334" > < /td>
            < td
        id = "LC2334"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        for<
        /span> ( ; i <span class="pl-k">&lt;</s
        pan > len;
        i < span
    class
        = "pl-k" > ++ < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L2335"
    class
        = "blob-num js-line-number"
        data - line - number = "2335" > < /td>
            < td
        id = "LC2335"
    class
        = "blob-code blob-code-inner js-file-line" > Sizzle(selector, contexts[i], results);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2336"
    class
        = "blob-num js-line-number"
        data - line - number = "2336" > < /td>
            < td
        id = "LC2336"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L2337"
class
= "blob-num js-line-number"
data - line - number = "2337" > < /td>
    < td
id = "LC2337"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> results;</
td >
< /tr>
< tr >
< td
id = "L2338"
class
= "blob-num js-line-number"
data - line - number = "2338" > < /td>
    < td
id = "LC2338"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2339"
class
= "blob-num js-line-number"
data - line - number = "2339" > < /td>
    < td
id = "LC2339"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2340"
class
= "blob-num js-line-number"
data - line - number = "2340" > < /td>
    < td
id = "LC2340"
class
= "blob-code blob-code-inner js-file-line" > function condense(unmatched, map, filter, context, xml) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2341"
class
    = "blob-num js-line-number"
    data - line - number = "2341" > < /td>
        < td
    id = "LC2341"
class
    = "blob-code blob-code-inner js-file-line" >
    var elem, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L2342"
class
    = "blob-num js-line-number"
    data - line - number = "2342" > < /td>
        < td
    id = "LC2342"
class
    = "blob-code blob-code-inner js-file-line" > newUnmatched < span
class
    = "pl-k" >= < /span> [],</
    td >
    < /tr>
    < tr >
    < td
    id = "L2343"
class
    = "blob-num js-line-number"
    data - line - number = "2343" > < /td>
        < td
    id = "LC2343"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2344"
class
    = "blob-num js-line-number"
    data - line - number = "2344" > < /td>
        < td
    id = "LC2344"
class
    = "blob-code blob-code-inner js-file-line" > len < span
class
    = "pl-k" >= < /span> unmatched<span class="pl-k">.</s
    pan > length,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2345"
class
    = "blob-num js-line-number"
    data - line - number = "2345" > < /td>
        < td
    id = "LC2345"
class
    = "blob-code blob-code-inner js-file-line" > mapped < span
class
    = "pl-k" >= < /span> map <span class="pl-k">!=</s
    pan > < span
class
    = "pl-c1" > null < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2346"
class
    = "blob-num js-line-number"
    data - line - number = "2346" > < /td>
        < td
    id = "LC2346"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2347"
class
    = "blob-num js-line-number"
    data - line - number = "2347" > < /td>
        < td
    id = "LC2347"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; i <span class="pl-k">&lt;</s
    pan > len;
    i < span
class
    = "pl-k" > ++ < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2348"
class
    = "blob-num js-line-number"
    data - line - number = "2348" > < /td>
        < td
    id = "LC2348"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( (elem <span class="pl-k">=</s
    pan > unmatched[i]
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2349"
class
    = "blob-num js-line-number"
    data - line - number = "2349" > < /td>
        < td
    id = "LC2349"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > filter < span
class
    = "pl-k" > || < /span> filter( elem, context, xml ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2350"
class
    = "blob-num js-line-number"
    data - line - number = "2350" > < /td>
        < td
    id = "LC2350"
class
    = "blob-code blob-code-inner js-file-line" > newUnmatched < span
class
    = "pl-k" >
.<
    /span>push( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2351"
class
    = "blob-num js-line-number"
    data - line - number = "2351" > < /td>
        < td
    id = "LC2351"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( mapped ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2352"
class
    = "blob-num js-line-number"
    data - line - number = "2352" > < /td>
        < td
    id = "LC2352"
class
    = "blob-code blob-code-inner js-file-line" > map < span
class
    = "pl-k" >
.<
    /span>push( i );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2353"
class
    = "blob-num js-line-number"
    data - line - number = "2353" > < /td>
        < td
    id = "LC2353"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2354"
class
= "blob-num js-line-number"
data - line - number = "2354" > < /td>
    < td
id = "LC2354"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2355"
class
= "blob-num js-line-number"
data - line - number = "2355" > < /td>
    < td
id = "LC2355"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2356"
class
= "blob-num js-line-number"
data - line - number = "2356" > < /td>
    < td
id = "LC2356"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2357"
class
= "blob-num js-line-number"
data - line - number = "2357" > < /td>
    < td
id = "LC2357"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2358"
class
= "blob-num js-line-number"
data - line - number = "2358" > < /td>
    < td
id = "LC2358"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> newUnmatched;</
td >
< /tr>
< tr >
< td
id = "L2359"
class
= "blob-num js-line-number"
data - line - number = "2359" > < /td>
    < td
id = "LC2359"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2360"
class
= "blob-num js-line-number"
data - line - number = "2360" > < /td>
    < td
id = "LC2360"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2361"
class
= "blob-num js-line-number"
data - line - number = "2361" > < /td>
    < td
id = "LC2361"
class
= "blob-code blob-code-inner js-file-line" > function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2362"
    class
        = "blob-num js-line-number"
        data - line - number = "2362" > < /td>
            < td
        id = "LC2362"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( postFilter <span class="pl-k">&amp;&amp;</s
        pan > < span
    class
        = "pl-k" > ! < /span>postFilter[ expando ] ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L2363"
    class
        = "blob-num js-line-number"
        data - line - number = "2363" > < /td>
            < td
        id = "LC2363"
    class
        = "blob-code blob-code-inner js-file-line" > postFilter < span
    class
        = "pl-k" >= < /span> setMatcher( postFilter );</
        td >
        < /tr>
        < tr >
        < td
        id = "L2364"
    class
        = "blob-num js-line-number"
        data - line - number = "2364" > < /td>
            < td
        id = "LC2364"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L2365"
class
= "blob-num js-line-number"
data - line - number = "2365" > < /td>
    < td
id = "LC2365"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( postFinder <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>postFinder[ expando ] ) {</
td >
< /tr>
< tr >
< td
id = "L2366"
class
= "blob-num js-line-number"
data - line - number = "2366" > < /td>
    < td
id = "LC2366"
class
= "blob-code blob-code-inner js-file-line" > postFinder < span
class
= "pl-k" >= < /span> setMatcher( postFinder, postSelector );</
td >
< /tr>
< tr >
< td
id = "L2367"
class
= "blob-num js-line-number"
data - line - number = "2367" > < /td>
    < td
id = "LC2367"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2368"
class
= "blob-num js-line-number"
data - line - number = "2368" > < /td>
    < td
id = "LC2368"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> markFunction(function( seed, results, context, xml ) {</
td >
< /tr>
< tr >
< td
id = "L2369"
class
= "blob-num js-line-number"
data - line - number = "2369" > < /td>
    < td
id = "LC2369"
class
= "blob-code blob-code-inner js-file-line" >
var temp, i, elem, <
/td>
< /tr>
< tr >
< td
id = "L2370"
class
= "blob-num js-line-number"
data - line - number = "2370" > < /td>
    < td
id = "LC2370"
class
= "blob-code blob-code-inner js-file-line" > preMap < span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L2371"
class
= "blob-num js-line-number"
data - line - number = "2371" > < /td>
    < td
id = "LC2371"
class
= "blob-code blob-code-inner js-file-line" > postMap < span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L2372"
class
= "blob-num js-line-number"
data - line - number = "2372" > < /td>
    < td
id = "LC2372"
class
= "blob-code blob-code-inner js-file-line" > preexisting < span
class
= "pl-k" >= < /span> results<span class="pl-k">.</s
pan > length,
<
/td>
< /tr>
< tr >
< td
id = "L2373"
class
= "blob-num js-line-number"
data - line - number = "2373" > < /td>
    < td
id = "LC2373"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2374"
class
= "blob-num js-line-number"
data - line - number = "2374" > < /td>
    < td
id = "LC2374"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get initial elements from seed or context</span></td>
    < /tr>
    < tr >
    < td
id = "L2375"
class
= "blob-num js-line-number"
data - line - number = "2375" > < /td>
    < td
id = "LC2375"
class
= "blob-code blob-code-inner js-file-line" > elems < span
class
= "pl-k" >= < /span> seed <span class="pl-k">||</s
pan > multipleContexts(selector < span
class
= "pl-k" > || < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > * < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, context < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">?</s
pan > [context] < span
class
= "pl-k" >
:<
/span> context, [] ),</
td >
< /tr>
< tr >
< td
id = "L2376"
class
= "blob-num js-line-number"
data - line - number = "2376" > < /td>
    < td
id = "LC2376"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2377"
class
= "blob-num js-line-number"
data - line - number = "2377" > < /td>
    < td
id = "LC2377"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Prefilter to get matcher input, preserving a map for seed-results synchronization</span></td>
    < /tr>
    < tr >
    < td
id = "L2378"
class
= "blob-num js-line-number"
data - line - number = "2378" > < /td>
    < td
id = "LC2378"
class
= "blob-code blob-code-inner js-file-line" > matcherIn < span
class
= "pl-k" >= < /span> preFilter <span class="pl-k">&amp;&amp;</s
pan > (seed < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > selector
) <
span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L2379"
class
= "blob-num js-line-number"
data - line - number = "2379" > < /td>
    < td
id = "LC2379"
class
= "blob-code blob-code-inner js-file-line" > condense(elems, preMap, preFilter, context, xml) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L2380"
class
= "blob-num js-line-number"
data - line - number = "2380" > < /td>
    < td
id = "LC2380"
class
= "blob-code blob-code-inner js-file-line" > elems,
<
/td>
< /tr>
< tr >
< td
id = "L2381"
class
= "blob-num js-line-number"
data - line - number = "2381" > < /td>
    < td
id = "LC2381"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2382"
class
= "blob-num js-line-number"
data - line - number = "2382" > < /td>
    < td
id = "LC2382"
class
= "blob-code blob-code-inner js-file-line" > matcherOut < span
class
= "pl-k" >= < /span> matcher <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2383"
class
= "blob-num js-line-number"
data - line - number = "2383" > < /td>
    < td
id = "LC2383"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,</span></td>
    < /tr>
    < tr >
    < td
id = "L2384"
class
= "blob-num js-line-number"
data - line - number = "2384" > < /td>
    < td
id = "LC2384"
class
= "blob-code blob-code-inner js-file-line" > postFinder < span
class
= "pl-k" > || < /span> ( seed <span class="pl-k">?</s
pan > preFilter < span
class
= "pl-k" >
:<
/span> preexisting <span class="pl-k">||</s
pan > postFilter
) <
span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L2385"
class
= "blob-num js-line-number"
data - line - number = "2385" > < /td>
    < td
id = "LC2385"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2386"
class
= "blob-num js-line-number"
data - line - number = "2386" > < /td>
    < td
id = "LC2386"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ...intermediate processing is necessary</span></td>
    < /tr>
    < tr >
    < td
id = "L2387"
class
= "blob-num js-line-number"
data - line - number = "2387" > < /td>
    < td
id = "LC2387"
class
= "blob-code blob-code-inner js-file-line" > [] < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L2388"
class
= "blob-num js-line-number"
data - line - number = "2388" > < /td>
    < td
id = "LC2388"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2389"
class
= "blob-num js-line-number"
data - line - number = "2389" > < /td>
    < td
id = "LC2389"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ...otherwise use results directly</span></td>
    < /tr>
    < tr >
    < td
id = "L2390"
class
= "blob-num js-line-number"
data - line - number = "2390" > < /td>
    < td
id = "LC2390"
class
= "blob-code blob-code-inner js-file-line" > results < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L2391"
class
= "blob-num js-line-number"
data - line - number = "2391" > < /td>
    < td
id = "LC2391"
class
= "blob-code blob-code-inner js-file-line" > matcherIn;
<
/td>
< /tr>
< tr >
< td
id = "L2392"
class
= "blob-num js-line-number"
data - line - number = "2392" > < /td>
    < td
id = "LC2392"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2393"
class
= "blob-num js-line-number"
data - line - number = "2393" > < /td>
    < td
id = "LC2393"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Find primary matches</span></td>
    < /tr>
    < tr >
    < td
id = "L2394"
class
= "blob-num js-line-number"
data - line - number = "2394" > < /td>
    < td
id = "LC2394"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( matcher ) {</
td >
< /tr>
< tr >
< td
id = "L2395"
class
= "blob-num js-line-number"
data - line - number = "2395" > < /td>
    < td
id = "LC2395"
class
= "blob-code blob-code-inner js-file-line" > matcher(matcherIn, matcherOut, context, xml);
<
/td>
< /tr>
< tr >
< td
id = "L2396"
class
= "blob-num js-line-number"
data - line - number = "2396" > < /td>
    < td
id = "LC2396"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2397"
class
= "blob-num js-line-number"
data - line - number = "2397" > < /td>
    < td
id = "LC2397"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2398"
class
= "blob-num js-line-number"
data - line - number = "2398" > < /td>
    < td
id = "LC2398"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Apply postFilter</span></td>
    < /tr>
    < tr >
    < td
id = "L2399"
class
= "blob-num js-line-number"
data - line - number = "2399" > < /td>
    < td
id = "LC2399"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( postFilter ) {</
td >
< /tr>
< tr >
< td
id = "L2400"
class
= "blob-num js-line-number"
data - line - number = "2400" > < /td>
    < td
id = "LC2400"
class
= "blob-code blob-code-inner js-file-line" > temp < span
class
= "pl-k" >= < /span> condense( matcherOut, postMap );</
td >
< /tr>
< tr >
< td
id = "L2401"
class
= "blob-num js-line-number"
data - line - number = "2401" > < /td>
    < td
id = "LC2401"
class
= "blob-code blob-code-inner js-file-line" > postFilter(temp, [], context, xml);
<
/td>
< /tr>
< tr >
< td
id = "L2402"
class
= "blob-num js-line-number"
data - line - number = "2402" > < /td>
    < td
id = "LC2402"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2403"
class
= "blob-num js-line-number"
data - line - number = "2403" > < /td>
    < td
id = "LC2403"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Un-match failing elements by moving them back to matcherIn</span></td>
    < /tr>
    < tr >
    < td
id = "L2404"
class
= "blob-num js-line-number"
data - line - number = "2404" > < /td>
    < td
id = "LC2404"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> temp<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L2405"
class
= "blob-num js-line-number"
data - line - number = "2405" > < /td>
    < td
id = "LC2405"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2406"
class
    = "blob-num js-line-number"
    data - line - number = "2406" > < /td>
        < td
    id = "LC2406"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( (elem <span class="pl-k">=</s
    pan > temp[i]
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2407"
class
    = "blob-num js-line-number"
    data - line - number = "2407" > < /td>
        < td
    id = "LC2407"
class
    = "blob-code blob-code-inner js-file-line" > matcherOut[postMap[i]] < span
class
    = "pl-k" >= < /span> <span class="pl-k">!</s
    pan > (matcherIn[postMap[i]] < span
class
    = "pl-k" >= < /span> elem);</
    td >
    < /tr>
    < tr >
    < td
    id = "L2408"
class
    = "blob-num js-line-number"
    data - line - number = "2408" > < /td>
        < td
    id = "LC2408"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2409"
class
= "blob-num js-line-number"
data - line - number = "2409" > < /td>
    < td
id = "LC2409"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2410"
class
= "blob-num js-line-number"
data - line - number = "2410" > < /td>
    < td
id = "LC2410"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2411"
class
= "blob-num js-line-number"
data - line - number = "2411" > < /td>
    < td
id = "LC2411"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2412"
class
= "blob-num js-line-number"
data - line - number = "2412" > < /td>
    < td
id = "LC2412"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( seed ) {</
td >
< /tr>
< tr >
< td
id = "L2413"
class
= "blob-num js-line-number"
data - line - number = "2413" > < /td>
    < td
id = "LC2413"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( postFinder <span class="pl-k">||</s
pan > preFilter
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2414"
class
    = "blob-num js-line-number"
    data - line - number = "2414" > < /td>
        < td
    id = "LC2414"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( postFinder ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2415"
class
    = "blob-num js-line-number"
    data - line - number = "2415" > < /td>
        < td
    id = "LC2415"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Get the final matcherOut by condensing this intermediate into postFinder contexts</span></td>
        < /tr>
        < tr >
        < td
    id = "L2416"
class
    = "blob-num js-line-number"
    data - line - number = "2416" > < /td>
        < td
    id = "LC2416"
class
    = "blob-code blob-code-inner js-file-line" > temp < span
class
    = "pl-k" >= < /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2417"
class
    = "blob-num js-line-number"
    data - line - number = "2417" > < /td>
        < td
    id = "LC2417"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> matcherOut<span class="pl-k">.</s
    pan > length;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2418"
class
    = "blob-num js-line-number"
    data - line - number = "2418" > < /td>
        < td
    id = "LC2418"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( i<span class="pl-k">--</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2419"
class
    = "blob-num js-line-number"
    data - line - number = "2419" > < /td>
        < td
    id = "LC2419"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( (elem <span class="pl-k">=</s
    pan > matcherOut[i]
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2420"
class
    = "blob-num js-line-number"
    data - line - number = "2420" > < /td>
        < td
    id = "LC2420"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Restore matcherIn since elem is not yet a final match</span></td>
        < /tr>
        < tr >
        < td
    id = "L2421"
class
    = "blob-num js-line-number"
    data - line - number = "2421" > < /td>
        < td
    id = "LC2421"
class
    = "blob-code blob-code-inner js-file-line" > temp < span
class
    = "pl-k" >
.<
    /span>push( (matcherIn[i] <span class="pl-k">=</s
    pan > elem
)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2422"
class
= "blob-num js-line-number"
data - line - number = "2422" > < /td>
    < td
id = "LC2422"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2423"
class
= "blob-num js-line-number"
data - line - number = "2423" > < /td>
    < td
id = "LC2423"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2424"
class
= "blob-num js-line-number"
data - line - number = "2424" > < /td>
    < td
id = "LC2424"
class
= "blob-code blob-code-inner js-file-line" > postFinder( < span
class
= "pl-c1" > null < /span>, (matcherOut <span class="pl-k">=</s
pan > []
),
temp, xml
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2425"
class
= "blob-num js-line-number"
data - line - number = "2425" > < /td>
    < td
id = "LC2425"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2426"
class
= "blob-num js-line-number"
data - line - number = "2426" > < /td>
    < td
id = "LC2426"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2427"
class
= "blob-num js-line-number"
data - line - number = "2427" > < /td>
    < td
id = "LC2427"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Move matched elements from seed to results to keep them synchronized</span></td>
    < /tr>
    < tr >
    < td
id = "L2428"
class
= "blob-num js-line-number"
data - line - number = "2428" > < /td>
    < td
id = "LC2428"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> matcherOut<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L2429"
class
= "blob-num js-line-number"
data - line - number = "2429" > < /td>
    < td
id = "LC2429"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2430"
class
    = "blob-num js-line-number"
    data - line - number = "2430" > < /td>
        < td
    id = "LC2430"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( (elem <span class="pl-k">=</s
    pan > matcherOut[i]
)
<
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L2431"
class
= "blob-num js-line-number"
data - line - number = "2431" > < /td>
    < td
id = "LC2431"
class
= "blob-code blob-code-inner js-file-line" > (temp < span
class
= "pl-k" >= < /span> postFinder <span class="pl-k">?</s
pan > indexOf(seed, elem) < span
class
= "pl-k" >
:<
/span> preMap[i]) <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2432"
class
    = "blob-num js-line-number"
    data - line - number = "2432" > < /td>
        < td
    id = "LC2432"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2433"
class
    = "blob-num js-line-number"
    data - line - number = "2433" > < /td>
        < td
    id = "LC2433"
class
    = "blob-code blob-code-inner js-file-line" > seed[temp] < span
class
    = "pl-k" >= < /span> <span class="pl-k">!</s
    pan > (results[temp] < span
class
    = "pl-k" >= < /span> elem);</
    td >
    < /tr>
    < tr >
    < td
    id = "L2434"
class
    = "blob-num js-line-number"
    data - line - number = "2434" > < /td>
        < td
    id = "LC2434"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2435"
class
= "blob-num js-line-number"
data - line - number = "2435" > < /td>
    < td
id = "LC2435"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2436"
class
= "blob-num js-line-number"
data - line - number = "2436" > < /td>
    < td
id = "LC2436"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2437"
class
= "blob-num js-line-number"
data - line - number = "2437" > < /td>
    < td
id = "LC2437"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2438"
class
= "blob-num js-line-number"
data - line - number = "2438" > < /td>
    < td
id = "LC2438"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add elements to results, through postFinder if defined</span></td>
    < /tr>
    < tr >
    < td
id = "L2439"
class
= "blob-num js-line-number"
data - line - number = "2439" > < /td>
    < td
id = "LC2439"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L2440"
class
= "blob-num js-line-number"
data - line - number = "2440" > < /td>
    < td
id = "LC2440"
class
= "blob-code blob-code-inner js-file-line" > matcherOut < span
class
= "pl-k" >= < /span> condense(</
td >
< /tr>
< tr >
< td
id = "L2441"
class
= "blob-num js-line-number"
data - line - number = "2441" > < /td>
    < td
id = "LC2441"
class
= "blob-code blob-code-inner js-file-line" > matcherOut < span
class
= "pl-k" >= == < /span> results <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2442"
class
= "blob-num js-line-number"
data - line - number = "2442" > < /td>
    < td
id = "LC2442"
class
= "blob-code blob-code-inner js-file-line" > matcherOut < span
class
= "pl-k" >
.<
/span>splice( preexisting, matcherOut<span class="pl-k">.</s
pan > length
) <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L2443"
class
= "blob-num js-line-number"
data - line - number = "2443" > < /td>
    < td
id = "LC2443"
class
= "blob-code blob-code-inner js-file-line" > matcherOut < /td>
    < /tr>
    < tr >
    < td
id = "L2444"
class
= "blob-num js-line-number"
data - line - number = "2444" > < /td>
    < td
id = "LC2444"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2445"
class
= "blob-num js-line-number"
data - line - number = "2445" > < /td>
    < td
id = "LC2445"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( postFinder ) {</
td >
< /tr>
< tr >
< td
id = "L2446"
class
= "blob-num js-line-number"
data - line - number = "2446" > < /td>
    < td
id = "LC2446"
class
= "blob-code blob-code-inner js-file-line" > postFinder( < span
class
= "pl-c1" > null < /span>, results, matcherOut, xml );</
td >
< /tr>
< tr >
< td
id = "L2447"
class
= "blob-num js-line-number"
data - line - number = "2447" > < /td>
    < td
id = "LC2447"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L2448"
class
= "blob-num js-line-number"
data - line - number = "2448" > < /td>
    < td
id = "LC2448"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >
.<
/span>apply( results, matcherOut );</
td >
< /tr>
< tr >
< td
id = "L2449"
class
= "blob-num js-line-number"
data - line - number = "2449" > < /td>
    < td
id = "LC2449"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2450"
class
= "blob-num js-line-number"
data - line - number = "2450" > < /td>
    < td
id = "LC2450"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2451"
class
= "blob-num js-line-number"
data - line - number = "2451" > < /td>
    < td
id = "LC2451"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L2452"
class
= "blob-num js-line-number"
data - line - number = "2452" > < /td>
    < td
id = "LC2452"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2453"
class
= "blob-num js-line-number"
data - line - number = "2453" > < /td>
    < td
id = "LC2453"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2454"
class
= "blob-num js-line-number"
data - line - number = "2454" > < /td>
    < td
id = "LC2454"
class
= "blob-code blob-code-inner js-file-line" > function matcherFromTokens(tokens) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2455"
class
    = "blob-num js-line-number"
    data - line - number = "2455" > < /td>
        < td
    id = "LC2455"
class
    = "blob-code blob-code-inner js-file-line" >
    var checkContext, matcher, j, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L2456"
class
    = "blob-num js-line-number"
    data - line - number = "2456" > < /td>
        < td
    id = "LC2456"
class
    = "blob-code blob-code-inner js-file-line" > len < span
class
    = "pl-k" >= < /span> tokens<span class="pl-k">.</s
    pan > length,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2457"
class
    = "blob-num js-line-number"
    data - line - number = "2457" > < /td>
        < td
    id = "LC2457"
class
    = "blob-code blob-code-inner js-file-line" > leadingRelative < span
class
    = "pl-k" >= < /span> <span class="pl-smi">Expr</s
    pan > < span
class
    = "pl-k" >
.<
    /span>relative[ tokens[<span class="pl-c1">0</span>]<span class="pl-k">.</s
    pan > type
],<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2458"
class
    = "blob-num js-line-number"
    data - line - number = "2458" > < /td>
        < td
    id = "LC2458"
class
    = "blob-code blob-code-inner js-file-line" > implicitRelative < span
class
    = "pl-k" >= < /span> leadingRelative <span class="pl-k">||</s
    pan > < span
class
    = "pl-smi" > Expr < /span><span class="pl-k">.</s
    pan > relative[ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span>],</
    td >
    < /tr>
    < tr >
    < td
    id = "L2459"
class
    = "blob-num js-line-number"
    data - line - number = "2459" > < /td>
        < td
    id = "LC2459"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> leadingRelative <span class="pl-k">?</s
    pan > < span
class
    = "pl-c1" > 1 < /span> <span class="pl-k">:</s
    pan > < span
class
    = "pl-c1" > 0 < /span>,</
    td >
    < /tr>
    < tr >
    < td
    id = "L2460"
class
    = "blob-num js-line-number"
    data - line - number = "2460" > < /td>
        < td
    id = "LC2460"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2461"
class
    = "blob-num js-line-number"
    data - line - number = "2461" > < /td>
        < td
    id = "LC2461"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> The foundational matcher ensures that elements are reachable from top-level context(s)</span></td>
        < /tr>
        < tr >
        < td
    id = "L2462"
class
    = "blob-num js-line-number"
    data - line - number = "2462" > < /td>
        < td
    id = "LC2462"
class
    = "blob-code blob-code-inner js-file-line" > matchContext < span
class
    = "pl-k" >= < /span> addCombinator( function( elem ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2463"
class
    = "blob-num js-line-number"
    data - line - number = "2463" > < /td>
        < td
    id = "LC2463"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem <span class="pl-k">===</s
    pan > checkContext;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2464"
class
    = "blob-num js-line-number"
    data - line - number = "2464" > < /td>
        < td
    id = "LC2464"
class
    = "blob-code blob-code-inner js-file-line" >
}, implicitRelative,
<
span
class
= "pl-c1" > true < /span> ),</
td >
< /tr>
< tr >
< td
id = "L2465"
class
= "blob-num js-line-number"
data - line - number = "2465" > < /td>
    < td
id = "LC2465"
class
= "blob-code blob-code-inner js-file-line" > matchAnyContext < span
class
= "pl-k" >= < /span> addCombinator( function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L2466"
class
= "blob-num js-line-number"
data - line - number = "2466" > < /td>
    < td
id = "LC2466"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> indexOf( checkContext, elem ) <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2467"
class
= "blob-num js-line-number"
data - line - number = "2467" > < /td>
    < td
id = "LC2467"
class
= "blob-code blob-code-inner js-file-line" >
},
implicitRelative,
<
span
class
= "pl-c1" > true < /span> ),</
td >
< /tr>
< tr >
< td
id = "L2468"
class
= "blob-num js-line-number"
data - line - number = "2468" > < /td>
    < td
id = "LC2468"
class
= "blob-code blob-code-inner js-file-line" > matchers < span
class
= "pl-k" >= < /span> [ function( elem, context, xml ) {</td>
      </tr>
      <tr>
        <td id="L2469" class="blob-num js-line-number" data-line-number="2469"></td>
        <td id="LC2469" class="blob-code blob-code-inner js-file-line">                        var ret <span class="pl-k">=</span> ( <span class="pl-k">!</span>leadingRelative <span class="pl-k">&amp;&amp;</span> ( xml <span class="pl-k">||</span> context <span class="pl-k">!=</span><span class="pl-k">=</span> outermostContext ) ) <span class="pl-k">||</span> (</td>
      </tr>
      <tr>
        <td id="L2470" class="blob-num js-line-number" data-line-number="2470"></td>
        <td id="LC2470" class="blob-code blob-code-inner js-file-line">                                (checkContext <span class="pl-k">=</span> context)<span class="pl-k">.</span>nodeType <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L2471" class="blob-num js-line-number" data-line-number="2471"></td>
        <td id="LC2471" class="blob-code blob-code-inner js-file-line">                                    matchContext( elem, context, xml ) <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L2472" class="blob-num js-line-number" data-line-number="2472"></td>
        <td id="LC2472" class="blob-code blob-code-inner js-file-line">                                    matchAnyContext( elem, context, xml ) );</td>
      </tr>
      <tr>
        <td id="L2473" class="blob-num js-line-number" data-line-number="2473"></td>
        <td id="LC2473" class="blob-code blob-code-inner js-file-line">                        <span class="pl-c"><span class="pl-c">//</span> Avoid hanging onto element (issue #299)</span></td>
      </tr>
      <tr>
        <td id="L2474" class="blob-num js-line-number" data-line-number="2474"></td>
        <td id="LC2474" class="blob-code blob-code-inner js-file-line">                        checkContext <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2475" class="blob-num js-line-number" data-line-number="2475"></td>
        <td id="LC2475" class="blob-code blob-code-inner js-file-line">                        <span class="pl-k">return</span> ret;</td>
      </tr>
      <tr>
        <td id="L2476" class="blob-num js-line-number" data-line-number="2476"></td>
        <td id="LC2476" class="blob-code blob-code-inner js-file-line">                    } ];</
td >
< /tr>
< tr >
< td
id = "L2477"
class
= "blob-num js-line-number"
data - line - number = "2477" > < /td>
    < td
id = "LC2477"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2478"
class
= "blob-num js-line-number"
data - line - number = "2478" > < /td>
    < td
id = "LC2478"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > len;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L2479"
class
= "blob-num js-line-number"
data - line - number = "2479" > < /td>
    < td
id = "LC2479"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (matcher <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > relative[tokens[i] < span
class
= "pl-k" >
.<
/span>type ]) ) {</
td >
< /tr>
< tr >
< td
id = "L2480"
class
= "blob-num js-line-number"
data - line - number = "2480" > < /td>
    < td
id = "LC2480"
class
= "blob-code blob-code-inner js-file-line" > matchers < span
class
= "pl-k" >= < /span> [ addCombinator(elementMatcher( matchers ), matcher) ];</
td >
< /tr>
< tr >
< td
id = "L2481"
class
= "blob-num js-line-number"
data - line - number = "2481" > < /td>
    < td
id = "LC2481"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L2482"
class
= "blob-num js-line-number"
data - line - number = "2482" > < /td>
    < td
id = "LC2482"
class
= "blob-code blob-code-inner js-file-line" > matcher < span
class
= "pl-k" >= < /span> <span class="pl-smi">Expr</s
pan > < span
class
= "pl-k" >
.<
/span>filter[ tokens[i]<span class="pl-k">.</s
pan > type
]<
span
class
= "pl-k" >
.<
/span>apply( <span class="pl-c1">null</s
pan >, tokens[i] < span
class
= "pl-k" >
.<
/span>matches );</
td >
< /tr>
< tr >
< td
id = "L2483"
class
= "blob-num js-line-number"
data - line - number = "2483" > < /td>
    < td
id = "LC2483"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2484"
class
= "blob-num js-line-number"
data - line - number = "2484" > < /td>
    < td
id = "LC2484"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return special upon seeing a positional matcher</span></td>
    < /tr>
    < tr >
    < td
id = "L2485"
class
= "blob-num js-line-number"
data - line - number = "2485" > < /td>
    < td
id = "LC2485"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( matcher[ expando ] ) {</
td >
< /tr>
< tr >
< td
id = "L2486"
class
= "blob-num js-line-number"
data - line - number = "2486" > < /td>
    < td
id = "LC2486"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Find the next relative operator (if any) for proper handling</span></td>
    < /tr>
    < tr >
    < td
id = "L2487"
class
= "blob-num js-line-number"
data - line - number = "2487" > < /td>
    < td
id = "LC2487"
class
= "blob-code blob-code-inner js-file-line" > j < span
class
= "pl-k" >= < /span> <span class="pl-k">++</s
pan > i;
<
/td>
< /tr>
< tr >
< td
id = "L2488"
class
= "blob-num js-line-number"
data - line - number = "2488" > < /td>
    < td
id = "LC2488"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; j <span class="pl-k">&lt;</s
pan > len;
j < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L2489"
class
= "blob-num js-line-number"
data - line - number = "2489" > < /td>
    < td
id = "LC2489"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-smi">Expr</s
pan > < span
class
= "pl-k" >
.<
/span>relative[ tokens[j]<span class="pl-k">.</s
pan > type
] )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2490"
class
    = "blob-num js-line-number"
    data - line - number = "2490" > < /td>
        < td
    id = "LC2490"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    break
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2491"
class
    = "blob-num js-line-number"
    data - line - number = "2491" > < /td>
        < td
    id = "LC2491"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2492"
class
= "blob-num js-line-number"
data - line - number = "2492" > < /td>
    < td
id = "LC2492"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2493"
class
= "blob-num js-line-number"
data - line - number = "2493" > < /td>
    < td
id = "LC2493"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> setMatcher(</
td >
< /tr>
< tr >
< td
id = "L2494"
class
= "blob-num js-line-number"
data - line - number = "2494" > < /td>
    < td
id = "LC2494"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> elementMatcher( matchers ),</
td >
< /tr>
< tr >
< td
id = "L2495"
class
= "blob-num js-line-number"
data - line - number = "2495" > < /td>
    < td
id = "LC2495"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> toSelector(</
td >
< /tr>
< tr >
< td
id = "L2496"
class
= "blob-num js-line-number"
data - line - number = "2496" > < /td>
    < td
id = "LC2496"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If the preceding token was a descendant combinator, insert an implicit any-element `*`</span></td>
    < /tr>
    < tr >
    < td
id = "L2497"
class
= "blob-num js-line-number"
data - line - number = "2497" > < /td>
    < td
id = "LC2497"
class
= "blob-code blob-code-inner js-file-line" > tokens < span
class
= "pl-k" >
.<
/span>slice( <span class="pl-c1">0</s
pan >, i < span
class
= "pl-k" > - < /span> <span class="pl-c1">1</s
pan >
)<
span
class
= "pl-k" >
.<
/span>concat({ value<span class="pl-k">:</s
pan > tokens[i < span
class
= "pl-k" > - < /span> <span class="pl-c1">2</s
pan >
]<
span
class
= "pl-k" >
.<
/span>type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> })</
td >
< /tr>
< tr >
< td
id = "L2498"
class
= "blob-num js-line-number"
data - line - number = "2498" > < /td>
    < td
id = "LC2498"
class
= "blob-code blob-code-inner js-file-line" >
)<
span
class
= "pl-k" >
.<
/span>replace( rtrim, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > $1 < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L2499"
class
= "blob-num js-line-number"
data - line - number = "2499" > < /td>
    < td
id = "LC2499"
class
= "blob-code blob-code-inner js-file-line" > matcher,
<
/td>
< /tr>
< tr >
< td
id = "L2500"
class
= "blob-num js-line-number"
data - line - number = "2500" > < /td>
    < td
id = "LC2500"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" > &lt; < /span> j <span class="pl-k">&amp;&amp;</s
pan > matcherFromTokens(tokens < span
class
= "pl-k" >
.<
/span>slice( i, j ) ),</
td >
< /tr>
< tr >
< td
id = "L2501"
class
= "blob-num js-line-number"
data - line - number = "2501" > < /td>
    < td
id = "LC2501"
class
= "blob-code blob-code-inner js-file-line" > j < span
class
= "pl-k" > &lt; < /span> len <span class="pl-k">&amp;&amp;</s
pan > matcherFromTokens((tokens < span
class
= "pl-k" >= < /span> tokens<span class="pl-k">.</s
pan > slice(j)
) ),<
/td>
< /tr>
< tr >
< td
id = "L2502"
class
= "blob-num js-line-number"
data - line - number = "2502" > < /td>
    < td
id = "LC2502"
class
= "blob-code blob-code-inner js-file-line" > j < span
class
= "pl-k" > &lt; < /span> len <span class="pl-k">&amp;&amp;</s
pan > toSelector(tokens) < /td>
< /tr>
< tr >
< td
id = "L2503"
class
= "blob-num js-line-number"
data - line - number = "2503" > < /td>
    < td
id = "LC2503"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2504"
class
= "blob-num js-line-number"
data - line - number = "2504" > < /td>
    < td
id = "LC2504"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2505"
class
= "blob-num js-line-number"
data - line - number = "2505" > < /td>
    < td
id = "LC2505"
class
= "blob-code blob-code-inner js-file-line" > matchers < span
class
= "pl-k" >
.<
/span>push( matcher );</
td >
< /tr>
< tr >
< td
id = "L2506"
class
= "blob-num js-line-number"
data - line - number = "2506" > < /td>
    < td
id = "LC2506"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2507"
class
= "blob-num js-line-number"
data - line - number = "2507" > < /td>
    < td
id = "LC2507"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2508"
class
= "blob-num js-line-number"
data - line - number = "2508" > < /td>
    < td
id = "LC2508"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2509"
class
= "blob-num js-line-number"
data - line - number = "2509" > < /td>
    < td
id = "LC2509"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elementMatcher( matchers );</
td >
< /tr>
< tr >
< td
id = "L2510"
class
= "blob-num js-line-number"
data - line - number = "2510" > < /td>
    < td
id = "LC2510"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2511"
class
= "blob-num js-line-number"
data - line - number = "2511" > < /td>
    < td
id = "LC2511"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2512"
class
= "blob-num js-line-number"
data - line - number = "2512" > < /td>
    < td
id = "LC2512"
class
= "blob-code blob-code-inner js-file-line" > function matcherFromGroupMatchers(elementMatchers, setMatchers) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2513"
class
    = "blob-num js-line-number"
    data - line - number = "2513" > < /td>
        < td
    id = "LC2513"
class
    = "blob-code blob-code-inner js-file-line" >
    var bySet
<
    span
class
    = "pl-k" >= < /span> setMatchers<span class="pl-k">.</s
    pan > length < span
class
    = "pl-k" > &gt; < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2514"
class
    = "blob-num js-line-number"
    data - line - number = "2514" > < /td>
        < td
    id = "LC2514"
class
    = "blob-code blob-code-inner js-file-line" > byElement < span
class
    = "pl-k" >= < /span> elementMatchers<span class="pl-k">.</s
    pan > length < span
class
    = "pl-k" > &gt; < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2515"
class
    = "blob-num js-line-number"
    data - line - number = "2515" > < /td>
        < td
    id = "LC2515"
class
    = "blob-code blob-code-inner js-file-line" > superMatcher < span
class
    = "pl-k" >= < /span> function( seed, context, xml, results, outermost ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2516"
class
    = "blob-num js-line-number"
    data - line - number = "2516" > < /td>
        < td
    id = "LC2516"
class
    = "blob-code blob-code-inner js-file-line" >
    var elem, j, matcher, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L2517"
class
    = "blob-num js-line-number"
    data - line - number = "2517" > < /td>
        < td
    id = "LC2517"
class
    = "blob-code blob-code-inner js-file-line" > matchedCount < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2518"
class
    = "blob-num js-line-number"
    data - line - number = "2518" > < /td>
        < td
    id = "LC2518"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > 0 < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2519"
class
    = "blob-num js-line-number"
    data - line - number = "2519" > < /td>
        < td
    id = "LC2519"
class
    = "blob-code blob-code-inner js-file-line" > unmatched < span
class
    = "pl-k" >= < /span> seed <span class="pl-k">&amp;&amp;</s
    pan > [],
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2520"
class
    = "blob-num js-line-number"
    data - line - number = "2520" > < /td>
        < td
    id = "LC2520"
class
    = "blob-code blob-code-inner js-file-line" > setMatched < span
class
    = "pl-k" >= < /span> [],</
    td >
    < /tr>
    < tr >
    < td
    id = "L2521"
class
    = "blob-num js-line-number"
    data - line - number = "2521" > < /td>
        < td
    id = "LC2521"
class
    = "blob-code blob-code-inner js-file-line" > contextBackup < span
class
    = "pl-k" >= < /span> outermostContext,</
    td >
    < /tr>
    < tr >
    < td
    id = "L2522"
class
    = "blob-num js-line-number"
    data - line - number = "2522" > < /td>
        < td
    id = "LC2522"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> We must always have either seed elements or outermost context</span></td>
        < /tr>
        < tr >
        < td
    id = "L2523"
class
    = "blob-num js-line-number"
    data - line - number = "2523" > < /td>
        < td
    id = "LC2523"
class
    = "blob-code blob-code-inner js-file-line" > elems < span
class
    = "pl-k" >= < /span> seed <span class="pl-k">||</s
    pan > byElement < span
class
    = "pl-k" > &amp;&amp; < /span> <span class="pl-smi">Expr</s
    pan > < span
class
    = "pl-k" >
.<
    /span>find[<span class="pl-s"><span class="pl-pds">&quot;</span>TAG<span class="pl-pds">&quot;</span></span>]( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > * < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >, outermost
),
<
/td>
< /tr>
< tr >
< td
id = "L2524"
class
= "blob-num js-line-number"
data - line - number = "2524" > < /td>
    < td
id = "LC2524"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use integer dirruns iff this is the outermost matcher</span></td>
    < /tr>
    < tr >
    < td
id = "L2525"
class
= "blob-num js-line-number"
data - line - number = "2525" > < /td>
    < td
id = "LC2525"
class
= "blob-code blob-code-inner js-file-line" > dirrunsUnique < span
class
= "pl-k" >= < /span> (dirruns <span class="pl-k">+=</s
pan > contextBackup < span
class
= "pl-k" >= =
<
/span> <span class="pl-c1">null</s
pan > < span
class
= "pl-k" > ?
<
/span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" >
:<
/span> <span class="pl-smi">Math</s
pan > < span
class
= "pl-k" >
.<
/span>random() <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > 0.1 < /span>),</
td >
< /tr>
< tr >
< td
id = "L2526"
class
= "blob-num js-line-number"
data - line - number = "2526" > < /td>
    < td
id = "LC2526"
class
= "blob-code blob-code-inner js-file-line" > len < span
class
= "pl-k" >= < /span> elems<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L2527"
class
= "blob-num js-line-number"
data - line - number = "2527" > < /td>
    < td
id = "LC2527"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2528"
class
= "blob-num js-line-number"
data - line - number = "2528" > < /td>
    < td
id = "LC2528"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( outermost ) {</
td >
< /tr>
< tr >
< td
id = "L2529"
class
= "blob-num js-line-number"
data - line - number = "2529" > < /td>
    < td
id = "LC2529"
class
= "blob-code blob-code-inner js-file-line" > outermostContext < span
class
= "pl-k" >= < /span> context <span class="pl-k">===</s
pan > document < span
class
= "pl-k" > || < /span> context <span class="pl-k">||</s
pan > outermost;
<
/td>
< /tr>
< tr >
< td
id = "L2530"
class
= "blob-num js-line-number"
data - line - number = "2530" > < /td>
    < td
id = "LC2530"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2531"
class
= "blob-num js-line-number"
data - line - number = "2531" > < /td>
    < td
id = "LC2531"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2532"
class
= "blob-num js-line-number"
data - line - number = "2532" > < /td>
    < td
id = "LC2532"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add elements passing elementMatchers directly to results</span></td>
    < /tr>
    < tr >
    < td
id = "L2533"
class
= "blob-num js-line-number"
data - line - number = "2533" > < /td>
    < td
id = "LC2533"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE&lt;9, Safari</span></td>
    < /tr>
    < tr >
    < td
id = "L2534"
class
= "blob-num js-line-number"
data - line - number = "2534" > < /td>
    < td
id = "LC2534"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Tolerate NodeList properties (IE: &quot;length&quot;; Safari: &lt;number&gt;) matching elements by id</span></td>
    < /tr>
    < tr >
    < td
id = "L2535"
class
= "blob-num js-line-number"
data - line - number = "2535" > < /td>
    < td
id = "LC2535"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> len <span class="pl-k">&amp;&amp;</s
pan > (elem < span
class
= "pl-k" >= < /span> elems[i]) <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span>; i<span class="pl-k">++</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2536"
class
    = "blob-num js-line-number"
    data - line - number = "2536" > < /td>
        < td
    id = "LC2536"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( byElement <span class="pl-k">&amp;&amp;</s
    pan > elem
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2537"
class
    = "blob-num js-line-number"
    data - line - number = "2537" > < /td>
        < td
    id = "LC2537"
class
    = "blob-code blob-code-inner js-file-line" > j < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2538"
class
    = "blob-num js-line-number"
    data - line - number = "2538" > < /td>
        < td
    id = "LC2538"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > context < span
class
    = "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
    pan > ownerDocument < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > document
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2539"
class
    = "blob-num js-line-number"
    data - line - number = "2539" > < /td>
        < td
    id = "LC2539"
class
    = "blob-code blob-code-inner js-file-line" > setDocument(elem);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2540"
class
    = "blob-num js-line-number"
    data - line - number = "2540" > < /td>
        < td
    id = "LC2540"
class
    = "blob-code blob-code-inner js-file-line" > xml < span
class
    = "pl-k" >= < /span> <span class="pl-k">!</s
    pan > documentIsHTML;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2541"
class
    = "blob-num js-line-number"
    data - line - number = "2541" > < /td>
        < td
    id = "LC2541"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2542"
class
= "blob-num js-line-number"
data - line - number = "2542" > < /td>
    < td
id = "LC2542"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( (matcher <span class="pl-k">=</s
pan > elementMatchers[j < span
class
= "pl-k" > ++ < /span>]) ) {</
td >
< /tr>
< tr >
< td
id = "L2543"
class
= "blob-num js-line-number"
data - line - number = "2543" > < /td>
    < td
id = "LC2543"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( matcher( elem, context <span class="pl-k">||</s
pan > document, xml
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2544"
class
    = "blob-num js-line-number"
    data - line - number = "2544" > < /td>
        < td
    id = "LC2544"
class
    = "blob-code blob-code-inner js-file-line" > results < span
class
    = "pl-k" >
.<
    /span>push( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2545"
class
    = "blob-num js-line-number"
    data - line - number = "2545" > < /td>
        < td
    id = "LC2545"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    break
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2546"
class
    = "blob-num js-line-number"
    data - line - number = "2546" > < /td>
        < td
    id = "LC2546"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2547"
class
= "blob-num js-line-number"
data - line - number = "2547" > < /td>
    < td
id = "LC2547"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2548"
class
= "blob-num js-line-number"
data - line - number = "2548" > < /td>
    < td
id = "LC2548"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( outermost ) {</
td >
< /tr>
< tr >
< td
id = "L2549"
class
= "blob-num js-line-number"
data - line - number = "2549" > < /td>
    < td
id = "LC2549"
class
= "blob-code blob-code-inner js-file-line" > dirruns < span
class
= "pl-k" >= < /span> dirrunsUnique;</
td >
< /tr>
< tr >
< td
id = "L2550"
class
= "blob-num js-line-number"
data - line - number = "2550" > < /td>
    < td
id = "LC2550"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2551"
class
= "blob-num js-line-number"
data - line - number = "2551" > < /td>
    < td
id = "LC2551"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2552"
class
= "blob-num js-line-number"
data - line - number = "2552" > < /td>
    < td
id = "LC2552"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2553"
class
= "blob-num js-line-number"
data - line - number = "2553" > < /td>
    < td
id = "LC2553"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Track unmatched elements for set filters</span></td>
    < /tr>
    < tr >
    < td
id = "L2554"
class
= "blob-num js-line-number"
data - line - number = "2554" > < /td>
    < td
id = "LC2554"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( bySet ) {</
td >
< /tr>
< tr >
< td
id = "L2555"
class
= "blob-num js-line-number"
data - line - number = "2555" > < /td>
    < td
id = "LC2555"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> They will have gone through all possible matchers</span></td>
    < /tr>
    < tr >
    < td
id = "L2556"
class
= "blob-num js-line-number"
data - line - number = "2556" > < /td>
    < td
id = "LC2556"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (elem <span class="pl-k">=</s
pan > < span
class
= "pl-k" > ! < /span>matcher <span class="pl-k">&amp;&amp;</s
pan > elem
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2557"
class
    = "blob-num js-line-number"
    data - line - number = "2557" > < /td>
        < td
    id = "LC2557"
class
    = "blob-code blob-code-inner js-file-line" > matchedCount < span
class
    = "pl-k" > -- < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2558"
class
    = "blob-num js-line-number"
    data - line - number = "2558" > < /td>
        < td
    id = "LC2558"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2559"
class
= "blob-num js-line-number"
data - line - number = "2559" > < /td>
    < td
id = "LC2559"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2560"
class
= "blob-num js-line-number"
data - line - number = "2560" > < /td>
    < td
id = "LC2560"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Lengthen the array for every element, matched or not</span></td>
    < /tr>
    < tr >
    < td
id = "L2561"
class
= "blob-num js-line-number"
data - line - number = "2561" > < /td>
    < td
id = "LC2561"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( seed ) {</
td >
< /tr>
< tr >
< td
id = "L2562"
class
= "blob-num js-line-number"
data - line - number = "2562" > < /td>
    < td
id = "LC2562"
class
= "blob-code blob-code-inner js-file-line" > unmatched < span
class
= "pl-k" >
.<
/span>push( elem );</
td >
< /tr>
< tr >
< td
id = "L2563"
class
= "blob-num js-line-number"
data - line - number = "2563" > < /td>
    < td
id = "LC2563"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2564"
class
= "blob-num js-line-number"
data - line - number = "2564" > < /td>
    < td
id = "LC2564"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2565"
class
= "blob-num js-line-number"
data - line - number = "2565" > < /td>
    < td
id = "LC2565"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2566"
class
= "blob-num js-line-number"
data - line - number = "2566" > < /td>
    < td
id = "LC2566"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2567"
class
= "blob-num js-line-number"
data - line - number = "2567" > < /td>
    < td
id = "LC2567"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> `i` is now the count of elements visited above, and adding it to `matchedCount`</span></td>
    < /tr>
    < tr >
    < td
id = "L2568"
class
= "blob-num js-line-number"
data - line - number = "2568" > < /td>
    < td
id = "LC2568"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> makes the latter nonnegative.</span></td>
    < /tr>
    < tr >
    < td
id = "L2569"
class
= "blob-num js-line-number"
data - line - number = "2569" > < /td>
    < td
id = "LC2569"
class
= "blob-code blob-code-inner js-file-line" > matchedCount < span
class
= "pl-k" > +=
<
/span> i;</
td >
< /tr>
< tr >
< td
id = "L2570"
class
= "blob-num js-line-number"
data - line - number = "2570" > < /td>
    < td
id = "LC2570"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2571"
class
= "blob-num js-line-number"
data - line - number = "2571" > < /td>
    < td
id = "LC2571"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Apply set filters to unmatched elements</span></td>
    < /tr>
    < tr >
    < td
id = "L2572"
class
= "blob-num js-line-number"
data - line - number = "2572" > < /td>
    < td
id = "LC2572"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`</span></td>
    < /tr>
    < tr >
    < td
id = "L2573"
class
= "blob-num js-line-number"
data - line - number = "2573" > < /td>
    < td
id = "LC2573"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> equals `i`), unless we didn&#39;t visit _any_ elements in the above loop because we have</span></td>
    < /tr>
    < tr >
    < td
id = "L2574"
class
= "blob-num js-line-number"
data - line - number = "2574" > < /td>
    < td
id = "LC2574"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> no element matchers and no seed.</span></td>
    < /tr>
    < tr >
    < td
id = "L2575"
class
= "blob-num js-line-number"
data - line - number = "2575" > < /td>
    < td
id = "LC2575"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Incrementing an initially-string &quot;0&quot; `i` allows `i` to remain a string only in that</span></td>
    < /tr>
    < tr >
    < td
id = "L2576"
class
= "blob-num js-line-number"
data - line - number = "2576" > < /td>
    < td
id = "LC2576"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> case, which will result in a &quot;00&quot; `matchedCount` that differs from `i` but is also</span></td>
    < /tr>
    < tr >
    < td
id = "L2577"
class
= "blob-num js-line-number"
data - line - number = "2577" > < /td>
    < td
id = "LC2577"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> numerically zero.</span></td>
    < /tr>
    < tr >
    < td
id = "L2578"
class
= "blob-num js-line-number"
data - line - number = "2578" > < /td>
    < td
id = "LC2578"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( bySet <span class="pl-k">&amp;&amp;</s
pan > i < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > matchedCount
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2579"
class
    = "blob-num js-line-number"
    data - line - number = "2579" > < /td>
        < td
    id = "LC2579"
class
    = "blob-code blob-code-inner js-file-line" > j < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2580"
class
    = "blob-num js-line-number"
    data - line - number = "2580" > < /td>
        < td
    id = "LC2580"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( (matcher <span class="pl-k">=</s
    pan > setMatchers[j < span
class
    = "pl-k" > ++ < /span>]) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2581"
class
    = "blob-num js-line-number"
    data - line - number = "2581" > < /td>
        < td
    id = "LC2581"
class
    = "blob-code blob-code-inner js-file-line" > matcher(unmatched, setMatched, context, xml);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2582"
class
    = "blob-num js-line-number"
    data - line - number = "2582" > < /td>
        < td
    id = "LC2582"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2583"
class
= "blob-num js-line-number"
data - line - number = "2583" > < /td>
    < td
id = "LC2583"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2584"
class
= "blob-num js-line-number"
data - line - number = "2584" > < /td>
    < td
id = "LC2584"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( seed ) {</
td >
< /tr>
< tr >
< td
id = "L2585"
class
= "blob-num js-line-number"
data - line - number = "2585" > < /td>
    < td
id = "LC2585"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Reintegrate element matches to eliminate the need for sorting</span></td>
    < /tr>
    < tr >
    < td
id = "L2586"
class
= "blob-num js-line-number"
data - line - number = "2586" > < /td>
    < td
id = "LC2586"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( matchedCount <span class="pl-k">&gt;</s
pan > < span
class
= "pl-c1" > 0 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L2587"
class
= "blob-num js-line-number"
data - line - number = "2587" > < /td>
    < td
id = "LC2587"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2588"
class
    = "blob-num js-line-number"
    data - line - number = "2588" > < /td>
        < td
    id = "LC2588"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > (unmatched[i] < span
class
    = "pl-k" > || < /span> setMatched[i]) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2589"
class
    = "blob-num js-line-number"
    data - line - number = "2589" > < /td>
        < td
    id = "LC2589"
class
    = "blob-code blob-code-inner js-file-line" > setMatched[i] < span
class
    = "pl-k" >= < /span> pop<span class="pl-k">.</s
    pan > call(results);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2590"
class
    = "blob-num js-line-number"
    data - line - number = "2590" > < /td>
        < td
    id = "LC2590"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2591"
class
= "blob-num js-line-number"
data - line - number = "2591" > < /td>
    < td
id = "LC2591"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2592"
class
= "blob-num js-line-number"
data - line - number = "2592" > < /td>
    < td
id = "LC2592"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2593"
class
= "blob-num js-line-number"
data - line - number = "2593" > < /td>
    < td
id = "LC2593"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2594"
class
= "blob-num js-line-number"
data - line - number = "2594" > < /td>
    < td
id = "LC2594"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Discard index placeholder values to get only actual matches</span></td>
    < /tr>
    < tr >
    < td
id = "L2595"
class
= "blob-num js-line-number"
data - line - number = "2595" > < /td>
    < td
id = "LC2595"
class
= "blob-code blob-code-inner js-file-line" > setMatched < span
class
= "pl-k" >= < /span> condense( setMatched );</
td >
< /tr>
< tr >
< td
id = "L2596"
class
= "blob-num js-line-number"
data - line - number = "2596" > < /td>
    < td
id = "LC2596"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2597"
class
= "blob-num js-line-number"
data - line - number = "2597" > < /td>
    < td
id = "LC2597"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2598"
class
= "blob-num js-line-number"
data - line - number = "2598" > < /td>
    < td
id = "LC2598"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add matches to results</span></td>
    < /tr>
    < tr >
    < td
id = "L2599"
class
= "blob-num js-line-number"
data - line - number = "2599" > < /td>
    < td
id = "LC2599"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >
.<
/span>apply( results, setMatched );</
td >
< /tr>
< tr >
< td
id = "L2600"
class
= "blob-num js-line-number"
data - line - number = "2600" > < /td>
    < td
id = "LC2600"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2601"
class
= "blob-num js-line-number"
data - line - number = "2601" > < /td>
    < td
id = "LC2601"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Seedless set matches succeeding multiple successful matchers stipulate sorting</span></td>
    < /tr>
    < tr >
    < td
id = "L2602"
class
= "blob-num js-line-number"
data - line - number = "2602" > < /td>
    < td
id = "LC2602"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( outermost <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>seed <span class="pl-k">&amp;&amp;</s
pan > setMatched < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">&gt;</s
pan > < span
class
= "pl-c1" > 0 < /span> <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2603"
class
= "blob-num js-line-number"
data - line - number = "2603" > < /td>
    < td
id = "LC2603"
class
= "blob-code blob-code-inner js-file-line" > (matchedCount < span
class
= "pl-k" > + < /span> setMatchers<span class="pl-k">.</s
pan > length
) <
span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2604"
class
    = "blob-num js-line-number"
    data - line - number = "2604" > < /td>
        < td
    id = "LC2604"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2605"
class
    = "blob-num js-line-number"
    data - line - number = "2605" > < /td>
        < td
    id = "LC2605"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-smi" > Sizzle < /span><span class="pl-k">.</s
    pan > uniqueSort(results);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2606"
class
    = "blob-num js-line-number"
    data - line - number = "2606" > < /td>
        < td
    id = "LC2606"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2607"
class
= "blob-num js-line-number"
data - line - number = "2607" > < /td>
    < td
id = "LC2607"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2608"
class
= "blob-num js-line-number"
data - line - number = "2608" > < /td>
    < td
id = "LC2608"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2609"
class
= "blob-num js-line-number"
data - line - number = "2609" > < /td>
    < td
id = "LC2609"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Override manipulation of globals by nested matchers</span></td>
    < /tr>
    < tr >
    < td
id = "L2610"
class
= "blob-num js-line-number"
data - line - number = "2610" > < /td>
    < td
id = "LC2610"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( outermost ) {</
td >
< /tr>
< tr >
< td
id = "L2611"
class
= "blob-num js-line-number"
data - line - number = "2611" > < /td>
    < td
id = "LC2611"
class
= "blob-code blob-code-inner js-file-line" > dirruns < span
class
= "pl-k" >= < /span> dirrunsUnique;</
td >
< /tr>
< tr >
< td
id = "L2612"
class
= "blob-num js-line-number"
data - line - number = "2612" > < /td>
    < td
id = "LC2612"
class
= "blob-code blob-code-inner js-file-line" > outermostContext < span
class
= "pl-k" >= < /span> contextBackup;</
td >
< /tr>
< tr >
< td
id = "L2613"
class
= "blob-num js-line-number"
data - line - number = "2613" > < /td>
    < td
id = "LC2613"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2614"
class
= "blob-num js-line-number"
data - line - number = "2614" > < /td>
    < td
id = "LC2614"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2615"
class
= "blob-num js-line-number"
data - line - number = "2615" > < /td>
    < td
id = "LC2615"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> unmatched;</
td >
< /tr>
< tr >
< td
id = "L2616"
class
= "blob-num js-line-number"
data - line - number = "2616" > < /td>
    < td
id = "LC2616"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2617"
class
= "blob-num js-line-number"
data - line - number = "2617" > < /td>
    < td
id = "LC2617"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2618"
class
= "blob-num js-line-number"
data - line - number = "2618" > < /td>
    < td
id = "LC2618"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> bySet <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2619"
class
= "blob-num js-line-number"
data - line - number = "2619" > < /td>
    < td
id = "LC2619"
class
= "blob-code blob-code-inner js-file-line" > markFunction(superMatcher) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L2620"
class
= "blob-num js-line-number"
data - line - number = "2620" > < /td>
    < td
id = "LC2620"
class
= "blob-code blob-code-inner js-file-line" > superMatcher;
<
/td>
< /tr>
< tr >
< td
id = "L2621"
class
= "blob-num js-line-number"
data - line - number = "2621" > < /td>
    < td
id = "LC2621"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2622"
class
= "blob-num js-line-number"
data - line - number = "2622" > < /td>
    < td
id = "LC2622"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2623"
class
= "blob-num js-line-number"
data - line - number = "2623" > < /td>
    < td
id = "LC2623"
class
= "blob-code blob-code-inner js-file-line" > compile < span
class
= "pl-k" >= < /span> <span class="pl-smi">Sizzle</s
pan > < span
class
= "pl-k" >
.<
/span>compile <span class="pl-k">=</s
pan > function (selector, match < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> Internal Use Only <span class="pl-c">*/ < /span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2624"
class
    = "blob-num js-line-number"
    data - line - number = "2624" > < /td>
        < td
    id = "LC2624"
class
    = "blob-code blob-code-inner js-file-line" >
    var i, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L2625"
class
    = "blob-num js-line-number"
    data - line - number = "2625" > < /td>
        < td
    id = "LC2625"
class
    = "blob-code blob-code-inner js-file-line" > setMatchers < span
class
    = "pl-k" >= < /span> [],</
    td >
    < /tr>
    < tr >
    < td
    id = "L2626"
class
    = "blob-num js-line-number"
    data - line - number = "2626" > < /td>
        < td
    id = "LC2626"
class
    = "blob-code blob-code-inner js-file-line" > elementMatchers < span
class
    = "pl-k" >= < /span> [],</
    td >
    < /tr>
    < tr >
    < td
    id = "L2627"
class
    = "blob-num js-line-number"
    data - line - number = "2627" > < /td>
        < td
    id = "LC2627"
class
    = "blob-code blob-code-inner js-file-line" > cached < span
class
    = "pl-k" >= < /span> compilerCache[ selector <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2628"
class
    = "blob-num js-line-number"
    data - line - number = "2628" > < /td>
        < td
    id = "LC2628"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2629"
class
    = "blob-num js-line-number"
    data - line - number = "2629" > < /td>
        < td
    id = "LC2629"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > cached
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2630"
class
    = "blob-num js-line-number"
    data - line - number = "2630" > < /td>
        < td
    id = "LC2630"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Generate a function of recursive functions that can be used to check each element</span></td>
        < /tr>
        < tr >
        < td
    id = "L2631"
class
    = "blob-num js-line-number"
    data - line - number = "2631" > < /td>
        < td
    id = "LC2631"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > match
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2632"
class
    = "blob-num js-line-number"
    data - line - number = "2632" > < /td>
        < td
    id = "LC2632"
class
    = "blob-code blob-code-inner js-file-line" > match < span
class
    = "pl-k" >= < /span> tokenize( selector );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2633"
class
    = "blob-num js-line-number"
    data - line - number = "2633" > < /td>
        < td
    id = "LC2633"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2634"
class
= "blob-num js-line-number"
data - line - number = "2634" > < /td>
    < td
id = "LC2634"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> match<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L2635"
class
= "blob-num js-line-number"
data - line - number = "2635" > < /td>
    < td
id = "LC2635"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2636"
class
    = "blob-num js-line-number"
    data - line - number = "2636" > < /td>
        < td
    id = "LC2636"
class
    = "blob-code blob-code-inner js-file-line" > cached < span
class
    = "pl-k" >= < /span> matcherFromTokens( match[i] );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2637"
class
    = "blob-num js-line-number"
    data - line - number = "2637" > < /td>
        < td
    id = "LC2637"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( cached[ expando ] ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2638"
class
    = "blob-num js-line-number"
    data - line - number = "2638" > < /td>
        < td
    id = "LC2638"
class
    = "blob-code blob-code-inner js-file-line" > setMatchers < span
class
    = "pl-k" >
.<
    /span>push( cached );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2639"
class
    = "blob-num js-line-number"
    data - line - number = "2639" > < /td>
        < td
    id = "LC2639"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L2640"
class
= "blob-num js-line-number"
data - line - number = "2640" > < /td>
    < td
id = "LC2640"
class
= "blob-code blob-code-inner js-file-line" > elementMatchers < span
class
= "pl-k" >
.<
/span>push( cached );</
td >
< /tr>
< tr >
< td
id = "L2641"
class
= "blob-num js-line-number"
data - line - number = "2641" > < /td>
    < td
id = "LC2641"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2642"
class
= "blob-num js-line-number"
data - line - number = "2642" > < /td>
    < td
id = "LC2642"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2643"
class
= "blob-num js-line-number"
data - line - number = "2643" > < /td>
    < td
id = "LC2643"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2644"
class
= "blob-num js-line-number"
data - line - number = "2644" > < /td>
    < td
id = "LC2644"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Cache the compiled function</span></td>
    < /tr>
    < tr >
    < td
id = "L2645"
class
= "blob-num js-line-number"
data - line - number = "2645" > < /td>
    < td
id = "LC2645"
class
= "blob-code blob-code-inner js-file-line" > cached < span
class
= "pl-k" >= < /span> compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );</
td >
< /tr>
< tr >
< td
id = "L2646"
class
= "blob-num js-line-number"
data - line - number = "2646" > < /td>
    < td
id = "LC2646"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2647"
class
= "blob-num js-line-number"
data - line - number = "2647" > < /td>
    < td
id = "LC2647"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Save selector and tokenization</span></td>
    < /tr>
    < tr >
    < td
id = "L2648"
class
= "blob-num js-line-number"
data - line - number = "2648" > < /td>
    < td
id = "LC2648"
class
= "blob-code blob-code-inner js-file-line" > cached < span
class
= "pl-k" >
.<
/span>selector <span class="pl-k">=</s
pan > selector;
<
/td>
< /tr>
< tr >
< td
id = "L2649"
class
= "blob-num js-line-number"
data - line - number = "2649" > < /td>
    < td
id = "LC2649"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2650"
class
= "blob-num js-line-number"
data - line - number = "2650" > < /td>
    < td
id = "LC2650"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> cached;</
td >
< /tr>
< tr >
< td
id = "L2651"
class
= "blob-num js-line-number"
data - line - number = "2651" > < /td>
    < td
id = "LC2651"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2652"
class
= "blob-num js-line-number"
data - line - number = "2652" > < /td>
    < td
id = "LC2652"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2653"
class
= "blob-num js-line-number"
data - line - number = "2653" > < /td>
    < td
id = "LC2653"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L2654" class="blob-num js-line-number" data-line-number="2654"></td>
 <td id="LC2654" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * A low-level selection function that works with Sizzle&#39;s compiled</span></td>
 </tr>
 <tr>
 <td id="L2655" class="blob-num js-line-number" data-line-number="2655"></td>
 <td id="LC2655" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             *  selector functions</span></td>
 </tr>
 <tr>
 <td id="L2656" class="blob-num js-line-number" data-line-number="2656"></td>
 <td id="LC2656" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {String|Function} selector A selector or a pre-compiled</span></td>
 </tr>
 <tr>
 <td id="L2657" class="blob-num js-line-number" data-line-number="2657"></td>
 <td id="LC2657" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             *  selector function built with Sizzle.compile</span></td>
 </tr>
 <tr>
 <td id="L2658" class="blob-num js-line-number" data-line-number="2658"></td>
 <td id="LC2658" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Element} context</span></td>
 </tr>
 <tr>
 <td id="L2659" class="blob-num js-line-number" data-line-number="2659"></td>
 <td id="LC2659" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Array} [results]</span></td>
 </tr>
 <tr>
 <td id="L2660" class="blob-num js-line-number" data-line-number="2660"></td>
 <td id="LC2660" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             * <span class="pl-k">@param</span> {Array} [seed] A set of elements to match against</span></td>
 </tr>
 <tr>
 <td id="L2661" class="blob-num js-line-number" data-line-number="2661"></td>
 <td id="LC2661" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L2662"
class
= "blob-num js-line-number"
data - line - number = "2662" > < /td>
    < td
id = "LC2662"
class
= "blob-code blob-code-inner js-file-line" > select < span
class
= "pl-k" >= < /span> <span class="pl-smi">Sizzle</s
pan > < span
class
= "pl-k" >
.<
/span>select <span class="pl-k">=</s
pan > function (selector, context, results, seed) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2663"
class
    = "blob-num js-line-number"
    data - line - number = "2663" > < /td>
        < td
    id = "LC2663"
class
    = "blob-code blob-code-inner js-file-line" >
    var i, tokens, token, type, find, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L2664"
class
    = "blob-num js-line-number"
    data - line - number = "2664" > < /td>
        < td
    id = "LC2664"
class
    = "blob-code blob-code-inner js-file-line" > compiled < span
class
    = "pl-k" >= < /span> typeof selector <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>function<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > selector,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2665"
class
    = "blob-num js-line-number"
    data - line - number = "2665" > < /td>
        < td
    id = "LC2665"
class
    = "blob-code blob-code-inner js-file-line" > match < span
class
    = "pl-k" >= < /span> <span class="pl-k">!</s
    pan > seed < span
class
    = "pl-k" > &amp;&amp; < /span> tokenize( (selector <span class="pl-k">=</s
    pan > compiled < span
class
    = "pl-k" >
.<
    /span>selector <span class="pl-k">||</s
    pan > selector
)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2666"
class
= "blob-num js-line-number"
data - line - number = "2666" > < /td>
    < td
id = "LC2666"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2667"
class
= "blob-num js-line-number"
data - line - number = "2667" > < /td>
    < td
id = "LC2667"
class
= "blob-code blob-code-inner js-file-line" > results < span
class
= "pl-k" >= < /span> results <span class="pl-k">||</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L2668"
class
= "blob-num js-line-number"
data - line - number = "2668" > < /td>
    < td
id = "LC2668"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2669"
class
= "blob-num js-line-number"
data - line - number = "2669" > < /td>
    < td
id = "LC2669"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Try to minimize operations if there is only one selector in the list and no seed</span></td>
    < /tr>
    < tr >
    < td
id = "L2670"
class
= "blob-num js-line-number"
data - line - number = "2670" > < /td>
    < td
id = "LC2670"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (the latter of which guarantees us context)</span></td>
    < /tr>
    < tr >
    < td
id = "L2671"
class
= "blob-num js-line-number"
data - line - number = "2671" > < /td>
    < td
id = "LC2671"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( match<span class="pl-k">.</s
pan > length < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2672"
class
    = "blob-num js-line-number"
    data - line - number = "2672" > < /td>
        < td
    id = "LC2672"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2673"
class
    = "blob-num js-line-number"
    data - line - number = "2673" > < /td>
        < td
    id = "LC2673"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Reduce context if the leading compound selector is an ID</span></td>
        < /tr>
        < tr >
        < td
    id = "L2674"
class
    = "blob-num js-line-number"
    data - line - number = "2674" > < /td>
        < td
    id = "LC2674"
class
    = "blob-code blob-code-inner js-file-line" > tokens < span
class
    = "pl-k" >= < /span> match[<span class="pl-c1">0</span>] <span class="pl-k">=</s
    pan > match[ < span
class
    = "pl-c1" > 0 < /span>]<span class="pl-k">.</s
    pan > slice( < span
class
    = "pl-c1" > 0 < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2675"
class
    = "blob-num js-line-number"
    data - line - number = "2675" > < /td>
        < td
    id = "LC2675"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( tokens<span class="pl-k">.</s
    pan > length < span
class
    = "pl-k" > &gt; < /span> <span class="pl-c1">2</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> (token <span class="pl-k">=</s
    pan > tokens[ < span
class
    = "pl-c1" > 0 < /span>])<span class="pl-k">.</s
    pan > type < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > ID < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L2676"
class
    = "blob-num js-line-number"
    data - line - number = "2676" > < /td>
        < td
    id = "LC2676"
class
    = "blob-code blob-code-inner js-file-line" > context < span
class
    = "pl-k" >
.<
    /span>nodeType <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 9 < /span> <span class="pl-k">&amp;&amp;</s
    pan > documentIsHTML < span
class
    = "pl-k" > &amp;&amp; < /span> <span class="pl-smi">Expr</s
    pan > < span
class
    = "pl-k" >
.<
    /span>relative[ tokens[<span class="pl-c1">1</span>]<span class="pl-k">.</s
    pan > type
] )
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2677"
    class
        = "blob-num js-line-number"
        data - line - number = "2677" > < /td>
            < td
        id = "LC2677"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L2678"
    class
        = "blob-num js-line-number"
        data - line - number = "2678" > < /td>
            < td
        id = "LC2678"
    class
        = "blob-code blob-code-inner js-file-line" > context < span
    class
        = "pl-k" >= < /span> ( <span class="pl-smi">Expr</s
        pan > < span
    class
        = "pl-k" >
    .<
        /span>find[<span class="pl-s"><span class="pl-pds">&quot;</span>ID<span class="pl-pds">&quot;</span></span>]( token<span class="pl-k">.</s
        pan > matches[ < span
    class
        = "pl-c1" > 0 < /span>]<span class="pl-k">.</s
        pan > replace(runescape, funescape), context
    )
<
span
class
= "pl-k" > || < /span> [] )[<span class="pl-c1">0</span>];</
td >
< /tr>
< tr >
< td
id = "L2679"
class
= "blob-num js-line-number"
data - line - number = "2679" > < /td>
    < td
id = "LC2679"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > context
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2680"
class
    = "blob-num js-line-number"
    data - line - number = "2680" > < /td>
        < td
    id = "LC2680"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> results;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2681"
class
    = "blob-num js-line-number"
    data - line - number = "2681" > < /td>
        < td
    id = "LC2681"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2682"
class
    = "blob-num js-line-number"
    data - line - number = "2682" > < /td>
        < td
    id = "LC2682"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Precompiled matchers will still verify ancestry, so step up a level</span></td>
        < /tr>
        < tr >
        < td
    id = "L2683"
class
    = "blob-num js-line-number"
    data - line - number = "2683" > < /td>
        < td
    id = "LC2683"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (compiled)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2684"
class
    = "blob-num js-line-number"
    data - line - number = "2684" > < /td>
        < td
    id = "LC2684"
class
    = "blob-code blob-code-inner js-file-line" > context < span
class
    = "pl-k" >= < /span> context<span class="pl-k">.</s
    pan > parentNode;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2685"
class
    = "blob-num js-line-number"
    data - line - number = "2685" > < /td>
        < td
    id = "LC2685"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2686"
class
= "blob-num js-line-number"
data - line - number = "2686" > < /td>
    < td
id = "LC2686"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2687"
class
= "blob-num js-line-number"
data - line - number = "2687" > < /td>
    < td
id = "LC2687"
class
= "blob-code blob-code-inner js-file-line" > selector < span
class
= "pl-k" >= < /span> selector<span class="pl-k">.</s
pan > slice(tokens < span
class
= "pl-k" >
.<
/span>shift()<span class="pl-k">.</s
pan > value < span
class
= "pl-k" >
.<
/span>length );</
td >
< /tr>
< tr >
< td
id = "L2688"
class
= "blob-num js-line-number"
data - line - number = "2688" > < /td>
    < td
id = "LC2688"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2689"
class
= "blob-num js-line-number"
data - line - number = "2689" > < /td>
    < td
id = "LC2689"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2690"
class
= "blob-num js-line-number"
data - line - number = "2690" > < /td>
    < td
id = "LC2690"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fetch a seed set for right-to-left matching</span></td>
    < /tr>
    < tr >
    < td
id = "L2691"
class
= "blob-num js-line-number"
data - line - number = "2691" > < /td>
    < td
id = "LC2691"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> matchExpr[<span class="pl-s"><span class="pl-pds">&quot;</span>needsContext<span class="pl-pds">&quot;</span></span>]<span class="pl-k">.</s
pan > test(selector) < span
class
= "pl-k" > ?
<
/span> <span class="pl-c1">0</s
pan > < span
class
= "pl-k" >
:<
/span> tokens<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L2692"
class
= "blob-num js-line-number"
data - line - number = "2692" > < /td>
    < td
id = "LC2692"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2693"
class
    = "blob-num js-line-number"
    data - line - number = "2693" > < /td>
        < td
    id = "LC2693"
class
    = "blob-code blob-code-inner js-file-line" > token < span
class
    = "pl-k" >= < /span> tokens[i];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2694"
class
    = "blob-num js-line-number"
    data - line - number = "2694" > < /td>
        < td
    id = "LC2694"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2695"
class
    = "blob-num js-line-number"
    data - line - number = "2695" > < /td>
        < td
    id = "LC2695"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Abort if we hit a combinator</span></td>
        < /tr>
        < tr >
        < td
    id = "L2696"
class
    = "blob-num js-line-number"
    data - line - number = "2696" > < /td>
        < td
    id = "LC2696"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-smi">Expr</s
    pan > < span
class
    = "pl-k" >
.<
    /span>relative[ (type <span class="pl-k">=</span> token<span class="pl-k">.</span>type) ] ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2697"
class
    = "blob-num js-line-number"
    data - line - number = "2697" > < /td>
        < td
    id = "LC2697"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    break
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2698"
class
    = "blob-num js-line-number"
    data - line - number = "2698" > < /td>
        < td
    id = "LC2698"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2699"
class
= "blob-num js-line-number"
data - line - number = "2699" > < /td>
    < td
id = "LC2699"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( (find <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Expr < /span><span class="pl-k">.</s
pan > find[type]
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2700"
class
    = "blob-num js-line-number"
    data - line - number = "2700" > < /td>
        < td
    id = "LC2700"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Search, expanding context for leading sibling combinators</span></td>
        < /tr>
        < tr >
        < td
    id = "L2701"
class
    = "blob-num js-line-number"
    data - line - number = "2701" > < /td>
        < td
    id = "LC2701"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( (seed <span class="pl-k">=</s
    pan > find( < /td>
    < /tr>
    < tr >
    < td
    id = "L2702"
class
    = "blob-num js-line-number"
    data - line - number = "2702" > < /td>
        < td
    id = "LC2702"
class
    = "blob-code blob-code-inner js-file-line" > token < span
class
    = "pl-k" >
.<
    /span>matches[<span class="pl-c1">0</span>]<span class="pl-k">.</s
    pan > replace(runescape, funescape),
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2703"
class
    = "blob-num js-line-number"
    data - line - number = "2703" > < /td>
        < td
    id = "LC2703"
class
    = "blob-code blob-code-inner js-file-line" > rsibling < span
class
    = "pl-k" >
.<
    /span>test( tokens[<span class="pl-c1">0</span>]<span class="pl-k">.</s
    pan > type
) <
    span
class
    = "pl-k" > &amp;&amp; < /span> testContext( context<span class="pl-k">.</s
    pan > parentNode
)
<
span
class
= "pl-k" > || < /span> context</
td >
< /tr>
< tr >
< td
id = "L2704"
class
= "blob-num js-line-number"
data - line - number = "2704" > < /td>
    < td
id = "LC2704"
class
= "blob-code blob-code-inner js-file-line" >
)) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2705"
class
    = "blob-num js-line-number"
    data - line - number = "2705" > < /td>
        < td
    id = "LC2705"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2706"
class
    = "blob-num js-line-number"
    data - line - number = "2706" > < /td>
        < td
    id = "LC2706"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If seed is empty or no tokens remain, we can return early</span></td>
        < /tr>
        < tr >
        < td
    id = "L2707"
class
    = "blob-num js-line-number"
    data - line - number = "2707" > < /td>
        < td
    id = "LC2707"
class
    = "blob-code blob-code-inner js-file-line" > tokens < span
class
    = "pl-k" >
.<
    /span>splice( i, <span class="pl-c1">1</s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2708"
class
= "blob-num js-line-number"
data - line - number = "2708" > < /td>
    < td
id = "LC2708"
class
= "blob-code blob-code-inner js-file-line" > selector < span
class
= "pl-k" >= < /span> seed<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &amp;&amp; < /span> toSelector( tokens );</
td >
< /tr>
< tr >
< td
id = "L2709"
class
= "blob-num js-line-number"
data - line - number = "2709" > < /td>
    < td
id = "LC2709"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > selector
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2710"
class
    = "blob-num js-line-number"
    data - line - number = "2710" > < /td>
        < td
    id = "LC2710"
class
    = "blob-code blob-code-inner js-file-line" > push < span
class
    = "pl-k" >
.<
    /span>apply( results, seed );</
    td >
    < /tr>
    < tr >
    < td
    id = "L2711"
class
    = "blob-num js-line-number"
    data - line - number = "2711" > < /td>
        < td
    id = "LC2711"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> results;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2712"
class
    = "blob-num js-line-number"
    data - line - number = "2712" > < /td>
        < td
    id = "LC2712"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2713"
class
= "blob-num js-line-number"
data - line - number = "2713" > < /td>
    < td
id = "LC2713"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2714"
class
= "blob-num js-line-number"
data - line - number = "2714" > < /td>
    < td
id = "LC2714"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
break
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L2715"
class
= "blob-num js-line-number"
data - line - number = "2715" > < /td>
    < td
id = "LC2715"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2716"
class
= "blob-num js-line-number"
data - line - number = "2716" > < /td>
    < td
id = "LC2716"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2717"
class
= "blob-num js-line-number"
data - line - number = "2717" > < /td>
    < td
id = "LC2717"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2718"
class
= "blob-num js-line-number"
data - line - number = "2718" > < /td>
    < td
id = "LC2718"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2719"
class
= "blob-num js-line-number"
data - line - number = "2719" > < /td>
    < td
id = "LC2719"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2720"
class
= "blob-num js-line-number"
data - line - number = "2720" > < /td>
    < td
id = "LC2720"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Compile and execute a filtering function if one is not provided</span></td>
    < /tr>
    < tr >
    < td
id = "L2721"
class
= "blob-num js-line-number"
data - line - number = "2721" > < /td>
    < td
id = "LC2721"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Provide `match` to avoid retokenization if we modified the selector above</span></td>
    < /tr>
    < tr >
    < td
id = "L2722"
class
= "blob-num js-line-number"
data - line - number = "2722" > < /td>
    < td
id = "LC2722"
class
= "blob-code blob-code-inner js-file-line" > (compiled < span
class
= "pl-k" > || < /span> compile( selector, match ) )(</
td >
< /tr>
< tr >
< td
id = "L2723"
class
= "blob-num js-line-number"
data - line - number = "2723" > < /td>
    < td
id = "LC2723"
class
= "blob-code blob-code-inner js-file-line" > seed,
<
/td>
< /tr>
< tr >
< td
id = "L2724"
class
= "blob-num js-line-number"
data - line - number = "2724" > < /td>
    < td
id = "LC2724"
class
= "blob-code blob-code-inner js-file-line" > context,
<
/td>
< /tr>
< tr >
< td
id = "L2725"
class
= "blob-num js-line-number"
data - line - number = "2725" > < /td>
    < td
id = "LC2725"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>documentIsHTML,</
td >
< /tr>
< tr >
< td
id = "L2726"
class
= "blob-num js-line-number"
data - line - number = "2726" > < /td>
    < td
id = "LC2726"
class
= "blob-code blob-code-inner js-file-line" > results,
<
/td>
< /tr>
< tr >
< td
id = "L2727"
class
= "blob-num js-line-number"
data - line - number = "2727" > < /td>
    < td
id = "LC2727"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>context <span class="pl-k">||</s
pan > rsibling < span
class
= "pl-k" >
.<
/span>test( selector ) <span class="pl-k">&amp;&amp;</s
pan > testContext(context < span
class
= "pl-k" >
.<
/span>parentNode ) <span class="pl-k">||</s
pan > context < /td>
< /tr>
< tr >
< td
id = "L2728"
class
= "blob-num js-line-number"
data - line - number = "2728" > < /td>
    < td
id = "LC2728"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2729"
class
= "blob-num js-line-number"
data - line - number = "2729" > < /td>
    < td
id = "LC2729"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> results;</
td >
< /tr>
< tr >
< td
id = "L2730"
class
= "blob-num js-line-number"
data - line - number = "2730" > < /td>
    < td
id = "LC2730"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2731"
class
= "blob-num js-line-number"
data - line - number = "2731" > < /td>
    < td
id = "LC2731"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2732"
class
= "blob-num js-line-number"
data - line - number = "2732" > < /td>
    < td
id = "LC2732"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> One-time assignments</span></td>
    < /tr>
    < tr >
    < td
id = "L2733"
class
= "blob-num js-line-number"
data - line - number = "2733" > < /td>
    < td
id = "LC2733"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2734"
class
= "blob-num js-line-number"
data - line - number = "2734" > < /td>
    < td
id = "LC2734"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Sort stability</span></td>
    < /tr>
    < tr >
    < td
id = "L2735"
class
= "blob-num js-line-number"
data - line - number = "2735" > < /td>
    < td
id = "LC2735"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>sortStable <span class="pl-k">=</s
pan > expando < span
class
= "pl-k" >
.<
/span>split(<span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)<
span
class
= "pl-k" >
.<
/span>sort( sortOrder )<span class="pl-k">.</s
pan > join( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>) <span class="pl-k">===</s
pan > expando;
<
/td>
< /tr>
< tr >
< td
id = "L2736"
class
= "blob-num js-line-number"
data - line - number = "2736" > < /td>
    < td
id = "LC2736"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2737"
class
= "blob-num js-line-number"
data - line - number = "2737" > < /td>
    < td
id = "LC2737"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Chrome 14-35+</span></td>
    < /tr>
    < tr >
    < td
id = "L2738"
class
= "blob-num js-line-number"
data - line - number = "2738" > < /td>
    < td
id = "LC2738"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Always assume duplicates if they aren&#39;t passed to the comparison function</span></td>
    < /tr>
    < tr >
    < td
id = "L2739"
class
= "blob-num js-line-number"
data - line - number = "2739" > < /td>
    < td
id = "LC2739"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>detectDuplicates <span class="pl-k">=</s
pan > < span
class
= "pl-k" > !! < /span>hasDuplicate;</
td >
< /tr>
< tr >
< td
id = "L2740"
class
= "blob-num js-line-number"
data - line - number = "2740" > < /td>
    < td
id = "LC2740"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2741"
class
= "blob-num js-line-number"
data - line - number = "2741" > < /td>
    < td
id = "LC2741"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Initialize against the default document</span></td>
    < /tr>
    < tr >
    < td
id = "L2742"
class
= "blob-num js-line-number"
data - line - number = "2742" > < /td>
    < td
id = "LC2742"
class
= "blob-code blob-code-inner js-file-line" > setDocument();
<
/td>
< /tr>
< tr >
< td
id = "L2743"
class
= "blob-num js-line-number"
data - line - number = "2743" > < /td>
    < td
id = "LC2743"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2744"
class
= "blob-num js-line-number"
data - line - number = "2744" > < /td>
    < td
id = "LC2744"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Webkit&lt;537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)</span></td>
    < /tr>
    < tr >
    < td
id = "L2745"
class
= "blob-num js-line-number"
data - line - number = "2745" > < /td>
    < td
id = "LC2745"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Detached nodes confoundingly follow *each other*</span></td>
    < /tr>
    < tr >
    < td
id = "L2746"
class
= "blob-num js-line-number"
data - line - number = "2746" > < /td>
    < td
id = "LC2746"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>sortDetached <span class="pl-k">=</s
pan > assert(function (el) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2747"
class
    = "blob-num js-line-number"
    data - line - number = "2747" > < /td>
        < td
    id = "LC2747"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Should return 1, but returns 4 (following)</span></td>
        < /tr>
        < tr >
        < td
    id = "L2748"
class
    = "blob-num js-line-number"
    data - line - number = "2748" > < /td>
        < td
    id = "LC2748"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> el<span class="pl-k">.</s
    pan > compareDocumentPosition(document < span
class
    = "pl-k" >
.<
    /span>createElement(<span class="pl-s"><span class="pl-pds">&quot;</s
    pan > fieldset < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) ) < span
class
= "pl-k" > &amp; < /span> <span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2749"
class
= "blob-num js-line-number"
data - line - number = "2749" > < /td>
    < td
id = "LC2749"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L2750"
class
= "blob-num js-line-number"
data - line - number = "2750" > < /td>
    < td
id = "LC2750"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2751"
class
= "blob-num js-line-number"
data - line - number = "2751" > < /td>
    < td
id = "LC2751"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE&lt;8</span></td>
    < /tr>
    < tr >
    < td
id = "L2752"
class
= "blob-num js-line-number"
data - line - number = "2752" > < /td>
    < td
id = "LC2752"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Prevent attribute/property &quot;interpolation&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L2753"
class
= "blob-num js-line-number"
data - line - number = "2753" > < /td>
    < td
id = "LC2753"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx</span></td>
    < /tr>
    < tr >
    < td
id = "L2754"
class
= "blob-num js-line-number"
data - line - number = "2754" > < /td>
    < td
id = "LC2754"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > assert(function (el) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2755"
class
    = "blob-num js-line-number"
    data - line - number = "2755" > < /td>
        < td
    id = "LC2755"
class
    = "blob-code blob-code-inner js-file-line" > el < span
class
    = "pl-k" >
.<
    /span>innerHTML <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>&lt;a href=&#39;#&#39;&gt;&lt;/
    a &gt; < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2756"
class
    = "blob-num js-line-number"
    data - line - number = "2756" > < /td>
        < td
    id = "LC2756"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> el<span class="pl-k">.</s
    pan > firstChild < span
class
    = "pl-k" >
.<
    /span>getAttribute(<span class="pl-s"><span class="pl-pds">&quot;</s
    pan > href < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > # < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2757"
class
= "blob-num js-line-number"
data - line - number = "2757" > < /td>
    < td
id = "LC2757"
class
= "blob-code blob-code-inner js-file-line" >
}) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2758"
class
    = "blob-num js-line-number"
    data - line - number = "2758" > < /td>
        < td
    id = "LC2758"
class
    = "blob-code blob-code-inner js-file-line" > addHandle( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>type|href|height|width<span class="pl-pds">&quot;</s
    pan > < /span>, function( elem, name, isXML ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2759"
class
    = "blob-num js-line-number"
    data - line - number = "2759" > < /td>
        < td
    id = "LC2759"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > isXML
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2760"
    class
        = "blob-num js-line-number"
        data - line - number = "2760" > < /td>
            < td
        id = "LC2760"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> elem<span class="pl-k">.</s
        pan > getAttribute(name, name < span
    class
        = "pl-k" >
    .<
        /span>toLowerCase() <span class="pl-k">===</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>type<span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">?</s
        pan > < span
    class
        = "pl-c1" > 1 < /span> <span class="pl-k">:</s
        pan > < span
    class
        = "pl-c1" > 2 < /span> );</
        td >
        < /tr>
        < tr >
        < td
        id = "L2761"
    class
        = "blob-num js-line-number"
        data - line - number = "2761" > < /td>
            < td
        id = "LC2761"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2762"
class
    = "blob-num js-line-number"
    data - line - number = "2762" > < /td>
        < td
    id = "LC2762"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2763"
class
= "blob-num js-line-number"
data - line - number = "2763" > < /td>
    < td
id = "LC2763"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2764"
class
= "blob-num js-line-number"
data - line - number = "2764" > < /td>
    < td
id = "LC2764"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2765"
class
= "blob-num js-line-number"
data - line - number = "2765" > < /td>
    < td
id = "LC2765"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE&lt;9</span></td>
    < /tr>
    < tr >
    < td
id = "L2766"
class
= "blob-num js-line-number"
data - line - number = "2766" > < /td>
    < td
id = "LC2766"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use defaultValue in place of getAttribute(&quot;value&quot;)</span></td>
    < /tr>
    < tr >
    < td
id = "L2767"
class
= "blob-num js-line-number"
data - line - number = "2767" > < /td>
    < td
id = "LC2767"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>attributes <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>assert(function( el ) {</
td >
< /tr>
< tr >
< td
id = "L2768"
class
= "blob-num js-line-number"
data - line - number = "2768" > < /td>
    < td
id = "LC2768"
class
= "blob-code blob-code-inner js-file-line" > el < span
class
= "pl-k" >
.<
/span>innerHTML <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>&lt;input/ &gt; < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2769"
class
= "blob-num js-line-number"
data - line - number = "2769" > < /td>
    < td
id = "LC2769"
class
= "blob-code blob-code-inner js-file-line" > el < span
class
= "pl-k" >
.<
/span>firstChild<span class="pl-k">.</s
pan > setAttribute( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>value<span class="pl-pds">&quot;</s
pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2770"
class
= "blob-num js-line-number"
data - line - number = "2770" > < /td>
    < td
id = "LC2770"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> el<span class="pl-k">.</s
pan > firstChild < span
class
= "pl-k" >
.<
/span>getAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > value < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2771"
class
= "blob-num js-line-number"
data - line - number = "2771" > < /td>
    < td
id = "LC2771"
class
= "blob-code blob-code-inner js-file-line" >
}) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2772"
class
    = "blob-num js-line-number"
    data - line - number = "2772" > < /td>
        < td
    id = "LC2772"
class
    = "blob-code blob-code-inner js-file-line" > addHandle( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>value<span class="pl-pds">&quot;</s
    pan > < /span>, function( elem, name, isXML ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2773"
class
    = "blob-num js-line-number"
    data - line - number = "2773" > < /td>
        < td
    id = "LC2773"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > isXML < span
class
    = "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
    pan > nodeName < span
class
    = "pl-k" >
.<
    /span>toLowerCase() <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>input<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2774"
class
    = "blob-num js-line-number"
    data - line - number = "2774" > < /td>
        < td
    id = "LC2774"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem<span class="pl-k">.</s
    pan > defaultValue;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2775"
class
    = "blob-num js-line-number"
    data - line - number = "2775" > < /td>
        < td
    id = "LC2775"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2776"
class
= "blob-num js-line-number"
data - line - number = "2776" > < /td>
    < td
id = "LC2776"
class
= "blob-code blob-code-inner js-file-line" >
})
;
<
/td>
< /tr>
< tr >
< td
id = "L2777"
class
= "blob-num js-line-number"
data - line - number = "2777" > < /td>
    < td
id = "LC2777"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2778"
class
= "blob-num js-line-number"
data - line - number = "2778" > < /td>
    < td
id = "LC2778"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2779"
class
= "blob-num js-line-number"
data - line - number = "2779" > < /td>
    < td
id = "LC2779"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE&lt;9</span></td>
    < /tr>
    < tr >
    < td
id = "L2780"
class
= "blob-num js-line-number"
data - line - number = "2780" > < /td>
    < td
id = "LC2780"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use getAttributeNode to fetch booleans when getAttribute lies</span></td>
    < /tr>
    < tr >
    < td
id = "L2781"
class
= "blob-num js-line-number"
data - line - number = "2781" > < /td>
    < td
id = "LC2781"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > assert(function (el) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2782"
class
    = "blob-num js-line-number"
    data - line - number = "2782" > < /td>
        < td
    id = "LC2782"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> el<span class="pl-k">.</s
    pan > getAttribute( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>disabled<span class="pl-pds">&quot;</s
    pan > < /span>) <span class="pl-k">==</s
    pan > < span
class
    = "pl-c1" > null < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2783"
class
    = "blob-num js-line-number"
    data - line - number = "2783" > < /td>
        < td
    id = "LC2783"
class
    = "blob-code blob-code-inner js-file-line" >
})
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2784"
class
    = "blob-num js-line-number"
    data - line - number = "2784" > < /td>
        < td
    id = "LC2784"
class
    = "blob-code blob-code-inner js-file-line" > addHandle(booleans, function (elem, name, isXML) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2785"
    class
        = "blob-num js-line-number"
        data - line - number = "2785" > < /td>
            < td
        id = "LC2785"
    class
        = "blob-code blob-code-inner js-file-line" >
        var val;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L2786"
    class
        = "blob-num js-line-number"
        data - line - number = "2786" > < /td>
            < td
        id = "LC2786"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( <span class="pl-k">!</s
        pan > isXML
    )
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2787"
    class
        = "blob-num js-line-number"
        data - line - number = "2787" > < /td>
            < td
        id = "LC2787"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> elem[ name ] <span class="pl-k">===</s
        pan > < span
    class
        = "pl-c1" > true < /span> <span class="pl-k">?</s
        pan > name < span
    class
        = "pl-k" >
    .<
        /span>toLowerCase() <span class="pl-k">:</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L2788"
    class
        = "blob-num js-line-number"
        data - line - number = "2788" > < /td>
            < td
        id = "LC2788"
    class
        = "blob-code blob-code-inner js-file-line" > (val < span
    class
        = "pl-k" >= < /span> elem<span class="pl-k">.</s
        pan > getAttributeNode(name)
    ) <
        span
    class
        = "pl-k" > &amp;&amp; < /span> val<span class="pl-k">.</s
        pan > specified < span
    class
        = "pl-k" > ?
    <
        /span></
        td >
        < /tr>
        < tr >
        < td
        id = "L2789"
    class
        = "blob-num js-line-number"
        data - line - number = "2789" > < /td>
            < td
        id = "LC2789"
    class
        = "blob-code blob-code-inner js-file-line" > val < span
    class
        = "pl-k" >
    .<
        /span>value <span class="pl-k">:</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L2790"
    class
        = "blob-num js-line-number"
        data - line - number = "2790" > < /td>
            < td
        id = "LC2790"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c1" > null < /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L2791"
    class
        = "blob-num js-line-number"
        data - line - number = "2791" > < /td>
            < td
        id = "LC2791"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2792"
class
    = "blob-num js-line-number"
    data - line - number = "2792" > < /td>
        < td
    id = "LC2792"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2793"
class
= "blob-num js-line-number"
data - line - number = "2793" > < /td>
    < td
id = "LC2793"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2794"
class
= "blob-num js-line-number"
data - line - number = "2794" > < /td>
    < td
id = "LC2794"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2795"
class
= "blob-num js-line-number"
data - line - number = "2795" > < /td>
    < td
id = "LC2795"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-smi">Sizzle</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2796"
class
= "blob-num js-line-number"
data - line - number = "2796" > < /td>
    < td
id = "LC2796"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2797"
class
= "blob-num js-line-number"
data - line - number = "2797" > < /td>
    < td
id = "LC2797"
class
= "blob-code blob-code-inner js-file-line" >
})
(window);
<
/td>
< /tr>
< tr >
< td
id = "L2798"
class
= "blob-num js-line-number"
data - line - number = "2798" > < /td>
    < td
id = "LC2798"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2799"
class
= "blob-num js-line-number"
data - line - number = "2799" > < /td>
    < td
id = "LC2799"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2800"
class
= "blob-num js-line-number"
data - line - number = "2800" > < /td>
    < td
id = "LC2800"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2801"
class
= "blob-num js-line-number"
data - line - number = "2801" > < /td>
    < td
id = "LC2801"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>find <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Sizzle < /span>;</
td >
< /tr>
< tr >
< td
id = "L2802"
class
= "blob-num js-line-number"
data - line - number = "2802" > < /td>
    < td
id = "LC2802"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>expr <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > selectors;
<
/td>
< /tr>
< tr >
< td
id = "L2803"
class
= "blob-num js-line-number"
data - line - number = "2803" > < /td>
    < td
id = "LC2803"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2804"
class
= "blob-num js-line-number"
data - line - number = "2804" > < /td>
    < td
id = "LC2804"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Deprecated</span></td>
    < /tr>
    < tr >
    < td
id = "L2805"
class
= "blob-num js-line-number"
data - line - number = "2805" > < /td>
    < td
id = "LC2805"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>expr[ <span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span> ] <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>expr<span class="pl-k">.</s
pan > pseudos;
<
/td>
< /tr>
< tr >
< td
id = "L2806"
class
= "blob-num js-line-number"
data - line - number = "2806" > < /td>
    < td
id = "LC2806"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>uniqueSort <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>unique <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > uniqueSort;
<
/td>
< /tr>
< tr >
< td
id = "L2807"
class
= "blob-num js-line-number"
data - line - number = "2807" > < /td>
    < td
id = "LC2807"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>text <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > getText;
<
/td>
< /tr>
< tr >
< td
id = "L2808"
class
= "blob-num js-line-number"
data - line - number = "2808" > < /td>
    < td
id = "LC2808"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>isXMLDoc <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > isXML;
<
/td>
< /tr>
< tr >
< td
id = "L2809"
class
= "blob-num js-line-number"
data - line - number = "2809" > < /td>
    < td
id = "LC2809"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>contains <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > contains;
<
/td>
< /tr>
< tr >
< td
id = "L2810"
class
= "blob-num js-line-number"
data - line - number = "2810" > < /td>
    < td
id = "LC2810"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>escapeSelector <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Sizzle < /span><span class="pl-k">.</s
pan > escape;
<
/td>
< /tr>
< tr >
< td
id = "L2811"
class
= "blob-num js-line-number"
data - line - number = "2811" > < /td>
    < td
id = "LC2811"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2812"
class
= "blob-num js-line-number"
data - line - number = "2812" > < /td>
    < td
id = "LC2812"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2813"
class
= "blob-num js-line-number"
data - line - number = "2813" > < /td>
    < td
id = "LC2813"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2814"
class
= "blob-num js-line-number"
data - line - number = "2814" > < /td>
    < td
id = "LC2814"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2815"
class
= "blob-num js-line-number"
data - line - number = "2815" > < /td>
    < td
id = "LC2815"
class
= "blob-code blob-code-inner js-file-line" >
var dir
<
span
class
= "pl-k" >= < /span> function( elem, dir, until ) {</
td >
< /tr>
< tr >
< td
id = "L2816"
class
= "blob-num js-line-number"
data - line - number = "2816" > < /td>
    < td
id = "LC2816"
class
= "blob-code blob-code-inner js-file-line" >
var matched
<
span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L2817"
class
= "blob-num js-line-number"
data - line - number = "2817" > < /td>
    < td
id = "LC2817"
class
= "blob-code blob-code-inner js-file-line" > truncate < span
class
= "pl-k" >= < /span> until <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined;</
td >
< /tr>
< tr >
< td
id = "L2818"
class
= "blob-num js-line-number"
data - line - number = "2818" > < /td>
    < td
id = "LC2818"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2819"
class
= "blob-num js-line-number"
data - line - number = "2819" > < /td>
    < td
id = "LC2819"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ( elem <span class="pl-k">=</s
pan > elem[dir]
) <
span
class
= "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 9 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L2820"
class
= "blob-num js-line-number"
data - line - number = "2820" > < /td>
    < td
id = "LC2820"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2821"
class
    = "blob-num js-line-number"
    data - line - number = "2821" > < /td>
        < td
    id = "LC2821"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( truncate <span class="pl-k">&amp;&amp;</s
    pan > jQuery(elem) < span
class
    = "pl-k" >
.<
    /span>is( until ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2822"
class
    = "blob-num js-line-number"
    data - line - number = "2822" > < /td>
        < td
    id = "LC2822"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    break
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2823"
class
    = "blob-num js-line-number"
    data - line - number = "2823" > < /td>
        < td
    id = "LC2823"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2824"
class
= "blob-num js-line-number"
data - line - number = "2824" > < /td>
    < td
id = "LC2824"
class
= "blob-code blob-code-inner js-file-line" > matched < span
class
= "pl-k" >
.<
/span>push( elem );</
td >
< /tr>
< tr >
< td
id = "L2825"
class
= "blob-num js-line-number"
data - line - number = "2825" > < /td>
    < td
id = "LC2825"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2826"
class
= "blob-num js-line-number"
data - line - number = "2826" > < /td>
    < td
id = "LC2826"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2827"
class
= "blob-num js-line-number"
data - line - number = "2827" > < /td>
    < td
id = "LC2827"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> matched;</
td >
< /tr>
< tr >
< td
id = "L2828"
class
= "blob-num js-line-number"
data - line - number = "2828" > < /td>
    < td
id = "LC2828"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2829"
class
= "blob-num js-line-number"
data - line - number = "2829" > < /td>
    < td
id = "LC2829"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2830"
class
= "blob-num js-line-number"
data - line - number = "2830" > < /td>
    < td
id = "LC2830"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2831"
class
= "blob-num js-line-number"
data - line - number = "2831" > < /td>
    < td
id = "LC2831"
class
= "blob-code blob-code-inner js-file-line" >
var siblings
<
span
class
= "pl-k" >= < /span> function( n, elem ) {</
td >
< /tr>
< tr >
< td
id = "L2832"
class
= "blob-num js-line-number"
data - line - number = "2832" > < /td>
    < td
id = "LC2832"
class
= "blob-code blob-code-inner js-file-line" >
var matched
<
span
class
= "pl-k" >= < /span> [];</
td >
< /tr>
< tr >
< td
id = "L2833"
class
= "blob-num js-line-number"
data - line - number = "2833" > < /td>
    < td
id = "LC2833"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2834"
class
= "blob-num js-line-number"
data - line - number = "2834" > < /td>
    < td
id = "LC2834"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; n; n <span class="pl-k">=</s
pan > n < span
class
= "pl-k" >
.<
/span>nextSibling ) {</
td >
< /tr>
< tr >
< td
id = "L2835"
class
= "blob-num js-line-number"
data - line - number = "2835" > < /td>
    < td
id = "LC2835"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( n<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> n <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> elem ) {</
td >
< /tr>
< tr >
< td
id = "L2836"
class
= "blob-num js-line-number"
data - line - number = "2836" > < /td>
    < td
id = "LC2836"
class
= "blob-code blob-code-inner js-file-line" > matched < span
class
= "pl-k" >
.<
/span>push( n );</
td >
< /tr>
< tr >
< td
id = "L2837"
class
= "blob-num js-line-number"
data - line - number = "2837" > < /td>
    < td
id = "LC2837"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2838"
class
= "blob-num js-line-number"
data - line - number = "2838" > < /td>
    < td
id = "LC2838"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2839"
class
= "blob-num js-line-number"
data - line - number = "2839" > < /td>
    < td
id = "LC2839"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2840"
class
= "blob-num js-line-number"
data - line - number = "2840" > < /td>
    < td
id = "LC2840"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> matched;</
td >
< /tr>
< tr >
< td
id = "L2841"
class
= "blob-num js-line-number"
data - line - number = "2841" > < /td>
    < td
id = "LC2841"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2842"
class
= "blob-num js-line-number"
data - line - number = "2842" > < /td>
    < td
id = "LC2842"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2843"
class
= "blob-num js-line-number"
data - line - number = "2843" > < /td>
    < td
id = "LC2843"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2844"
class
= "blob-num js-line-number"
data - line - number = "2844" > < /td>
    < td
id = "LC2844"
class
= "blob-code blob-code-inner js-file-line" >
var rneedsContext
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > expr < span
class
= "pl-k" >
.<
/span>match<span class="pl-k">.</s
pan > needsContext;
<
/td>
< /tr>
< tr >
< td
id = "L2845"
class
= "blob-num js-line-number"
data - line - number = "2845" > < /td>
    < td
id = "LC2845"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2846"
class
= "blob-num js-line-number"
data - line - number = "2846" > < /td>
    < td
id = "LC2846"
class
= "blob-code blob-code-inner js-file-line" >
var rsingleTag
<
span
class
= "pl-k" >= < /span> ( <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > < span
class
= "pl-k" > &lt; < /span>([a<span class="pl-k">-</span>z][<span class="pl-k">^</span>\<span class="pl-k">/</span>\<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-k">:</span>\x20\t\r\n\f]<span class="pl-k">*</s
pan >
)
[\x20\t\r\n\f
]<
span
class
= "pl-k" > * < /span>\<span class="pl-k">/ < /span><span class="pl-k">?</s
pan > < span
class
= "pl-k" > &gt; < /span>(<span class="pl-k">?:</s
pan > < span
class
= "pl-k" > &lt; < /span>\<span class="pl-k">/ < /span>\<span class="pl-c1">1</s
pan > < span
class
= "pl-k" > &gt; < /span><span class="pl-k">|</s
pan >
)
$ < span
class
= "pl-k" > / < /span>i );</
td >
< /tr>
< tr >
< td
id = "L2847"
class
= "blob-num js-line-number"
data - line - number = "2847" > < /td>
    < td
id = "LC2847"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2848"
class
= "blob-num js-line-number"
data - line - number = "2848" > < /td>
    < td
id = "LC2848"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2849"
class
= "blob-num js-line-number"
data - line - number = "2849" > < /td>
    < td
id = "LC2849"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2850"
class
= "blob-num js-line-number"
data - line - number = "2850" > < /td>
    < td
id = "LC2850"
class
= "blob-code blob-code-inner js-file-line" >
var risSimple
<
span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > < span
class
= "pl-c1" >
.<
/span>[<span class="pl-k">^</span><span class="pl-k">:</span>#\[\<span class="pl-c1">.</span>,]<span class="pl-k">*</s
pan > $ < span
class
= "pl-k" > / < /span>;</
td >
< /tr>
< tr >
< td
id = "L2851"
class
= "blob-num js-line-number"
data - line - number = "2851" > < /td>
    < td
id = "LC2851"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2852"
class
= "blob-num js-line-number"
data - line - number = "2852" > < /td>
    < td
id = "LC2852"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Implement the identical functionality for filter and not</span></td>
    < /tr>
    < tr >
    < td
id = "L2853"
class
= "blob-num js-line-number"
data - line - number = "2853" > < /td>
    < td
id = "LC2853"
class
= "blob-code blob-code-inner js-file-line" > function winnow(elements, qualifier, not) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2854"
class
    = "blob-num js-line-number"
    data - line - number = "2854" > < /td>
        < td
    id = "LC2854"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > isFunction(qualifier)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2855"
class
    = "blob-num js-line-number"
    data - line - number = "2855" > < /td>
        < td
    id = "LC2855"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> jQuery<span class="pl-k">.</s
    pan > grep(elements, function (elem, i) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2856"
    class
        = "blob-num js-line-number"
        data - line - number = "2856" > < /td>
            < td
        id = "LC2856"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-k">!!</s
        pan > qualifier < span
    class
        = "pl-k" >
    .<
        /span>call( elem, i, elem ) <span class="pl-k">!=</s
        pan > < span
    class
        = "pl-k" >= < /span> not;</
        td >
        < /tr>
        < tr >
        < td
        id = "L2857"
    class
        = "blob-num js-line-number"
        data - line - number = "2857" > < /td>
            < td
        id = "LC2857"
    class
        = "blob-code blob-code-inner js-file-line" >
    });
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2858"
class
    = "blob-num js-line-number"
    data - line - number = "2858" > < /td>
        < td
    id = "LC2858"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2859"
class
= "blob-num js-line-number"
data - line - number = "2859" > < /td>
    < td
id = "LC2859"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2860"
class
= "blob-num js-line-number"
data - line - number = "2860" > < /td>
    < td
id = "LC2860"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Single element</span></td>
    < /tr>
    < tr >
    < td
id = "L2861"
class
= "blob-num js-line-number"
data - line - number = "2861" > < /td>
    < td
id = "LC2861"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( qualifier<span class="pl-k">.</s
pan > nodeType
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2862"
class
    = "blob-num js-line-number"
    data - line - number = "2862" > < /td>
        < td
    id = "LC2862"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> jQuery<span class="pl-k">.</s
    pan > grep(elements, function (elem) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2863"
    class
        = "blob-num js-line-number"
        data - line - number = "2863" > < /td>
            < td
        id = "LC2863"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> ( elem <span class="pl-k">===</s
        pan > qualifier
    ) < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > not;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2864"
class
    = "blob-num js-line-number"
    data - line - number = "2864" > < /td>
        < td
    id = "LC2864"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2865"
class
= "blob-num js-line-number"
data - line - number = "2865" > < /td>
    < td
id = "LC2865"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2866"
class
= "blob-num js-line-number"
data - line - number = "2866" > < /td>
    < td
id = "LC2866"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2867"
class
= "blob-num js-line-number"
data - line - number = "2867" > < /td>
    < td
id = "LC2867"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Arraylike of elements (jQuery, arguments, Array)</span></td>
    < /tr>
    < tr >
    < td
id = "L2868"
class
= "blob-num js-line-number"
data - line - number = "2868" > < /td>
    < td
id = "LC2868"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof qualifier <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2869"
class
    = "blob-num js-line-number"
    data - line - number = "2869" > < /td>
        < td
    id = "LC2869"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> jQuery<span class="pl-k">.</s
    pan > grep(elements, function (elem) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L2870"
    class
        = "blob-num js-line-number"
        data - line - number = "2870" > < /td>
            < td
        id = "LC2870"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> ( indexOf<span class="pl-k">.</s
        pan > call(qualifier, elem) < span
    class
        = "pl-k" > &gt; < /span> <span class="pl-k">-</s
        pan > < span
    class
        = "pl-c1" > 1 < /span> ) <span class="pl-k">!=</s
        pan > < span
    class
        = "pl-k" >= < /span> not;</
        td >
        < /tr>
        < tr >
        < td
        id = "L2871"
    class
        = "blob-num js-line-number"
        data - line - number = "2871" > < /td>
            < td
        id = "LC2871"
    class
        = "blob-code blob-code-inner js-file-line" >
    });
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2872"
class
    = "blob-num js-line-number"
    data - line - number = "2872" > < /td>
        < td
    id = "LC2872"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2873"
class
= "blob-num js-line-number"
data - line - number = "2873" > < /td>
    < td
id = "LC2873"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2874"
class
= "blob-num js-line-number"
data - line - number = "2874" > < /td>
    < td
id = "LC2874"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Simple selector that can be filtered directly, removing non-Elements</span></td>
    < /tr>
    < tr >
    < td
id = "L2875"
class
= "blob-num js-line-number"
data - line - number = "2875" > < /td>
    < td
id = "LC2875"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( risSimple<span class="pl-k">.</s
pan > test(qualifier)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2876"
class
    = "blob-num js-line-number"
    data - line - number = "2876" > < /td>
        < td
    id = "LC2876"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> jQuery<span class="pl-k">.</s
    pan > filter(qualifier, elements, not);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2877"
class
    = "blob-num js-line-number"
    data - line - number = "2877" > < /td>
        < td
    id = "LC2877"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2878"
class
= "blob-num js-line-number"
data - line - number = "2878" > < /td>
    < td
id = "LC2878"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2879"
class
= "blob-num js-line-number"
data - line - number = "2879" > < /td>
    < td
id = "LC2879"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Complex selector, compare the two sets, removing non-Elements</span></td>
    < /tr>
    < tr >
    < td
id = "L2880"
class
= "blob-num js-line-number"
data - line - number = "2880" > < /td>
    < td
id = "LC2880"
class
= "blob-code blob-code-inner js-file-line" > qualifier < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > filter(qualifier, elements);
<
/td>
< /tr>
< tr >
< td
id = "L2881"
class
= "blob-num js-line-number"
data - line - number = "2881" > < /td>
    < td
id = "LC2881"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > grep(elements, function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2882"
class
    = "blob-num js-line-number"
    data - line - number = "2882" > < /td>
        < td
    id = "LC2882"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> ( indexOf<span class="pl-k">.</s
    pan > call(qualifier, elem) < span
class
    = "pl-k" > &gt; < /span> <span class="pl-k">-</s
    pan > < span
class
    = "pl-c1" > 1 < /span> ) <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> not <span class="pl-k">&amp;&amp;</s
    pan > elem < span
class
    = "pl-k" >
.<
    /span>nodeType <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 1 < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2883"
class
    = "blob-num js-line-number"
    data - line - number = "2883" > < /td>
        < td
    id = "LC2883"
class
    = "blob-code blob-code-inner js-file-line" >
});
<
/td>
< /tr>
< tr >
< td
id = "L2884"
class
= "blob-num js-line-number"
data - line - number = "2884" > < /td>
    < td
id = "LC2884"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2885"
class
= "blob-num js-line-number"
data - line - number = "2885" > < /td>
    < td
id = "LC2885"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2886"
class
= "blob-num js-line-number"
data - line - number = "2886" > < /td>
    < td
id = "LC2886"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>filter <span class="pl-k">=</s
pan > function (expr, elems, not) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2887"
class
    = "blob-num js-line-number"
    data - line - number = "2887" > < /td>
        < td
    id = "LC2887"
class
    = "blob-code blob-code-inner js-file-line" >
    var elem
<
    span
class
    = "pl-k" >= < /span> elems[ <span class="pl-c1">0</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2888"
class
    = "blob-num js-line-number"
    data - line - number = "2888" > < /td>
        < td
    id = "LC2888"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2889"
class
    = "blob-num js-line-number"
    data - line - number = "2889" > < /td>
        < td
    id = "LC2889"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( not ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L2890"
class
    = "blob-num js-line-number"
    data - line - number = "2890" > < /td>
        < td
    id = "LC2890"
class
    = "blob-code blob-code-inner js-file-line" > expr < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan >
:
    not( < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> expr <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>)<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L2891"
class
    = "blob-num js-line-number"
    data - line - number = "2891" > < /td>
        < td
    id = "LC2891"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L2892"
class
= "blob-num js-line-number"
data - line - number = "2892" > < /td>
    < td
id = "LC2892"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2893"
class
= "blob-num js-line-number"
data - line - number = "2893" > < /td>
    < td
id = "LC2893"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elems<span class="pl-k">.</s
pan > length < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2894"
class
    = "blob-num js-line-number"
    data - line - number = "2894" > < /td>
        < td
    id = "LC2894"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> jQuery<span class="pl-k">.</s
    pan > find < span
class
    = "pl-k" >
.<
    /span>matchesSelector( elem, expr ) <span class="pl-k">?</s
    pan > [elem] < span
class
    = "pl-k" >
:<
    /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L2895"
class
    = "blob-num js-line-number"
    data - line - number = "2895" > < /td>
        < td
    id = "LC2895"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2896"
class
= "blob-num js-line-number"
data - line - number = "2896" > < /td>
    < td
id = "LC2896"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2897"
class
= "blob-num js-line-number"
data - line - number = "2897" > < /td>
    < td
id = "LC2897"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > find < span
class
= "pl-k" >
.<
/span>matches( expr, jQuery<span class="pl-k">.</s
pan > grep(elems, function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2898"
class
    = "blob-num js-line-number"
    data - line - number = "2898" > < /td>
        < td
    id = "LC2898"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2899"
class
    = "blob-num js-line-number"
    data - line - number = "2899" > < /td>
        < td
    id = "LC2899"
class
    = "blob-code blob-code-inner js-file-line" >
})
)
;
<
/td>
< /tr>
< tr >
< td
id = "L2900"
class
= "blob-num js-line-number"
data - line - number = "2900" > < /td>
    < td
id = "LC2900"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L2901"
class
= "blob-num js-line-number"
data - line - number = "2901" > < /td>
    < td
id = "LC2901"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2902"
class
= "blob-num js-line-number"
data - line - number = "2902" > < /td>
    < td
id = "LC2902"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L2903"
class
= "blob-num js-line-number"
data - line - number = "2903" > < /td>
    < td
id = "LC2903"
class
= "blob-code blob-code-inner js-file-line" > find < span
class
= "pl-k" >
:<
/span> function( selector ) {</
td >
< /tr>
< tr >
< td
id = "L2904"
class
= "blob-num js-line-number"
data - line - number = "2904" > < /td>
    < td
id = "LC2904"
class
= "blob-code blob-code-inner js-file-line" >
var i, ret, <
/td>
< /tr>
< tr >
< td
id = "L2905"
class
= "blob-num js-line-number"
data - line - number = "2905" > < /td>
    < td
id = "LC2905"
class
= "blob-code blob-code-inner js-file-line" > len < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>length,</
td >
< /tr>
< tr >
< td
id = "L2906"
class
= "blob-num js-line-number"
data - line - number = "2906" > < /td>
    < td
id = "LC2906"
class
= "blob-code blob-code-inner js-file-line" > self < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L2907"
class
= "blob-num js-line-number"
data - line - number = "2907" > < /td>
    < td
id = "LC2907"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2908"
class
= "blob-num js-line-number"
data - line - number = "2908" > < /td>
    < td
id = "LC2908"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof selector <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2909"
class
    = "blob-num js-line-number"
    data - line - number = "2909" > < /td>
        < td
    id = "LC2909"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>pushStack( jQuery( selector )<span class="pl-k">.</s
    pan > filter(function () {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L2910"
        class
            = "blob-num js-line-number"
            data - line - number = "2910" > < /td>
                < td
            id = "LC2910"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-k" >
            for<
            /span> ( i <span class="pl-k">=</s
            pan > < span
        class
            = "pl-c1" > 0 < /span>; i <span class="pl-k">&lt;</s
            pan > len;
            i < span
        class
            = "pl-k" > ++ < /span> ) {</
            td >
            < /tr>
            < tr >
            < td
            id = "L2911"
        class
            = "blob-num js-line-number"
            data - line - number = "2911" > < /td>
                < td
            id = "LC2911"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-k" >
            if<
            /span> ( jQuery<span class="pl-k">.</s
            pan > contains(self[i], < span
        class
            = "pl-c1" > this < /span> ) ) {</
            td >
            < /tr>
            < tr >
            < td
            id = "L2912"
        class
            = "blob-num js-line-number"
            data - line - number = "2912" > < /td>
                < td
            id = "LC2912"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-k" >
            return
        <
            /span> <span class="pl-c1">true</s
            pan >;
        <
            /td>
            < /tr>
            < tr >
            < td
            id = "L2913"
        class
            = "blob-num js-line-number"
            data - line - number = "2913" > < /td>
                < td
            id = "LC2913"
        class
            = "blob-code blob-code-inner js-file-line" >
        } < /td>
        < /tr>
        < tr >
        < td
    id = "L2914"
class
    = "blob-num js-line-number"
    data - line - number = "2914" > < /td>
        < td
    id = "LC2914"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2915"
class
= "blob-num js-line-number"
data - line - number = "2915" > < /td>
    < td
id = "LC2915"
class
= "blob-code blob-code-inner js-file-line" >
} ) )
;
<
/td>
< /tr>
< tr >
< td
id = "L2916"
class
= "blob-num js-line-number"
data - line - number = "2916" > < /td>
    < td
id = "LC2916"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2917"
class
= "blob-num js-line-number"
data - line - number = "2917" > < /td>
    < td
id = "LC2917"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2918"
class
= "blob-num js-line-number"
data - line - number = "2918" > < /td>
    < td
id = "LC2918"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack( [] );</
td >
< /tr>
< tr >
< td
id = "L2919"
class
= "blob-num js-line-number"
data - line - number = "2919" > < /td>
    < td
id = "LC2919"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2920"
class
= "blob-num js-line-number"
data - line - number = "2920" > < /td>
    < td
id = "LC2920"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 0 < /span>; i <span class="pl-k">&lt;</s
pan > len;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L2921"
class
= "blob-num js-line-number"
data - line - number = "2921" > < /td>
    < td
id = "LC2921"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>find( selector, self[ i ], ret );</
td >
< /tr>
< tr >
< td
id = "L2922"
class
= "blob-num js-line-number"
data - line - number = "2922" > < /td>
    < td
id = "LC2922"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2923"
class
= "blob-num js-line-number"
data - line - number = "2923" > < /td>
    < td
id = "LC2923"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2924"
class
= "blob-num js-line-number"
data - line - number = "2924" > < /td>
    < td
id = "LC2924"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> len <span class="pl-k">&gt;</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">?</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>uniqueSort( ret ) <span class="pl-k">:</s
pan > ret;
<
/td>
< /tr>
< tr >
< td
id = "L2925"
class
= "blob-num js-line-number"
data - line - number = "2925" > < /td>
    < td
id = "LC2925"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L2926"
class
= "blob-num js-line-number"
data - line - number = "2926" > < /td>
    < td
id = "LC2926"
class
= "blob-code blob-code-inner js-file-line" > filter < span
class
= "pl-k" >
:<
/span> function( selector ) {</
td >
< /tr>
< tr >
< td
id = "L2927"
class
= "blob-num js-line-number"
data - line - number = "2927" > < /td>
    < td
id = "LC2927"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack( winnow( <span class="pl-c1">this</s
pan >, selector < span
class
= "pl-k" > || < /span> [], <span class="pl-c1">false</s
pan >
) )
;
<
/td>
< /tr>
< tr >
< td
id = "L2928"
class
= "blob-num js-line-number"
data - line - number = "2928" > < /td>
    < td
id = "LC2928"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L2929"
class
= "blob-num js-line-number"
data - line - number = "2929" > < /td>
    < td
id = "LC2929"
class
= "blob-code blob-code-inner js-file-line" > not < span
class
= "pl-k" >
:<
/span> function( selector ) {</
td >
< /tr>
< tr >
< td
id = "L2930"
class
= "blob-num js-line-number"
data - line - number = "2930" > < /td>
    < td
id = "LC2930"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack( winnow( <span class="pl-c1">this</s
pan >, selector < span
class
= "pl-k" > || < /span> [], <span class="pl-c1">true</s
pan >
) )
;
<
/td>
< /tr>
< tr >
< td
id = "L2931"
class
= "blob-num js-line-number"
data - line - number = "2931" > < /td>
    < td
id = "LC2931"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L2932"
class
= "blob-num js-line-number"
data - line - number = "2932" > < /td>
    < td
id = "LC2932"
class
= "blob-code blob-code-inner js-file-line" > is < span
class
= "pl-k" >
:<
/span> function( selector ) {</
td >
< /tr>
< tr >
< td
id = "L2933"
class
= "blob-num js-line-number"
data - line - number = "2933" > < /td>
    < td
id = "LC2933"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">!!</s
pan > winnow( < /td>
< /tr>
< tr >
< td
id = "L2934"
class
= "blob-num js-line-number"
data - line - number = "2934" > < /td>
    < td
id = "LC2934"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span>,</
td >
< /tr>
< tr >
< td
id = "L2935"
class
= "blob-num js-line-number"
data - line - number = "2935" > < /td>
    < td
id = "LC2935"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2936"
class
= "blob-num js-line-number"
data - line - number = "2936" > < /td>
    < td
id = "LC2936"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If this is a positional/relative selector, check membership in the returned set</span></td>
    < /tr>
    < tr >
    < td
id = "L2937"
class
= "blob-num js-line-number"
data - line - number = "2937" > < /td>
    < td
id = "LC2937"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> so $(&quot;p:first&quot;).is(&quot;p:last&quot;) won&#39;t return true for a doc with two &quot;p&quot;.</span></td>
    < /tr>
    < tr >
    < td
id = "L2938"
class
= "blob-num js-line-number"
data - line - number = "2938" > < /td>
    < td
id = "LC2938"
class
= "blob-code blob-code-inner js-file-line" > typeof selector < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> rneedsContext<span class="pl-k">.</s
pan > test(selector) < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L2939"
class
= "blob-num js-line-number"
data - line - number = "2939" > < /td>
    < td
id = "LC2939"
class
= "blob-code blob-code-inner js-file-line" > jQuery(selector) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L2940"
class
= "blob-num js-line-number"
data - line - number = "2940" > < /td>
    < td
id = "LC2940"
class
= "blob-code blob-code-inner js-file-line" > selector < span
class
= "pl-k" > || < /span> [],</
td >
< /tr>
< tr >
< td
id = "L2941"
class
= "blob-num js-line-number"
data - line - number = "2941" > < /td>
    < td
id = "LC2941"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > false < /span></
td >
< /tr>
< tr >
< td
id = "L2942"
class
= "blob-num js-line-number"
data - line - number = "2942" > < /td>
    < td
id = "LC2942"
class
= "blob-code blob-code-inner js-file-line" >
)<
span
class
= "pl-k" >
.<
/span>length;</
td >
< /tr>
< tr >
< td
id = "L2943"
class
= "blob-num js-line-number"
data - line - number = "2943" > < /td>
    < td
id = "LC2943"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2944"
class
= "blob-num js-line-number"
data - line - number = "2944" > < /td>
    < td
id = "LC2944"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L2945"
class
= "blob-num js-line-number"
data - line - number = "2945" > < /td>
    < td
id = "LC2945"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2946"
class
= "blob-num js-line-number"
data - line - number = "2946" > < /td>
    < td
id = "LC2946"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2947"
class
= "blob-num js-line-number"
data - line - number = "2947" > < /td>
    < td
id = "LC2947"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Initialize a jQuery object</span></td>
    < /tr>
    < tr >
    < td
id = "L2948"
class
= "blob-num js-line-number"
data - line - number = "2948" > < /td>
    < td
id = "LC2948"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2949"
class
= "blob-num js-line-number"
data - line - number = "2949" > < /td>
    < td
id = "LC2949"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2950"
class
= "blob-num js-line-number"
data - line - number = "2950" > < /td>
    < td
id = "LC2950"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> A central reference to the root jQuery(document)</span></td>
    < /tr>
    < tr >
    < td
id = "L2951"
class
= "blob-num js-line-number"
data - line - number = "2951" > < /td>
    < td
id = "LC2951"
class
= "blob-code blob-code-inner js-file-line" >
var rootjQuery, <
/td>
< /tr>
< tr >
< td
id = "L2952"
class
= "blob-num js-line-number"
data - line - number = "2952" > < /td>
    < td
id = "LC2952"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2953"
class
= "blob-num js-line-number"
data - line - number = "2953" > < /td>
    < td
id = "LC2953"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> A simple way to check for HTML strings</span></td>
    < /tr>
    < tr >
    < td
id = "L2954"
class
= "blob-num js-line-number"
data - line - number = "2954" > < /td>
    < td
id = "LC2954"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Prioritize #id over &lt;tag&gt; to avoid XSS via location.hash (#9521)</span></td>
    < /tr>
    < tr >
    < td
id = "L2955"
class
= "blob-num js-line-number"
data - line - number = "2955" > < /td>
    < td
id = "LC2955"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Strict HTML recognition (#11290: must start with &lt;)</span></td>
    < /tr>
    < tr >
    < td
id = "L2956"
class
= "blob-num js-line-number"
data - line - number = "2956" > < /td>
    < td
id = "LC2956"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Shortcut simple #id case for speed</span></td>
    < /tr>
    < tr >
    < td
id = "L2957"
class
= "blob-num js-line-number"
data - line - number = "2957" > < /td>
    < td
id = "LC2957"
class
= "blob-code blob-code-inner js-file-line" > rquickExpr < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>\s<span class="pl-k">*</s
pan > ( < span
class
= "pl-k" > &lt; < /span>[\w\<span class="pl-smi">W</span>]<span class="pl-k">+</s
pan > < span
class
= "pl-k" > &gt; < /span>)[<span class="pl-k">^</span><span class="pl-k">&gt;</span>]<span class="pl-k">*</s
pan > < span
class
= "pl-k" > | < /span>#([\w<span class="pl-k">-</span>]<span class="pl-k">+</s
pan >
))
$ < span
class
= "pl-k" > / < /span>,</
td >
< /tr>
< tr >
< td
id = "L2958"
class
= "blob-num js-line-number"
data - line - number = "2958" > < /td>
    < td
id = "LC2958"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2959"
class
= "blob-num js-line-number"
data - line - number = "2959" > < /td>
    < td
id = "LC2959"
class
= "blob-code blob-code-inner js-file-line" > init < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > fn < span
class
= "pl-k" >
.<
/span>init <span class="pl-k">=</s
pan > function (selector, context, root) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2960"
class
    = "blob-num js-line-number"
    data - line - number = "2960" > < /td>
        < td
    id = "LC2960"
class
    = "blob-code blob-code-inner js-file-line" >
    var match, elem;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2961"
class
    = "blob-num js-line-number"
    data - line - number = "2961" > < /td>
        < td
    id = "LC2961"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L2962"
class
    = "blob-num js-line-number"
    data - line - number = "2962" > < /td>
        < td
    id = "LC2962"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> HANDLE: $(&quot;&quot;), $(null), $(undefined), $(false)</span></td>
        < /tr>
        < tr >
        < td
    id = "L2963"
class
    = "blob-num js-line-number"
    data - line - number = "2963" > < /td>
        < td
    id = "LC2963"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > selector
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2964"
class
    = "blob-num js-line-number"
    data - line - number = "2964" > < /td>
        < td
    id = "LC2964"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">this</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L2965"
class
    = "blob-num js-line-number"
    data - line - number = "2965" > < /td>
        < td
    id = "LC2965"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L2966"
class
= "blob-num js-line-number"
data - line - number = "2966" > < /td>
    < td
id = "LC2966"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2967"
class
= "blob-num js-line-number"
data - line - number = "2967" > < /td>
    < td
id = "LC2967"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Method init() accepts an alternate rootjQuery</span></td>
    < /tr>
    < tr >
    < td
id = "L2968"
class
= "blob-num js-line-number"
data - line - number = "2968" > < /td>
    < td
id = "LC2968"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> so migrate can support jQuery.sub (gh-2101)</span></td>
    < /tr>
    < tr >
    < td
id = "L2969"
class
= "blob-num js-line-number"
data - line - number = "2969" > < /td>
    < td
id = "LC2969"
class
= "blob-code blob-code-inner js-file-line" > root < span
class
= "pl-k" >= < /span> root <span class="pl-k">||</s
pan > rootjQuery;
<
/td>
< /tr>
< tr >
< td
id = "L2970"
class
= "blob-num js-line-number"
data - line - number = "2970" > < /td>
    < td
id = "LC2970"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2971"
class
= "blob-num js-line-number"
data - line - number = "2971" > < /td>
    < td
id = "LC2971"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle HTML strings</span></td>
    < /tr>
    < tr >
    < td
id = "L2972"
class
= "blob-num js-line-number"
data - line - number = "2972" > < /td>
    < td
id = "LC2972"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof selector <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L2973"
class
= "blob-num js-line-number"
data - line - number = "2973" > < /td>
    < td
id = "LC2973"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( selector[ <span class="pl-c1">0</span> ] <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>&lt;<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2974"
class
= "blob-num js-line-number"
data - line - number = "2974" > < /td>
    < td
id = "LC2974"
class
= "blob-code blob-code-inner js-file-line" > selector[selector < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span> ] <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>&gt;<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L2975"
class
= "blob-num js-line-number"
data - line - number = "2975" > < /td>
    < td
id = "LC2975"
class
= "blob-code blob-code-inner js-file-line" > selector < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">&gt;=</s
pan > < span
class
= "pl-c1" > 3 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L2976"
class
= "blob-num js-line-number"
data - line - number = "2976" > < /td>
    < td
id = "LC2976"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2977"
class
= "blob-num js-line-number"
data - line - number = "2977" > < /td>
    < td
id = "LC2977"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Assume that strings that start and end with &lt;&gt; are HTML and skip the regex check</span></td>
    < /tr>
    < tr >
    < td
id = "L2978"
class
= "blob-num js-line-number"
data - line - number = "2978" > < /td>
    < td
id = "LC2978"
class
= "blob-code blob-code-inner js-file-line" > match < span
class
= "pl-k" >= < /span> [ <span class="pl-c1">null</span>, selector, <span class="pl-c1">null</span> ];</
td >
< /tr>
< tr >
< td
id = "L2979"
class
= "blob-num js-line-number"
data - line - number = "2979" > < /td>
    < td
id = "LC2979"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2980"
class
= "blob-num js-line-number"
data - line - number = "2980" > < /td>
    < td
id = "LC2980"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L2981"
class
= "blob-num js-line-number"
data - line - number = "2981" > < /td>
    < td
id = "LC2981"
class
= "blob-code blob-code-inner js-file-line" > match < span
class
= "pl-k" >= < /span> rquickExpr<span class="pl-k">.</s
pan > exec(selector);
<
/td>
< /tr>
< tr >
< td
id = "L2982"
class
= "blob-num js-line-number"
data - line - number = "2982" > < /td>
    < td
id = "LC2982"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L2983"
class
= "blob-num js-line-number"
data - line - number = "2983" > < /td>
    < td
id = "LC2983"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2984"
class
= "blob-num js-line-number"
data - line - number = "2984" > < /td>
    < td
id = "LC2984"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Match html or make sure no context is specified for #id</span></td>
    < /tr>
    < tr >
    < td
id = "L2985"
class
= "blob-num js-line-number"
data - line - number = "2985" > < /td>
    < td
id = "LC2985"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( match <span class="pl-k">&amp;&amp;</s
pan > (match[ < span
class
= "pl-c1" > 1 < /span> ] <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>context ) ) {</
td >
< /tr>
< tr >
< td
id = "L2986"
class
= "blob-num js-line-number"
data - line - number = "2986" > < /td>
    < td
id = "LC2986"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2987"
class
= "blob-num js-line-number"
data - line - number = "2987" > < /td>
    < td
id = "LC2987"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> HANDLE: $(html) -&gt; $(array)</span></td>
    < /tr>
    < tr >
    < td
id = "L2988"
class
= "blob-num js-line-number"
data - line - number = "2988" > < /td>
    < td
id = "LC2988"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( match[ <span class="pl-c1">1</span> ] ) {</
td >
< /tr>
< tr >
< td
id = "L2989"
class
= "blob-num js-line-number"
data - line - number = "2989" > < /td>
    < td
id = "LC2989"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" >= < /span> context <span class="pl-k">instanceof</s
pan > jQuery < span
class
= "pl-k" > ?
<
/span> context[ <span class="pl-c1">0</span> ] <span class="pl-k">:</s
pan > context;
<
/td>
< /tr>
< tr >
< td
id = "L2990"
class
= "blob-num js-line-number"
data - line - number = "2990" > < /td>
    < td
id = "LC2990"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2991"
class
= "blob-num js-line-number"
data - line - number = "2991" > < /td>
    < td
id = "LC2991"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Option to run scripts is true for back-compat</span></td>
    < /tr>
    < tr >
    < td
id = "L2992"
class
= "blob-num js-line-number"
data - line - number = "2992" > < /td>
    < td
id = "LC2992"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Intentionally let the error be thrown if parseHTML is not present</span></td>
    < /tr>
    < tr >
    < td
id = "L2993"
class
= "blob-num js-line-number"
data - line - number = "2993" > < /td>
    < td
id = "LC2993"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>merge( <span class="pl-c1">this</s
pan >, jQuery < span
class
= "pl-k" >
.<
/span>parseHTML(</
td >
< /tr>
< tr >
< td
id = "L2994"
class
= "blob-num js-line-number"
data - line - number = "2994" > < /td>
    < td
id = "LC2994"
class
= "blob-code blob-code-inner js-file-line" > match[ < span
class
= "pl-c1" > 1 < /span> ],</
td >
< /tr>
< tr >
< td
id = "L2995"
class
= "blob-num js-line-number"
data - line - number = "2995" > < /td>
    < td
id = "LC2995"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" > &amp;&amp; < /span> context<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" > ?
<
/span> context<span class="pl-k">.</s
pan > ownerDocument < span
class
= "pl-k" > || < /span> context <span class="pl-k">:</s
pan > document,
<
/td>
< /tr>
< tr >
< td
id = "L2996"
class
= "blob-num js-line-number"
data - line - number = "2996" > < /td>
    < td
id = "LC2996"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > true < /span></
td >
< /tr>
< tr >
< td
id = "L2997"
class
= "blob-num js-line-number"
data - line - number = "2997" > < /td>
    < td
id = "LC2997"
class
= "blob-code blob-code-inner js-file-line" >
) )
;
<
/td>
< /tr>
< tr >
< td
id = "L2998"
class
= "blob-num js-line-number"
data - line - number = "2998" > < /td>
    < td
id = "LC2998"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L2999"
class
= "blob-num js-line-number"
data - line - number = "2999" > < /td>
    < td
id = "LC2999"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> HANDLE: $(html, props)</span></td>
    < /tr>
    < tr >
    < td
id = "L3000"
class
= "blob-num js-line-number"
data - line - number = "3000" > < /td>
    < td
id = "LC3000"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( rsingleTag<span class="pl-k">.</s
pan > test(match[ < span
class
= "pl-c1" > 1 < /span> ] ) <span class="pl-k">&amp;&amp;</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>isPlainObject( context ) ) {</
td >
< /tr>
< tr >
< td
id = "L3001"
class
= "blob-num js-line-number"
data - line - number = "3001" > < /td>
    < td
id = "LC3001"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( match in context ) {</
td >
< /tr>
< tr >
< td
id = "L3002"
class
= "blob-num js-line-number"
data - line - number = "3002" > < /td>
    < td
id = "LC3002"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3003"
class
= "blob-num js-line-number"
data - line - number = "3003" > < /td>
    < td
id = "LC3003"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Properties of context are called as methods if possible</span></td>
    < /tr>
    < tr >
    < td
id = "L3004"
class
= "blob-num js-line-number"
data - line - number = "3004" > < /td>
    < td
id = "LC3004"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction( < span
class
= "pl-c1" > this < /span>[ match ] ) ) {</
td >
< /tr>
< tr >
< td
id = "L3005"
class
= "blob-num js-line-number"
data - line - number = "3005" > < /td>
    < td
id = "LC3005"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span>[ match ]( context[ match ] );</
td >
< /tr>
< tr >
< td
id = "L3006"
class
= "blob-num js-line-number"
data - line - number = "3006" > < /td>
    < td
id = "LC3006"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3007"
class
= "blob-num js-line-number"
data - line - number = "3007" > < /td>
    < td
id = "LC3007"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ...and otherwise set as attributes</span></td>
    < /tr>
    < tr >
    < td
id = "L3008"
class
= "blob-num js-line-number"
data - line - number = "3008" > < /td>
    < td
id = "LC3008"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3009"
class
= "blob-num js-line-number"
data - line - number = "3009" > < /td>
    < td
id = "LC3009"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > attr(match, context[match]);
<
/td>
< /tr>
< tr >
< td
id = "L3010"
class
= "blob-num js-line-number"
data - line - number = "3010" > < /td>
    < td
id = "LC3010"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3011"
class
= "blob-num js-line-number"
data - line - number = "3011" > < /td>
    < td
id = "LC3011"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3012"
class
= "blob-num js-line-number"
data - line - number = "3012" > < /td>
    < td
id = "LC3012"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3013"
class
= "blob-num js-line-number"
data - line - number = "3013" > < /td>
    < td
id = "LC3013"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3014"
class
= "blob-num js-line-number"
data - line - number = "3014" > < /td>
    < td
id = "LC3014"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3015"
class
= "blob-num js-line-number"
data - line - number = "3015" > < /td>
    < td
id = "LC3015"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3016"
class
= "blob-num js-line-number"
data - line - number = "3016" > < /td>
    < td
id = "LC3016"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> HANDLE: $(#id)</span></td>
    < /tr>
    < tr >
    < td
id = "L3017"
class
= "blob-num js-line-number"
data - line - number = "3017" > < /td>
    < td
id = "LC3017"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3018"
class
= "blob-num js-line-number"
data - line - number = "3018" > < /td>
    < td
id = "LC3018"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >= < /span> document<span class="pl-k">.</s
pan > getElementById(match[ < span
class
= "pl-c1" > 2 < /span> ] );</
td >
< /tr>
< tr >
< td
id = "L3019"
class
= "blob-num js-line-number"
data - line - number = "3019" > < /td>
    < td
id = "LC3019"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3020"
class
= "blob-num js-line-number"
data - line - number = "3020" > < /td>
    < td
id = "LC3020"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3021"
class
= "blob-num js-line-number"
data - line - number = "3021" > < /td>
    < td
id = "LC3021"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3022"
class
= "blob-num js-line-number"
data - line - number = "3022" > < /td>
    < td
id = "LC3022"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Inject the element directly into the jQuery object</span></td>
    < /tr>
    < tr >
    < td
id = "L3023"
class
= "blob-num js-line-number"
data - line - number = "3023" > < /td>
    < td
id = "LC3023"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span>[ <span class="pl-c1">0</span> ] <span class="pl-k">=</s
pan > elem;
<
/td>
< /tr>
< tr >
< td
id = "L3024"
class
= "blob-num js-line-number"
data - line - number = "3024" > < /td>
    < td
id = "LC3024"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > length < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3025"
class
= "blob-num js-line-number"
data - line - number = "3025" > < /td>
    < td
id = "LC3025"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3026"
class
= "blob-num js-line-number"
data - line - number = "3026" > < /td>
    < td
id = "LC3026"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3027"
class
= "blob-num js-line-number"
data - line - number = "3027" > < /td>
    < td
id = "LC3027"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3028"
class
= "blob-num js-line-number"
data - line - number = "3028" > < /td>
    < td
id = "LC3028"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3029"
class
= "blob-num js-line-number"
data - line - number = "3029" > < /td>
    < td
id = "LC3029"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> HANDLE: $(expr, $(...))</span></td>
    < /tr>
    < tr >
    < td
id = "L3030"
class
= "blob-num js-line-number"
data - line - number = "3030" > < /td>
    < td
id = "LC3030"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > ( < span
class
= "pl-k" > ! < /span>context <span class="pl-k">||</s
pan > context < span
class
= "pl-k" >
.<
/span>jquery ) {</
td >
< /tr>
< tr >
< td
id = "L3031"
class
= "blob-num js-line-number"
data - line - number = "3031" > < /td>
    < td
id = "LC3031"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ( context <span class="pl-k">||</s
pan > root
)<
span
class
= "pl-k" >
.<
/span>find( selector );</
td >
< /tr>
< tr >
< td
id = "L3032"
class
= "blob-num js-line-number"
data - line - number = "3032" > < /td>
    < td
id = "LC3032"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3033"
class
= "blob-num js-line-number"
data - line - number = "3033" > < /td>
    < td
id = "LC3033"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> HANDLE: $(expr, context)</span></td>
    < /tr>
    < tr >
    < td
id = "L3034"
class
= "blob-num js-line-number"
data - line - number = "3034" > < /td>
    < td
id = "LC3034"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (which is just equivalent to: $(context).find(expr)</span></td>
    < /tr>
    < tr >
    < td
id = "L3035"
class
= "blob-num js-line-number"
data - line - number = "3035" > < /td>
    < td
id = "LC3035"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3036"
class
= "blob-num js-line-number"
data - line - number = "3036" > < /td>
    < td
id = "LC3036"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>constructor( context )<span class="pl-k">.</s
pan > find(selector);
<
/td>
< /tr>
< tr >
< td
id = "L3037"
class
= "blob-num js-line-number"
data - line - number = "3037" > < /td>
    < td
id = "LC3037"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3038"
class
= "blob-num js-line-number"
data - line - number = "3038" > < /td>
    < td
id = "LC3038"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3039"
class
= "blob-num js-line-number"
data - line - number = "3039" > < /td>
    < td
id = "LC3039"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> HANDLE: $(DOMElement)</span></td>
    < /tr>
    < tr >
    < td
id = "L3040"
class
= "blob-num js-line-number"
data - line - number = "3040" > < /td>
    < td
id = "LC3040"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (selector < span
class
= "pl-k" >
.<
/span>nodeType ) {</
td >
< /tr>
< tr >
< td
id = "L3041"
class
= "blob-num js-line-number"
data - line - number = "3041" > < /td>
    < td
id = "LC3041"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span>[ <span class="pl-c1">0</span> ] <span class="pl-k">=</s
pan > selector;
<
/td>
< /tr>
< tr >
< td
id = "L3042"
class
= "blob-num js-line-number"
data - line - number = "3042" > < /td>
    < td
id = "LC3042"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > length < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3043"
class
= "blob-num js-line-number"
data - line - number = "3043" > < /td>
    < td
id = "LC3043"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3044"
class
= "blob-num js-line-number"
data - line - number = "3044" > < /td>
    < td
id = "LC3044"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3045"
class
= "blob-num js-line-number"
data - line - number = "3045" > < /td>
    < td
id = "LC3045"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> HANDLE: $(function)</span></td>
    < /tr>
    < tr >
    < td
id = "L3046"
class
= "blob-num js-line-number"
data - line - number = "3046" > < /td>
    < td
id = "LC3046"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Shortcut for document ready</span></td>
    < /tr>
    < tr >
    < td
id = "L3047"
class
= "blob-num js-line-number"
data - line - number = "3047" > < /td>
    < td
id = "LC3047"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (jQuery < span
class
= "pl-k" >
.<
/span>isFunction( selector ) ) {</
td >
< /tr>
< tr >
< td
id = "L3048"
class
= "blob-num js-line-number"
data - line - number = "3048" > < /td>
    < td
id = "LC3048"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> root<span class="pl-k">.</s
pan > ready < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L3049"
class
= "blob-num js-line-number"
data - line - number = "3049" > < /td>
    < td
id = "LC3049"
class
= "blob-code blob-code-inner js-file-line" > root < span
class
= "pl-k" >
.<
/span>ready( selector ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3050"
class
= "blob-num js-line-number"
data - line - number = "3050" > < /td>
    < td
id = "LC3050"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3051"
class
= "blob-num js-line-number"
data - line - number = "3051" > < /td>
    < td
id = "LC3051"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Execute immediately if ready is not present</span></td>
    < /tr>
    < tr >
    < td
id = "L3052"
class
= "blob-num js-line-number"
data - line - number = "3052" > < /td>
    < td
id = "LC3052"
class
= "blob-code blob-code-inner js-file-line" > selector(jQuery);
<
/td>
< /tr>
< tr >
< td
id = "L3053"
class
= "blob-num js-line-number"
data - line - number = "3053" > < /td>
    < td
id = "LC3053"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3054"
class
= "blob-num js-line-number"
data - line - number = "3054" > < /td>
    < td
id = "LC3054"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3055"
class
= "blob-num js-line-number"
data - line - number = "3055" > < /td>
    < td
id = "LC3055"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > makeArray(selector, < span
class
= "pl-c1" > this < /span> );</
td >
< /tr>
< tr >
< td
id = "L3056"
class
= "blob-num js-line-number"
data - line - number = "3056" > < /td>
    < td
id = "LC3056"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3057"
class
= "blob-num js-line-number"
data - line - number = "3057" > < /td>
    < td
id = "LC3057"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3058"
class
= "blob-num js-line-number"
data - line - number = "3058" > < /td>
    < td
id = "LC3058"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Give the init function the jQuery prototype for later instantiation</span></td>
    < /tr>
    < tr >
    < td
id = "L3059"
class
= "blob-num js-line-number"
data - line - number = "3059" > < /td>
    < td
id = "LC3059"
class
= "blob-code blob-code-inner js-file-line" > init < span
class
= "pl-k" >
.<
/span>prototype <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>fn;</
td >
< /tr>
< tr >
< td
id = "L3060"
class
= "blob-num js-line-number"
data - line - number = "3060" > < /td>
    < td
id = "LC3060"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3061"
class
= "blob-num js-line-number"
data - line - number = "3061" > < /td>
    < td
id = "LC3061"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Initialize central reference</span></td>
    < /tr>
    < tr >
    < td
id = "L3062"
class
= "blob-num js-line-number"
data - line - number = "3062" > < /td>
    < td
id = "LC3062"
class
= "blob-code blob-code-inner js-file-line" > rootjQuery < span
class
= "pl-k" >= < /span> jQuery( document );</
td >
< /tr>
< tr >
< td
id = "L3063"
class
= "blob-num js-line-number"
data - line - number = "3063" > < /td>
    < td
id = "LC3063"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3064"
class
= "blob-num js-line-number"
data - line - number = "3064" > < /td>
    < td
id = "LC3064"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3065"
class
= "blob-num js-line-number"
data - line - number = "3065" > < /td>
    < td
id = "LC3065"
class
= "blob-code blob-code-inner js-file-line" >
var rparentsprev
<
span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>parents<span class="pl-k">|</s
pan > prev( < span
class
= "pl-k" > ? :
<
/span><span class="pl-smi">Until</s
pan > < span
class
= "pl-k" > | < /span><span class="pl-smi">All</s
pan >
))<
span
class
= "pl-k" > / < /span>,</
td >
< /tr>
< tr >
< td
id = "L3066"
class
= "blob-num js-line-number"
data - line - number = "3066" > < /td>
    < td
id = "LC3066"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3067"
class
= "blob-num js-line-number"
data - line - number = "3067" > < /td>
    < td
id = "LC3067"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Methods guaranteed to produce a unique set when starting from a unique set</span></td>
    < /tr>
    < tr >
    < td
id = "L3068"
class
= "blob-num js-line-number"
data - line - number = "3068" > < /td>
    < td
id = "LC3068"
class
= "blob-code blob-code-inner js-file-line" > guaranteedUnique < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L3069"
class
= "blob-num js-line-number"
data - line - number = "3069" > < /td>
    < td
id = "LC3069"
class
= "blob-code blob-code-inner js-file-line" > children < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L3070"
class
= "blob-num js-line-number"
data - line - number = "3070" > < /td>
    < td
id = "LC3070"
class
= "blob-code blob-code-inner js-file-line" > contents < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L3071"
class
= "blob-num js-line-number"
data - line - number = "3071" > < /td>
    < td
id = "LC3071"
class
= "blob-code blob-code-inner js-file-line" > next < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L3072"
class
= "blob-num js-line-number"
data - line - number = "3072" > < /td>
    < td
id = "LC3072"
class
= "blob-code blob-code-inner js-file-line" > prev < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3073"
class
= "blob-num js-line-number"
data - line - number = "3073" > < /td>
    < td
id = "LC3073"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3074"
class
= "blob-num js-line-number"
data - line - number = "3074" > < /td>
    < td
id = "LC3074"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3075"
class
= "blob-num js-line-number"
data - line - number = "3075" > < /td>
    < td
id = "LC3075"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L3076"
class
= "blob-num js-line-number"
data - line - number = "3076" > < /td>
    < td
id = "LC3076"
class
= "blob-code blob-code-inner js-file-line" > has < span
class
= "pl-k" >
:<
/span> function( target ) {</
td >
< /tr>
< tr >
< td
id = "L3077"
class
= "blob-num js-line-number"
data - line - number = "3077" > < /td>
    < td
id = "LC3077"
class
= "blob-code blob-code-inner js-file-line" >
var targets
<
span
class
= "pl-k" >= < /span> jQuery( target, <span class="pl-c1">this</s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L3078"
class
= "blob-num js-line-number"
data - line - number = "3078" > < /td>
    < td
id = "LC3078"
class
= "blob-code blob-code-inner js-file-line" > l < span
class
= "pl-k" >= < /span> targets<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L3079"
class
= "blob-num js-line-number"
data - line - number = "3079" > < /td>
    < td
id = "LC3079"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3080"
class
= "blob-num js-line-number"
data - line - number = "3080" > < /td>
    < td
id = "LC3080"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>filter( function() {</
td >
< /tr>
< tr >
< td
id = "L3081"
class
= "blob-num js-line-number"
data - line - number = "3081" > < /td>
    < td
id = "LC3081"
class
= "blob-code blob-code-inner js-file-line" >
var i
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3082"
class
= "blob-num js-line-number"
data - line - number = "3082" > < /td>
    < td
id = "LC3082"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > l;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L3083"
class
= "blob-num js-line-number"
data - line - number = "3083" > < /td>
    < td
id = "LC3083"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > contains( < span
class
= "pl-c1" > this < /span>, targets[ i ] ) ) {</
td >
< /tr>
< tr >
< td
id = "L3084"
class
= "blob-num js-line-number"
data - line - number = "3084" > < /td>
    < td
id = "LC3084"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3085"
class
= "blob-num js-line-number"
data - line - number = "3085" > < /td>
    < td
id = "LC3085"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3086"
class
= "blob-num js-line-number"
data - line - number = "3086" > < /td>
    < td
id = "LC3086"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3087"
class
= "blob-num js-line-number"
data - line - number = "3087" > < /td>
    < td
id = "LC3087"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3088"
class
= "blob-num js-line-number"
data - line - number = "3088" > < /td>
    < td
id = "LC3088"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3089"
class
= "blob-num js-line-number"
data - line - number = "3089" > < /td>
    < td
id = "LC3089"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3090"
class
= "blob-num js-line-number"
data - line - number = "3090" > < /td>
    < td
id = "LC3090"
class
= "blob-code blob-code-inner js-file-line" > closest < span
class
= "pl-k" >
:<
/span> function( selectors, context ) {</
td >
< /tr>
< tr >
< td
id = "L3091"
class
= "blob-num js-line-number"
data - line - number = "3091" > < /td>
    < td
id = "LC3091"
class
= "blob-code blob-code-inner js-file-line" >
var cur, <
/td>
< /tr>
< tr >
< td
id = "L3092"
class
= "blob-num js-line-number"
data - line - number = "3092" > < /td>
    < td
id = "LC3092"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L3093"
class
= "blob-num js-line-number"
data - line - number = "3093" > < /td>
    < td
id = "LC3093"
class
= "blob-code blob-code-inner js-file-line" > l < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>length,</
td >
< /tr>
< tr >
< td
id = "L3094"
class
= "blob-num js-line-number"
data - line - number = "3094" > < /td>
    < td
id = "LC3094"
class
= "blob-code blob-code-inner js-file-line" > matched < span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L3095"
class
= "blob-num js-line-number"
data - line - number = "3095" > < /td>
    < td
id = "LC3095"
class
= "blob-code blob-code-inner js-file-line" > targets < span
class
= "pl-k" >= < /span> typeof selectors <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> jQuery( selectors );</
td >
< /tr>
< tr >
< td
id = "L3096"
class
= "blob-num js-line-number"
data - line - number = "3096" > < /td>
    < td
id = "LC3096"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3097"
class
= "blob-num js-line-number"
data - line - number = "3097" > < /td>
    < td
id = "LC3097"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Positional selectors never match, since there&#39;s no _selection_ context</span></td>
    < /tr>
    < tr >
    < td
id = "L3098"
class
= "blob-num js-line-number"
data - line - number = "3098" > < /td>
    < td
id = "LC3098"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > rneedsContext < span
class
= "pl-k" >
.<
/span>test( selectors ) ) {</
td >
< /tr>
< tr >
< td
id = "L3099"
class
= "blob-num js-line-number"
data - line - number = "3099" > < /td>
    < td
id = "LC3099"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > l;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L3100"
class
= "blob-num js-line-number"
data - line - number = "3100" > < /td>
    < td
id = "LC3100"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( cur <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > this < /span>[ i ]; cur <span class="pl-k">&amp;&amp;</s
pan > cur < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > context;
cur < span
class
= "pl-k" >= < /span> cur<span class="pl-k">.</s
pan > parentNode
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3101"
class
    = "blob-num js-line-number"
    data - line - number = "3101" > < /td>
        < td
    id = "LC3101"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3102"
class
    = "blob-num js-line-number"
    data - line - number = "3102" > < /td>
        < td
    id = "LC3102"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Always skip document fragments</span></td>
        < /tr>
        < tr >
        < td
    id = "L3103"
class
    = "blob-num js-line-number"
    data - line - number = "3103" > < /td>
        < td
    id = "LC3103"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( cur<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" > &lt; < /span> <span class="pl-c1">11</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> ( targets <span class="pl-k">?</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L3104"
class
    = "blob-num js-line-number"
    data - line - number = "3104" > < /td>
        < td
    id = "LC3104"
class
    = "blob-code blob-code-inner js-file-line" > targets < span
class
    = "pl-k" >
.<
    /span>index( cur ) <span class="pl-k">&gt;</s
    pan > < span
class
    = "pl-k" > - < /span><span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" >
:<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L3105"
class
    = "blob-num js-line-number"
    data - line - number = "3105" > < /td>
        < td
    id = "LC3105"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3106"
class
    = "blob-num js-line-number"
    data - line - number = "3106" > < /td>
        < td
    id = "LC3106"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Don&#39;t pass non-elements to Sizzle</span></td>
        < /tr>
        < tr >
        < td
    id = "L3107"
class
    = "blob-num js-line-number"
    data - line - number = "3107" > < /td>
        < td
    id = "LC3107"
class
    = "blob-code blob-code-inner js-file-line" > cur < span
class
    = "pl-k" >
.<
    /span>nodeType <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 1 < /span> <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L3108"
class
    = "blob-num js-line-number"
    data - line - number = "3108" > < /td>
        < td
    id = "LC3108"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>find<span class="pl-k">.</s
    pan > matchesSelector(cur, selectors)
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3109"
class
    = "blob-num js-line-number"
    data - line - number = "3109" > < /td>
        < td
    id = "LC3109"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3110"
class
    = "blob-num js-line-number"
    data - line - number = "3110" > < /td>
        < td
    id = "LC3110"
class
    = "blob-code blob-code-inner js-file-line" > matched < span
class
    = "pl-k" >
.<
    /span>push( cur );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3111"
class
    = "blob-num js-line-number"
    data - line - number = "3111" > < /td>
        < td
    id = "LC3111"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    break
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3112"
class
    = "blob-num js-line-number"
    data - line - number = "3112" > < /td>
        < td
    id = "LC3112"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3113"
class
= "blob-num js-line-number"
data - line - number = "3113" > < /td>
    < td
id = "LC3113"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3114"
class
= "blob-num js-line-number"
data - line - number = "3114" > < /td>
    < td
id = "LC3114"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3115"
class
= "blob-num js-line-number"
data - line - number = "3115" > < /td>
    < td
id = "LC3115"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3116"
class
= "blob-num js-line-number"
data - line - number = "3116" > < /td>
    < td
id = "LC3116"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3117"
class
= "blob-num js-line-number"
data - line - number = "3117" > < /td>
    < td
id = "LC3117"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack( matched<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > ?
<
/span> jQuery<span class="pl-k">.</s
pan > uniqueSort(matched) < span
class
= "pl-k" >
:<
/span> matched );</
td >
< /tr>
< tr >
< td
id = "L3118"
class
= "blob-num js-line-number"
data - line - number = "3118" > < /td>
    < td
id = "LC3118"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3119"
class
= "blob-num js-line-number"
data - line - number = "3119" > < /td>
    < td
id = "LC3119"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3120"
class
= "blob-num js-line-number"
data - line - number = "3120" > < /td>
    < td
id = "LC3120"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Determine the position of an element within the set</span></td>
    < /tr>
    < tr >
    < td
id = "L3121"
class
= "blob-num js-line-number"
data - line - number = "3121" > < /td>
    < td
id = "LC3121"
class
= "blob-code blob-code-inner js-file-line" > index < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3122"
class
= "blob-num js-line-number"
data - line - number = "3122" > < /td>
    < td
id = "LC3122"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3123"
class
= "blob-num js-line-number"
data - line - number = "3123" > < /td>
    < td
id = "LC3123"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> No argument, return index in parent</span></td>
    < /tr>
    < tr >
    < td
id = "L3124"
class
= "blob-num js-line-number"
data - line - number = "3124" > < /td>
    < td
id = "LC3124"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > elem
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3125"
class
    = "blob-num js-line-number"
    data - line - number = "3125" > < /td>
        < td
    id = "LC3125"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> ( <span class="pl-c1">this</s
    pan > [ < span
class
    = "pl-c1" > 0 < /span> ] <span class="pl-k">&amp;&amp;</s
    pan > < span
class
    = "pl-c1" > this < /span>[ <span class="pl-c1">0</span> ]<span class="pl-k">.</s
    pan > parentNode
)
<
span
class
= "pl-k" > ?
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>first()<span class="pl-k">.</s
pan > prevAll() < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">:</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3126"
class
= "blob-num js-line-number"
data - line - number = "3126" > < /td>
    < td
id = "LC3126"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3127"
class
= "blob-num js-line-number"
data - line - number = "3127" > < /td>
    < td
id = "LC3127"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3128"
class
= "blob-num js-line-number"
data - line - number = "3128" > < /td>
    < td
id = "LC3128"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Index in selector</span></td>
    < /tr>
    < tr >
    < td
id = "L3129"
class
= "blob-num js-line-number"
data - line - number = "3129" > < /td>
    < td
id = "LC3129"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof elem <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L3130"
class
= "blob-num js-line-number"
data - line - number = "3130" > < /td>
    < td
id = "LC3130"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> indexOf<span class="pl-k">.</s
pan > call(jQuery(elem), < span
class
= "pl-c1" > this < /span>[ <span class="pl-c1">0</span> ] );</
td >
< /tr>
< tr >
< td
id = "L3131"
class
= "blob-num js-line-number"
data - line - number = "3131" > < /td>
    < td
id = "LC3131"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3132"
class
= "blob-num js-line-number"
data - line - number = "3132" > < /td>
    < td
id = "LC3132"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3133"
class
= "blob-num js-line-number"
data - line - number = "3133" > < /td>
    < td
id = "LC3133"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Locate the position of the desired element</span></td>
    < /tr>
    < tr >
    < td
id = "L3134"
class
= "blob-num js-line-number"
data - line - number = "3134" > < /td>
    < td
id = "LC3134"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> indexOf<span class="pl-k">.</s
pan > call( < span
class
= "pl-c1" > this < /span>,</
td >
< /tr>
< tr >
< td
id = "L3135"
class
= "blob-num js-line-number"
data - line - number = "3135" > < /td>
    < td
id = "LC3135"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3136"
class
= "blob-num js-line-number"
data - line - number = "3136" > < /td>
    < td
id = "LC3136"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If it receives a jQuery object, the first element is used</span></td>
    < /tr>
    < tr >
    < td
id = "L3137"
class
= "blob-num js-line-number"
data - line - number = "3137" > < /td>
    < td
id = "LC3137"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>jquery <span class="pl-k">?</s
pan > elem[ < span
class
= "pl-c1" > 0 < /span> ] <span class="pl-k">:</s
pan > elem < /td>
< /tr>
< tr >
< td
id = "L3138"
class
= "blob-num js-line-number"
data - line - number = "3138" > < /td>
    < td
id = "LC3138"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3139"
class
= "blob-num js-line-number"
data - line - number = "3139" > < /td>
    < td
id = "LC3139"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3140"
class
= "blob-num js-line-number"
data - line - number = "3140" > < /td>
    < td
id = "LC3140"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3141"
class
= "blob-num js-line-number"
data - line - number = "3141" > < /td>
    < td
id = "LC3141"
class
= "blob-code blob-code-inner js-file-line" > add < span
class
= "pl-k" >
:<
/span> function( selector, context ) {</
td >
< /tr>
< tr >
< td
id = "L3142"
class
= "blob-num js-line-number"
data - line - number = "3142" > < /td>
    < td
id = "LC3142"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack(</
td >
< /tr>
< tr >
< td
id = "L3143"
class
= "blob-num js-line-number"
data - line - number = "3143" > < /td>
    < td
id = "LC3143"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>uniqueSort(</
td >
< /tr>
< tr >
< td
id = "L3144"
class
= "blob-num js-line-number"
data - line - number = "3144" > < /td>
    < td
id = "LC3144"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>merge( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>get(), jQuery( selector, context ) )</
td >
< /tr>
< tr >
< td
id = "L3145"
class
= "blob-num js-line-number"
data - line - number = "3145" > < /td>
    < td
id = "LC3145"
class
= "blob-code blob-code-inner js-file-line" >
)<
/td>
< /tr>
< tr >
< td
id = "L3146"
class
= "blob-num js-line-number"
data - line - number = "3146" > < /td>
    < td
id = "LC3146"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3147"
class
= "blob-num js-line-number"
data - line - number = "3147" > < /td>
    < td
id = "LC3147"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3148"
class
= "blob-num js-line-number"
data - line - number = "3148" > < /td>
    < td
id = "LC3148"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3149"
class
= "blob-num js-line-number"
data - line - number = "3149" > < /td>
    < td
id = "LC3149"
class
= "blob-code blob-code-inner js-file-line" > addBack < span
class
= "pl-k" >
:<
/span> function( selector ) {</
td >
< /tr>
< tr >
< td
id = "L3150"
class
= "blob-num js-line-number"
data - line - number = "3150" > < /td>
    < td
id = "LC3150"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>add( selector <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3151"
class
= "blob-num js-line-number"
data - line - number = "3151" > < /td>
    < td
id = "LC3151"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > prevObject < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>prevObject<span class="pl-k">.</s
pan > filter(selector) < /td>
< /tr>
< tr >
< td
id = "L3152"
class
= "blob-num js-line-number"
data - line - number = "3152" > < /td>
    < td
id = "LC3152"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3153"
class
= "blob-num js-line-number"
data - line - number = "3153" > < /td>
    < td
id = "LC3153"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3154"
class
= "blob-num js-line-number"
data - line - number = "3154" > < /td>
    < td
id = "LC3154"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3155"
class
= "blob-num js-line-number"
data - line - number = "3155" > < /td>
    < td
id = "LC3155"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3156"
class
= "blob-num js-line-number"
data - line - number = "3156" > < /td>
    < td
id = "LC3156"
class
= "blob-code blob-code-inner js-file-line" > function sibling(cur, dir) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3157"
class
    = "blob-num js-line-number"
    data - line - number = "3157" > < /td>
        < td
    id = "LC3157"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( ( cur <span class="pl-k">=</s
    pan > cur[dir]
) < span
class
= "pl-k" > &amp;&amp; < /span> cur<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 1 < /span> ) {}</
td >
< /tr>
< tr >
< td
id = "L3158"
class
= "blob-num js-line-number"
data - line - number = "3158" > < /td>
    < td
id = "LC3158"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> cur;</
td >
< /tr>
< tr >
< td
id = "L3159"
class
= "blob-num js-line-number"
data - line - number = "3159" > < /td>
    < td
id = "LC3159"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3160"
class
= "blob-num js-line-number"
data - line - number = "3160" > < /td>
    < td
id = "LC3160"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3161"
class
= "blob-num js-line-number"
data - line - number = "3161" > < /td>
    < td
id = "LC3161"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( {</
td >
< /tr>
< tr >
< td
id = "L3162"
class
= "blob-num js-line-number"
data - line - number = "3162" > < /td>
    < td
id = "LC3162"
class
= "blob-code blob-code-inner js-file-line" > parent < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3163"
class
= "blob-num js-line-number"
data - line - number = "3163" > < /td>
    < td
id = "LC3163"
class
= "blob-code blob-code-inner js-file-line" >
var parent
<
span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > parentNode;
<
/td>
< /tr>
< tr >
< td
id = "L3164"
class
= "blob-num js-line-number"
data - line - number = "3164" > < /td>
    < td
id = "LC3164"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> parent <span class="pl-k">&amp;&amp;</s
pan > parent < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">11</s
pan > < span
class
= "pl-k" > ?
<
/span> parent <span class="pl-k">:</s
pan > < span
class
= "pl-c1" > null < /span>;</
td >
< /tr>
< tr >
< td
id = "L3165"
class
= "blob-num js-line-number"
data - line - number = "3165" > < /td>
    < td
id = "LC3165"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3166"
class
= "blob-num js-line-number"
data - line - number = "3166" > < /td>
    < td
id = "LC3166"
class
= "blob-code blob-code-inner js-file-line" > parents < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3167"
class
= "blob-num js-line-number"
data - line - number = "3167" > < /td>
    < td
id = "LC3167"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dir( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > parentNode < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3168"
class
= "blob-num js-line-number"
data - line - number = "3168" > < /td>
    < td
id = "LC3168"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3169"
class
= "blob-num js-line-number"
data - line - number = "3169" > < /td>
    < td
id = "LC3169"
class
= "blob-code blob-code-inner js-file-line" > parentsUntil < span
class
= "pl-k" >
:<
/span> function( elem, i, until ) {</
td >
< /tr>
< tr >
< td
id = "L3170"
class
= "blob-num js-line-number"
data - line - number = "3170" > < /td>
    < td
id = "LC3170"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dir( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > parentNode < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, until
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3171"
class
= "blob-num js-line-number"
data - line - number = "3171" > < /td>
    < td
id = "LC3171"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3172"
class
= "blob-num js-line-number"
data - line - number = "3172" > < /td>
    < td
id = "LC3172"
class
= "blob-code blob-code-inner js-file-line" > next < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3173"
class
= "blob-num js-line-number"
data - line - number = "3173" > < /td>
    < td
id = "LC3173"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> sibling( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > nextSibling < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3174"
class
= "blob-num js-line-number"
data - line - number = "3174" > < /td>
    < td
id = "LC3174"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3175"
class
= "blob-num js-line-number"
data - line - number = "3175" > < /td>
    < td
id = "LC3175"
class
= "blob-code blob-code-inner js-file-line" > prev < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3176"
class
= "blob-num js-line-number"
data - line - number = "3176" > < /td>
    < td
id = "LC3176"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> sibling( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > previousSibling < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3177"
class
= "blob-num js-line-number"
data - line - number = "3177" > < /td>
    < td
id = "LC3177"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3178"
class
= "blob-num js-line-number"
data - line - number = "3178" > < /td>
    < td
id = "LC3178"
class
= "blob-code blob-code-inner js-file-line" > nextAll < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3179"
class
= "blob-num js-line-number"
data - line - number = "3179" > < /td>
    < td
id = "LC3179"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dir( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > nextSibling < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3180"
class
= "blob-num js-line-number"
data - line - number = "3180" > < /td>
    < td
id = "LC3180"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3181"
class
= "blob-num js-line-number"
data - line - number = "3181" > < /td>
    < td
id = "LC3181"
class
= "blob-code blob-code-inner js-file-line" > prevAll < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3182"
class
= "blob-num js-line-number"
data - line - number = "3182" > < /td>
    < td
id = "LC3182"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dir( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > previousSibling < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3183"
class
= "blob-num js-line-number"
data - line - number = "3183" > < /td>
    < td
id = "LC3183"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3184"
class
= "blob-num js-line-number"
data - line - number = "3184" > < /td>
    < td
id = "LC3184"
class
= "blob-code blob-code-inner js-file-line" > nextUntil < span
class
= "pl-k" >
:<
/span> function( elem, i, until ) {</
td >
< /tr>
< tr >
< td
id = "L3185"
class
= "blob-num js-line-number"
data - line - number = "3185" > < /td>
    < td
id = "LC3185"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dir( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > nextSibling < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, until
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3186"
class
= "blob-num js-line-number"
data - line - number = "3186" > < /td>
    < td
id = "LC3186"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3187"
class
= "blob-num js-line-number"
data - line - number = "3187" > < /td>
    < td
id = "LC3187"
class
= "blob-code blob-code-inner js-file-line" > prevUntil < span
class
= "pl-k" >
:<
/span> function( elem, i, until ) {</
td >
< /tr>
< tr >
< td
id = "L3188"
class
= "blob-num js-line-number"
data - line - number = "3188" > < /td>
    < td
id = "LC3188"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dir( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > previousSibling < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, until
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3189"
class
= "blob-num js-line-number"
data - line - number = "3189" > < /td>
    < td
id = "LC3189"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3190"
class
= "blob-num js-line-number"
data - line - number = "3190" > < /td>
    < td
id = "LC3190"
class
= "blob-code blob-code-inner js-file-line" > siblings < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3191"
class
= "blob-num js-line-number"
data - line - number = "3191" > < /td>
    < td
id = "LC3191"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> siblings( ( elem<span class="pl-k">.</s
pan > parentNode < span
class
= "pl-k" > || < /span> {} )<span class="pl-k">.</s
pan > firstChild, elem
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3192"
class
= "blob-num js-line-number"
data - line - number = "3192" > < /td>
    < td
id = "LC3192"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3193"
class
= "blob-num js-line-number"
data - line - number = "3193" > < /td>
    < td
id = "LC3193"
class
= "blob-code blob-code-inner js-file-line" > children < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3194"
class
= "blob-num js-line-number"
data - line - number = "3194" > < /td>
    < td
id = "LC3194"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> siblings( elem<span class="pl-k">.</s
pan > firstChild
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3195"
class
= "blob-num js-line-number"
data - line - number = "3195" > < /td>
    < td
id = "LC3195"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3196"
class
= "blob-num js-line-number"
data - line - number = "3196" > < /td>
    < td
id = "LC3196"
class
= "blob-code blob-code-inner js-file-line" > contents < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L3197"
class
= "blob-num js-line-number"
data - line - number = "3197" > < /td>
    < td
id = "LC3197"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > contentDocument < span
class
= "pl-k" > || < /span> jQuery<span class="pl-k">.</s
pan > merge([], elem < span
class
= "pl-k" >
.<
/span>childNodes );</
td >
< /tr>
< tr >
< td
id = "L3198"
class
= "blob-num js-line-number"
data - line - number = "3198" > < /td>
    < td
id = "LC3198"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3199"
class
= "blob-num js-line-number"
data - line - number = "3199" > < /td>
    < td
id = "LC3199"
class
= "blob-code blob-code-inner js-file-line" >
},

function (name, fn) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3200"
class
    = "blob-num js-line-number"
    data - line - number = "3200" > < /td>
        < td
    id = "LC3200"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>fn[ name ] <span class="pl-k">=</s
    pan > function (until, selector) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L3201"
    class
        = "blob-num js-line-number"
        data - line - number = "3201" > < /td>
            < td
        id = "LC3201"
    class
        = "blob-code blob-code-inner js-file-line" >
        var matched
    <
        span
    class
        = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
        pan > map( < span
    class
        = "pl-c1" > this < /span>, fn, until );</
        td >
        < /tr>
        < tr >
        < td
        id = "L3202"
    class
        = "blob-num js-line-number"
        data - line - number = "3202" > < /td>
            < td
        id = "LC3202"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L3203"
    class
        = "blob-num js-line-number"
        data - line - number = "3203" > < /td>
            < td
        id = "LC3203"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( name<span class="pl-k">.</s
        pan > slice( < span
    class
        = "pl-k" > - < /span><span class="pl-c1">5</s
        pan >
    ) <
        span
    class
        = "pl-k" > != < /span><span class="pl-k">=</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>Until<span class="pl-pds">&quot;</s
        pan > < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L3204"
    class
        = "blob-num js-line-number"
        data - line - number = "3204" > < /td>
            < td
        id = "LC3204"
    class
        = "blob-code blob-code-inner js-file-line" > selector < span
    class
        = "pl-k" >= < /span> until;</
        td >
        < /tr>
        < tr >
        < td
        id = "L3205"
    class
        = "blob-num js-line-number"
        data - line - number = "3205" > < /td>
            < td
        id = "LC3205"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
    id = "L3206"
class
    = "blob-num js-line-number"
    data - line - number = "3206" > < /td>
        < td
    id = "LC3206"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3207"
class
    = "blob-num js-line-number"
    data - line - number = "3207" > < /td>
        < td
    id = "LC3207"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( selector <span class="pl-k">&amp;&amp;</s
    pan > typeof selector < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > string < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)

{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3208"
class
    = "blob-num js-line-number"
    data - line - number = "3208" > < /td>
        < td
    id = "LC3208"
class
    = "blob-code blob-code-inner js-file-line" > matched < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > filter(selector, matched);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3209"
class
    = "blob-num js-line-number"
    data - line - number = "3209" > < /td>
        < td
    id = "LC3209"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3210"
class
= "blob-num js-line-number"
data - line - number = "3210" > < /td>
    < td
id = "LC3210"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3211"
class
= "blob-num js-line-number"
data - line - number = "3211" > < /td>
    < td
id = "LC3211"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">&gt;</s
pan > < span
class
= "pl-c1" > 1 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L3212"
class
= "blob-num js-line-number"
data - line - number = "3212" > < /td>
    < td
id = "LC3212"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3213"
class
= "blob-num js-line-number"
data - line - number = "3213" > < /td>
    < td
id = "LC3213"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove duplicates</span></td>
    < /tr>
    < tr >
    < td
id = "L3214"
class
= "blob-num js-line-number"
data - line - number = "3214" > < /td>
    < td
id = "LC3214"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > guaranteedUnique[name]
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3215"
class
    = "blob-num js-line-number"
    data - line - number = "3215" > < /td>
        < td
    id = "LC3215"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>uniqueSort( matched );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3216"
class
    = "blob-num js-line-number"
    data - line - number = "3216" > < /td>
        < td
    id = "LC3216"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3217"
class
= "blob-num js-line-number"
data - line - number = "3217" > < /td>
    < td
id = "LC3217"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3218"
class
= "blob-num js-line-number"
data - line - number = "3218" > < /td>
    < td
id = "LC3218"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Reverse order for parents* and prev-derivatives</span></td>
    < /tr>
    < tr >
    < td
id = "L3219"
class
= "blob-num js-line-number"
data - line - number = "3219" > < /td>
    < td
id = "LC3219"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( rparentsprev<span class="pl-k">.</s
pan > test(name)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3220"
class
    = "blob-num js-line-number"
    data - line - number = "3220" > < /td>
        < td
    id = "LC3220"
class
    = "blob-code blob-code-inner js-file-line" > matched < span
class
    = "pl-k" >
.<
    /span>reverse();</
    td >
    < /tr>
    < tr >
    < td
    id = "L3221"
class
    = "blob-num js-line-number"
    data - line - number = "3221" > < /td>
        < td
    id = "LC3221"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3222"
class
= "blob-num js-line-number"
data - line - number = "3222" > < /td>
    < td
id = "LC3222"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3223"
class
= "blob-num js-line-number"
data - line - number = "3223" > < /td>
    < td
id = "LC3223"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3224"
class
= "blob-num js-line-number"
data - line - number = "3224" > < /td>
    < td
id = "LC3224"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack( matched );</
td >
< /tr>
< tr >
< td
id = "L3225"
class
= "blob-num js-line-number"
data - line - number = "3225" > < /td>
    < td
id = "LC3225"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3226"
class
= "blob-num js-line-number"
data - line - number = "3226" > < /td>
    < td
id = "LC3226"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3227"
class
= "blob-num js-line-number"
data - line - number = "3227" > < /td>
    < td
id = "LC3227"
class
= "blob-code blob-code-inner js-file-line" >
var rnothtmlwhite
<
span
class
= "pl-k" >= < /span> ( <span class="pl-k">/ < /span>[<span class="pl-k">^</span>\x20\t\r\n\f]<span class="pl-k">+/ < /span>g );</
td >
< /tr>
< tr >
< td
id = "L3228"
class
= "blob-num js-line-number"
data - line - number = "3228" > < /td>
    < td
id = "LC3228"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3229"
class
= "blob-num js-line-number"
data - line - number = "3229" > < /td>
    < td
id = "LC3229"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3230"
class
= "blob-num js-line-number"
data - line - number = "3230" > < /td>
    < td
id = "LC3230"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3231"
class
= "blob-num js-line-number"
data - line - number = "3231" > < /td>
    < td
id = "LC3231"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert String-formatted options into Object-formatted ones</span></td>
    < /tr>
    < tr >
    < td
id = "L3232"
class
= "blob-num js-line-number"
data - line - number = "3232" > < /td>
    < td
id = "LC3232"
class
= "blob-code blob-code-inner js-file-line" > function createOptions(options) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3233"
class
    = "blob-num js-line-number"
    data - line - number = "3233" > < /td>
        < td
    id = "LC3233"
class
    = "blob-code blob-code-inner js-file-line" >
    var object
<
    span
class
    = "pl-k" >= < /span> {};</
    td >
    < /tr>
    < tr >
    < td
    id = "L3234"
class
    = "blob-num js-line-number"
    data - line - number = "3234" > < /td>
        < td
    id = "LC3234"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>each( options<span class="pl-k">.</s
    pan > match(rnothtmlwhite) < span
class
    = "pl-k" > || < /span> [], function( _, flag ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3235"
class
    = "blob-num js-line-number"
    data - line - number = "3235" > < /td>
        < td
    id = "LC3235"
class
    = "blob-code blob-code-inner js-file-line" > object[flag] < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3236"
class
    = "blob-num js-line-number"
    data - line - number = "3236" > < /td>
        < td
    id = "LC3236"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3237"
class
= "blob-num js-line-number"
data - line - number = "3237" > < /td>
    < td
id = "LC3237"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> object;</
td >
< /tr>
< tr >
< td
id = "L3238"
class
= "blob-num js-line-number"
data - line - number = "3238" > < /td>
    < td
id = "LC3238"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3239"
class
= "blob-num js-line-number"
data - line - number = "3239" > < /td>
    < td
id = "LC3239"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3240"
class
= "blob-num js-line-number"
data - line - number = "3240" > < /td>
    < td
id = "LC3240"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span></span></td>
      </tr>
      <tr>
        <td id="L3241" class="blob-num js-line-number" data-line-number="3241"></td>
        <td id="LC3241" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Create a callback list using the following parameters:</span></td>
      </tr>
      <tr>
        <td id="L3242" class="blob-num js-line-number" data-line-number="3242"></td>
        <td id="LC3242" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3243" class="blob-num js-line-number" data-line-number="3243"></td>
        <td id="LC3243" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *	options: an optional list of space-separated options that will change how</span></td>
      </tr>
      <tr>
        <td id="L3244" class="blob-num js-line-number" data-line-number="3244"></td>
        <td id="LC3244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *			the callback list behaves or a more traditional option object</span></td>
      </tr>
      <tr>
        <td id="L3245" class="blob-num js-line-number" data-line-number="3245"></td>
        <td id="LC3245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3246" class="blob-num js-line-number" data-line-number="3246"></td>
        <td id="LC3246" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * By default a callback list will act like an event callback list and can be</span></td>
      </tr>
      <tr>
        <td id="L3247" class="blob-num js-line-number" data-line-number="3247"></td>
        <td id="LC3247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &quot;fired&quot; multiple times.</span></td>
      </tr>
      <tr>
        <td id="L3248" class="blob-num js-line-number" data-line-number="3248"></td>
        <td id="LC3248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3249" class="blob-num js-line-number" data-line-number="3249"></td>
        <td id="LC3249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Possible options:</span></td>
      </tr>
      <tr>
        <td id="L3250" class="blob-num js-line-number" data-line-number="3250"></td>
        <td id="LC3250" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3251" class="blob-num js-line-number" data-line-number="3251"></td>
        <td id="LC3251" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *	once:			will ensure the callback list can only be fired once (like a Deferred)</span></td>
      </tr>
      <tr>
        <td id="L3252" class="blob-num js-line-number" data-line-number="3252"></td>
        <td id="LC3252" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3253" class="blob-num js-line-number" data-line-number="3253"></td>
        <td id="LC3253" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *	memory:			will keep track of previous values and will call any callback added</span></td>
      </tr>
      <tr>
        <td id="L3254" class="blob-num js-line-number" data-line-number="3254"></td>
        <td id="LC3254" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *					after the list has been fired right away with the latest &quot;memorized&quot;</span></td>
      </tr>
      <tr>
        <td id="L3255" class="blob-num js-line-number" data-line-number="3255"></td>
        <td id="LC3255" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *					values (like a Deferred)</span></td>
      </tr>
      <tr>
        <td id="L3256" class="blob-num js-line-number" data-line-number="3256"></td>
        <td id="LC3256" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3257" class="blob-num js-line-number" data-line-number="3257"></td>
        <td id="LC3257" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *	unique:			will ensure a callback can only be added once (no duplicate in the list)</span></td>
      </tr>
      <tr>
        <td id="L3258" class="blob-num js-line-number" data-line-number="3258"></td>
        <td id="LC3258" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3259" class="blob-num js-line-number" data-line-number="3259"></td>
        <td id="LC3259" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *	stopOnFalse:	interrupt callings when a callback returns false</span></td>
      </tr>
      <tr>
        <td id="L3260" class="blob-num js-line-number" data-line-number="3260"></td>
        <td id="LC3260" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3261" class="blob-num js-line-number" data-line-number="3261"></td>
        <td id="LC3261" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L3262"
class
= "blob-num js-line-number"
data - line - number = "3262" > < /td>
    < td
id = "LC3262"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > jQuery < span
class
= "pl-k" >
.<
/span>Callbacks</s
pan > < span
class
= "pl-k" >= < /span> function( options ) {</
td >
< /tr>
< tr >
< td
id = "L3263"
class
= "blob-num js-line-number"
data - line - number = "3263" > < /td>
    < td
id = "LC3263"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3264"
class
= "blob-num js-line-number"
data - line - number = "3264" > < /td>
    < td
id = "LC3264"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert options from String-formatted to Object-formatted if needed</span></td>
    < /tr>
    < tr >
    < td
id = "L3265"
class
= "blob-num js-line-number"
data - line - number = "3265" > < /td>
    < td
id = "LC3265"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (we check in cache first)</span></td>
    < /tr>
    < tr >
    < td
id = "L3266"
class
= "blob-num js-line-number"
data - line - number = "3266" > < /td>
    < td
id = "LC3266"
class
= "blob-code blob-code-inner js-file-line" > options < span
class
= "pl-k" >= < /span> typeof options <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3267"
class
= "blob-num js-line-number"
data - line - number = "3267" > < /td>
    < td
id = "LC3267"
class
= "blob-code blob-code-inner js-file-line" > createOptions(options) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L3268"
class
= "blob-num js-line-number"
data - line - number = "3268" > < /td>
    < td
id = "LC3268"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {}, options );</
td >
< /tr>
< tr >
< td
id = "L3269"
class
= "blob-num js-line-number"
data - line - number = "3269" > < /td>
    < td
id = "LC3269"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3270"
class
= "blob-num js-line-number"
data - line - number = "3270" > < /td>
    < td
id = "LC3270"
class
= "blob-code blob-code-inner js-file-line" >
var <
span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Flag to know if list is currently firing</span></td>
    < /tr>
    < tr >
    < td
id = "L3271"
class
= "blob-num js-line-number"
data - line - number = "3271" > < /td>
    < td
id = "LC3271"
class
= "blob-code blob-code-inner js-file-line" > firing,
<
/td>
< /tr>
< tr >
< td
id = "L3272"
class
= "blob-num js-line-number"
data - line - number = "3272" > < /td>
    < td
id = "LC3272"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3273"
class
= "blob-num js-line-number"
data - line - number = "3273" > < /td>
    < td
id = "LC3273"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Last fire value for non-forgettable lists</span></td>
    < /tr>
    < tr >
    < td
id = "L3274"
class
= "blob-num js-line-number"
data - line - number = "3274" > < /td>
    < td
id = "LC3274"
class
= "blob-code blob-code-inner js-file-line" > memory,
<
/td>
< /tr>
< tr >
< td
id = "L3275"
class
= "blob-num js-line-number"
data - line - number = "3275" > < /td>
    < td
id = "LC3275"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3276"
class
= "blob-num js-line-number"
data - line - number = "3276" > < /td>
    < td
id = "LC3276"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Flag to know if list was already fired</span></td>
    < /tr>
    < tr >
    < td
id = "L3277"
class
= "blob-num js-line-number"
data - line - number = "3277" > < /td>
    < td
id = "LC3277"
class
= "blob-code blob-code-inner js-file-line" > fired,
<
/td>
< /tr>
< tr >
< td
id = "L3278"
class
= "blob-num js-line-number"
data - line - number = "3278" > < /td>
    < td
id = "LC3278"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3279"
class
= "blob-num js-line-number"
data - line - number = "3279" > < /td>
    < td
id = "LC3279"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Flag to prevent firing</span></td>
    < /tr>
    < tr >
    < td
id = "L3280"
class
= "blob-num js-line-number"
data - line - number = "3280" > < /td>
    < td
id = "LC3280"
class
= "blob-code blob-code-inner js-file-line" > locked,
<
/td>
< /tr>
< tr >
< td
id = "L3281"
class
= "blob-num js-line-number"
data - line - number = "3281" > < /td>
    < td
id = "LC3281"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3282"
class
= "blob-num js-line-number"
data - line - number = "3282" > < /td>
    < td
id = "LC3282"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Actual callback list</span></td>
    < /tr>
    < tr >
    < td
id = "L3283"
class
= "blob-num js-line-number"
data - line - number = "3283" > < /td>
    < td
id = "LC3283"
class
= "blob-code blob-code-inner js-file-line" > list < span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L3284"
class
= "blob-num js-line-number"
data - line - number = "3284" > < /td>
    < td
id = "LC3284"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3285"
class
= "blob-num js-line-number"
data - line - number = "3285" > < /td>
    < td
id = "LC3285"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Queue of execution data for repeatable lists</span></td>
    < /tr>
    < tr >
    < td
id = "L3286"
class
= "blob-num js-line-number"
data - line - number = "3286" > < /td>
    < td
id = "LC3286"
class
= "blob-code blob-code-inner js-file-line" > queue < span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L3287"
class
= "blob-num js-line-number"
data - line - number = "3287" > < /td>
    < td
id = "LC3287"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3288"
class
= "blob-num js-line-number"
data - line - number = "3288" > < /td>
    < td
id = "LC3288"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Index of currently firing callback (modified by add/remove as needed)</span></td>
    < /tr>
    < tr >
    < td
id = "L3289"
class
= "blob-num js-line-number"
data - line - number = "3289" > < /td>
    < td
id = "LC3289"
class
= "blob-code blob-code-inner js-file-line" > firingIndex < span
class
= "pl-k" >= < /span> <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span>,</
td >
< /tr>
< tr >
< td
id = "L3290"
class
= "blob-num js-line-number"
data - line - number = "3290" > < /td>
    < td
id = "LC3290"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3291"
class
= "blob-num js-line-number"
data - line - number = "3291" > < /td>
    < td
id = "LC3291"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fire callbacks</span></td>
    < /tr>
    < tr >
    < td
id = "L3292"
class
= "blob-num js-line-number"
data - line - number = "3292" > < /td>
    < td
id = "LC3292"
class
= "blob-code blob-code-inner js-file-line" > fire < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L3293"
class
= "blob-num js-line-number"
data - line - number = "3293" > < /td>
    < td
id = "LC3293"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3294"
class
= "blob-num js-line-number"
data - line - number = "3294" > < /td>
    < td
id = "LC3294"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Enforce single-firing</span></td>
    < /tr>
    < tr >
    < td
id = "L3295"
class
= "blob-num js-line-number"
data - line - number = "3295" > < /td>
    < td
id = "LC3295"
class
= "blob-code blob-code-inner js-file-line" > locked < span
class
= "pl-k" >= < /span> options<span class="pl-k">.</s
pan > once;
<
/td>
< /tr>
< tr >
< td
id = "L3296"
class
= "blob-num js-line-number"
data - line - number = "3296" > < /td>
    < td
id = "LC3296"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3297"
class
= "blob-num js-line-number"
data - line - number = "3297" > < /td>
    < td
id = "LC3297"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Execute callbacks for all pending executions,</span></td>
    < /tr>
    < tr >
    < td
id = "L3298"
class
= "blob-num js-line-number"
data - line - number = "3298" > < /td>
    < td
id = "LC3298"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> respecting firingIndex overrides and runtime changes</span></td>
    < /tr>
    < tr >
    < td
id = "L3299"
class
= "blob-num js-line-number"
data - line - number = "3299" > < /td>
    < td
id = "LC3299"
class
= "blob-code blob-code-inner js-file-line" > fired < span
class
= "pl-k" >= < /span> firing <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > true < /span>;</
td >
< /tr>
< tr >
< td
id = "L3300"
class
= "blob-num js-line-number"
data - line - number = "3300" > < /td>
    < td
id = "LC3300"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; queue<span class="pl-k">.</s
pan > length;
firingIndex < span
class
= "pl-k" >= < /span> <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L3301"
class
= "blob-num js-line-number"
data - line - number = "3301" > < /td>
    < td
id = "LC3301"
class
= "blob-code blob-code-inner js-file-line" > memory < span
class
= "pl-k" >= < /span> queue<span class="pl-k">.</s
pan > shift();
<
/td>
< /tr>
< tr >
< td
id = "L3302"
class
= "blob-num js-line-number"
data - line - number = "3302" > < /td>
    < td
id = "LC3302"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( <span class="pl-k">++</s
pan > firingIndex < span
class
= "pl-k" > &lt; < /span> list<span class="pl-k">.</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3303"
class
    = "blob-num js-line-number"
    data - line - number = "3303" > < /td>
        < td
    id = "LC3303"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3304"
class
    = "blob-num js-line-number"
    data - line - number = "3304" > < /td>
        < td
    id = "LC3304"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Run callback and check for early termination</span></td>
        < /tr>
        < tr >
        < td
    id = "L3305"
class
    = "blob-num js-line-number"
    data - line - number = "3305" > < /td>
        < td
    id = "LC3305"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( list[ firingIndex ]<span class="pl-k">.</s
    pan > apply(memory[ < span
class
    = "pl-c1" > 0 < /span> ], memory[ <span class="pl-c1">1</span> ] ) <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > false < /span> <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L3306"
class
    = "blob-num js-line-number"
    data - line - number = "3306" > < /td>
        < td
    id = "LC3306"
class
    = "blob-code blob-code-inner js-file-line" > options < span
class
    = "pl-k" >
.<
    /span>stopOnFalse ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3307"
class
    = "blob-num js-line-number"
    data - line - number = "3307" > < /td>
        < td
    id = "LC3307"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3308"
class
    = "blob-num js-line-number"
    data - line - number = "3308" > < /td>
        < td
    id = "LC3308"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Jump to end and forget the data so .add doesn&#39;t re-fire</span></td>
        < /tr>
        < tr >
        < td
    id = "L3309"
class
    = "blob-num js-line-number"
    data - line - number = "3309" > < /td>
        < td
    id = "LC3309"
class
    = "blob-code blob-code-inner js-file-line" > firingIndex < span
class
    = "pl-k" >= < /span> list<span class="pl-k">.</s
    pan > length;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3310"
class
    = "blob-num js-line-number"
    data - line - number = "3310" > < /td>
        < td
    id = "LC3310"
class
    = "blob-code blob-code-inner js-file-line" > memory < span
class
    = "pl-k" >= < /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3311"
class
    = "blob-num js-line-number"
    data - line - number = "3311" > < /td>
        < td
    id = "LC3311"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3312"
class
= "blob-num js-line-number"
data - line - number = "3312" > < /td>
    < td
id = "LC3312"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3313"
class
= "blob-num js-line-number"
data - line - number = "3313" > < /td>
    < td
id = "LC3313"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3314"
class
= "blob-num js-line-number"
data - line - number = "3314" > < /td>
    < td
id = "LC3314"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3315"
class
= "blob-num js-line-number"
data - line - number = "3315" > < /td>
    < td
id = "LC3315"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Forget the data if we&#39;re done with it</span></td>
    < /tr>
    < tr >
    < td
id = "L3316"
class
= "blob-num js-line-number"
data - line - number = "3316" > < /td>
    < td
id = "LC3316"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > options < span
class
= "pl-k" >
.<
/span>memory ) {</
td >
< /tr>
< tr >
< td
id = "L3317"
class
= "blob-num js-line-number"
data - line - number = "3317" > < /td>
    < td
id = "LC3317"
class
= "blob-code blob-code-inner js-file-line" > memory < span
class
= "pl-k" >= < /span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3318"
class
= "blob-num js-line-number"
data - line - number = "3318" > < /td>
    < td
id = "LC3318"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3319"
class
= "blob-num js-line-number"
data - line - number = "3319" > < /td>
    < td
id = "LC3319"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3320"
class
= "blob-num js-line-number"
data - line - number = "3320" > < /td>
    < td
id = "LC3320"
class
= "blob-code blob-code-inner js-file-line" > firing < span
class
= "pl-k" >= < /span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3321"
class
= "blob-num js-line-number"
data - line - number = "3321" > < /td>
    < td
id = "LC3321"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3322"
class
= "blob-num js-line-number"
data - line - number = "3322" > < /td>
    < td
id = "LC3322"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Clean up if we&#39;re done firing for good</span></td>
    < /tr>
    < tr >
    < td
id = "L3323"
class
= "blob-num js-line-number"
data - line - number = "3323" > < /td>
    < td
id = "LC3323"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( locked ) {</
td >
< /tr>
< tr >
< td
id = "L3324"
class
= "blob-num js-line-number"
data - line - number = "3324" > < /td>
    < td
id = "LC3324"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3325"
class
= "blob-num js-line-number"
data - line - number = "3325" > < /td>
    < td
id = "LC3325"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Keep an empty list if we have data for future add calls</span></td>
    < /tr>
    < tr >
    < td
id = "L3326"
class
= "blob-num js-line-number"
data - line - number = "3326" > < /td>
    < td
id = "LC3326"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( memory ) {</
td >
< /tr>
< tr >
< td
id = "L3327"
class
= "blob-num js-line-number"
data - line - number = "3327" > < /td>
    < td
id = "LC3327"
class
= "blob-code blob-code-inner js-file-line" > list < span
class
= "pl-k" >= < /span> [];</
td >
< /tr>
< tr >
< td
id = "L3328"
class
= "blob-num js-line-number"
data - line - number = "3328" > < /td>
    < td
id = "LC3328"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3329"
class
= "blob-num js-line-number"
data - line - number = "3329" > < /td>
    < td
id = "LC3329"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise, this object is spent</span></td>
    < /tr>
    < tr >
    < td
id = "L3330"
class
= "blob-num js-line-number"
data - line - number = "3330" > < /td>
    < td
id = "LC3330"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3331"
class
= "blob-num js-line-number"
data - line - number = "3331" > < /td>
    < td
id = "LC3331"
class
= "blob-code blob-code-inner js-file-line" > list < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3332"
class
= "blob-num js-line-number"
data - line - number = "3332" > < /td>
    < td
id = "LC3332"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3333"
class
= "blob-num js-line-number"
data - line - number = "3333" > < /td>
    < td
id = "LC3333"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3334"
class
= "blob-num js-line-number"
data - line - number = "3334" > < /td>
    < td
id = "LC3334"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3335"
class
= "blob-num js-line-number"
data - line - number = "3335" > < /td>
    < td
id = "LC3335"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3336"
class
= "blob-num js-line-number"
data - line - number = "3336" > < /td>
    < td
id = "LC3336"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Actual Callbacks object</span></td>
    < /tr>
    < tr >
    < td
id = "L3337"
class
= "blob-num js-line-number"
data - line - number = "3337" > < /td>
    < td
id = "LC3337"
class
= "blob-code blob-code-inner js-file-line" > self < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L3338"
class
= "blob-num js-line-number"
data - line - number = "3338" > < /td>
    < td
id = "LC3338"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3339"
class
= "blob-num js-line-number"
data - line - number = "3339" > < /td>
    < td
id = "LC3339"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add a callback or a collection of callbacks to the list</span></td>
    < /tr>
    < tr >
    < td
id = "L3340"
class
= "blob-num js-line-number"
data - line - number = "3340" > < /td>
    < td
id = "LC3340"
class
= "blob-code blob-code-inner js-file-line" > add < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3341"
class
= "blob-num js-line-number"
data - line - number = "3341" > < /td>
    < td
id = "LC3341"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( list ) {</
td >
< /tr>
< tr >
< td
id = "L3342"
class
= "blob-num js-line-number"
data - line - number = "3342" > < /td>
    < td
id = "LC3342"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3343"
class
= "blob-num js-line-number"
data - line - number = "3343" > < /td>
    < td
id = "LC3343"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If we have memory from a past run, we should fire after adding</span></td>
    < /tr>
    < tr >
    < td
id = "L3344"
class
= "blob-num js-line-number"
data - line - number = "3344" > < /td>
    < td
id = "LC3344"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( memory <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>firing ) {</
td >
< /tr>
< tr >
< td
id = "L3345"
class
= "blob-num js-line-number"
data - line - number = "3345" > < /td>
    < td
id = "LC3345"
class
= "blob-code blob-code-inner js-file-line" > firingIndex < span
class
= "pl-k" >= < /span> list<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > - < /span> <span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3346"
class
= "blob-num js-line-number"
data - line - number = "3346" > < /td>
    < td
id = "LC3346"
class
= "blob-code blob-code-inner js-file-line" > queue < span
class
= "pl-k" >
.<
/span>push( memory );</
td >
< /tr>
< tr >
< td
id = "L3347"
class
= "blob-num js-line-number"
data - line - number = "3347" > < /td>
    < td
id = "LC3347"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3348"
class
= "blob-num js-line-number"
data - line - number = "3348" > < /td>
    < td
id = "LC3348"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3349"
class
= "blob-num js-line-number"
data - line - number = "3349" > < /td>
    < td
id = "LC3349"
class
= "blob-code blob-code-inner js-file-line" > (function add(args) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3350"
class
    = "blob-num js-line-number"
    data - line - number = "3350" > < /td>
        < td
    id = "LC3350"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>each( args, function( _, arg ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3351"
class
    = "blob-num js-line-number"
    data - line - number = "3351" > < /td>
        < td
    id = "LC3351"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > isFunction(arg)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3352"
class
    = "blob-num js-line-number"
    data - line - number = "3352" > < /td>
        < td
    id = "LC3352"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > options < span
class
    = "pl-k" >
.<
    /span>unique <span class="pl-k">||</s
    pan > < span
class
    = "pl-k" > ! < /span>self<span class="pl-k">.</s
    pan > has(arg)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3353"
class
    = "blob-num js-line-number"
    data - line - number = "3353" > < /td>
        < td
    id = "LC3353"
class
    = "blob-code blob-code-inner js-file-line" > list < span
class
    = "pl-k" >
.<
    /span>push( arg );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3354"
class
    = "blob-num js-line-number"
    data - line - number = "3354" > < /td>
        < td
    id = "LC3354"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3355"
class
= "blob-num js-line-number"
data - line - number = "3355" > < /td>
    < td
id = "LC3355"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (arg < span
class
= "pl-k" > &amp;&amp; < /span> arg<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &amp;&amp; < /span> jQuery<span class="pl-k">.</s
pan > type(arg) < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L3356"
class
= "blob-num js-line-number"
data - line - number = "3356" > < /td>
    < td
id = "LC3356"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3357"
class
= "blob-num js-line-number"
data - line - number = "3357" > < /td>
    < td
id = "LC3357"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Inspect recursively</span></td>
    < /tr>
    < tr >
    < td
id = "L3358"
class
= "blob-num js-line-number"
data - line - number = "3358" > < /td>
    < td
id = "LC3358"
class
= "blob-code blob-code-inner js-file-line" > add(arg);
<
/td>
< /tr>
< tr >
< td
id = "L3359"
class
= "blob-num js-line-number"
data - line - number = "3359" > < /td>
    < td
id = "LC3359"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3360"
class
= "blob-num js-line-number"
data - line - number = "3360" > < /td>
    < td
id = "LC3360"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3361"
class
= "blob-num js-line-number"
data - line - number = "3361" > < /td>
    < td
id = "LC3361"
class
= "blob-code blob-code-inner js-file-line" >
} )
(arguments);
<
/td>
< /tr>
< tr >
< td
id = "L3362"
class
= "blob-num js-line-number"
data - line - number = "3362" > < /td>
    < td
id = "LC3362"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3363"
class
= "blob-num js-line-number"
data - line - number = "3363" > < /td>
    < td
id = "LC3363"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( memory <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>firing ) {</
td >
< /tr>
< tr >
< td
id = "L3364"
class
= "blob-num js-line-number"
data - line - number = "3364" > < /td>
    < td
id = "LC3364"
class
= "blob-code blob-code-inner js-file-line" > fire();
<
/td>
< /tr>
< tr >
< td
id = "L3365"
class
= "blob-num js-line-number"
data - line - number = "3365" > < /td>
    < td
id = "LC3365"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3366"
class
= "blob-num js-line-number"
data - line - number = "3366" > < /td>
    < td
id = "LC3366"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3367"
class
= "blob-num js-line-number"
data - line - number = "3367" > < /td>
    < td
id = "LC3367"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3368"
class
= "blob-num js-line-number"
data - line - number = "3368" > < /td>
    < td
id = "LC3368"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3369"
class
= "blob-num js-line-number"
data - line - number = "3369" > < /td>
    < td
id = "LC3369"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3370"
class
= "blob-num js-line-number"
data - line - number = "3370" > < /td>
    < td
id = "LC3370"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove a callback from the list</span></td>
    < /tr>
    < tr >
    < td
id = "L3371"
class
= "blob-num js-line-number"
data - line - number = "3371" > < /td>
    < td
id = "LC3371"
class
= "blob-code blob-code-inner js-file-line" > remove < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3372"
class
= "blob-num js-line-number"
data - line - number = "3372" > < /td>
    < td
id = "LC3372"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( arguments, function( _, arg ) {</
td >
< /tr>
< tr >
< td
id = "L3373"
class
= "blob-num js-line-number"
data - line - number = "3373" > < /td>
    < td
id = "LC3373"
class
= "blob-code blob-code-inner js-file-line" >
var index;
<
/td>
< /tr>
< tr >
< td
id = "L3374"
class
= "blob-num js-line-number"
data - line - number = "3374" > < /td>
    < td
id = "LC3374"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ( index <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>inArray( arg, list, index ) ) <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3375"
class
    = "blob-num js-line-number"
    data - line - number = "3375" > < /td>
        < td
    id = "LC3375"
class
    = "blob-code blob-code-inner js-file-line" > list < span
class
    = "pl-k" >
.<
    /span>splice( index, <span class="pl-c1">1</s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3376"
class
= "blob-num js-line-number"
data - line - number = "3376" > < /td>
    < td
id = "LC3376"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3377"
class
= "blob-num js-line-number"
data - line - number = "3377" > < /td>
    < td
id = "LC3377"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle firing indexes</span></td>
    < /tr>
    < tr >
    < td
id = "L3378"
class
= "blob-num js-line-number"
data - line - number = "3378" > < /td>
    < td
id = "LC3378"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( index <span class="pl-k">&lt;=</s
pan > firingIndex
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3379"
class
    = "blob-num js-line-number"
    data - line - number = "3379" > < /td>
        < td
    id = "LC3379"
class
    = "blob-code blob-code-inner js-file-line" > firingIndex < span
class
    = "pl-k" > -- < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3380"
class
    = "blob-num js-line-number"
    data - line - number = "3380" > < /td>
        < td
    id = "LC3380"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3381"
class
= "blob-num js-line-number"
data - line - number = "3381" > < /td>
    < td
id = "LC3381"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3382"
class
= "blob-num js-line-number"
data - line - number = "3382" > < /td>
    < td
id = "LC3382"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3383"
class
= "blob-num js-line-number"
data - line - number = "3383" > < /td>
    < td
id = "LC3383"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3384"
class
= "blob-num js-line-number"
data - line - number = "3384" > < /td>
    < td
id = "LC3384"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3385"
class
= "blob-num js-line-number"
data - line - number = "3385" > < /td>
    < td
id = "LC3385"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3386"
class
= "blob-num js-line-number"
data - line - number = "3386" > < /td>
    < td
id = "LC3386"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check if a given callback is in the list.</span></td>
    < /tr>
    < tr >
    < td
id = "L3387"
class
= "blob-num js-line-number"
data - line - number = "3387" > < /td>
    < td
id = "LC3387"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If no argument is given, return whether or not list has callbacks attached.</span></td>
    < /tr>
    < tr >
    < td
id = "L3388"
class
= "blob-num js-line-number"
data - line - number = "3388" > < /td>
    < td
id = "LC3388"
class
= "blob-code blob-code-inner js-file-line" > has < span
class
= "pl-k" >
:<
/span> function( fn ) {</
td >
< /tr>
< tr >
< td
id = "L3389"
class
= "blob-num js-line-number"
data - line - number = "3389" > < /td>
    < td
id = "LC3389"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> fn <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3390"
class
= "blob-num js-line-number"
data - line - number = "3390" > < /td>
    < td
id = "LC3390"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>inArray( fn, list ) <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan > < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L3391"
class
= "blob-num js-line-number"
data - line - number = "3391" > < /td>
    < td
id = "LC3391"
class
= "blob-code blob-code-inner js-file-line" > list < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">&gt;</s
pan > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L3392"
class
= "blob-num js-line-number"
data - line - number = "3392" > < /td>
    < td
id = "LC3392"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3393"
class
= "blob-num js-line-number"
data - line - number = "3393" > < /td>
    < td
id = "LC3393"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3394"
class
= "blob-num js-line-number"
data - line - number = "3394" > < /td>
    < td
id = "LC3394"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove all callbacks from the list</span></td>
    < /tr>
    < tr >
    < td
id = "L3395"
class
= "blob-num js-line-number"
data - line - number = "3395" > < /td>
    < td
id = "LC3395"
class
= "blob-code blob-code-inner js-file-line" > empty < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3396"
class
= "blob-num js-line-number"
data - line - number = "3396" > < /td>
    < td
id = "LC3396"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( list ) {</
td >
< /tr>
< tr >
< td
id = "L3397"
class
= "blob-num js-line-number"
data - line - number = "3397" > < /td>
    < td
id = "LC3397"
class
= "blob-code blob-code-inner js-file-line" > list < span
class
= "pl-k" >= < /span> [];</
td >
< /tr>
< tr >
< td
id = "L3398"
class
= "blob-num js-line-number"
data - line - number = "3398" > < /td>
    < td
id = "LC3398"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3399"
class
= "blob-num js-line-number"
data - line - number = "3399" > < /td>
    < td
id = "LC3399"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3400"
class
= "blob-num js-line-number"
data - line - number = "3400" > < /td>
    < td
id = "LC3400"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3401"
class
= "blob-num js-line-number"
data - line - number = "3401" > < /td>
    < td
id = "LC3401"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3402"
class
= "blob-num js-line-number"
data - line - number = "3402" > < /td>
    < td
id = "LC3402"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Disable .fire and .add</span></td>
    < /tr>
    < tr >
    < td
id = "L3403"
class
= "blob-num js-line-number"
data - line - number = "3403" > < /td>
    < td
id = "LC3403"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Abort any current/pending executions</span></td>
    < /tr>
    < tr >
    < td
id = "L3404"
class
= "blob-num js-line-number"
data - line - number = "3404" > < /td>
    < td
id = "LC3404"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Clear all callbacks and values</span></td>
    < /tr>
    < tr >
    < td
id = "L3405"
class
= "blob-num js-line-number"
data - line - number = "3405" > < /td>
    < td
id = "LC3405"
class
= "blob-code blob-code-inner js-file-line" > disable < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3406"
class
= "blob-num js-line-number"
data - line - number = "3406" > < /td>
    < td
id = "LC3406"
class
= "blob-code blob-code-inner js-file-line" > locked < span
class
= "pl-k" >= < /span> queue <span class="pl-k">=</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L3407"
class
= "blob-num js-line-number"
data - line - number = "3407" > < /td>
    < td
id = "LC3407"
class
= "blob-code blob-code-inner js-file-line" > list < span
class
= "pl-k" >= < /span> memory <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L3408"
class
= "blob-num js-line-number"
data - line - number = "3408" > < /td>
    < td
id = "LC3408"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3409"
class
= "blob-num js-line-number"
data - line - number = "3409" > < /td>
    < td
id = "LC3409"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3410"
class
= "blob-num js-line-number"
data - line - number = "3410" > < /td>
    < td
id = "LC3410"
class
= "blob-code blob-code-inner js-file-line" > disabled < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3411"
class
= "blob-num js-line-number"
data - line - number = "3411" > < /td>
    < td
id = "LC3411"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">!</s
pan > list;
<
/td>
< /tr>
< tr >
< td
id = "L3412"
class
= "blob-num js-line-number"
data - line - number = "3412" > < /td>
    < td
id = "LC3412"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3413"
class
= "blob-num js-line-number"
data - line - number = "3413" > < /td>
    < td
id = "LC3413"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3414"
class
= "blob-num js-line-number"
data - line - number = "3414" > < /td>
    < td
id = "LC3414"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Disable .fire</span></td>
    < /tr>
    < tr >
    < td
id = "L3415"
class
= "blob-num js-line-number"
data - line - number = "3415" > < /td>
    < td
id = "LC3415"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Also disable .add unless we have memory (since it would have no effect)</span></td>
    < /tr>
    < tr >
    < td
id = "L3416"
class
= "blob-num js-line-number"
data - line - number = "3416" > < /td>
    < td
id = "LC3416"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Abort any pending executions</span></td>
    < /tr>
    < tr >
    < td
id = "L3417"
class
= "blob-num js-line-number"
data - line - number = "3417" > < /td>
    < td
id = "LC3417"
class
= "blob-code blob-code-inner js-file-line" > lock < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3418"
class
= "blob-num js-line-number"
data - line - number = "3418" > < /td>
    < td
id = "LC3418"
class
= "blob-code blob-code-inner js-file-line" > locked < span
class
= "pl-k" >= < /span> queue <span class="pl-k">=</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L3419"
class
= "blob-num js-line-number"
data - line - number = "3419" > < /td>
    < td
id = "LC3419"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > memory < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
pan > firing
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3420"
class
    = "blob-num js-line-number"
    data - line - number = "3420" > < /td>
        < td
    id = "LC3420"
class
    = "blob-code blob-code-inner js-file-line" > list < span
class
    = "pl-k" >= < /span> memory <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span><span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3421"
class
    = "blob-num js-line-number"
    data - line - number = "3421" > < /td>
        < td
    id = "LC3421"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3422"
class
= "blob-num js-line-number"
data - line - number = "3422" > < /td>
    < td
id = "LC3422"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3423"
class
= "blob-num js-line-number"
data - line - number = "3423" > < /td>
    < td
id = "LC3423"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3424"
class
= "blob-num js-line-number"
data - line - number = "3424" > < /td>
    < td
id = "LC3424"
class
= "blob-code blob-code-inner js-file-line" > locked < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3425"
class
= "blob-num js-line-number"
data - line - number = "3425" > < /td>
    < td
id = "LC3425"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">!!</s
pan > locked;
<
/td>
< /tr>
< tr >
< td
id = "L3426"
class
= "blob-num js-line-number"
data - line - number = "3426" > < /td>
    < td
id = "LC3426"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3427"
class
= "blob-num js-line-number"
data - line - number = "3427" > < /td>
    < td
id = "LC3427"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3428"
class
= "blob-num js-line-number"
data - line - number = "3428" > < /td>
    < td
id = "LC3428"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Call all callbacks with the given context and arguments</span></td>
    < /tr>
    < tr >
    < td
id = "L3429"
class
= "blob-num js-line-number"
data - line - number = "3429" > < /td>
    < td
id = "LC3429"
class
= "blob-code blob-code-inner js-file-line" > fireWith < span
class
= "pl-k" >
:<
/span> function( context, args ) {</
td >
< /tr>
< tr >
< td
id = "L3430"
class
= "blob-num js-line-number"
data - line - number = "3430" > < /td>
    < td
id = "LC3430"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > locked
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3431"
class
    = "blob-num js-line-number"
    data - line - number = "3431" > < /td>
        < td
    id = "LC3431"
class
    = "blob-code blob-code-inner js-file-line" > args < span
class
    = "pl-k" >= < /span> args <span class="pl-k">||</s
    pan > [];
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3432"
class
    = "blob-num js-line-number"
    data - line - number = "3432" > < /td>
        < td
    id = "LC3432"
class
    = "blob-code blob-code-inner js-file-line" > args < span
class
    = "pl-k" >= < /span> [ context, args<span class="pl-k">.</span>slice <span class="pl-k">?</span> args<span class="pl-k">.</span>slice() <span class="pl-k">:</span> args ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L3433"
class
    = "blob-num js-line-number"
    data - line - number = "3433" > < /td>
        < td
    id = "LC3433"
class
    = "blob-code blob-code-inner js-file-line" > queue < span
class
    = "pl-k" >
.<
    /span>push( args );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3434"
class
    = "blob-num js-line-number"
    data - line - number = "3434" > < /td>
        < td
    id = "LC3434"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > firing
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3435"
class
    = "blob-num js-line-number"
    data - line - number = "3435" > < /td>
        < td
    id = "LC3435"
class
    = "blob-code blob-code-inner js-file-line" > fire();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3436"
class
    = "blob-num js-line-number"
    data - line - number = "3436" > < /td>
        < td
    id = "LC3436"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3437"
class
= "blob-num js-line-number"
data - line - number = "3437" > < /td>
    < td
id = "LC3437"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3438"
class
= "blob-num js-line-number"
data - line - number = "3438" > < /td>
    < td
id = "LC3438"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3439"
class
= "blob-num js-line-number"
data - line - number = "3439" > < /td>
    < td
id = "LC3439"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3440"
class
= "blob-num js-line-number"
data - line - number = "3440" > < /td>
    < td
id = "LC3440"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3441"
class
= "blob-num js-line-number"
data - line - number = "3441" > < /td>
    < td
id = "LC3441"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Call all the callbacks with the given arguments</span></td>
    < /tr>
    < tr >
    < td
id = "L3442"
class
= "blob-num js-line-number"
data - line - number = "3442" > < /td>
    < td
id = "LC3442"
class
= "blob-code blob-code-inner js-file-line" > fire < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3443"
class
= "blob-num js-line-number"
data - line - number = "3443" > < /td>
    < td
id = "LC3443"
class
= "blob-code blob-code-inner js-file-line" > self < span
class
= "pl-k" >
.<
/span>fireWith( <span class="pl-c1">this</s
pan >, arguments
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3444"
class
= "blob-num js-line-number"
data - line - number = "3444" > < /td>
    < td
id = "LC3444"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3445"
class
= "blob-num js-line-number"
data - line - number = "3445" > < /td>
    < td
id = "LC3445"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3446"
class
= "blob-num js-line-number"
data - line - number = "3446" > < /td>
    < td
id = "LC3446"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3447"
class
= "blob-num js-line-number"
data - line - number = "3447" > < /td>
    < td
id = "LC3447"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> To know if the callbacks have already been called at least once</span></td>
    < /tr>
    < tr >
    < td
id = "L3448"
class
= "blob-num js-line-number"
data - line - number = "3448" > < /td>
    < td
id = "LC3448"
class
= "blob-code blob-code-inner js-file-line" > fired < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3449"
class
= "blob-num js-line-number"
data - line - number = "3449" > < /td>
    < td
id = "LC3449"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">!!</s
pan > fired;
<
/td>
< /tr>
< tr >
< td
id = "L3450"
class
= "blob-num js-line-number"
data - line - number = "3450" > < /td>
    < td
id = "LC3450"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3451"
class
= "blob-num js-line-number"
data - line - number = "3451" > < /td>
    < td
id = "LC3451"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3452"
class
= "blob-num js-line-number"
data - line - number = "3452" > < /td>
    < td
id = "LC3452"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3453"
class
= "blob-num js-line-number"
data - line - number = "3453" > < /td>
    < td
id = "LC3453"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> self;</
td >
< /tr>
< tr >
< td
id = "L3454"
class
= "blob-num js-line-number"
data - line - number = "3454" > < /td>
    < td
id = "LC3454"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3455"
class
= "blob-num js-line-number"
data - line - number = "3455" > < /td>
    < td
id = "LC3455"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3456"
class
= "blob-num js-line-number"
data - line - number = "3456" > < /td>
    < td
id = "LC3456"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3457"
class
= "blob-num js-line-number"
data - line - number = "3457" > < /td>
    < td
id = "LC3457"
class
= "blob-code blob-code-inner js-file-line" > function Identity(v) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L3458"
    class
        = "blob-num js-line-number"
        data - line - number = "3458" > < /td>
            < td
        id = "LC3458"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> v;</
        td >
        < /tr>
        < tr >
        < td
        id = "L3459"
    class
        = "blob-num js-line-number"
        data - line - number = "3459" > < /td>
            < td
        id = "LC3459"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L3460"
class
= "blob-num js-line-number"
data - line - number = "3460" > < /td>
    < td
id = "LC3460"
class
= "blob-code blob-code-inner js-file-line" > function Thrower(ex) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L3461"
    class
        = "blob-num js-line-number"
        data - line - number = "3461" > < /td>
            < td
        id = "LC3461"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        throw
    <
        /span> ex;</
        td >
        < /tr>
        < tr >
        < td
        id = "L3462"
    class
        = "blob-num js-line-number"
        data - line - number = "3462" > < /td>
            < td
        id = "LC3462"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L3463"
class
= "blob-num js-line-number"
data - line - number = "3463" > < /td>
    < td
id = "LC3463"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3464"
class
= "blob-num js-line-number"
data - line - number = "3464" > < /td>
    < td
id = "LC3464"
class
= "blob-code blob-code-inner js-file-line" > function adoptValue(value, resolve, reject) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3465"
class
    = "blob-num js-line-number"
    data - line - number = "3465" > < /td>
        < td
    id = "LC3465"
class
    = "blob-code blob-code-inner js-file-line" >
    var method;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3466"
class
    = "blob-num js-line-number"
    data - line - number = "3466" > < /td>
        < td
    id = "LC3466"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3467"
class
    = "blob-num js-line-number"
    data - line - number = "3467" > < /td>
        < td
    id = "LC3467"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    try
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3468"
class
    = "blob-num js-line-number"
    data - line - number = "3468" > < /td>
        < td
    id = "LC3468"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3469"
class
    = "blob-num js-line-number"
    data - line - number = "3469" > < /td>
        < td
    id = "LC3469"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Check for promise aspect first to privilege synchronous behavior</span></td>
        < /tr>
        < tr >
        < td
    id = "L3470"
class
    = "blob-num js-line-number"
    data - line - number = "3470" > < /td>
        < td
    id = "LC3470"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( value <span class="pl-k">&amp;&amp;</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>isFunction( ( method <span class="pl-k">=</s
    pan > value < span
class
    = "pl-k" >
.<
    /span>promise ) ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3471"
class
    = "blob-num js-line-number"
    data - line - number = "3471" > < /td>
        < td
    id = "LC3471"
class
    = "blob-code blob-code-inner js-file-line" > method < span
class
    = "pl-k" >
.<
    /span>call( value )<span class="pl-k">.</s
    pan > done(resolve) < span
class
    = "pl-k" >
.<
    /span>fail( reject );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3472"
class
    = "blob-num js-line-number"
    data - line - number = "3472" > < /td>
        < td
    id = "LC3472"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3473"
class
    = "blob-num js-line-number"
    data - line - number = "3473" > < /td>
        < td
    id = "LC3473"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Other thenables</span></td>
        < /tr>
        < tr >
        < td
    id = "L3474"
class
    = "blob-num js-line-number"
    data - line - number = "3474" > < /td>
        < td
    id = "LC3474"
class
    = "blob-code blob-code-inner js-file-line" >
} < span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (value < span
class
= "pl-k" > &amp;&amp; < /span> jQuery<span class="pl-k">.</s
pan > isFunction((method < span
class
= "pl-k" >= < /span> value<span class="pl-k">.</s
pan > then
) ) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3475"
class
    = "blob-num js-line-number"
    data - line - number = "3475" > < /td>
        < td
    id = "LC3475"
class
    = "blob-code blob-code-inner js-file-line" > method < span
class
    = "pl-k" >
.<
    /span>call( value, resolve, reject );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3476"
class
    = "blob-num js-line-number"
    data - line - number = "3476" > < /td>
        < td
    id = "LC3476"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3477"
class
    = "blob-num js-line-number"
    data - line - number = "3477" > < /td>
        < td
    id = "LC3477"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Other non-thenables</span></td>
        < /tr>
        < tr >
        < td
    id = "L3478"
class
    = "blob-num js-line-number"
    data - line - number = "3478" > < /td>
        < td
    id = "LC3478"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3479"
class
= "blob-num js-line-number"
data - line - number = "3479" > < /td>
    < td
id = "LC3479"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3480"
class
= "blob-num js-line-number"
data - line - number = "3480" > < /td>
    < td
id = "LC3480"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android 4.0 only</span></td>
    < /tr>
    < tr >
    < td
id = "L3481"
class
= "blob-num js-line-number"
data - line - number = "3481" > < /td>
    < td
id = "LC3481"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Strict mode functions invoked without .call/.apply get global-object context</span></td>
    < /tr>
    < tr >
    < td
id = "L3482"
class
= "blob-num js-line-number"
data - line - number = "3482" > < /td>
    < td
id = "LC3482"
class
= "blob-code blob-code-inner js-file-line" > resolve < span
class
= "pl-k" >
.<
/span>call( undefined, value );</
td >
< /tr>
< tr >
< td
id = "L3483"
class
= "blob-num js-line-number"
data - line - number = "3483" > < /td>
    < td
id = "LC3483"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3484"
class
= "blob-num js-line-number"
data - line - number = "3484" > < /td>
    < td
id = "LC3484"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3485"
class
= "blob-num js-line-number"
data - line - number = "3485" > < /td>
    < td
id = "LC3485"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> For Promises/A+, convert exceptions into rejections</span></td>
    < /tr>
    < tr >
    < td
id = "L3486"
class
= "blob-num js-line-number"
data - line - number = "3486" > < /td>
    < td
id = "LC3486"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Since jQuery.when doesn&#39;t unwrap thenables, we can skip the extra checks appearing in</span></td>
    < /tr>
    < tr >
    < td
id = "L3487"
class
= "blob-num js-line-number"
data - line - number = "3487" > < /td>
    < td
id = "LC3487"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Deferred#then to conditionally suppress rejection.</span></td>
    < /tr>
    < tr >
    < td
id = "L3488"
class
= "blob-num js-line-number"
data - line - number = "3488" > < /td>
    < td
id = "LC3488"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> ( value ) {</
td >
< /tr>
< tr >
< td
id = "L3489"
class
= "blob-num js-line-number"
data - line - number = "3489" > < /td>
    < td
id = "LC3489"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3490"
class
= "blob-num js-line-number"
data - line - number = "3490" > < /td>
    < td
id = "LC3490"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android 4.0 only</span></td>
    < /tr>
    < tr >
    < td
id = "L3491"
class
= "blob-num js-line-number"
data - line - number = "3491" > < /td>
    < td
id = "LC3491"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Strict mode functions invoked without .call/.apply get global-object context</span></td>
    < /tr>
    < tr >
    < td
id = "L3492"
class
= "blob-num js-line-number"
data - line - number = "3492" > < /td>
    < td
id = "LC3492"
class
= "blob-code blob-code-inner js-file-line" > reject < span
class
= "pl-k" >
.<
/span>call( undefined, value );</
td >
< /tr>
< tr >
< td
id = "L3493"
class
= "blob-num js-line-number"
data - line - number = "3493" > < /td>
    < td
id = "LC3493"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3494"
class
= "blob-num js-line-number"
data - line - number = "3494" > < /td>
    < td
id = "LC3494"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3495"
class
= "blob-num js-line-number"
data - line - number = "3495" > < /td>
    < td
id = "LC3495"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3496"
class
= "blob-num js-line-number"
data - line - number = "3496" > < /td>
    < td
id = "LC3496"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L3497"
class
= "blob-num js-line-number"
data - line - number = "3497" > < /td>
    < td
id = "LC3497"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3498"
class
= "blob-num js-line-number"
data - line - number = "3498" > < /td>
    < td
id = "LC3498"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Deferred < /span><span class="pl-k">:</s
pan > function (func) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3499"
class
    = "blob-num js-line-number"
    data - line - number = "3499" > < /td>
        < td
    id = "LC3499"
class
    = "blob-code blob-code-inner js-file-line" >
    var tuples
<
    span
class
    = "pl-k" >= < /span> [</td>
      </tr>
      <tr>
        <td id="L3500" class="blob-num js-line-number" data-line-number="3500"></td>
        <td id="LC3500" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3501" class="blob-num js-line-number" data-line-number="3501"></td>
        <td id="LC3501" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> action, add listener, callbacks,</span></td>
      </tr>
      <tr>
        <td id="L3502" class="blob-num js-line-number" data-line-number="3502"></td>
        <td id="LC3502" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c"><span class="pl-c">//</span> ... .then handlers, argument index, [final state]</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L3503"
class
    = "blob-num js-line-number"
    data - line - number = "3503" > < /td>
        < td
    id = "LC3503"
class
    = "blob-code blob-code-inner js-file-line" > [ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>notify<span class="pl-pds">&quot;</s
    pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > progress < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    span
class
    = "pl-smi" > jQuery < span
class
    = "pl-k" >
.<
    /span>Callbacks</s
    pan > ( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>memory<span class="pl-pds">&quot;</s
    pan > < /span> ),</
    td >
    < /tr>
    < tr >
    < td
    id = "L3504"
class
    = "blob-num js-line-number"
    data - line - number = "3504" > < /td>
        < td
    id = "LC3504"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-smi" > jQuery < span
class
    = "pl-k" >
.<
    /span>Callbacks</s
    pan > ( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>memory<span class="pl-pds">&quot;</s
    pan > < /span> ), <span class="pl-c1">2</s
    pan >
],<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3505"
class
    = "blob-num js-line-number"
    data - line - number = "3505" > < /td>
        < td
    id = "LC3505"
class
    = "blob-code blob-code-inner js-file-line" > [ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>resolve<span class="pl-pds">&quot;</s
    pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > done < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    span
class
    = "pl-smi" > jQuery < span
class
    = "pl-k" >
.<
    /span>Callbacks</s
    pan > ( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>once memory<span class="pl-pds">&quot;</s
    pan > < /span> ),</
    td >
    < /tr>
    < tr >
    < td
    id = "L3506"
class
    = "blob-num js-line-number"
    data - line - number = "3506" > < /td>
        < td
    id = "LC3506"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-smi" > jQuery < span
class
    = "pl-k" >
.<
    /span>Callbacks</s
    pan > ( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>once memory<span class="pl-pds">&quot;</s
    pan > < /span> ), <span class="pl-c1">0</s
    pan >,
<
    span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>resolved<span class="pl-pds">&quot;</s
    pan > < /span> ],</
    td >
    < /tr>
    < tr >
    < td
    id = "L3507"
class
    = "blob-num js-line-number"
    data - line - number = "3507" > < /td>
        < td
    id = "LC3507"
class
    = "blob-code blob-code-inner js-file-line" > [ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>reject<span class="pl-pds">&quot;</s
    pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > fail < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    span
class
    = "pl-smi" > jQuery < span
class
    = "pl-k" >
.<
    /span>Callbacks</s
    pan > ( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>once memory<span class="pl-pds">&quot;</s
    pan > < /span> ),</
    td >
    < /tr>
    < tr >
    < td
    id = "L3508"
class
    = "blob-num js-line-number"
    data - line - number = "3508" > < /td>
        < td
    id = "LC3508"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-smi" > jQuery < span
class
    = "pl-k" >
.<
    /span>Callbacks</s
    pan > ( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>once memory<span class="pl-pds">&quot;</s
    pan > < /span> ), <span class="pl-c1">1</s
    pan >,
<
    span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>rejected<span class="pl-pds">&quot;</s
    pan > < /span> ]</
    td >
    < /tr>
    < tr >
    < td
    id = "L3509"
class
    = "blob-num js-line-number"
    data - line - number = "3509" > < /td>
        < td
    id = "LC3509"
class
    = "blob-code blob-code-inner js-file-line" >
],<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3510"
class
    = "blob-num js-line-number"
    data - line - number = "3510" > < /td>
        < td
    id = "LC3510"
class
    = "blob-code blob-code-inner js-file-line" > state < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > pending < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3511"
class
    = "blob-num js-line-number"
    data - line - number = "3511" > < /td>
        < td
    id = "LC3511"
class
    = "blob-code blob-code-inner js-file-line" > promise < span
class
    = "pl-k" >= < /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3512"
class
    = "blob-num js-line-number"
    data - line - number = "3512" > < /td>
        < td
    id = "LC3512"
class
    = "blob-code blob-code-inner js-file-line" > state < span
class
    = "pl-k" >
:<
    /span> function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3513"
class
    = "blob-num js-line-number"
    data - line - number = "3513" > < /td>
        < td
    id = "LC3513"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> state;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3514"
class
    = "blob-num js-line-number"
    data - line - number = "3514" > < /td>
        < td
    id = "LC3514"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L3515"
class
= "blob-num js-line-number"
data - line - number = "3515" > < /td>
    < td
id = "LC3515"
class
= "blob-code blob-code-inner js-file-line" > always < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L3516"
class
= "blob-num js-line-number"
data - line - number = "3516" > < /td>
    < td
id = "LC3516"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>done( arguments )<span class="pl-k">.</s
pan > fail(arguments);
<
/td>
< /tr>
< tr >
< td
id = "L3517"
class
= "blob-num js-line-number"
data - line - number = "3517" > < /td>
    < td
id = "LC3517"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3518"
class
= "blob-num js-line-number"
data - line - number = "3518" > < /td>
    < td
id = "LC3518"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3519"
class
= "blob-num js-line-number"
data - line - number = "3519" > < /td>
    < td
id = "LC3519"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>catch<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (fn) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3520"
class
    = "blob-num js-line-number"
    data - line - number = "3520" > < /td>
        < td
    id = "LC3520"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> promise<span class="pl-k">.</s
    pan > then( < span
class
    = "pl-c1" > null < /span>, fn );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3521"
class
    = "blob-num js-line-number"
    data - line - number = "3521" > < /td>
        < td
    id = "LC3521"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L3522"
class
= "blob-num js-line-number"
data - line - number = "3522" > < /td>
    < td
id = "LC3522"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3523"
class
= "blob-num js-line-number"
data - line - number = "3523" > < /td>
    < td
id = "LC3523"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Keep pipe for back-compat</span></td>
    < /tr>
    < tr >
    < td
id = "L3524"
class
= "blob-num js-line-number"
data - line - number = "3524" > < /td>
    < td
id = "LC3524"
class
= "blob-code blob-code-inner js-file-line" > pipe < span
class
= "pl-k" >
:<
/span> function( <span class="pl-c"><span class="pl-c">/ * < /span> fnDone, fnFail, fnProgress <span class="pl-c">*/ < /span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3525"
class
    = "blob-num js-line-number"
    data - line - number = "3525" > < /td>
        < td
    id = "LC3525"
class
    = "blob-code blob-code-inner js-file-line" >
    var fns
<
    span
class
    = "pl-k" >= < /span> arguments;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3526"
class
    = "blob-num js-line-number"
    data - line - number = "3526" > < /td>
        < td
    id = "LC3526"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3527"
class
    = "blob-num js-line-number"
    data - line - number = "3527" > < /td>
        < td
    id = "LC3527"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
    pan > Deferred < /span>( function( newDefer ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3528"
class
    = "blob-num js-line-number"
    data - line - number = "3528" > < /td>
        < td
    id = "LC3528"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>each( tuples, function( i, tuple ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3529"
class
    = "blob-num js-line-number"
    data - line - number = "3529" > < /td>
        < td
    id = "LC3529"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3530"
class
    = "blob-num js-line-number"
    data - line - number = "3530" > < /td>
        < td
    id = "LC3530"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Map tuples (progress, done, fail) to arguments (done, fail, progress)</span></td>
        < /tr>
        < tr >
        < td
    id = "L3531"
class
    = "blob-num js-line-number"
    data - line - number = "3531" > < /td>
        < td
    id = "LC3531"
class
    = "blob-code blob-code-inner js-file-line" >
    var fn
<
    span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > isFunction(fns[tuple[ < span
class
    = "pl-c1" > 4 < /span> ] ] ) <span class="pl-k">&amp;&amp;</s
    pan > fns[tuple[ < span
class
    = "pl-c1" > 4 < /span> ] ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L3532"
class
    = "blob-num js-line-number"
    data - line - number = "3532" > < /td>
        < td
    id = "LC3532"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3533"
class
    = "blob-num js-line-number"
    data - line - number = "3533" > < /td>
        < td
    id = "LC3533"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> deferred.progress(function() { bind to newDefer or newDefer.notify })</span></td>
        < /tr>
        < tr >
        < td
    id = "L3534"
class
    = "blob-num js-line-number"
    data - line - number = "3534" > < /td>
        < td
    id = "LC3534"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> deferred.done(function() { bind to newDefer or newDefer.resolve })</span></td>
        < /tr>
        < tr >
        < td
    id = "L3535"
class
    = "blob-num js-line-number"
    data - line - number = "3535" > < /td>
        < td
    id = "LC3535"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> deferred.fail(function() { bind to newDefer or newDefer.reject })</span></td>
        < /tr>
        < tr >
        < td
    id = "L3536"
class
    = "blob-num js-line-number"
    data - line - number = "3536" > < /td>
        < td
    id = "LC3536"
class
    = "blob-code blob-code-inner js-file-line" > deferred[tuple[ < span
class
    = "pl-c1" > 1 < /span> ] ]( function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3537"
class
    = "blob-num js-line-number"
    data - line - number = "3537" > < /td>
        < td
    id = "LC3537"
class
    = "blob-code blob-code-inner js-file-line" >
    var returned
<
    span
class
    = "pl-k" >= < /span> fn <span class="pl-k">&amp;&amp;</s
    pan > fn < span
class
    = "pl-k" >
.<
    /span>apply( <span class="pl-c1">this</s
    pan >, arguments
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3538"
class
    = "blob-num js-line-number"
    data - line - number = "3538" > < /td>
        < td
    id = "LC3538"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( returned <span class="pl-k">&amp;&amp;</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>isFunction( returned<span class="pl-k">.</s
    pan > promise
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3539"
class
    = "blob-num js-line-number"
    data - line - number = "3539" > < /td>
        < td
    id = "LC3539"
class
    = "blob-code blob-code-inner js-file-line" > returned < span
class
    = "pl-k" >
.<
    /span>promise()</
    td >
    < /tr>
    < tr >
    < td
    id = "L3540"
class
    = "blob-num js-line-number"
    data - line - number = "3540" > < /td>
        < td
    id = "LC3540"
class
    = "blob-code blob-code-inner js-file-line" >
.
    progress(newDefer < span
class
    = "pl-k" >
.<
    /span>notify )</
    td >
    < /tr>
    < tr >
    < td
    id = "L3541"
class
    = "blob-num js-line-number"
    data - line - number = "3541" > < /td>
        < td
    id = "LC3541"
class
    = "blob-code blob-code-inner js-file-line" >
.
    done(newDefer < span
class
    = "pl-k" >
.<
    /span>resolve )</
    td >
    < /tr>
    < tr >
    < td
    id = "L3542"
class
    = "blob-num js-line-number"
    data - line - number = "3542" > < /td>
        < td
    id = "LC3542"
class
    = "blob-code blob-code-inner js-file-line" >
.
    fail(newDefer < span
class
    = "pl-k" >
.<
    /span>reject );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3543"
class
    = "blob-num js-line-number"
    data - line - number = "3543" > < /td>
        < td
    id = "LC3543"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3544"
class
= "blob-num js-line-number"
data - line - number = "3544" > < /td>
    < td
id = "LC3544"
class
= "blob-code blob-code-inner js-file-line" > newDefer[tuple[ < span
class
= "pl-c1" > 0 < /span> ] <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>With<span class="pl-pds">&quot;</s
pan > < /span> ](</
td >
< /tr>
< tr >
< td
id = "L3545"
class
= "blob-num js-line-number"
data - line - number = "3545" > < /td>
    < td
id = "LC3545"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span>,</
td >
< /tr>
< tr >
< td
id = "L3546"
class
= "blob-num js-line-number"
data - line - number = "3546" > < /td>
    < td
id = "LC3546"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" > ?
<
/span> [ returned ] <span class="pl-k">:</s
pan > arguments < /td>
< /tr>
< tr >
< td
id = "L3547"
class
= "blob-num js-line-number"
data - line - number = "3547" > < /td>
    < td
id = "LC3547"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3548"
class
= "blob-num js-line-number"
data - line - number = "3548" > < /td>
    < td
id = "LC3548"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3549"
class
= "blob-num js-line-number"
data - line - number = "3549" > < /td>
    < td
id = "LC3549"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3550"
class
= "blob-num js-line-number"
data - line - number = "3550" > < /td>
    < td
id = "LC3550"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3551"
class
= "blob-num js-line-number"
data - line - number = "3551" > < /td>
    < td
id = "LC3551"
class
= "blob-code blob-code-inner js-file-line" > fns < span
class
= "pl-k" >= < /span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3552"
class
= "blob-num js-line-number"
data - line - number = "3552" > < /td>
    < td
id = "LC3552"
class
= "blob-code blob-code-inner js-file-line" >
} )<
span
class
= "pl-k" >
.<
/span>promise();</
td >
< /tr>
< tr >
< td
id = "L3553"
class
= "blob-num js-line-number"
data - line - number = "3553" > < /td>
    < td
id = "LC3553"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3554"
class
= "blob-num js-line-number"
data - line - number = "3554" > < /td>
    < td
id = "LC3554"
class
= "blob-code blob-code-inner js-file-line" > then < span
class
= "pl-k" >
:<
/span> function( onFulfilled, onRejected, onProgress ) {</
td >
< /tr>
< tr >
< td
id = "L3555"
class
= "blob-num js-line-number"
data - line - number = "3555" > < /td>
    < td
id = "LC3555"
class
= "blob-code blob-code-inner js-file-line" >
var maxDepth
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3556"
class
= "blob-num js-line-number"
data - line - number = "3556" > < /td>
    < td
id = "LC3556"
class
= "blob-code blob-code-inner js-file-line" > function resolve(depth, deferred, handler, special) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3557"
class
    = "blob-num js-line-number"
    data - line - number = "3557" > < /td>
        < td
    id = "LC3557"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3558"
class
    = "blob-num js-line-number"
    data - line - number = "3558" > < /td>
        < td
    id = "LC3558"
class
    = "blob-code blob-code-inner js-file-line" >
    var that
<
    span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3559"
class
    = "blob-num js-line-number"
    data - line - number = "3559" > < /td>
        < td
    id = "LC3559"
class
    = "blob-code blob-code-inner js-file-line" > args < span
class
    = "pl-k" >= < /span> arguments,</
    td >
    < /tr>
    < tr >
    < td
    id = "L3560"
class
    = "blob-num js-line-number"
    data - line - number = "3560" > < /td>
        < td
    id = "LC3560"
class
    = "blob-code blob-code-inner js-file-line" > mightThrow < span
class
    = "pl-k" >= < /span> function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3561"
class
    = "blob-num js-line-number"
    data - line - number = "3561" > < /td>
        < td
    id = "LC3561"
class
    = "blob-code blob-code-inner js-file-line" >
    var returned, then;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3562"
class
    = "blob-num js-line-number"
    data - line - number = "3562" > < /td>
        < td
    id = "LC3562"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3563"
class
    = "blob-num js-line-number"
    data - line - number = "3563" > < /td>
        < td
    id = "LC3563"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: Promises/A+ section 2.3.3.3.3</span></td>
        < /tr>
        < tr >
        < td
    id = "L3564"
class
    = "blob-num js-line-number"
    data - line - number = "3564" > < /td>
        < td
    id = "LC3564"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> https://promisesaplus.com/#point-59</span></td>
        < /tr>
        < tr >
        < td
    id = "L3565"
class
    = "blob-num js-line-number"
    data - line - number = "3565" > < /td>
        < td
    id = "LC3565"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Ignore double-resolution attempts</span></td>
        < /tr>
        < tr >
        < td
    id = "L3566"
class
    = "blob-num js-line-number"
    data - line - number = "3566" > < /td>
        < td
    id = "LC3566"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( depth <span class="pl-k">&lt;</s
    pan > maxDepth
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3567"
class
    = "blob-num js-line-number"
    data - line - number = "3567" > < /td>
        < td
    id = "LC3567"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3568"
class
    = "blob-num js-line-number"
    data - line - number = "3568" > < /td>
        < td
    id = "LC3568"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3569"
class
= "blob-num js-line-number"
data - line - number = "3569" > < /td>
    < td
id = "LC3569"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3570"
class
= "blob-num js-line-number"
data - line - number = "3570" > < /td>
    < td
id = "LC3570"
class
= "blob-code blob-code-inner js-file-line" > returned < span
class
= "pl-k" >= < /span> handler<span class="pl-k">.</s
pan > apply(that, args);
<
/td>
< /tr>
< tr >
< td
id = "L3571"
class
= "blob-num js-line-number"
data - line - number = "3571" > < /td>
    < td
id = "LC3571"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3572"
class
= "blob-num js-line-number"
data - line - number = "3572" > < /td>
    < td
id = "LC3572"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Promises/A+ section 2.3.1</span></td>
    < /tr>
    < tr >
    < td
id = "L3573"
class
= "blob-num js-line-number"
data - line - number = "3573" > < /td>
    < td
id = "LC3573"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://promisesaplus.com/#point-48</span></td>
    < /tr>
    < tr >
    < td
id = "L3574"
class
= "blob-num js-line-number"
data - line - number = "3574" > < /td>
    < td
id = "LC3574"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( returned <span class="pl-k">===</s
pan > deferred < span
class
= "pl-k" >
.<
/span>promise() ) {</
td >
< /tr>
< tr >
< td
id = "L3575"
class
= "blob-num js-line-number"
data - line - number = "3575" > < /td>
    < td
id = "LC3575"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
throw
<
/span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > TypeError < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > Thenable
self - resolution < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3576"
class
= "blob-num js-line-number"
data - line - number = "3576" > < /td>
    < td
id = "LC3576"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3577"
class
= "blob-num js-line-number"
data - line - number = "3577" > < /td>
    < td
id = "LC3577"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3578"
class
= "blob-num js-line-number"
data - line - number = "3578" > < /td>
    < td
id = "LC3578"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Promises/A+ sections 2.3.3.1, 3.5</span></td>
    < /tr>
    < tr >
    < td
id = "L3579"
class
= "blob-num js-line-number"
data - line - number = "3579" > < /td>
    < td
id = "LC3579"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://promisesaplus.com/#point-54</span></td>
    < /tr>
    < tr >
    < td
id = "L3580"
class
= "blob-num js-line-number"
data - line - number = "3580" > < /td>
    < td
id = "LC3580"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://promisesaplus.com/#point-75</span></td>
    < /tr>
    < tr >
    < td
id = "L3581"
class
= "blob-num js-line-number"
data - line - number = "3581" > < /td>
    < td
id = "LC3581"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Retrieve `then` only once</span></td>
    < /tr>
    < tr >
    < td
id = "L3582"
class
= "blob-num js-line-number"
data - line - number = "3582" > < /td>
    < td
id = "LC3582"
class
= "blob-code blob-code-inner js-file-line" > then < span
class
= "pl-k" >= < /span> returned <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3583"
class
= "blob-num js-line-number"
data - line - number = "3583" > < /td>
    < td
id = "LC3583"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3584"
class
= "blob-num js-line-number"
data - line - number = "3584" > < /td>
    < td
id = "LC3584"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Promises/A+ section 2.3.4</span></td>
    < /tr>
    < tr >
    < td
id = "L3585"
class
= "blob-num js-line-number"
data - line - number = "3585" > < /td>
    < td
id = "LC3585"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://promisesaplus.com/#point-64</span></td>
    < /tr>
    < tr >
    < td
id = "L3586"
class
= "blob-num js-line-number"
data - line - number = "3586" > < /td>
    < td
id = "LC3586"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Only check objects and functions for thenability</span></td>
    < /tr>
    < tr >
    < td
id = "L3587"
class
= "blob-num js-line-number"
data - line - number = "3587" > < /td>
    < td
id = "LC3587"
class
= "blob-code blob-code-inner js-file-line" > (typeof returned < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > object < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L3588"
class
= "blob-num js-line-number"
data - line - number = "3588" > < /td>
    < td
id = "LC3588"
class
= "blob-code blob-code-inner js-file-line" > typeof returned < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > function<span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L3589"
class
= "blob-num js-line-number"
data - line - number = "3589" > < /td>
    < td
id = "LC3589"
class
= "blob-code blob-code-inner js-file-line" > returned < span
class
= "pl-k" >
.<
/span>then;</
td >
< /tr>
< tr >
< td
id = "L3590"
class
= "blob-num js-line-number"
data - line - number = "3590" > < /td>
    < td
id = "LC3590"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3591"
class
= "blob-num js-line-number"
data - line - number = "3591" > < /td>
    < td
id = "LC3591"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle a returned thenable</span></td>
    < /tr>
    < tr >
    < td
id = "L3592"
class
= "blob-num js-line-number"
data - line - number = "3592" > < /td>
    < td
id = "LC3592"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(then)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3593"
class
    = "blob-num js-line-number"
    data - line - number = "3593" > < /td>
        < td
    id = "LC3593"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3594"
class
    = "blob-num js-line-number"
    data - line - number = "3594" > < /td>
        < td
    id = "LC3594"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Special processors (notify) just wait for resolution</span></td>
        < /tr>
        < tr >
        < td
    id = "L3595"
class
    = "blob-num js-line-number"
    data - line - number = "3595" > < /td>
        < td
    id = "LC3595"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( special ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3596"
class
    = "blob-num js-line-number"
    data - line - number = "3596" > < /td>
        < td
    id = "LC3596"
class
    = "blob-code blob-code-inner js-file-line" > then < span
class
    = "pl-k" >
.<
    /span>call(</
    td >
    < /tr>
    < tr >
    < td
    id = "L3597"
class
    = "blob-num js-line-number"
    data - line - number = "3597" > < /td>
        < td
    id = "LC3597"
class
    = "blob-code blob-code-inner js-file-line" > returned,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3598"
class
    = "blob-num js-line-number"
    data - line - number = "3598" > < /td>
        < td
    id = "LC3598"
class
    = "blob-code blob-code-inner js-file-line" > resolve(maxDepth, deferred, < span
class
    = "pl-smi" > Identity < /span>, special ),</
    td >
    < /tr>
    < tr >
    < td
    id = "L3599"
class
    = "blob-num js-line-number"
    data - line - number = "3599" > < /td>
        < td
    id = "LC3599"
class
    = "blob-code blob-code-inner js-file-line" > resolve(maxDepth, deferred, < span
class
    = "pl-smi" > Thrower < /span>, special )</
    td >
    < /tr>
    < tr >
    < td
    id = "L3600"
class
    = "blob-num js-line-number"
    data - line - number = "3600" > < /td>
        < td
    id = "LC3600"
class
    = "blob-code blob-code-inner js-file-line" >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3601"
class
    = "blob-num js-line-number"
    data - line - number = "3601" > < /td>
        < td
    id = "LC3601"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3602"
class
    = "blob-num js-line-number"
    data - line - number = "3602" > < /td>
        < td
    id = "LC3602"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Normal processors (resolve) also hook into progress</span></td>
        < /tr>
        < tr >
        < td
    id = "L3603"
class
    = "blob-num js-line-number"
    data - line - number = "3603" > < /td>
        < td
    id = "LC3603"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3604"
class
= "blob-num js-line-number"
data - line - number = "3604" > < /td>
    < td
id = "LC3604"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3605"
class
= "blob-num js-line-number"
data - line - number = "3605" > < /td>
    < td
id = "LC3605"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ...and disregard older resolution values</span></td>
    < /tr>
    < tr >
    < td
id = "L3606"
class
= "blob-num js-line-number"
data - line - number = "3606" > < /td>
    < td
id = "LC3606"
class
= "blob-code blob-code-inner js-file-line" > maxDepth < span
class
= "pl-k" > ++ < /span>;</
td >
< /tr>
< tr >
< td
id = "L3607"
class
= "blob-num js-line-number"
data - line - number = "3607" > < /td>
    < td
id = "LC3607"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3608"
class
= "blob-num js-line-number"
data - line - number = "3608" > < /td>
    < td
id = "LC3608"
class
= "blob-code blob-code-inner js-file-line" > then < span
class
= "pl-k" >
.<
/span>call(</
td >
< /tr>
< tr >
< td
id = "L3609"
class
= "blob-num js-line-number"
data - line - number = "3609" > < /td>
    < td
id = "LC3609"
class
= "blob-code blob-code-inner js-file-line" > returned,
<
/td>
< /tr>
< tr >
< td
id = "L3610"
class
= "blob-num js-line-number"
data - line - number = "3610" > < /td>
    < td
id = "LC3610"
class
= "blob-code blob-code-inner js-file-line" > resolve(maxDepth, deferred, < span
class
= "pl-smi" > Identity < /span>, special ),</
td >
< /tr>
< tr >
< td
id = "L3611"
class
= "blob-num js-line-number"
data - line - number = "3611" > < /td>
    < td
id = "LC3611"
class
= "blob-code blob-code-inner js-file-line" > resolve(maxDepth, deferred, < span
class
= "pl-smi" > Thrower < /span>, special ),</
td >
< /tr>
< tr >
< td
id = "L3612"
class
= "blob-num js-line-number"
data - line - number = "3612" > < /td>
    < td
id = "LC3612"
class
= "blob-code blob-code-inner js-file-line" > resolve(maxDepth, deferred, < span
class
= "pl-smi" > Identity < /span>,</
td >
< /tr>
< tr >
< td
id = "L3613"
class
= "blob-num js-line-number"
data - line - number = "3613" > < /td>
    < td
id = "LC3613"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>notifyWith )</
td >
< /tr>
< tr >
< td
id = "L3614"
class
= "blob-num js-line-number"
data - line - number = "3614" > < /td>
    < td
id = "LC3614"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3615"
class
= "blob-num js-line-number"
data - line - number = "3615" > < /td>
    < td
id = "LC3615"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3616"
class
= "blob-num js-line-number"
data - line - number = "3616" > < /td>
    < td
id = "LC3616"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3617"
class
= "blob-num js-line-number"
data - line - number = "3617" > < /td>
    < td
id = "LC3617"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle all other returned values</span></td>
    < /tr>
    < tr >
    < td
id = "L3618"
class
= "blob-num js-line-number"
data - line - number = "3618" > < /td>
    < td
id = "LC3618"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3619"
class
= "blob-num js-line-number"
data - line - number = "3619" > < /td>
    < td
id = "LC3619"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3620"
class
= "blob-num js-line-number"
data - line - number = "3620" > < /td>
    < td
id = "LC3620"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Only substitute handlers pass on context</span></td>
    < /tr>
    < tr >
    < td
id = "L3621"
class
= "blob-num js-line-number"
data - line - number = "3621" > < /td>
    < td
id = "LC3621"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> and multiple values (non-spec behavior)</span></td>
    < /tr>
    < tr >
    < td
id = "L3622"
class
= "blob-num js-line-number"
data - line - number = "3622" > < /td>
    < td
id = "LC3622"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( handler <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-smi">Identity</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3623"
class
    = "blob-num js-line-number"
    data - line - number = "3623" > < /td>
        < td
    id = "LC3623"
class
    = "blob-code blob-code-inner js-file-line" > that < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3624"
class
    = "blob-num js-line-number"
    data - line - number = "3624" > < /td>
        < td
    id = "LC3624"
class
    = "blob-code blob-code-inner js-file-line" > args < span
class
    = "pl-k" >= < /span> [ returned ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L3625"
class
    = "blob-num js-line-number"
    data - line - number = "3625" > < /td>
        < td
    id = "LC3625"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3626"
class
= "blob-num js-line-number"
data - line - number = "3626" > < /td>
    < td
id = "LC3626"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3627"
class
= "blob-num js-line-number"
data - line - number = "3627" > < /td>
    < td
id = "LC3627"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Process the value(s)</span></td>
    < /tr>
    < tr >
    < td
id = "L3628"
class
= "blob-num js-line-number"
data - line - number = "3628" > < /td>
    < td
id = "LC3628"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Default process is resolve</span></td>
    < /tr>
    < tr >
    < td
id = "L3629"
class
= "blob-num js-line-number"
data - line - number = "3629" > < /td>
    < td
id = "LC3629"
class
= "blob-code blob-code-inner js-file-line" > (special < span
class
= "pl-k" > || < /span> deferred<span class="pl-k">.</s
pan > resolveWith
)
(that, args);
<
/td>
< /tr>
< tr >
< td
id = "L3630"
class
= "blob-num js-line-number"
data - line - number = "3630" > < /td>
    < td
id = "LC3630"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3631"
class
= "blob-num js-line-number"
data - line - number = "3631" > < /td>
    < td
id = "LC3631"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3632"
class
= "blob-num js-line-number"
data - line - number = "3632" > < /td>
    < td
id = "LC3632"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3633"
class
= "blob-num js-line-number"
data - line - number = "3633" > < /td>
    < td
id = "LC3633"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Only normal processors (resolve) catch and reject exceptions</span></td>
    < /tr>
    < tr >
    < td
id = "L3634"
class
= "blob-num js-line-number"
data - line - number = "3634" > < /td>
    < td
id = "LC3634"
class
= "blob-code blob-code-inner js-file-line" > process < span
class
= "pl-k" >= < /span> special <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3635"
class
= "blob-num js-line-number"
data - line - number = "3635" > < /td>
    < td
id = "LC3635"
class
= "blob-code blob-code-inner js-file-line" > mightThrow < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L3636"
class
= "blob-num js-line-number"
data - line - number = "3636" > < /td>
    < td
id = "LC3636"
class
= "blob-code blob-code-inner js-file-line" > function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3637"
class
    = "blob-num js-line-number"
    data - line - number = "3637" > < /td>
        < td
    id = "LC3637"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    try
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3638"
class
    = "blob-num js-line-number"
    data - line - number = "3638" > < /td>
        < td
    id = "LC3638"
class
    = "blob-code blob-code-inner js-file-line" > mightThrow();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3639"
class
    = "blob-num js-line-number"
    data - line - number = "3639" > < /td>
        < td
    id = "LC3639"
class
    = "blob-code blob-code-inner js-file-line" >
} < span
class
= "pl-k" >
catch<
/span> ( e ) {</
td >
< /tr>
< tr >
< td
id = "L3640"
class
= "blob-num js-line-number"
data - line - number = "3640" > < /td>
    < td
id = "LC3640"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3641"
class
= "blob-num js-line-number"
data - line - number = "3641" > < /td>
    < td
id = "LC3641"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Deferred < /span><span class="pl-k">.</s
pan > exceptionHook
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3642"
class
    = "blob-num js-line-number"
    data - line - number = "3642" > < /td>
        < td
    id = "LC3642"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-smi" > jQuery < span
class
    = "pl-k" >
.<
    /span>Deferred</s
    pan > < span
class
    = "pl-k" >
.<
    /span>exceptionHook( e,</
    td >
    < /tr>
    < tr >
    < td
    id = "L3643"
class
    = "blob-num js-line-number"
    data - line - number = "3643" > < /td>
        < td
    id = "LC3643"
class
    = "blob-code blob-code-inner js-file-line" > process < span
class
    = "pl-k" >
.<
    /span>stackTrace );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3644"
class
    = "blob-num js-line-number"
    data - line - number = "3644" > < /td>
        < td
    id = "LC3644"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3645"
class
= "blob-num js-line-number"
data - line - number = "3645" > < /td>
    < td
id = "LC3645"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3646"
class
= "blob-num js-line-number"
data - line - number = "3646" > < /td>
    < td
id = "LC3646"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Promises/A+ section 2.3.3.3.4.1</span></td>
    < /tr>
    < tr >
    < td
id = "L3647"
class
= "blob-num js-line-number"
data - line - number = "3647" > < /td>
    < td
id = "LC3647"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://promisesaplus.com/#point-61</span></td>
    < /tr>
    < tr >
    < td
id = "L3648"
class
= "blob-num js-line-number"
data - line - number = "3648" > < /td>
    < td
id = "LC3648"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Ignore post-resolution exceptions</span></td>
    < /tr>
    < tr >
    < td
id = "L3649"
class
= "blob-num js-line-number"
data - line - number = "3649" > < /td>
    < td
id = "LC3649"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( depth <span class="pl-k">+</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">&gt;=</s
pan > maxDepth
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3650"
class
    = "blob-num js-line-number"
    data - line - number = "3650" > < /td>
        < td
    id = "LC3650"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3651"
class
    = "blob-num js-line-number"
    data - line - number = "3651" > < /td>
        < td
    id = "LC3651"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Only substitute handlers pass on context</span></td>
        < /tr>
        < tr >
        < td
    id = "L3652"
class
    = "blob-num js-line-number"
    data - line - number = "3652" > < /td>
        < td
    id = "LC3652"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> and multiple values (non-spec behavior)</span></td>
        < /tr>
        < tr >
        < td
    id = "L3653"
class
    = "blob-num js-line-number"
    data - line - number = "3653" > < /td>
        < td
    id = "LC3653"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( handler <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-smi">Thrower</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3654"
class
    = "blob-num js-line-number"
    data - line - number = "3654" > < /td>
        < td
    id = "LC3654"
class
    = "blob-code blob-code-inner js-file-line" > that < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3655"
class
    = "blob-num js-line-number"
    data - line - number = "3655" > < /td>
        < td
    id = "LC3655"
class
    = "blob-code blob-code-inner js-file-line" > args < span
class
    = "pl-k" >= < /span> [ e ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L3656"
class
    = "blob-num js-line-number"
    data - line - number = "3656" > < /td>
        < td
    id = "LC3656"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3657"
class
= "blob-num js-line-number"
data - line - number = "3657" > < /td>
    < td
id = "LC3657"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3658"
class
= "blob-num js-line-number"
data - line - number = "3658" > < /td>
    < td
id = "LC3658"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>rejectWith( that, args );</
td >
< /tr>
< tr >
< td
id = "L3659"
class
= "blob-num js-line-number"
data - line - number = "3659" > < /td>
    < td
id = "LC3659"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3660"
class
= "blob-num js-line-number"
data - line - number = "3660" > < /td>
    < td
id = "LC3660"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3661"
class
= "blob-num js-line-number"
data - line - number = "3661" > < /td>
    < td
id = "LC3661"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3662"
class
= "blob-num js-line-number"
data - line - number = "3662" > < /td>
    < td
id = "LC3662"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3663"
class
= "blob-num js-line-number"
data - line - number = "3663" > < /td>
    < td
id = "LC3663"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Promises/A+ section 2.3.3.3.1</span></td>
    < /tr>
    < tr >
    < td
id = "L3664"
class
= "blob-num js-line-number"
data - line - number = "3664" > < /td>
    < td
id = "LC3664"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://promisesaplus.com/#point-57</span></td>
    < /tr>
    < tr >
    < td
id = "L3665"
class
= "blob-num js-line-number"
data - line - number = "3665" > < /td>
    < td
id = "LC3665"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Re-resolve promises immediately to dodge false rejection from</span></td>
    < /tr>
    < tr >
    < td
id = "L3666"
class
= "blob-num js-line-number"
data - line - number = "3666" > < /td>
    < td
id = "LC3666"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> subsequent errors</span></td>
    < /tr>
    < tr >
    < td
id = "L3667"
class
= "blob-num js-line-number"
data - line - number = "3667" > < /td>
    < td
id = "LC3667"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( depth ) {</
td >
< /tr>
< tr >
< td
id = "L3668"
class
= "blob-num js-line-number"
data - line - number = "3668" > < /td>
    < td
id = "LC3668"
class
= "blob-code blob-code-inner js-file-line" > process();
<
/td>
< /tr>
< tr >
< td
id = "L3669"
class
= "blob-num js-line-number"
data - line - number = "3669" > < /td>
    < td
id = "LC3669"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3670"
class
= "blob-num js-line-number"
data - line - number = "3670" > < /td>
    < td
id = "LC3670"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3671"
class
= "blob-num js-line-number"
data - line - number = "3671" > < /td>
    < td
id = "LC3671"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Call an optional hook to record the stack, in case of exception</span></td>
    < /tr>
    < tr >
    < td
id = "L3672"
class
= "blob-num js-line-number"
data - line - number = "3672" > < /td>
    < td
id = "LC3672"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> since it&#39;s otherwise lost when execution goes async</span></td>
    < /tr>
    < tr >
    < td
id = "L3673"
class
= "blob-num js-line-number"
data - line - number = "3673" > < /td>
    < td
id = "LC3673"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Deferred < /span><span class="pl-k">.</s
pan > getStackHook
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3674"
class
    = "blob-num js-line-number"
    data - line - number = "3674" > < /td>
        < td
    id = "LC3674"
class
    = "blob-code blob-code-inner js-file-line" > process < span
class
    = "pl-k" >
.<
    /span>stackTrace <span class="pl-k">=</s
    pan > < span
class
    = "pl-smi" > jQuery < span
class
    = "pl-k" >
.<
    /span>Deferred</s
    pan > < span
class
    = "pl-k" >
.<
    /span>getStackHook();</
    td >
    < /tr>
    < tr >
    < td
    id = "L3675"
class
    = "blob-num js-line-number"
    data - line - number = "3675" > < /td>
        < td
    id = "LC3675"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3676"
class
= "blob-num js-line-number"
data - line - number = "3676" > < /td>
    < td
id = "LC3676"
class
= "blob-code blob-code-inner js-file-line" > window < span
class
= "pl-k" >
.<
/span>setTimeout( process );</
td >
< /tr>
< tr >
< td
id = "L3677"
class
= "blob-num js-line-number"
data - line - number = "3677" > < /td>
    < td
id = "LC3677"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3678"
class
= "blob-num js-line-number"
data - line - number = "3678" > < /td>
    < td
id = "LC3678"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3679"
class
= "blob-num js-line-number"
data - line - number = "3679" > < /td>
    < td
id = "LC3679"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3680"
class
= "blob-num js-line-number"
data - line - number = "3680" > < /td>
    < td
id = "LC3680"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3681"
class
= "blob-num js-line-number"
data - line - number = "3681" > < /td>
    < td
id = "LC3681"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Deferred < /span>( function( newDefer ) {</
td >
< /tr>
< tr >
< td
id = "L3682"
class
= "blob-num js-line-number"
data - line - number = "3682" > < /td>
    < td
id = "LC3682"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3683"
class
= "blob-num js-line-number"
data - line - number = "3683" > < /td>
    < td
id = "LC3683"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> progress_handlers.add( ... )</span></td>
    < /tr>
    < tr >
    < td
id = "L3684"
class
= "blob-num js-line-number"
data - line - number = "3684" > < /td>
    < td
id = "LC3684"
class
= "blob-code blob-code-inner js-file-line" > tuples[ < span
class
= "pl-c1" > 0 < /span> ][ <span class="pl-c1">3</span> ]<span class="pl-k">.</s
pan > add( < /td>
< /tr>
< tr >
< td
id = "L3685"
class
= "blob-num js-line-number"
data - line - number = "3685" > < /td>
    < td
id = "LC3685"
class
= "blob-code blob-code-inner js-file-line" > resolve( < /td>
    < /tr>
    < tr >
    < td
id = "L3686"
class
= "blob-num js-line-number"
data - line - number = "3686" > < /td>
    < td
id = "LC3686"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > 0 < /span>,</
td >
< /tr>
< tr >
< td
id = "L3687"
class
= "blob-num js-line-number"
data - line - number = "3687" > < /td>
    < td
id = "LC3687"
class
= "blob-code blob-code-inner js-file-line" > newDefer,
<
/td>
< /tr>
< tr >
< td
id = "L3688"
class
= "blob-num js-line-number"
data - line - number = "3688" > < /td>
    < td
id = "LC3688"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>isFunction( onProgress ) <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3689"
class
= "blob-num js-line-number"
data - line - number = "3689" > < /td>
    < td
id = "LC3689"
class
= "blob-code blob-code-inner js-file-line" > onProgress < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L3690"
class
= "blob-num js-line-number"
data - line - number = "3690" > < /td>
    < td
id = "LC3690"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Identity < /span>,</
td >
< /tr>
< tr >
< td
id = "L3691"
class
= "blob-num js-line-number"
data - line - number = "3691" > < /td>
    < td
id = "LC3691"
class
= "blob-code blob-code-inner js-file-line" > newDefer < span
class
= "pl-k" >
.<
/span>notifyWith</
td >
< /tr>
< tr >
< td
id = "L3692"
class
= "blob-num js-line-number"
data - line - number = "3692" > < /td>
    < td
id = "LC3692"
class
= "blob-code blob-code-inner js-file-line" >
)<
/td>
< /tr>
< tr >
< td
id = "L3693"
class
= "blob-num js-line-number"
data - line - number = "3693" > < /td>
    < td
id = "LC3693"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3694"
class
= "blob-num js-line-number"
data - line - number = "3694" > < /td>
    < td
id = "LC3694"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3695"
class
= "blob-num js-line-number"
data - line - number = "3695" > < /td>
    < td
id = "LC3695"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> fulfilled_handlers.add( ... )</span></td>
    < /tr>
    < tr >
    < td
id = "L3696"
class
= "blob-num js-line-number"
data - line - number = "3696" > < /td>
    < td
id = "LC3696"
class
= "blob-code blob-code-inner js-file-line" > tuples[ < span
class
= "pl-c1" > 1 < /span> ][ <span class="pl-c1">3</span> ]<span class="pl-k">.</s
pan > add( < /td>
< /tr>
< tr >
< td
id = "L3697"
class
= "blob-num js-line-number"
data - line - number = "3697" > < /td>
    < td
id = "LC3697"
class
= "blob-code blob-code-inner js-file-line" > resolve( < /td>
    < /tr>
    < tr >
    < td
id = "L3698"
class
= "blob-num js-line-number"
data - line - number = "3698" > < /td>
    < td
id = "LC3698"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > 0 < /span>,</
td >
< /tr>
< tr >
< td
id = "L3699"
class
= "blob-num js-line-number"
data - line - number = "3699" > < /td>
    < td
id = "LC3699"
class
= "blob-code blob-code-inner js-file-line" > newDefer,
<
/td>
< /tr>
< tr >
< td
id = "L3700"
class
= "blob-num js-line-number"
data - line - number = "3700" > < /td>
    < td
id = "LC3700"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>isFunction( onFulfilled ) <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3701"
class
= "blob-num js-line-number"
data - line - number = "3701" > < /td>
    < td
id = "LC3701"
class
= "blob-code blob-code-inner js-file-line" > onFulfilled < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L3702"
class
= "blob-num js-line-number"
data - line - number = "3702" > < /td>
    < td
id = "LC3702"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Identity < /span></
td >
< /tr>
< tr >
< td
id = "L3703"
class
= "blob-num js-line-number"
data - line - number = "3703" > < /td>
    < td
id = "LC3703"
class
= "blob-code blob-code-inner js-file-line" >
)<
/td>
< /tr>
< tr >
< td
id = "L3704"
class
= "blob-num js-line-number"
data - line - number = "3704" > < /td>
    < td
id = "LC3704"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3705"
class
= "blob-num js-line-number"
data - line - number = "3705" > < /td>
    < td
id = "LC3705"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3706"
class
= "blob-num js-line-number"
data - line - number = "3706" > < /td>
    < td
id = "LC3706"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> rejected_handlers.add( ... )</span></td>
    < /tr>
    < tr >
    < td
id = "L3707"
class
= "blob-num js-line-number"
data - line - number = "3707" > < /td>
    < td
id = "LC3707"
class
= "blob-code blob-code-inner js-file-line" > tuples[ < span
class
= "pl-c1" > 2 < /span> ][ <span class="pl-c1">3</span> ]<span class="pl-k">.</s
pan > add( < /td>
< /tr>
< tr >
< td
id = "L3708"
class
= "blob-num js-line-number"
data - line - number = "3708" > < /td>
    < td
id = "LC3708"
class
= "blob-code blob-code-inner js-file-line" > resolve( < /td>
    < /tr>
    < tr >
    < td
id = "L3709"
class
= "blob-num js-line-number"
data - line - number = "3709" > < /td>
    < td
id = "LC3709"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > 0 < /span>,</
td >
< /tr>
< tr >
< td
id = "L3710"
class
= "blob-num js-line-number"
data - line - number = "3710" > < /td>
    < td
id = "LC3710"
class
= "blob-code blob-code-inner js-file-line" > newDefer,
<
/td>
< /tr>
< tr >
< td
id = "L3711"
class
= "blob-num js-line-number"
data - line - number = "3711" > < /td>
    < td
id = "LC3711"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>isFunction( onRejected ) <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L3712"
class
= "blob-num js-line-number"
data - line - number = "3712" > < /td>
    < td
id = "LC3712"
class
= "blob-code blob-code-inner js-file-line" > onRejected < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L3713"
class
= "blob-num js-line-number"
data - line - number = "3713" > < /td>
    < td
id = "LC3713"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Thrower < /span></
td >
< /tr>
< tr >
< td
id = "L3714"
class
= "blob-num js-line-number"
data - line - number = "3714" > < /td>
    < td
id = "LC3714"
class
= "blob-code blob-code-inner js-file-line" >
)<
/td>
< /tr>
< tr >
< td
id = "L3715"
class
= "blob-num js-line-number"
data - line - number = "3715" > < /td>
    < td
id = "LC3715"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3716"
class
= "blob-num js-line-number"
data - line - number = "3716" > < /td>
    < td
id = "LC3716"
class
= "blob-code blob-code-inner js-file-line" >
} )<
span
class
= "pl-k" >
.<
/span>promise();</
td >
< /tr>
< tr >
< td
id = "L3717"
class
= "blob-num js-line-number"
data - line - number = "3717" > < /td>
    < td
id = "LC3717"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3718"
class
= "blob-num js-line-number"
data - line - number = "3718" > < /td>
    < td
id = "LC3718"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3719"
class
= "blob-num js-line-number"
data - line - number = "3719" > < /td>
    < td
id = "LC3719"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get a promise for this deferred</span></td>
    < /tr>
    < tr >
    < td
id = "L3720"
class
= "blob-num js-line-number"
data - line - number = "3720" > < /td>
    < td
id = "LC3720"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If obj is provided, the promise aspect is added to the object</span></td>
    < /tr>
    < tr >
    < td
id = "L3721"
class
= "blob-num js-line-number"
data - line - number = "3721" > < /td>
    < td
id = "LC3721"
class
= "blob-code blob-code-inner js-file-line" > promise < span
class
= "pl-k" >
:<
/span> function( obj ) {</
td >
< /tr>
< tr >
< td
id = "L3722"
class
= "blob-num js-line-number"
data - line - number = "3722" > < /td>
    < td
id = "LC3722"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> obj <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>extend( obj, promise ) <span class="pl-k">:</s
pan > promise;
<
/td>
< /tr>
< tr >
< td
id = "L3723"
class
= "blob-num js-line-number"
data - line - number = "3723" > < /td>
    < td
id = "LC3723"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3724"
class
= "blob-num js-line-number"
data - line - number = "3724" > < /td>
    < td
id = "LC3724"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3725"
class
= "blob-num js-line-number"
data - line - number = "3725" > < /td>
    < td
id = "LC3725"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >= < /span> {};</
td >
< /tr>
< tr >
< td
id = "L3726"
class
= "blob-num js-line-number"
data - line - number = "3726" > < /td>
    < td
id = "LC3726"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3727"
class
= "blob-num js-line-number"
data - line - number = "3727" > < /td>
    < td
id = "LC3727"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add list-specific methods</span></td>
    < /tr>
    < tr >
    < td
id = "L3728"
class
= "blob-num js-line-number"
data - line - number = "3728" > < /td>
    < td
id = "LC3728"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( tuples, function( i, tuple ) {</
td >
< /tr>
< tr >
< td
id = "L3729"
class
= "blob-num js-line-number"
data - line - number = "3729" > < /td>
    < td
id = "LC3729"
class
= "blob-code blob-code-inner js-file-line" >
var list
<
span
class
= "pl-k" >= < /span> tuple[ <span class="pl-c1">2</span> ],</
td >
< /tr>
< tr >
< td
id = "L3730"
class
= "blob-num js-line-number"
data - line - number = "3730" > < /td>
    < td
id = "LC3730"
class
= "blob-code blob-code-inner js-file-line" > stateString < span
class
= "pl-k" >= < /span> tuple[ <span class="pl-c1">5</span> ];</
td >
< /tr>
< tr >
< td
id = "L3731"
class
= "blob-num js-line-number"
data - line - number = "3731" > < /td>
    < td
id = "LC3731"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3732"
class
= "blob-num js-line-number"
data - line - number = "3732" > < /td>
    < td
id = "LC3732"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> promise.progress = list.add</span></td>
    < /tr>
    < tr >
    < td
id = "L3733"
class
= "blob-num js-line-number"
data - line - number = "3733" > < /td>
    < td
id = "LC3733"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> promise.done = list.add</span></td>
    < /tr>
    < tr >
    < td
id = "L3734"
class
= "blob-num js-line-number"
data - line - number = "3734" > < /td>
    < td
id = "LC3734"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> promise.fail = list.add</span></td>
    < /tr>
    < tr >
    < td
id = "L3735"
class
= "blob-num js-line-number"
data - line - number = "3735" > < /td>
    < td
id = "LC3735"
class
= "blob-code blob-code-inner js-file-line" > promise[tuple[ < span
class
= "pl-c1" > 1 < /span> ] ] <span class="pl-k">=</s
pan > list < span
class
= "pl-k" >
.<
/span>add;</
td >
< /tr>
< tr >
< td
id = "L3736"
class
= "blob-num js-line-number"
data - line - number = "3736" > < /td>
    < td
id = "LC3736"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3737"
class
= "blob-num js-line-number"
data - line - number = "3737" > < /td>
    < td
id = "LC3737"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle state</span></td>
    < /tr>
    < tr >
    < td
id = "L3738"
class
= "blob-num js-line-number"
data - line - number = "3738" > < /td>
    < td
id = "LC3738"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( stateString ) {</
td >
< /tr>
< tr >
< td
id = "L3739"
class
= "blob-num js-line-number"
data - line - number = "3739" > < /td>
    < td
id = "LC3739"
class
= "blob-code blob-code-inner js-file-line" > list < span
class
= "pl-k" >
.<
/span>add(</
td >
< /tr>
< tr >
< td
id = "L3740"
class
= "blob-num js-line-number"
data - line - number = "3740" > < /td>
    < td
id = "LC3740"
class
= "blob-code blob-code-inner js-file-line" > function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3741"
class
    = "blob-num js-line-number"
    data - line - number = "3741" > < /td>
        < td
    id = "LC3741"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3742"
class
    = "blob-num js-line-number"
    data - line - number = "3742" > < /td>
        < td
    id = "LC3742"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> state = &quot;resolved&quot; (i.e., fulfilled)</span></td>
        < /tr>
        < tr >
        < td
    id = "L3743"
class
    = "blob-num js-line-number"
    data - line - number = "3743" > < /td>
        < td
    id = "LC3743"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> state = &quot;rejected&quot;</span></td>
        < /tr>
        < tr >
        < td
    id = "L3744"
class
    = "blob-num js-line-number"
    data - line - number = "3744" > < /td>
        < td
    id = "LC3744"
class
    = "blob-code blob-code-inner js-file-line" > state < span
class
    = "pl-k" >= < /span> stateString;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3745"
class
    = "blob-num js-line-number"
    data - line - number = "3745" > < /td>
        < td
    id = "LC3745"
class
    = "blob-code blob-code-inner js-file-line" >
},
<
/td>
< /tr>
< tr >
< td
id = "L3746"
class
= "blob-num js-line-number"
data - line - number = "3746" > < /td>
    < td
id = "LC3746"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3747"
class
= "blob-num js-line-number"
data - line - number = "3747" > < /td>
    < td
id = "LC3747"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> rejected_callbacks.disable</span></td>
    < /tr>
    < tr >
    < td
id = "L3748"
class
= "blob-num js-line-number"
data - line - number = "3748" > < /td>
    < td
id = "LC3748"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> fulfilled_callbacks.disable</span></td>
    < /tr>
    < tr >
    < td
id = "L3749"
class
= "blob-num js-line-number"
data - line - number = "3749" > < /td>
    < td
id = "LC3749"
class
= "blob-code blob-code-inner js-file-line" > tuples[ < span
class
= "pl-c1" > 3 < /span> <span class="pl-k">-</s
pan > i
]
[ < span
class
= "pl-c1" > 2 < /span> ]<span class="pl-k">.</s
pan > disable,
<
/td>
< /tr>
< tr >
< td
id = "L3750"
class
= "blob-num js-line-number"
data - line - number = "3750" > < /td>
    < td
id = "LC3750"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3751"
class
= "blob-num js-line-number"
data - line - number = "3751" > < /td>
    < td
id = "LC3751"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> progress_callbacks.lock</span></td>
    < /tr>
    < tr >
    < td
id = "L3752"
class
= "blob-num js-line-number"
data - line - number = "3752" > < /td>
    < td
id = "LC3752"
class
= "blob-code blob-code-inner js-file-line" > tuples[ < span
class
= "pl-c1" > 0 < /span> ][ <span class="pl-c1">2</span> ]<span class="pl-k">.</s
pan > lock < /td>
< /tr>
< tr >
< td
id = "L3753"
class
= "blob-num js-line-number"
data - line - number = "3753" > < /td>
    < td
id = "LC3753"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3754"
class
= "blob-num js-line-number"
data - line - number = "3754" > < /td>
    < td
id = "LC3754"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3755"
class
= "blob-num js-line-number"
data - line - number = "3755" > < /td>
    < td
id = "LC3755"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3756"
class
= "blob-num js-line-number"
data - line - number = "3756" > < /td>
    < td
id = "LC3756"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> progress_handlers.fire</span></td>
    < /tr>
    < tr >
    < td
id = "L3757"
class
= "blob-num js-line-number"
data - line - number = "3757" > < /td>
    < td
id = "LC3757"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> fulfilled_handlers.fire</span></td>
    < /tr>
    < tr >
    < td
id = "L3758"
class
= "blob-num js-line-number"
data - line - number = "3758" > < /td>
    < td
id = "LC3758"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> rejected_handlers.fire</span></td>
    < /tr>
    < tr >
    < td
id = "L3759"
class
= "blob-num js-line-number"
data - line - number = "3759" > < /td>
    < td
id = "LC3759"
class
= "blob-code blob-code-inner js-file-line" > list < span
class
= "pl-k" >
.<
/span>add( tuple[ <span class="pl-c1">3</span> ]<span class="pl-k">.</s
pan > fire
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3760"
class
= "blob-num js-line-number"
data - line - number = "3760" > < /td>
    < td
id = "LC3760"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3761"
class
= "blob-num js-line-number"
data - line - number = "3761" > < /td>
    < td
id = "LC3761"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> deferred.notify = function() { deferred.notifyWith(...) }</span></td>
    < /tr>
    < tr >
    < td
id = "L3762"
class
= "blob-num js-line-number"
data - line - number = "3762" > < /td>
    < td
id = "LC3762"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> deferred.resolve = function() { deferred.resolveWith(...) }</span></td>
    < /tr>
    < tr >
    < td
id = "L3763"
class
= "blob-num js-line-number"
data - line - number = "3763" > < /td>
    < td
id = "LC3763"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> deferred.reject = function() { deferred.rejectWith(...) }</span></td>
    < /tr>
    < tr >
    < td
id = "L3764"
class
= "blob-num js-line-number"
data - line - number = "3764" > < /td>
    < td
id = "LC3764"
class
= "blob-code blob-code-inner js-file-line" > deferred[tuple[ < span
class
= "pl-c1" > 0 < /span> ] ] <span class="pl-k">=</s
pan > function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3765"
class
    = "blob-num js-line-number"
    data - line - number = "3765" > < /td>
        < td
    id = "LC3765"
class
    = "blob-code blob-code-inner js-file-line" > deferred[tuple[ < span
class
    = "pl-c1" > 0 < /span> ] <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>With<span class="pl-pds">&quot;</s
    pan > < /span> ]( <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >= == < /span> deferred <span class="pl-k">?</s
    pan > undefined < span
class
    = "pl-k" >
:<
    /span> <span class="pl-c1">this</s
    pan >, arguments
);
<
/td>
< /tr>
< tr >
< td
id = "L3766"
class
= "blob-num js-line-number"
data - line - number = "3766" > < /td>
    < td
id = "LC3766"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3767"
class
= "blob-num js-line-number"
data - line - number = "3767" > < /td>
    < td
id = "LC3767"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3768"
class
= "blob-num js-line-number"
data - line - number = "3768" > < /td>
    < td
id = "LC3768"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3769"
class
= "blob-num js-line-number"
data - line - number = "3769" > < /td>
    < td
id = "LC3769"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> deferred.notifyWith = list.fireWith</span></td>
    < /tr>
    < tr >
    < td
id = "L3770"
class
= "blob-num js-line-number"
data - line - number = "3770" > < /td>
    < td
id = "LC3770"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> deferred.resolveWith = list.fireWith</span></td>
    < /tr>
    < tr >
    < td
id = "L3771"
class
= "blob-num js-line-number"
data - line - number = "3771" > < /td>
    < td
id = "LC3771"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> deferred.rejectWith = list.fireWith</span></td>
    < /tr>
    < tr >
    < td
id = "L3772"
class
= "blob-num js-line-number"
data - line - number = "3772" > < /td>
    < td
id = "LC3772"
class
= "blob-code blob-code-inner js-file-line" > deferred[tuple[ < span
class
= "pl-c1" > 0 < /span> ] <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>With<span class="pl-pds">&quot;</s
pan > < /span> ] <span class="pl-k">=</s
pan > list < span
class
= "pl-k" >
.<
/span>fireWith;</
td >
< /tr>
< tr >
< td
id = "L3773"
class
= "blob-num js-line-number"
data - line - number = "3773" > < /td>
    < td
id = "LC3773"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3774"
class
= "blob-num js-line-number"
data - line - number = "3774" > < /td>
    < td
id = "LC3774"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3775"
class
= "blob-num js-line-number"
data - line - number = "3775" > < /td>
    < td
id = "LC3775"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make the deferred a promise</span></td>
    < /tr>
    < tr >
    < td
id = "L3776"
class
= "blob-num js-line-number"
data - line - number = "3776" > < /td>
    < td
id = "LC3776"
class
= "blob-code blob-code-inner js-file-line" > promise < span
class
= "pl-k" >
.<
/span>promise( deferred );</
td >
< /tr>
< tr >
< td
id = "L3777"
class
= "blob-num js-line-number"
data - line - number = "3777" > < /td>
    < td
id = "LC3777"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3778"
class
= "blob-num js-line-number"
data - line - number = "3778" > < /td>
    < td
id = "LC3778"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Call given func if any</span></td>
    < /tr>
    < tr >
    < td
id = "L3779"
class
= "blob-num js-line-number"
data - line - number = "3779" > < /td>
    < td
id = "LC3779"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( func ) {</
td >
< /tr>
< tr >
< td
id = "L3780"
class
= "blob-num js-line-number"
data - line - number = "3780" > < /td>
    < td
id = "LC3780"
class
= "blob-code blob-code-inner js-file-line" > func < span
class
= "pl-k" >
.<
/span>call( deferred, deferred );</
td >
< /tr>
< tr >
< td
id = "L3781"
class
= "blob-num js-line-number"
data - line - number = "3781" > < /td>
    < td
id = "LC3781"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3782"
class
= "blob-num js-line-number"
data - line - number = "3782" > < /td>
    < td
id = "LC3782"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3783"
class
= "blob-num js-line-number"
data - line - number = "3783" > < /td>
    < td
id = "LC3783"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> All done!</span></td>
    < /tr>
    < tr >
    < td
id = "L3784"
class
= "blob-num js-line-number"
data - line - number = "3784" > < /td>
    < td
id = "LC3784"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> deferred;</
td >
< /tr>
< tr >
< td
id = "L3785"
class
= "blob-num js-line-number"
data - line - number = "3785" > < /td>
    < td
id = "LC3785"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3786"
class
= "blob-num js-line-number"
data - line - number = "3786" > < /td>
    < td
id = "LC3786"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3787"
class
= "blob-num js-line-number"
data - line - number = "3787" > < /td>
    < td
id = "LC3787"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Deferred helper</span></td>
    < /tr>
    < tr >
    < td
id = "L3788"
class
= "blob-num js-line-number"
data - line - number = "3788" > < /td>
    < td
id = "LC3788"
class
= "blob-code blob-code-inner js-file-line" > when < span
class
= "pl-k" >
:<
/span> function( singleValue ) {</
td >
< /tr>
< tr >
< td
id = "L3789"
class
= "blob-num js-line-number"
data - line - number = "3789" > < /td>
    < td
id = "LC3789"
class
= "blob-code blob-code-inner js-file-line" >
var <
/td>
< /tr>
< tr >
< td
id = "L3790"
class
= "blob-num js-line-number"
data - line - number = "3790" > < /td>
    < td
id = "LC3790"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3791"
class
= "blob-num js-line-number"
data - line - number = "3791" > < /td>
    < td
id = "LC3791"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> count of uncompleted subordinates</span></td>
    < /tr>
    < tr >
    < td
id = "L3792"
class
= "blob-num js-line-number"
data - line - number = "3792" > < /td>
    < td
id = "LC3792"
class
= "blob-code blob-code-inner js-file-line" > remaining < span
class
= "pl-k" >= < /span> arguments<span class="pl-k">.</s
pan > length,
<
/td>
< /tr>
< tr >
< td
id = "L3793"
class
= "blob-num js-line-number"
data - line - number = "3793" > < /td>
    < td
id = "LC3793"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3794"
class
= "blob-num js-line-number"
data - line - number = "3794" > < /td>
    < td
id = "LC3794"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> count of unprocessed arguments</span></td>
    < /tr>
    < tr >
    < td
id = "L3795"
class
= "blob-num js-line-number"
data - line - number = "3795" > < /td>
    < td
id = "LC3795"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> remaining,</
td >
< /tr>
< tr >
< td
id = "L3796"
class
= "blob-num js-line-number"
data - line - number = "3796" > < /td>
    < td
id = "LC3796"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3797"
class
= "blob-num js-line-number"
data - line - number = "3797" > < /td>
    < td
id = "LC3797"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> subordinate fulfillment data</span></td>
    < /tr>
    < tr >
    < td
id = "L3798"
class
= "blob-num js-line-number"
data - line - number = "3798" > < /td>
    < td
id = "LC3798"
class
= "blob-code blob-code-inner js-file-line" > resolveContexts < span
class
= "pl-k" >= < /span> Array( i ),</
td >
< /tr>
< tr >
< td
id = "L3799"
class
= "blob-num js-line-number"
data - line - number = "3799" > < /td>
    < td
id = "LC3799"
class
= "blob-code blob-code-inner js-file-line" > resolveValues < span
class
= "pl-k" >= < /span> slice<span class="pl-k">.</s
pan > call(arguments),
<
/td>
< /tr>
< tr >
< td
id = "L3800"
class
= "blob-num js-line-number"
data - line - number = "3800" > < /td>
    < td
id = "LC3800"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3801"
class
= "blob-num js-line-number"
data - line - number = "3801" > < /td>
    < td
id = "LC3801"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> the master Deferred</span></td>
    < /tr>
    < tr >
    < td
id = "L3802"
class
= "blob-num js-line-number"
data - line - number = "3802" > < /td>
    < td
id = "LC3802"
class
= "blob-code blob-code-inner js-file-line" > master < span
class
= "pl-k" >= < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Deferred < /span>(),</
td >
< /tr>
< tr >
< td
id = "L3803"
class
= "blob-num js-line-number"
data - line - number = "3803" > < /td>
    < td
id = "LC3803"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3804"
class
= "blob-num js-line-number"
data - line - number = "3804" > < /td>
    < td
id = "LC3804"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> subordinate callback factory</span></td>
    < /tr>
    < tr >
    < td
id = "L3805"
class
= "blob-num js-line-number"
data - line - number = "3805" > < /td>
    < td
id = "LC3805"
class
= "blob-code blob-code-inner js-file-line" > updateFunc < span
class
= "pl-k" >= < /span> function( i ) {</
td >
< /tr>
< tr >
< td
id = "L3806"
class
= "blob-num js-line-number"
data - line - number = "3806" > < /td>
    < td
id = "LC3806"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> function( value ) {</
td >
< /tr>
< tr >
< td
id = "L3807"
class
= "blob-num js-line-number"
data - line - number = "3807" > < /td>
    < td
id = "LC3807"
class
= "blob-code blob-code-inner js-file-line" > resolveContexts[i] < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3808"
class
= "blob-num js-line-number"
data - line - number = "3808" > < /td>
    < td
id = "LC3808"
class
= "blob-code blob-code-inner js-file-line" > resolveValues[i] < span
class
= "pl-k" >= < /span> arguments<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > ?
<
/span> slice<span class="pl-k">.</s
pan > call(arguments) < span
class
= "pl-k" >
:<
/span> value;</
td >
< /tr>
< tr >
< td
id = "L3809"
class
= "blob-num js-line-number"
data - line - number = "3809" > < /td>
    < td
id = "LC3809"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > ( < span
class
= "pl-k" > -- < /span>remaining ) ) {</
td >
< /tr>
< tr >
< td
id = "L3810"
class
= "blob-num js-line-number"
data - line - number = "3810" > < /td>
    < td
id = "LC3810"
class
= "blob-code blob-code-inner js-file-line" > master < span
class
= "pl-k" >
.<
/span>resolveWith( resolveContexts, resolveValues );</
td >
< /tr>
< tr >
< td
id = "L3811"
class
= "blob-num js-line-number"
data - line - number = "3811" > < /td>
    < td
id = "LC3811"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3812"
class
= "blob-num js-line-number"
data - line - number = "3812" > < /td>
    < td
id = "LC3812"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3813"
class
= "blob-num js-line-number"
data - line - number = "3813" > < /td>
    < td
id = "LC3813"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3814"
class
= "blob-num js-line-number"
data - line - number = "3814" > < /td>
    < td
id = "LC3814"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3815"
class
= "blob-num js-line-number"
data - line - number = "3815" > < /td>
    < td
id = "LC3815"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Single- and empty arguments are adopted like Promise.resolve</span></td>
    < /tr>
    < tr >
    < td
id = "L3816"
class
= "blob-num js-line-number"
data - line - number = "3816" > < /td>
    < td
id = "LC3816"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( remaining <span class="pl-k">&lt;=</s
pan > < span
class
= "pl-c1" > 1 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L3817"
class
= "blob-num js-line-number"
data - line - number = "3817" > < /td>
    < td
id = "LC3817"
class
= "blob-code blob-code-inner js-file-line" > adoptValue(singleValue, master < span
class
= "pl-k" >
.<
/span>done( updateFunc( i ) )<span class="pl-k">.</s
pan > resolve, master < span
class
= "pl-k" >
.<
/span>reject );</
td >
< /tr>
< tr >
< td
id = "L3818"
class
= "blob-num js-line-number"
data - line - number = "3818" > < /td>
    < td
id = "LC3818"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3819"
class
= "blob-num js-line-number"
data - line - number = "3819" > < /td>
    < td
id = "LC3819"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use .then() to unwrap secondary thenables (cf. gh-3000)</span></td>
    < /tr>
    < tr >
    < td
id = "L3820"
class
= "blob-num js-line-number"
data - line - number = "3820" > < /td>
    < td
id = "LC3820"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( master<span class="pl-k">.</s
pan > state() < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > pending < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L3821"
class
= "blob-num js-line-number"
data - line - number = "3821" > < /td>
    < td
id = "LC3821"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>isFunction( resolveValues[ i ] <span class="pl-k">&amp;&amp;</s
pan > resolveValues[i] < span
class
= "pl-k" >
.<
/span>then ) ) {</
td >
< /tr>
< tr >
< td
id = "L3822"
class
= "blob-num js-line-number"
data - line - number = "3822" > < /td>
    < td
id = "LC3822"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3823"
class
= "blob-num js-line-number"
data - line - number = "3823" > < /td>
    < td
id = "LC3823"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> master<span class="pl-k">.</s
pan > then();
<
/td>
< /tr>
< tr >
< td
id = "L3824"
class
= "blob-num js-line-number"
data - line - number = "3824" > < /td>
    < td
id = "LC3824"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3825"
class
= "blob-num js-line-number"
data - line - number = "3825" > < /td>
    < td
id = "LC3825"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3826"
class
= "blob-num js-line-number"
data - line - number = "3826" > < /td>
    < td
id = "LC3826"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3827"
class
= "blob-num js-line-number"
data - line - number = "3827" > < /td>
    < td
id = "LC3827"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Multiple arguments are aggregated like Promise.all array elements</span></td>
    < /tr>
    < tr >
    < td
id = "L3828"
class
= "blob-num js-line-number"
data - line - number = "3828" > < /td>
    < td
id = "LC3828"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3829"
class
    = "blob-num js-line-number"
    data - line - number = "3829" > < /td>
        < td
    id = "LC3829"
class
    = "blob-code blob-code-inner js-file-line" > adoptValue(resolveValues[i], updateFunc(i), master < span
class
    = "pl-k" >
.<
    /span>reject );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3830"
class
    = "blob-num js-line-number"
    data - line - number = "3830" > < /td>
        < td
    id = "LC3830"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3831"
class
= "blob-num js-line-number"
data - line - number = "3831" > < /td>
    < td
id = "LC3831"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3832"
class
= "blob-num js-line-number"
data - line - number = "3832" > < /td>
    < td
id = "LC3832"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> master<span class="pl-k">.</s
pan > promise();
<
/td>
< /tr>
< tr >
< td
id = "L3833"
class
= "blob-num js-line-number"
data - line - number = "3833" > < /td>
    < td
id = "LC3833"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3834"
class
= "blob-num js-line-number"
data - line - number = "3834" > < /td>
    < td
id = "LC3834"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3835"
class
= "blob-num js-line-number"
data - line - number = "3835" > < /td>
    < td
id = "LC3835"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3836"
class
= "blob-num js-line-number"
data - line - number = "3836" > < /td>
    < td
id = "LC3836"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3837"
class
= "blob-num js-line-number"
data - line - number = "3837" > < /td>
    < td
id = "LC3837"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> These usually indicate a programmer mistake during development,</span></td>
    < /tr>
    < tr >
    < td
id = "L3838"
class
= "blob-num js-line-number"
data - line - number = "3838" > < /td>
    < td
id = "LC3838"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> warn about them ASAP rather than swallowing them by default.</span></td>
    < /tr>
    < tr >
    < td
id = "L3839"
class
= "blob-num js-line-number"
data - line - number = "3839" > < /td>
    < td
id = "LC3839"
class
= "blob-code blob-code-inner js-file-line" >
var rerrorNames
<
span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-smi" > Eval < /span><span class="pl-k">|</s
pan > < span
class
= "pl-smi" > Internal < /span><span class="pl-k">|</s
pan > < span
class
= "pl-smi" > Range < /span><span class="pl-k">|</s
pan > < span
class
= "pl-smi" > Reference < /span><span class="pl-k">|</s
pan > < span
class
= "pl-smi" > Syntax < /span><span class="pl-k">|</s
pan > < span
class
= "pl-smi" > Type < /span><span class="pl-k">|</s
pan > < span
class
= "pl-c1" > URI < /span>)<span class="pl-smi">Error</s
pan > $ < span
class
= "pl-k" > / < /span>;</
td >
< /tr>
< tr >
< td
id = "L3840"
class
= "blob-num js-line-number"
data - line - number = "3840" > < /td>
    < td
id = "LC3840"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3841"
class
= "blob-num js-line-number"
data - line - number = "3841" > < /td>
    < td
id = "LC3841"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > jQuery < span
class
= "pl-k" >
.<
/span>Deferred</s
pan > < span
class
= "pl-k" >
.<
/span>exceptionHook <span class="pl-k">=</s
pan > function (error, stack) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3842"
class
    = "blob-num js-line-number"
    data - line - number = "3842" > < /td>
        < td
    id = "LC3842"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3843"
class
    = "blob-num js-line-number"
    data - line - number = "3843" > < /td>
        < td
    id = "LC3843"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE 8 - 9 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L3844"
class
    = "blob-num js-line-number"
    data - line - number = "3844" > < /td>
        < td
    id = "LC3844"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Console exists when dev tools are open, which can happen at any time</span></td>
        < /tr>
        < tr >
        < td
    id = "L3845"
class
    = "blob-num js-line-number"
    data - line - number = "3845" > < /td>
        < td
    id = "LC3845"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( window<span class="pl-k">.</s
    pan > console < span
class
    = "pl-k" > &amp;&amp; < /span> window<span class="pl-k">.</s
    pan > console < span
class
    = "pl-k" >
.<
    /span>warn <span class="pl-k">&amp;&amp;</s
    pan > error < span
class
    = "pl-k" > &amp;&amp; < /span> rerrorNames<span class="pl-k">.</s
    pan > test(error < span
class
    = "pl-k" >
.<
    /span>name ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3846"
class
    = "blob-num js-line-number"
    data - line - number = "3846" > < /td>
        < td
    id = "LC3846"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>console<span class="pl-k">.</s
    pan > warn( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>jQuery.Deferred exception: <span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > error < span
class
    = "pl-k" >
.<
    /span>message, error<span class="pl-k">.</s
    pan > stack, stack
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3847"
class
    = "blob-num js-line-number"
    data - line - number = "3847" > < /td>
        < td
    id = "LC3847"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L3848"
class
= "blob-num js-line-number"
data - line - number = "3848" > < /td>
    < td
id = "LC3848"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3849"
class
= "blob-num js-line-number"
data - line - number = "3849" > < /td>
    < td
id = "LC3849"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3850"
class
= "blob-num js-line-number"
data - line - number = "3850" > < /td>
    < td
id = "LC3850"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3851"
class
= "blob-num js-line-number"
data - line - number = "3851" > < /td>
    < td
id = "LC3851"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3852"
class
= "blob-num js-line-number"
data - line - number = "3852" > < /td>
    < td
id = "LC3852"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3853"
class
= "blob-num js-line-number"
data - line - number = "3853" > < /td>
    < td
id = "LC3853"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>readyException <span class="pl-k">=</s
pan > function (error) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3854"
class
    = "blob-num js-line-number"
    data - line - number = "3854" > < /td>
        < td
    id = "LC3854"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>setTimeout( function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3855"
class
    = "blob-num js-line-number"
    data - line - number = "3855" > < /td>
        < td
    id = "LC3855"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    throw
<
    /span> error;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3856"
class
    = "blob-num js-line-number"
    data - line - number = "3856" > < /td>
        < td
    id = "LC3856"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3857"
class
= "blob-num js-line-number"
data - line - number = "3857" > < /td>
    < td
id = "LC3857"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3858"
class
= "blob-num js-line-number"
data - line - number = "3858" > < /td>
    < td
id = "LC3858"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3859"
class
= "blob-num js-line-number"
data - line - number = "3859" > < /td>
    < td
id = "LC3859"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3860"
class
= "blob-num js-line-number"
data - line - number = "3860" > < /td>
    < td
id = "LC3860"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3861"
class
= "blob-num js-line-number"
data - line - number = "3861" > < /td>
    < td
id = "LC3861"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3862"
class
= "blob-num js-line-number"
data - line - number = "3862" > < /td>
    < td
id = "LC3862"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The deferred used on DOM ready</span></td>
    < /tr>
    < tr >
    < td
id = "L3863"
class
= "blob-num js-line-number"
data - line - number = "3863" > < /td>
    < td
id = "LC3863"
class
= "blob-code blob-code-inner js-file-line" >
var readyList
<
span
class
= "pl-k" >= < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Deferred < /span>();</
td >
< /tr>
< tr >
< td
id = "L3864"
class
= "blob-num js-line-number"
data - line - number = "3864" > < /td>
    < td
id = "LC3864"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3865"
class
= "blob-num js-line-number"
data - line - number = "3865" > < /td>
    < td
id = "LC3865"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > ready < span
class
= "pl-k" >= < /span> function( fn ) {</
td >
< /tr>
< tr >
< td
id = "L3866"
class
= "blob-num js-line-number"
data - line - number = "3866" > < /td>
    < td
id = "LC3866"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3867"
class
= "blob-num js-line-number"
data - line - number = "3867" > < /td>
    < td
id = "LC3867"
class
= "blob-code blob-code-inner js-file-line" > readyList < /td>
    < /tr>
    < tr >
    < td
id = "L3868"
class
= "blob-num js-line-number"
data - line - number = "3868" > < /td>
    < td
id = "LC3868"
class
= "blob-code blob-code-inner js-file-line" >
.
then(fn) < /td>
< /tr>
< tr >
< td
id = "L3869"
class
= "blob-num js-line-number"
data - line - number = "3869" > < /td>
    < td
id = "LC3869"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3870"
class
= "blob-num js-line-number"
data - line - number = "3870" > < /td>
    < td
id = "LC3870"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Wrap jQuery.readyException in a function so that the lookup</span></td>
    < /tr>
    < tr >
    < td
id = "L3871"
class
= "blob-num js-line-number"
data - line - number = "3871" > < /td>
    < td
id = "LC3871"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> happens at the time of error handling instead of callback</span></td>
    < /tr>
    < tr >
    < td
id = "L3872"
class
= "blob-num js-line-number"
data - line - number = "3872" > < /td>
    < td
id = "LC3872"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> registration.</span></td>
    < /tr>
    < tr >
    < td
id = "L3873"
class
= "blob-num js-line-number"
data - line - number = "3873" > < /td>
    < td
id = "LC3873"
class
= "blob-code blob-code-inner js-file-line" >
.<
span
class
= "pl-k" >
catch<
/span>( function( error ) {</
td >
< /tr>
< tr >
< td
id = "L3874"
class
= "blob-num js-line-number"
data - line - number = "3874" > < /td>
    < td
id = "LC3874"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>readyException( error );</
td >
< /tr>
< tr >
< td
id = "L3875"
class
= "blob-num js-line-number"
data - line - number = "3875" > < /td>
    < td
id = "LC3875"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3876"
class
= "blob-num js-line-number"
data - line - number = "3876" > < /td>
    < td
id = "LC3876"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3877"
class
= "blob-num js-line-number"
data - line - number = "3877" > < /td>
    < td
id = "LC3877"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3878"
class
= "blob-num js-line-number"
data - line - number = "3878" > < /td>
    < td
id = "LC3878"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3879"
class
= "blob-num js-line-number"
data - line - number = "3879" > < /td>
    < td
id = "LC3879"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3880"
class
= "blob-num js-line-number"
data - line - number = "3880" > < /td>
    < td
id = "LC3880"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L3881"
class
= "blob-num js-line-number"
data - line - number = "3881" > < /td>
    < td
id = "LC3881"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3882"
class
= "blob-num js-line-number"
data - line - number = "3882" > < /td>
    < td
id = "LC3882"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Is the DOM ready to be used? Set to true once it occurs.</span></td>
    < /tr>
    < tr >
    < td
id = "L3883"
class
= "blob-num js-line-number"
data - line - number = "3883" > < /td>
    < td
id = "LC3883"
class
= "blob-code blob-code-inner js-file-line" > isReady < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">false</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L3884"
class
= "blob-num js-line-number"
data - line - number = "3884" > < /td>
    < td
id = "LC3884"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3885"
class
= "blob-num js-line-number"
data - line - number = "3885" > < /td>
    < td
id = "LC3885"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> A counter to track how many items to wait for before</span></td>
    < /tr>
    < tr >
    < td
id = "L3886"
class
= "blob-num js-line-number"
data - line - number = "3886" > < /td>
    < td
id = "LC3886"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> the ready event fires. See #6781</span></td>
    < /tr>
    < tr >
    < td
id = "L3887"
class
= "blob-num js-line-number"
data - line - number = "3887" > < /td>
    < td
id = "LC3887"
class
= "blob-code blob-code-inner js-file-line" > readyWait < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">1</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L3888"
class
= "blob-num js-line-number"
data - line - number = "3888" > < /td>
    < td
id = "LC3888"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3889"
class
= "blob-num js-line-number"
data - line - number = "3889" > < /td>
    < td
id = "LC3889"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Hold (or release) the ready event</span></td>
    < /tr>
    < tr >
    < td
id = "L3890"
class
= "blob-num js-line-number"
data - line - number = "3890" > < /td>
    < td
id = "LC3890"
class
= "blob-code blob-code-inner js-file-line" > holdReady < span
class
= "pl-k" >
:<
/span> function( hold ) {</
td >
< /tr>
< tr >
< td
id = "L3891"
class
= "blob-num js-line-number"
data - line - number = "3891" > < /td>
    < td
id = "LC3891"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hold ) {</
td >
< /tr>
< tr >
< td
id = "L3892"
class
= "blob-num js-line-number"
data - line - number = "3892" > < /td>
    < td
id = "LC3892"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>readyWait<span class="pl-k">++</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3893"
class
= "blob-num js-line-number"
data - line - number = "3893" > < /td>
    < td
id = "LC3893"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3894"
class
= "blob-num js-line-number"
data - line - number = "3894" > < /td>
    < td
id = "LC3894"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ready( <span class="pl-c1">true</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3895"
class
= "blob-num js-line-number"
data - line - number = "3895" > < /td>
    < td
id = "LC3895"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3896"
class
= "blob-num js-line-number"
data - line - number = "3896" > < /td>
    < td
id = "LC3896"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L3897"
class
= "blob-num js-line-number"
data - line - number = "3897" > < /td>
    < td
id = "LC3897"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3898"
class
= "blob-num js-line-number"
data - line - number = "3898" > < /td>
    < td
id = "LC3898"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle when the DOM is ready</span></td>
    < /tr>
    < tr >
    < td
id = "L3899"
class
= "blob-num js-line-number"
data - line - number = "3899" > < /td>
    < td
id = "LC3899"
class
= "blob-code blob-code-inner js-file-line" > ready < span
class
= "pl-k" >
:<
/span> function( wait ) {</
td >
< /tr>
< tr >
< td
id = "L3900"
class
= "blob-num js-line-number"
data - line - number = "3900" > < /td>
    < td
id = "LC3900"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3901"
class
= "blob-num js-line-number"
data - line - number = "3901" > < /td>
    < td
id = "LC3901"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Abort if there are pending holds or we&#39;re already ready</span></td>
    < /tr>
    < tr >
    < td
id = "L3902"
class
= "blob-num js-line-number"
data - line - number = "3902" > < /td>
    < td
id = "LC3902"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( wait <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > true < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-k" > -- < /span>jQuery<span class="pl-k">.</s
pan > readyWait < span
class
= "pl-k" >
:<
/span> jQuery<span class="pl-k">.</s
pan > isReady
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3903"
class
    = "blob-num js-line-number"
    data - line - number = "3903" > < /td>
        < td
    id = "LC3903"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L3904"
class
    = "blob-num js-line-number"
    data - line - number = "3904" > < /td>
        < td
    id = "LC3904"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3905"
class
= "blob-num js-line-number"
data - line - number = "3905" > < /td>
    < td
id = "LC3905"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3906"
class
= "blob-num js-line-number"
data - line - number = "3906" > < /td>
    < td
id = "LC3906"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remember that the DOM is ready</span></td>
    < /tr>
    < tr >
    < td
id = "L3907"
class
= "blob-num js-line-number"
data - line - number = "3907" > < /td>
    < td
id = "LC3907"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>isReady <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > true < /span>;</
td >
< /tr>
< tr >
< td
id = "L3908"
class
= "blob-num js-line-number"
data - line - number = "3908" > < /td>
    < td
id = "LC3908"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3909"
class
= "blob-num js-line-number"
data - line - number = "3909" > < /td>
    < td
id = "LC3909"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If a normal DOM Ready event fired, decrement, and wait if need be</span></td>
    < /tr>
    < tr >
    < td
id = "L3910"
class
= "blob-num js-line-number"
data - line - number = "3910" > < /td>
    < td
id = "LC3910"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( wait <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">true</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">--</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>readyWait <span class="pl-k">&gt;</s
pan > < span
class
= "pl-c1" > 0 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L3911"
class
= "blob-num js-line-number"
data - line - number = "3911" > < /td>
    < td
id = "LC3911"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L3912"
class
= "blob-num js-line-number"
data - line - number = "3912" > < /td>
    < td
id = "LC3912"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3913"
class
= "blob-num js-line-number"
data - line - number = "3913" > < /td>
    < td
id = "LC3913"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3914"
class
= "blob-num js-line-number"
data - line - number = "3914" > < /td>
    < td
id = "LC3914"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If there are functions bound, to execute</span></td>
    < /tr>
    < tr >
    < td
id = "L3915"
class
= "blob-num js-line-number"
data - line - number = "3915" > < /td>
    < td
id = "LC3915"
class
= "blob-code blob-code-inner js-file-line" > readyList < span
class
= "pl-k" >
.<
/span>resolveWith( document, [ jQuery ] );</
td >
< /tr>
< tr >
< td
id = "L3916"
class
= "blob-num js-line-number"
data - line - number = "3916" > < /td>
    < td
id = "LC3916"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3917"
class
= "blob-num js-line-number"
data - line - number = "3917" > < /td>
    < td
id = "LC3917"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L3918"
class
= "blob-num js-line-number"
data - line - number = "3918" > < /td>
    < td
id = "LC3918"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3919"
class
= "blob-num js-line-number"
data - line - number = "3919" > < /td>
    < td
id = "LC3919"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ready<span class="pl-k">.</s
pan > then < span
class
= "pl-k" >= < /span> readyList<span class="pl-k">.</s
pan > then;
<
/td>
< /tr>
< tr >
< td
id = "L3920"
class
= "blob-num js-line-number"
data - line - number = "3920" > < /td>
    < td
id = "LC3920"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3921"
class
= "blob-num js-line-number"
data - line - number = "3921" > < /td>
    < td
id = "LC3921"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The ready event handler and self cleanup method</span></td>
    < /tr>
    < tr >
    < td
id = "L3922"
class
= "blob-num js-line-number"
data - line - number = "3922" > < /td>
    < td
id = "LC3922"
class
= "blob-code blob-code-inner js-file-line" > function completed() {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3923"
class
    = "blob-num js-line-number"
    data - line - number = "3923" > < /td>
        < td
    id = "LC3923"
class
    = "blob-code blob-code-inner js-file-line" > document < span
class
    = "pl-k" >
.<
    /span>removeEventListener( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > DOMContentLoaded < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >, completed
);
<
/td>
< /tr>
< tr >
< td
id = "L3924"
class
= "blob-num js-line-number"
data - line - number = "3924" > < /td>
    < td
id = "LC3924"
class
= "blob-code blob-code-inner js-file-line" > window < span
class
= "pl-k" >
.<
/span>removeEventListener( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > load < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, completed
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3925"
class
= "blob-num js-line-number"
data - line - number = "3925" > < /td>
    < td
id = "LC3925"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ready();</
td >
< /tr>
< tr >
< td
id = "L3926"
class
= "blob-num js-line-number"
data - line - number = "3926" > < /td>
    < td
id = "LC3926"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3927"
class
= "blob-num js-line-number"
data - line - number = "3927" > < /td>
    < td
id = "LC3927"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3928"
class
= "blob-num js-line-number"
data - line - number = "3928" > < /td>
    < td
id = "LC3928"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Catch cases where $(document).ready() is called</span></td>
    < /tr>
    < tr >
    < td
id = "L3929"
class
= "blob-num js-line-number"
data - line - number = "3929" > < /td>
    < td
id = "LC3929"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> after the browser event has already occurred.</span></td>
    < /tr>
    < tr >
    < td
id = "L3930"
class
= "blob-num js-line-number"
data - line - number = "3930" > < /td>
    < td
id = "LC3930"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 - 10 only</span></td>
    < /tr>
    < tr >
    < td
id = "L3931"
class
= "blob-num js-line-number"
data - line - number = "3931" > < /td>
    < td
id = "LC3931"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Older IE sometimes signals &quot;interactive&quot; too soon</span></td>
    < /tr>
    < tr >
    < td
id = "L3932"
class
= "blob-num js-line-number"
data - line - number = "3932" > < /td>
    < td
id = "LC3932"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( document<span class="pl-k">.</s
pan > readyState < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > complete < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L3933"
class
= "blob-num js-line-number"
data - line - number = "3933" > < /td>
    < td
id = "LC3933"
class
= "blob-code blob-code-inner js-file-line" > (document < span
class
= "pl-k" >
.<
/span>readyState <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > loading < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
pan > document < span
class
= "pl-k" >
.<
/span>documentElement<span class="pl-k">.</s
pan > doScroll
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3934"
class
    = "blob-num js-line-number"
    data - line - number = "3934" > < /td>
        < td
    id = "LC3934"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3935"
class
    = "blob-num js-line-number"
    data - line - number = "3935" > < /td>
        < td
    id = "LC3935"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Handle it asynchronously to allow scripts the opportunity to delay ready</span></td>
        < /tr>
        < tr >
        < td
    id = "L3936"
class
    = "blob-num js-line-number"
    data - line - number = "3936" > < /td>
        < td
    id = "LC3936"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>setTimeout( jQuery<span class="pl-k">.</s
    pan > ready
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3937"
class
= "blob-num js-line-number"
data - line - number = "3937" > < /td>
    < td
id = "LC3937"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3938"
class
= "blob-num js-line-number"
data - line - number = "3938" > < /td>
    < td
id = "LC3938"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3939"
class
= "blob-num js-line-number"
data - line - number = "3939" > < /td>
    < td
id = "LC3939"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3940"
class
= "blob-num js-line-number"
data - line - number = "3940" > < /td>
    < td
id = "LC3940"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use the handy event callback</span></td>
    < /tr>
    < tr >
    < td
id = "L3941"
class
= "blob-num js-line-number"
data - line - number = "3941" > < /td>
    < td
id = "LC3941"
class
= "blob-code blob-code-inner js-file-line" > document < span
class
= "pl-k" >
.<
/span>addEventListener( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > DOMContentLoaded < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, completed
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3942"
class
= "blob-num js-line-number"
data - line - number = "3942" > < /td>
    < td
id = "LC3942"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3943"
class
= "blob-num js-line-number"
data - line - number = "3943" > < /td>
    < td
id = "LC3943"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> A fallback to window.onload, that will always work</span></td>
    < /tr>
    < tr >
    < td
id = "L3944"
class
= "blob-num js-line-number"
data - line - number = "3944" > < /td>
    < td
id = "LC3944"
class
= "blob-code blob-code-inner js-file-line" > window < span
class
= "pl-k" >
.<
/span>addEventListener( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > load < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, completed
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3945"
class
= "blob-num js-line-number"
data - line - number = "3945" > < /td>
    < td
id = "LC3945"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3946"
class
= "blob-num js-line-number"
data - line - number = "3946" > < /td>
    < td
id = "LC3946"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3947"
class
= "blob-num js-line-number"
data - line - number = "3947" > < /td>
    < td
id = "LC3947"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3948"
class
= "blob-num js-line-number"
data - line - number = "3948" > < /td>
    < td
id = "LC3948"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3949"
class
= "blob-num js-line-number"
data - line - number = "3949" > < /td>
    < td
id = "LC3949"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3950"
class
= "blob-num js-line-number"
data - line - number = "3950" > < /td>
    < td
id = "LC3950"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Multifunctional method to get and set values of a collection</span></td>
    < /tr>
    < tr >
    < td
id = "L3951"
class
= "blob-num js-line-number"
data - line - number = "3951" > < /td>
    < td
id = "LC3951"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The value/s can optionally be executed if it&#39;s a function</span></td>
    < /tr>
    < tr >
    < td
id = "L3952"
class
= "blob-num js-line-number"
data - line - number = "3952" > < /td>
    < td
id = "LC3952"
class
= "blob-code blob-code-inner js-file-line" >
var access
<
span
class
= "pl-k" >= < /span> function( elems, fn, key, value, chainable, emptyGet, raw ) {</
td >
< /tr>
< tr >
< td
id = "L3953"
class
= "blob-num js-line-number"
data - line - number = "3953" > < /td>
    < td
id = "LC3953"
class
= "blob-code blob-code-inner js-file-line" >
var i
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L3954"
class
= "blob-num js-line-number"
data - line - number = "3954" > < /td>
    < td
id = "LC3954"
class
= "blob-code blob-code-inner js-file-line" > len < span
class
= "pl-k" >= < /span> elems<span class="pl-k">.</s
pan > length,
<
/td>
< /tr>
< tr >
< td
id = "L3955"
class
= "blob-num js-line-number"
data - line - number = "3955" > < /td>
    < td
id = "LC3955"
class
= "blob-code blob-code-inner js-file-line" > bulk < span
class
= "pl-k" >= < /span> key <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span>;</
td >
< /tr>
< tr >
< td
id = "L3956"
class
= "blob-num js-line-number"
data - line - number = "3956" > < /td>
    < td
id = "LC3956"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3957"
class
= "blob-num js-line-number"
data - line - number = "3957" > < /td>
    < td
id = "LC3957"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Sets many values</span></td>
    < /tr>
    < tr >
    < td
id = "L3958"
class
= "blob-num js-line-number"
data - line - number = "3958" > < /td>
    < td
id = "LC3958"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > type(key) < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > object < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3959"
class
    = "blob-num js-line-number"
    data - line - number = "3959" > < /td>
        < td
    id = "LC3959"
class
    = "blob-code blob-code-inner js-file-line" > chainable < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3960"
class
    = "blob-num js-line-number"
    data - line - number = "3960" > < /td>
        < td
    id = "LC3960"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( i in key ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3961"
class
    = "blob-num js-line-number"
    data - line - number = "3961" > < /td>
        < td
    id = "LC3961"
class
    = "blob-code blob-code-inner js-file-line" > access(elems, fn, i, key[i], < span
class
    = "pl-c1" > true < /span>, emptyGet, raw );</
    td >
    < /tr>
    < tr >
    < td
    id = "L3962"
class
    = "blob-num js-line-number"
    data - line - number = "3962" > < /td>
        < td
    id = "LC3962"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3963"
class
= "blob-num js-line-number"
data - line - number = "3963" > < /td>
    < td
id = "LC3963"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3964"
class
= "blob-num js-line-number"
data - line - number = "3964" > < /td>
    < td
id = "LC3964"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Sets one value</span></td>
    < /tr>
    < tr >
    < td
id = "L3965"
class
= "blob-num js-line-number"
data - line - number = "3965" > < /td>
    < td
id = "LC3965"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (value < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3966"
class
    = "blob-num js-line-number"
    data - line - number = "3966" > < /td>
        < td
    id = "LC3966"
class
    = "blob-code blob-code-inner js-file-line" > chainable < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3967"
class
    = "blob-num js-line-number"
    data - line - number = "3967" > < /td>
        < td
    id = "LC3967"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L3968"
class
    = "blob-num js-line-number"
    data - line - number = "3968" > < /td>
        < td
    id = "LC3968"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>isFunction( value ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L3969"
class
    = "blob-num js-line-number"
    data - line - number = "3969" > < /td>
        < td
    id = "LC3969"
class
    = "blob-code blob-code-inner js-file-line" > raw < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L3970"
class
    = "blob-num js-line-number"
    data - line - number = "3970" > < /td>
        < td
    id = "LC3970"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L3971"
class
= "blob-num js-line-number"
data - line - number = "3971" > < /td>
    < td
id = "LC3971"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3972"
class
= "blob-num js-line-number"
data - line - number = "3972" > < /td>
    < td
id = "LC3972"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( bulk ) {</
td >
< /tr>
< tr >
< td
id = "L3973"
class
= "blob-num js-line-number"
data - line - number = "3973" > < /td>
    < td
id = "LC3973"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3974"
class
= "blob-num js-line-number"
data - line - number = "3974" > < /td>
    < td
id = "LC3974"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Bulk operations run against the entire set</span></td>
    < /tr>
    < tr >
    < td
id = "L3975"
class
= "blob-num js-line-number"
data - line - number = "3975" > < /td>
    < td
id = "LC3975"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( raw ) {</
td >
< /tr>
< tr >
< td
id = "L3976"
class
= "blob-num js-line-number"
data - line - number = "3976" > < /td>
    < td
id = "LC3976"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >
.<
/span>call( elems, value );</
td >
< /tr>
< tr >
< td
id = "L3977"
class
= "blob-num js-line-number"
data - line - number = "3977" > < /td>
    < td
id = "LC3977"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >= < /span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L3978"
class
= "blob-num js-line-number"
data - line - number = "3978" > < /td>
    < td
id = "LC3978"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3979"
class
= "blob-num js-line-number"
data - line - number = "3979" > < /td>
    < td
id = "LC3979"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ...except when executing function values</span></td>
    < /tr>
    < tr >
    < td
id = "L3980"
class
= "blob-num js-line-number"
data - line - number = "3980" > < /td>
    < td
id = "LC3980"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L3981"
class
= "blob-num js-line-number"
data - line - number = "3981" > < /td>
    < td
id = "LC3981"
class
= "blob-code blob-code-inner js-file-line" > bulk < span
class
= "pl-k" >= < /span> fn;</
td >
< /tr>
< tr >
< td
id = "L3982"
class
= "blob-num js-line-number"
data - line - number = "3982" > < /td>
    < td
id = "LC3982"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >= < /span> function( elem, key, value ) {</
td >
< /tr>
< tr >
< td
id = "L3983"
class
= "blob-num js-line-number"
data - line - number = "3983" > < /td>
    < td
id = "LC3983"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> bulk<span class="pl-k">.</s
pan > call(jQuery(elem), value);
<
/td>
< /tr>
< tr >
< td
id = "L3984"
class
= "blob-num js-line-number"
data - line - number = "3984" > < /td>
    < td
id = "LC3984"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L3985"
class
= "blob-num js-line-number"
data - line - number = "3985" > < /td>
    < td
id = "LC3985"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3986"
class
= "blob-num js-line-number"
data - line - number = "3986" > < /td>
    < td
id = "LC3986"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3987"
class
= "blob-num js-line-number"
data - line - number = "3987" > < /td>
    < td
id = "LC3987"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3988"
class
= "blob-num js-line-number"
data - line - number = "3988" > < /td>
    < td
id = "LC3988"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fn ) {</
td >
< /tr>
< tr >
< td
id = "L3989"
class
= "blob-num js-line-number"
data - line - number = "3989" > < /td>
    < td
id = "LC3989"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > len;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L3990"
class
= "blob-num js-line-number"
data - line - number = "3990" > < /td>
    < td
id = "LC3990"
class
= "blob-code blob-code-inner js-file-line" > fn( < /td>
    < /tr>
    < tr >
    < td
id = "L3991"
class
= "blob-num js-line-number"
data - line - number = "3991" > < /td>
    < td
id = "LC3991"
class
= "blob-code blob-code-inner js-file-line" > elems[i], key, raw < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L3992"
class
= "blob-num js-line-number"
data - line - number = "3992" > < /td>
    < td
id = "LC3992"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L3993"
class
= "blob-num js-line-number"
data - line - number = "3993" > < /td>
    < td
id = "LC3993"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >
.<
/span>call( elems[ i ], i, fn( elems[ i ], key ) )</
td >
< /tr>
< tr >
< td
id = "L3994"
class
= "blob-num js-line-number"
data - line - number = "3994" > < /td>
    < td
id = "LC3994"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L3995"
class
= "blob-num js-line-number"
data - line - number = "3995" > < /td>
    < td
id = "LC3995"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3996"
class
= "blob-num js-line-number"
data - line - number = "3996" > < /td>
    < td
id = "LC3996"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3997"
class
= "blob-num js-line-number"
data - line - number = "3997" > < /td>
    < td
id = "LC3997"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L3998"
class
= "blob-num js-line-number"
data - line - number = "3998" > < /td>
    < td
id = "LC3998"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L3999"
class
= "blob-num js-line-number"
data - line - number = "3999" > < /td>
    < td
id = "LC3999"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( chainable ) {</
td >
< /tr>
< tr >
< td
id = "L4000"
class
= "blob-num js-line-number"
data - line - number = "4000" > < /td>
    < td
id = "LC4000"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elems;</
td >
< /tr>
< tr >
< td
id = "L4001"
class
= "blob-num js-line-number"
data - line - number = "4001" > < /td>
    < td
id = "LC4001"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4002"
class
= "blob-num js-line-number"
data - line - number = "4002" > < /td>
    < td
id = "LC4002"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4003"
class
= "blob-num js-line-number"
data - line - number = "4003" > < /td>
    < td
id = "LC4003"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Gets</span></td>
    < /tr>
    < tr >
    < td
id = "L4004"
class
= "blob-num js-line-number"
data - line - number = "4004" > < /td>
    < td
id = "LC4004"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( bulk ) {</
td >
< /tr>
< tr >
< td
id = "L4005"
class
= "blob-num js-line-number"
data - line - number = "4005" > < /td>
    < td
id = "LC4005"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> fn<span class="pl-k">.</s
pan > call(elems);
<
/td>
< /tr>
< tr >
< td
id = "L4006"
class
= "blob-num js-line-number"
data - line - number = "4006" > < /td>
    < td
id = "LC4006"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4007"
class
= "blob-num js-line-number"
data - line - number = "4007" > < /td>
    < td
id = "LC4007"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4008"
class
= "blob-num js-line-number"
data - line - number = "4008" > < /td>
    < td
id = "LC4008"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> len <span class="pl-k">?</s
pan > fn(elems[ < span
class
= "pl-c1" > 0 < /span> ], key ) <span class="pl-k">:</s
pan > emptyGet;
<
/td>
< /tr>
< tr >
< td
id = "L4009"
class
= "blob-num js-line-number"
data - line - number = "4009" > < /td>
    < td
id = "LC4009"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L4010"
class
= "blob-num js-line-number"
data - line - number = "4010" > < /td>
    < td
id = "LC4010"
class
= "blob-code blob-code-inner js-file-line" >
var acceptData
<
span
class
= "pl-k" >= < /span> function( owner ) {</
td >
< /tr>
< tr >
< td
id = "L4011"
class
= "blob-num js-line-number"
data - line - number = "4011" > < /td>
    < td
id = "LC4011"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4012"
class
= "blob-num js-line-number"
data - line - number = "4012" > < /td>
    < td
id = "LC4012"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Accepts only:</span></td>
    < /tr>
    < tr >
    < td
id = "L4013"
class
= "blob-num js-line-number"
data - line - number = "4013" > < /td>
    < td
id = "LC4013"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>  - Node</span></td>
    < /tr>
    < tr >
    < td
id = "L4014"
class
= "blob-num js-line-number"
data - line - number = "4014" > < /td>
    < td
id = "LC4014"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>    - Node.ELEMENT_NODE</span></td>
    < /tr>
    < tr >
    < td
id = "L4015"
class
= "blob-num js-line-number"
data - line - number = "4015" > < /td>
    < td
id = "LC4015"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>    - Node.DOCUMENT_NODE</span></td>
    < /tr>
    < tr >
    < td
id = "L4016"
class
= "blob-num js-line-number"
data - line - number = "4016" > < /td>
    < td
id = "LC4016"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>  - Object</span></td>
    < /tr>
    < tr >
    < td
id = "L4017"
class
= "blob-num js-line-number"
data - line - number = "4017" > < /td>
    < td
id = "LC4017"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>    - Any</span></td>
    < /tr>
    < tr >
    < td
id = "L4018"
class
= "blob-num js-line-number"
data - line - number = "4018" > < /td>
    < td
id = "LC4018"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> owner<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > || < /span> owner<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">9</s
pan > < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > ( < span
class
= "pl-k" > + < /span>owner<span class="pl-k">.</s
pan > nodeType
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4019"
class
= "blob-num js-line-number"
data - line - number = "4019" > < /td>
    < td
id = "LC4019"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L4020"
class
= "blob-num js-line-number"
data - line - number = "4020" > < /td>
    < td
id = "LC4020"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4021"
class
= "blob-num js-line-number"
data - line - number = "4021" > < /td>
    < td
id = "LC4021"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4022"
class
= "blob-num js-line-number"
data - line - number = "4022" > < /td>
    < td
id = "LC4022"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4023"
class
= "blob-num js-line-number"
data - line - number = "4023" > < /td>
    < td
id = "LC4023"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4024"
class
= "blob-num js-line-number"
data - line - number = "4024" > < /td>
    < td
id = "LC4024"
class
= "blob-code blob-code-inner js-file-line" > function Data() {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4025"
    class
        = "blob-num js-line-number"
        data - line - number = "4025" > < /td>
            < td
        id = "LC4025"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c1" > this < /span><span class="pl-k">.</s
        pan > expando < span
    class
        = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
        pan > expando < span
    class
        = "pl-k" > + < /span> <span class="pl-smi">Data</s
        pan > < span
    class
        = "pl-k" >
    .<
        /span>uid<span class="pl-k">++</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4026"
    class
        = "blob-num js-line-number"
        data - line - number = "4026" > < /td>
            < td
        id = "LC4026"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L4027"
class
= "blob-num js-line-number"
data - line - number = "4027" > < /td>
    < td
id = "LC4027"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4028"
class
= "blob-num js-line-number"
data - line - number = "4028" > < /td>
    < td
id = "LC4028"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Data < /span><span class="pl-k">.</s
pan > uid < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4029"
class
= "blob-num js-line-number"
data - line - number = "4029" > < /td>
    < td
id = "LC4029"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4030"
class
= "blob-num js-line-number"
data - line - number = "4030" > < /td>
    < td
id = "LC4030"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Data < /span><span class="pl-k">.</s
pan > prototype < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L4031"
class
= "blob-num js-line-number"
data - line - number = "4031" > < /td>
    < td
id = "LC4031"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4032"
class
= "blob-num js-line-number"
data - line - number = "4032" > < /td>
    < td
id = "LC4032"
class
= "blob-code blob-code-inner js-file-line" > cache < span
class
= "pl-k" >
:<
/span> function( owner ) {</
td >
< /tr>
< tr >
< td
id = "L4033"
class
= "blob-num js-line-number"
data - line - number = "4033" > < /td>
    < td
id = "LC4033"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4034"
class
= "blob-num js-line-number"
data - line - number = "4034" > < /td>
    < td
id = "LC4034"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check if the owner object already has a cache</span></td>
    < /tr>
    < tr >
    < td
id = "L4035"
class
= "blob-num js-line-number"
data - line - number = "4035" > < /td>
    < td
id = "LC4035"
class
= "blob-code blob-code-inner js-file-line" >
var value
<
span
class
= "pl-k" >= < /span> owner[ <span class="pl-c1">this</span><span class="pl-k">.</span>expando ];</
td >
< /tr>
< tr >
< td
id = "L4036"
class
= "blob-num js-line-number"
data - line - number = "4036" > < /td>
    < td
id = "LC4036"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4037"
class
= "blob-num js-line-number"
data - line - number = "4037" > < /td>
    < td
id = "LC4037"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If not, create one</span></td>
    < /tr>
    < tr >
    < td
id = "L4038"
class
= "blob-num js-line-number"
data - line - number = "4038" > < /td>
    < td
id = "LC4038"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > value
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4039"
class
    = "blob-num js-line-number"
    data - line - number = "4039" > < /td>
        < td
    id = "LC4039"
class
    = "blob-code blob-code-inner js-file-line" > value < span
class
    = "pl-k" >= < /span> {};</
    td >
    < /tr>
    < tr >
    < td
    id = "L4040"
class
    = "blob-num js-line-number"
    data - line - number = "4040" > < /td>
        < td
    id = "LC4040"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4041"
class
    = "blob-num js-line-number"
    data - line - number = "4041" > < /td>
        < td
    id = "LC4041"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> We can accept data for non-element nodes in modern browsers,</span></td>
        < /tr>
        < tr >
        < td
    id = "L4042"
class
    = "blob-num js-line-number"
    data - line - number = "4042" > < /td>
        < td
    id = "LC4042"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> but we should not, see #8335.</span></td>
        < /tr>
        < tr >
        < td
    id = "L4043"
class
    = "blob-num js-line-number"
    data - line - number = "4043" > < /td>
        < td
    id = "LC4043"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Always return an empty object.</span></td>
        < /tr>
        < tr >
        < td
    id = "L4044"
class
    = "blob-num js-line-number"
    data - line - number = "4044" > < /td>
        < td
    id = "LC4044"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( acceptData( owner ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4045"
class
    = "blob-num js-line-number"
    data - line - number = "4045" > < /td>
        < td
    id = "LC4045"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4046"
class
    = "blob-num js-line-number"
    data - line - number = "4046" > < /td>
        < td
    id = "LC4046"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If it is a node unlikely to be stringify-ed or looped over</span></td>
        < /tr>
        < tr >
        < td
    id = "L4047"
class
    = "blob-num js-line-number"
    data - line - number = "4047" > < /td>
        < td
    id = "LC4047"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> use plain assignment</span></td>
        < /tr>
        < tr >
        < td
    id = "L4048"
class
    = "blob-num js-line-number"
    data - line - number = "4048" > < /td>
        < td
    id = "LC4048"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( owner<span class="pl-k">.</s
    pan > nodeType
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4049"
class
    = "blob-num js-line-number"
    data - line - number = "4049" > < /td>
        < td
    id = "LC4049"
class
    = "blob-code blob-code-inner js-file-line" > owner[ < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > expando
] <
    span
class
    = "pl-k" >= < /span> value;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4050"
class
    = "blob-num js-line-number"
    data - line - number = "4050" > < /td>
        < td
    id = "LC4050"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4051"
class
    = "blob-num js-line-number"
    data - line - number = "4051" > < /td>
        < td
    id = "LC4051"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Otherwise secure it in a non-enumerable property</span></td>
        < /tr>
        < tr >
        < td
    id = "L4052"
class
    = "blob-num js-line-number"
    data - line - number = "4052" > < /td>
        < td
    id = "LC4052"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> configurable must be true to allow the property to be</span></td>
        < /tr>
        < tr >
        < td
    id = "L4053"
class
    = "blob-num js-line-number"
    data - line - number = "4053" > < /td>
        < td
    id = "LC4053"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> deleted when data is removed</span></td>
        < /tr>
        < tr >
        < td
    id = "L4054"
class
    = "blob-num js-line-number"
    data - line - number = "4054" > < /td>
        < td
    id = "LC4054"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4055"
class
= "blob-num js-line-number"
data - line - number = "4055" > < /td>
    < td
id = "LC4055"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Object < /span><span class="pl-k">.</s
pan > defineProperty(owner, < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > expando, { < /td>
< /tr>
< tr >
< td
id = "L4056"
class
= "blob-num js-line-number"
data - line - number = "4056" > < /td>
    < td
id = "LC4056"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >
:<
/span> value,</
td >
< /tr>
< tr >
< td
id = "L4057"
class
= "blob-num js-line-number"
data - line - number = "4057" > < /td>
    < td
id = "LC4057"
class
= "blob-code blob-code-inner js-file-line" > configurable < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan > < /td>
< /tr>
< tr >
< td
id = "L4058"
class
= "blob-num js-line-number"
data - line - number = "4058" > < /td>
    < td
id = "LC4058"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4059"
class
= "blob-num js-line-number"
data - line - number = "4059" > < /td>
    < td
id = "LC4059"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4060"
class
= "blob-num js-line-number"
data - line - number = "4060" > < /td>
    < td
id = "LC4060"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4061"
class
= "blob-num js-line-number"
data - line - number = "4061" > < /td>
    < td
id = "LC4061"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4062"
class
= "blob-num js-line-number"
data - line - number = "4062" > < /td>
    < td
id = "LC4062"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4063"
class
= "blob-num js-line-number"
data - line - number = "4063" > < /td>
    < td
id = "LC4063"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> value;</
td >
< /tr>
< tr >
< td
id = "L4064"
class
= "blob-num js-line-number"
data - line - number = "4064" > < /td>
    < td
id = "LC4064"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4065"
class
= "blob-num js-line-number"
data - line - number = "4065" > < /td>
    < td
id = "LC4065"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( owner, data, value ) {</
td >
< /tr>
< tr >
< td
id = "L4066"
class
= "blob-num js-line-number"
data - line - number = "4066" > < /td>
    < td
id = "LC4066"
class
= "blob-code blob-code-inner js-file-line" >
var prop, <
/td>
< /tr>
< tr >
< td
id = "L4067"
class
= "blob-num js-line-number"
data - line - number = "4067" > < /td>
    < td
id = "LC4067"
class
= "blob-code blob-code-inner js-file-line" > cache < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>cache( owner );</
td >
< /tr>
< tr >
< td
id = "L4068"
class
= "blob-num js-line-number"
data - line - number = "4068" > < /td>
    < td
id = "LC4068"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4069"
class
= "blob-num js-line-number"
data - line - number = "4069" > < /td>
    < td
id = "LC4069"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle: [ owner, key, value ] args</span></td>
    < /tr>
    < tr >
    < td
id = "L4070"
class
= "blob-num js-line-number"
data - line - number = "4070" > < /td>
    < td
id = "LC4070"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Always use camelCase key (gh-2257)</span></td>
    < /tr>
    < tr >
    < td
id = "L4071"
class
= "blob-num js-line-number"
data - line - number = "4071" > < /td>
    < td
id = "LC4071"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof data <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4072"
class
= "blob-num js-line-number"
data - line - number = "4072" > < /td>
    < td
id = "LC4072"
class
= "blob-code blob-code-inner js-file-line" > cache[jQuery < span
class
= "pl-k" >
.<
/span>camelCase( data ) ] <span class="pl-k">=</s
pan > value;
<
/td>
< /tr>
< tr >
< td
id = "L4073"
class
= "blob-num js-line-number"
data - line - number = "4073" > < /td>
    < td
id = "LC4073"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4074"
class
= "blob-num js-line-number"
data - line - number = "4074" > < /td>
    < td
id = "LC4074"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle: [ owner, { properties } ] args</span></td>
    < /tr>
    < tr >
    < td
id = "L4075"
class
= "blob-num js-line-number"
data - line - number = "4075" > < /td>
    < td
id = "LC4075"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4076"
class
= "blob-num js-line-number"
data - line - number = "4076" > < /td>
    < td
id = "LC4076"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4077"
class
= "blob-num js-line-number"
data - line - number = "4077" > < /td>
    < td
id = "LC4077"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Copy the properties one-by-one to the cache object</span></td>
    < /tr>
    < tr >
    < td
id = "L4078"
class
= "blob-num js-line-number"
data - line - number = "4078" > < /td>
    < td
id = "LC4078"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( prop in data ) {</
td >
< /tr>
< tr >
< td
id = "L4079"
class
= "blob-num js-line-number"
data - line - number = "4079" > < /td>
    < td
id = "LC4079"
class
= "blob-code blob-code-inner js-file-line" > cache[jQuery < span
class
= "pl-k" >
.<
/span>camelCase( prop ) ] <span class="pl-k">=</s
pan > data[prop];
<
/td>
< /tr>
< tr >
< td
id = "L4080"
class
= "blob-num js-line-number"
data - line - number = "4080" > < /td>
    < td
id = "LC4080"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4081"
class
= "blob-num js-line-number"
data - line - number = "4081" > < /td>
    < td
id = "LC4081"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4082"
class
= "blob-num js-line-number"
data - line - number = "4082" > < /td>
    < td
id = "LC4082"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> cache;</
td >
< /tr>
< tr >
< td
id = "L4083"
class
= "blob-num js-line-number"
data - line - number = "4083" > < /td>
    < td
id = "LC4083"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4084"
class
= "blob-num js-line-number"
data - line - number = "4084" > < /td>
    < td
id = "LC4084"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> function( owner, key ) {</
td >
< /tr>
< tr >
< td
id = "L4085"
class
= "blob-num js-line-number"
data - line - number = "4085" > < /td>
    < td
id = "LC4085"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> key <span class="pl-k">===</s
pan > undefined < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L4086"
class
= "blob-num js-line-number"
data - line - number = "4086" > < /td>
    < td
id = "LC4086"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > cache(owner) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L4087"
class
= "blob-num js-line-number"
data - line - number = "4087" > < /td>
    < td
id = "LC4087"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4088"
class
= "blob-num js-line-number"
data - line - number = "4088" > < /td>
    < td
id = "LC4088"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Always use camelCase key (gh-2257)</span></td>
    < /tr>
    < tr >
    < td
id = "L4089"
class
= "blob-num js-line-number"
data - line - number = "4089" > < /td>
    < td
id = "LC4089"
class
= "blob-code blob-code-inner js-file-line" > owner[ < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > expando
] <
span
class
= "pl-k" > &amp;&amp; < /span> owner[ <span class="pl-c1">this</span><span class="pl-k">.</span>expando ][ jQuery<span class="pl-k">.</span>camelCase( key ) ];</
td >
< /tr>
< tr >
< td
id = "L4090"
class
= "blob-num js-line-number"
data - line - number = "4090" > < /td>
    < td
id = "LC4090"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4091"
class
= "blob-num js-line-number"
data - line - number = "4091" > < /td>
    < td
id = "LC4091"
class
= "blob-code blob-code-inner js-file-line" > access < span
class
= "pl-k" >
:<
/span> function( owner, key, value ) {</
td >
< /tr>
< tr >
< td
id = "L4092"
class
= "blob-num js-line-number"
data - line - number = "4092" > < /td>
    < td
id = "LC4092"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4093"
class
= "blob-num js-line-number"
data - line - number = "4093" > < /td>
    < td
id = "LC4093"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> In cases where either:</span></td>
    < /tr>
    < tr >
    < td
id = "L4094"
class
= "blob-num js-line-number"
data - line - number = "4094" > < /td>
    < td
id = "LC4094"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L4095"
class
= "blob-num js-line-number"
data - line - number = "4095" > < /td>
    < td
id = "LC4095"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>   1. No key was specified</span></td>
    < /tr>
    < tr >
    < td
id = "L4096"
class
= "blob-num js-line-number"
data - line - number = "4096" > < /td>
    < td
id = "LC4096"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>   2. A string key was specified, but no value provided</span></td>
    < /tr>
    < tr >
    < td
id = "L4097"
class
= "blob-num js-line-number"
data - line - number = "4097" > < /td>
    < td
id = "LC4097"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L4098"
class
= "blob-num js-line-number"
data - line - number = "4098" > < /td>
    < td
id = "LC4098"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Take the &quot;read&quot; path and allow the get method to determine</span></td>
    < /tr>
    < tr >
    < td
id = "L4099"
class
= "blob-num js-line-number"
data - line - number = "4099" > < /td>
    < td
id = "LC4099"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> which value to return, respectively either:</span></td>
    < /tr>
    < tr >
    < td
id = "L4100"
class
= "blob-num js-line-number"
data - line - number = "4100" > < /td>
    < td
id = "LC4100"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L4101"
class
= "blob-num js-line-number"
data - line - number = "4101" > < /td>
    < td
id = "LC4101"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>   1. The entire cache object</span></td>
    < /tr>
    < tr >
    < td
id = "L4102"
class
= "blob-num js-line-number"
data - line - number = "4102" > < /td>
    < td
id = "LC4102"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>   2. The data stored at the key</span></td>
    < /tr>
    < tr >
    < td
id = "L4103"
class
= "blob-num js-line-number"
data - line - number = "4103" > < /td>
    < td
id = "LC4103"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L4104"
class
= "blob-num js-line-number"
data - line - number = "4104" > < /td>
    < td
id = "LC4104"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( key <span class="pl-k">===</s
pan > undefined < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L4105"
class
= "blob-num js-line-number"
data - line - number = "4105" > < /td>
    < td
id = "LC4105"
class
= "blob-code blob-code-inner js-file-line" > ((key < span
class
= "pl-k" > &amp;&amp; < /span> typeof key <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">&amp;&amp;</s
pan > value < span
class
= "pl-k" >= == < /span> undefined ) ) {</
td >
< /tr>
< tr >
< td
id = "L4106"
class
= "blob-num js-line-number"
data - line - number = "4106" > < /td>
    < td
id = "LC4106"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4107"
class
= "blob-num js-line-number"
data - line - number = "4107" > < /td>
    < td
id = "LC4107"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>get( owner, key );</
td >
< /tr>
< tr >
< td
id = "L4108"
class
= "blob-num js-line-number"
data - line - number = "4108" > < /td>
    < td
id = "LC4108"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4109"
class
= "blob-num js-line-number"
data - line - number = "4109" > < /td>
    < td
id = "LC4109"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4110"
class
= "blob-num js-line-number"
data - line - number = "4110" > < /td>
    < td
id = "LC4110"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> When the key is not a string, or both a key and value</span></td>
    < /tr>
    < tr >
    < td
id = "L4111"
class
= "blob-num js-line-number"
data - line - number = "4111" > < /td>
    < td
id = "LC4111"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> are specified, set or extend (existing objects) with either:</span></td>
    < /tr>
    < tr >
    < td
id = "L4112"
class
= "blob-num js-line-number"
data - line - number = "4112" > < /td>
    < td
id = "LC4112"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L4113"
class
= "blob-num js-line-number"
data - line - number = "4113" > < /td>
    < td
id = "LC4113"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>   1. An object of properties</span></td>
    < /tr>
    < tr >
    < td
id = "L4114"
class
= "blob-num js-line-number"
data - line - number = "4114" > < /td>
    < td
id = "LC4114"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>   2. A key and value</span></td>
    < /tr>
    < tr >
    < td
id = "L4115"
class
= "blob-num js-line-number"
data - line - number = "4115" > < /td>
    < td
id = "LC4115"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L4116"
class
= "blob-num js-line-number"
data - line - number = "4116" > < /td>
    < td
id = "LC4116"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > set(owner, key, value);
<
/td>
< /tr>
< tr >
< td
id = "L4117"
class
= "blob-num js-line-number"
data - line - number = "4117" > < /td>
    < td
id = "LC4117"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4118"
class
= "blob-num js-line-number"
data - line - number = "4118" > < /td>
    < td
id = "LC4118"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Since the &quot;set&quot; path can have two possible entry points</span></td>
    < /tr>
    < tr >
    < td
id = "L4119"
class
= "blob-num js-line-number"
data - line - number = "4119" > < /td>
    < td
id = "LC4119"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> return the expected data based on which path was taken[*]</span></td>
    < /tr>
    < tr >
    < td
id = "L4120"
class
= "blob-num js-line-number"
data - line - number = "4120" > < /td>
    < td
id = "LC4120"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> value <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined <span class="pl-k">?</s
pan > value < span
class
= "pl-k" >
:<
/span> key;</
td >
< /tr>
< tr >
< td
id = "L4121"
class
= "blob-num js-line-number"
data - line - number = "4121" > < /td>
    < td
id = "LC4121"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4122"
class
= "blob-num js-line-number"
data - line - number = "4122" > < /td>
    < td
id = "LC4122"
class
= "blob-code blob-code-inner js-file-line" > remove < span
class
= "pl-k" >
:<
/span> function( owner, key ) {</
td >
< /tr>
< tr >
< td
id = "L4123"
class
= "blob-num js-line-number"
data - line - number = "4123" > < /td>
    < td
id = "LC4123"
class
= "blob-code blob-code-inner js-file-line" >
var i, <
/td>
< /tr>
< tr >
< td
id = "L4124"
class
= "blob-num js-line-number"
data - line - number = "4124" > < /td>
    < td
id = "LC4124"
class
= "blob-code blob-code-inner js-file-line" > cache < span
class
= "pl-k" >= < /span> owner[ <span class="pl-c1">this</span><span class="pl-k">.</span>expando ];</
td >
< /tr>
< tr >
< td
id = "L4125"
class
= "blob-num js-line-number"
data - line - number = "4125" > < /td>
    < td
id = "LC4125"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4126"
class
= "blob-num js-line-number"
data - line - number = "4126" > < /td>
    < td
id = "LC4126"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( cache <span class="pl-k">===</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4127"
class
    = "blob-num js-line-number"
    data - line - number = "4127" > < /td>
        < td
    id = "LC4127"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4128"
class
    = "blob-num js-line-number"
    data - line - number = "4128" > < /td>
        < td
    id = "LC4128"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4129"
class
= "blob-num js-line-number"
data - line - number = "4129" > < /td>
    < td
id = "LC4129"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4130"
class
= "blob-num js-line-number"
data - line - number = "4130" > < /td>
    < td
id = "LC4130"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( key <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined ) {</
td >
< /tr>
< tr >
< td
id = "L4131"
class
= "blob-num js-line-number"
data - line - number = "4131" > < /td>
    < td
id = "LC4131"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4132"
class
= "blob-num js-line-number"
data - line - number = "4132" > < /td>
    < td
id = "LC4132"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support array or space separated string of keys</span></td>
    < /tr>
    < tr >
    < td
id = "L4133"
class
= "blob-num js-line-number"
data - line - number = "4133" > < /td>
    < td
id = "LC4133"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isArray(key)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4134"
class
    = "blob-num js-line-number"
    data - line - number = "4134" > < /td>
        < td
    id = "LC4134"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4135"
class
    = "blob-num js-line-number"
    data - line - number = "4135" > < /td>
        < td
    id = "LC4135"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If key is an array of keys...</span></td>
        < /tr>
        < tr >
        < td
    id = "L4136"
class
    = "blob-num js-line-number"
    data - line - number = "4136" > < /td>
        < td
    id = "LC4136"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> We always set camelCase keys, so remove that.</span></td>
        < /tr>
        < tr >
        < td
    id = "L4137"
class
    = "blob-num js-line-number"
    data - line - number = "4137" > < /td>
        < td
    id = "LC4137"
class
    = "blob-code blob-code-inner js-file-line" > key < span
class
    = "pl-k" >= < /span> key<span class="pl-k">.</s
    pan > map(jQuery < span
class
    = "pl-k" >
.<
    /span>camelCase );</
    td >
    < /tr>
    < tr >
    < td
    id = "L4138"
class
    = "blob-num js-line-number"
    data - line - number = "4138" > < /td>
        < td
    id = "LC4138"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4139"
class
= "blob-num js-line-number"
data - line - number = "4139" > < /td>
    < td
id = "LC4139"
class
= "blob-code blob-code-inner js-file-line" > key < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > camelCase(key);
<
/td>
< /tr>
< tr >
< td
id = "L4140"
class
= "blob-num js-line-number"
data - line - number = "4140" > < /td>
    < td
id = "LC4140"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4141"
class
= "blob-num js-line-number"
data - line - number = "4141" > < /td>
    < td
id = "LC4141"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If a key with the spaces exists, use it.</span></td>
    < /tr>
    < tr >
    < td
id = "L4142"
class
= "blob-num js-line-number"
data - line - number = "4142" > < /td>
    < td
id = "LC4142"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise, create an array by matching non-whitespace</span></td>
    < /tr>
    < tr >
    < td
id = "L4143"
class
= "blob-num js-line-number"
data - line - number = "4143" > < /td>
    < td
id = "LC4143"
class
= "blob-code blob-code-inner js-file-line" > key < span
class
= "pl-k" >= < /span> key in cache <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L4144"
class
= "blob-num js-line-number"
data - line - number = "4144" > < /td>
    < td
id = "LC4144"
class
= "blob-code blob-code-inner js-file-line" > [key] < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L4145"
class
= "blob-num js-line-number"
data - line - number = "4145" > < /td>
    < td
id = "LC4145"
class
= "blob-code blob-code-inner js-file-line" > (key < span
class
= "pl-k" >
.<
/span>match( rnothtmlwhite ) <span class="pl-k">||</s
pan > []
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4146"
class
= "blob-num js-line-number"
data - line - number = "4146" > < /td>
    < td
id = "LC4146"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4147"
class
= "blob-num js-line-number"
data - line - number = "4147" > < /td>
    < td
id = "LC4147"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4148"
class
= "blob-num js-line-number"
data - line - number = "4148" > < /td>
    < td
id = "LC4148"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> key<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L4149"
class
= "blob-num js-line-number"
data - line - number = "4149" > < /td>
    < td
id = "LC4149"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4150"
class
= "blob-num js-line-number"
data - line - number = "4150" > < /td>
    < td
id = "LC4150"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4151"
class
    = "blob-num js-line-number"
    data - line - number = "4151" > < /td>
        < td
    id = "LC4151"
class
    = "blob-code blob-code-inner js-file-line" > delete cache[key[i]];
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4152"
class
    = "blob-num js-line-number"
    data - line - number = "4152" > < /td>
        < td
    id = "LC4152"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4153"
class
= "blob-num js-line-number"
data - line - number = "4153" > < /td>
    < td
id = "LC4153"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4154"
class
= "blob-num js-line-number"
data - line - number = "4154" > < /td>
    < td
id = "LC4154"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4155"
class
= "blob-num js-line-number"
data - line - number = "4155" > < /td>
    < td
id = "LC4155"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove the expando if there&#39;s no more data</span></td>
    < /tr>
    < tr >
    < td
id = "L4156"
class
= "blob-num js-line-number"
data - line - number = "4156" > < /td>
    < td
id = "LC4156"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( key <span class="pl-k">===</s
pan > undefined < span
class
= "pl-k" > || < /span> jQuery<span class="pl-k">.</s
pan > isEmptyObject(cache)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4157"
class
    = "blob-num js-line-number"
    data - line - number = "4157" > < /td>
        < td
    id = "LC4157"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4158"
class
    = "blob-num js-line-number"
    data - line - number = "4158" > < /td>
        < td
    id = "LC4158"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: Chrome &lt;=35 - 45</span></td>
        < /tr>
        < tr >
        < td
    id = "L4159"
class
    = "blob-num js-line-number"
    data - line - number = "4159" > < /td>
        < td
    id = "LC4159"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Webkit &amp; Blink performance suffers when deleting properties</span></td>
        < /tr>
        < tr >
        < td
    id = "L4160"
class
    = "blob-num js-line-number"
    data - line - number = "4160" > < /td>
        < td
    id = "LC4160"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> from DOM nodes, so set to undefined instead</span></td>
        < /tr>
        < tr >
        < td
    id = "L4161"
class
    = "blob-num js-line-number"
    data - line - number = "4161" > < /td>
        < td
    id = "LC4161"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)</span></td>
        < /tr>
        < tr >
        < td
    id = "L4162"
class
    = "blob-num js-line-number"
    data - line - number = "4162" > < /td>
        < td
    id = "LC4162"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( owner<span class="pl-k">.</s
    pan > nodeType
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4163"
class
    = "blob-num js-line-number"
    data - line - number = "4163" > < /td>
        < td
    id = "LC4163"
class
    = "blob-code blob-code-inner js-file-line" > owner[ < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > expando
] <
    span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4164"
class
    = "blob-num js-line-number"
    data - line - number = "4164" > < /td>
        < td
    id = "LC4164"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4165"
class
= "blob-num js-line-number"
data - line - number = "4165" > < /td>
    < td
id = "LC4165"
class
= "blob-code blob-code-inner js-file-line" > delete owner[ < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > expando
]
;
<
/td>
< /tr>
< tr >
< td
id = "L4166"
class
= "blob-num js-line-number"
data - line - number = "4166" > < /td>
    < td
id = "LC4166"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4167"
class
= "blob-num js-line-number"
data - line - number = "4167" > < /td>
    < td
id = "LC4167"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4168"
class
= "blob-num js-line-number"
data - line - number = "4168" > < /td>
    < td
id = "LC4168"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4169"
class
= "blob-num js-line-number"
data - line - number = "4169" > < /td>
    < td
id = "LC4169"
class
= "blob-code blob-code-inner js-file-line" > hasData < span
class
= "pl-k" >
:<
/span> function( owner ) {</
td >
< /tr>
< tr >
< td
id = "L4170"
class
= "blob-num js-line-number"
data - line - number = "4170" > < /td>
    < td
id = "LC4170"
class
= "blob-code blob-code-inner js-file-line" >
var cache
<
span
class
= "pl-k" >= < /span> owner[ <span class="pl-c1">this</span><span class="pl-k">.</span>expando ];</
td >
< /tr>
< tr >
< td
id = "L4171"
class
= "blob-num js-line-number"
data - line - number = "4171" > < /td>
    < td
id = "LC4171"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> cache <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>jQuery<span class="pl-k">.</s
pan > isEmptyObject(cache);
<
/td>
< /tr>
< tr >
< td
id = "L4172"
class
= "blob-num js-line-number"
data - line - number = "4172" > < /td>
    < td
id = "LC4172"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4173"
class
= "blob-num js-line-number"
data - line - number = "4173" > < /td>
    < td
id = "LC4173"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L4174"
class
= "blob-num js-line-number"
data - line - number = "4174" > < /td>
    < td
id = "LC4174"
class
= "blob-code blob-code-inner js-file-line" >
var dataPriv
<
span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > Data < /span>();</
td >
< /tr>
< tr >
< td
id = "L4175"
class
= "blob-num js-line-number"
data - line - number = "4175" > < /td>
    < td
id = "LC4175"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4176"
class
= "blob-num js-line-number"
data - line - number = "4176" > < /td>
    < td
id = "LC4176"
class
= "blob-code blob-code-inner js-file-line" >
var dataUser
<
span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > Data < /span>();</
td >
< /tr>
< tr >
< td
id = "L4177"
class
= "blob-num js-line-number"
data - line - number = "4177" > < /td>
    < td
id = "LC4177"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4178"
class
= "blob-num js-line-number"
data - line - number = "4178" > < /td>
    < td
id = "LC4178"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4179"
class
= "blob-num js-line-number"
data - line - number = "4179" > < /td>
    < td
id = "LC4179"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4180"
class
= "blob-num js-line-number"
data - line - number = "4180" > < /td>
    < td
id = "LC4180"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>	Implementation Summary</span></td>
    < /tr>
    < tr >
    < td
id = "L4181"
class
= "blob-num js-line-number"
data - line - number = "4181" > < /td>
    < td
id = "LC4181"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L4182"
class
= "blob-num js-line-number"
data - line - number = "4182" > < /td>
    < td
id = "LC4182"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>	1. Enforce API surface and semantic compatibility with 1.9.x branch</span></td>
    < /tr>
    < tr >
    < td
id = "L4183"
class
= "blob-num js-line-number"
data - line - number = "4183" > < /td>
    < td
id = "LC4183"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>	2. Improve the module&#39;s maintainability by reducing the storage</span></td>
    < /tr>
    < tr >
    < td
id = "L4184"
class
= "blob-num js-line-number"
data - line - number = "4184" > < /td>
    < td
id = "LC4184"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>		paths to a single mechanism.</span></td>
    < /tr>
    < tr >
    < td
id = "L4185"
class
= "blob-num js-line-number"
data - line - number = "4185" > < /td>
    < td
id = "LC4185"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>	3. Use the same single mechanism to support &quot;private&quot; and &quot;user&quot; data.</span></td>
    < /tr>
    < tr >
    < td
id = "L4186"
class
= "blob-num js-line-number"
data - line - number = "4186" > < /td>
    < td
id = "LC4186"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>	4. _Never_ expose &quot;private&quot; data to user code (TODO: Drop _data, _removeData)</span></td>
    < /tr>
    < tr >
    < td
id = "L4187"
class
= "blob-num js-line-number"
data - line - number = "4187" > < /td>
    < td
id = "LC4187"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>	5. Avoid exposing implementation details on user objects (eg. expando properties)</span></td>
    < /tr>
    < tr >
    < td
id = "L4188"
class
= "blob-num js-line-number"
data - line - number = "4188" > < /td>
    < td
id = "LC4188"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>	6. Provide a clear path for implementation upgrade to WeakMap in 2014</span></td>
    < /tr>
    < tr >
    < td
id = "L4189"
class
= "blob-num js-line-number"
data - line - number = "4189" > < /td>
    < td
id = "LC4189"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4190"
class
= "blob-num js-line-number"
data - line - number = "4190" > < /td>
    < td
id = "LC4190"
class
= "blob-code blob-code-inner js-file-line" >
var rbrace
<
span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>\{[\w\<span class="pl-smi">W</span>]<span class="pl-k">*</s
pan >\
}<
span
class
= "pl-k" > | < /span>\[[\w\<span class="pl-smi">W</span>]<span class="pl-k">*</s
pan >\])
$ < span
class
= "pl-k" > / < /span>,</
td >
< /tr>
< tr >
< td
id = "L4191"
class
= "blob-num js-line-number"
data - line - number = "4191" > < /td>
    < td
id = "LC4191"
class
= "blob-code blob-code-inner js-file-line" > rmultiDash < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>[<span class="pl-smi">A</span><span class="pl-k">-</span><span class="pl-smi">Z</span>]<span class="pl-k">/ < /span>g;</
td >
< /tr>
< tr >
< td
id = "L4192"
class
= "blob-num js-line-number"
data - line - number = "4192" > < /td>
    < td
id = "LC4192"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4193"
class
= "blob-num js-line-number"
data - line - number = "4193" > < /td>
    < td
id = "LC4193"
class
= "blob-code blob-code-inner js-file-line" > function getData(data) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4194"
    class
        = "blob-num js-line-number"
        data - line - number = "4194" > < /td>
            < td
        id = "LC4194"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( data <span class="pl-k">===</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>true<span class="pl-pds">&quot;</s
        pan > < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L4195"
    class
        = "blob-num js-line-number"
        data - line - number = "4195" > < /td>
            < td
        id = "LC4195"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-c1">true</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4196"
    class
        = "blob-num js-line-number"
        data - line - number = "4196" > < /td>
            < td
        id = "LC4196"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L4197"
class
= "blob-num js-line-number"
data - line - number = "4197" > < /td>
    < td
id = "LC4197"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4198"
class
= "blob-num js-line-number"
data - line - number = "4198" > < /td>
    < td
id = "LC4198"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( data <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>false<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4199"
class
= "blob-num js-line-number"
data - line - number = "4199" > < /td>
    < td
id = "LC4199"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4200"
class
= "blob-num js-line-number"
data - line - number = "4200" > < /td>
    < td
id = "LC4200"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4201"
class
= "blob-num js-line-number"
data - line - number = "4201" > < /td>
    < td
id = "LC4201"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4202"
class
= "blob-num js-line-number"
data - line - number = "4202" > < /td>
    < td
id = "LC4202"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( data <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>null<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4203"
class
= "blob-num js-line-number"
data - line - number = "4203" > < /td>
    < td
id = "LC4203"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4204"
class
= "blob-num js-line-number"
data - line - number = "4204" > < /td>
    < td
id = "LC4204"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4205"
class
= "blob-num js-line-number"
data - line - number = "4205" > < /td>
    < td
id = "LC4205"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4206"
class
= "blob-num js-line-number"
data - line - number = "4206" > < /td>
    < td
id = "LC4206"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Only convert to a number if it doesn&#39;t change the string</span></td>
    < /tr>
    < tr >
    < td
id = "L4207"
class
= "blob-num js-line-number"
data - line - number = "4207" > < /td>
    < td
id = "LC4207"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( data <span class="pl-k">===</s
pan > < span
class
= "pl-k" > + < /span>data <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4208"
class
= "blob-num js-line-number"
data - line - number = "4208" > < /td>
    < td
id = "LC4208"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">+</s
pan > data;
<
/td>
< /tr>
< tr >
< td
id = "L4209"
class
= "blob-num js-line-number"
data - line - number = "4209" > < /td>
    < td
id = "LC4209"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4210"
class
= "blob-num js-line-number"
data - line - number = "4210" > < /td>
    < td
id = "LC4210"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4211"
class
= "blob-num js-line-number"
data - line - number = "4211" > < /td>
    < td
id = "LC4211"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( rbrace<span class="pl-k">.</s
pan > test(data)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4212"
class
    = "blob-num js-line-number"
    data - line - number = "4212" > < /td>
        < td
    id = "LC4212"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">JSON</s
    pan > < span
class
    = "pl-k" >
.<
    /span>parse( data );</
    td >
    < /tr>
    < tr >
    < td
    id = "L4213"
class
    = "blob-num js-line-number"
    data - line - number = "4213" > < /td>
        < td
    id = "LC4213"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4214"
class
= "blob-num js-line-number"
data - line - number = "4214" > < /td>
    < td
id = "LC4214"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4215"
class
= "blob-num js-line-number"
data - line - number = "4215" > < /td>
    < td
id = "LC4215"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> data;</
td >
< /tr>
< tr >
< td
id = "L4216"
class
= "blob-num js-line-number"
data - line - number = "4216" > < /td>
    < td
id = "LC4216"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4217"
class
= "blob-num js-line-number"
data - line - number = "4217" > < /td>
    < td
id = "LC4217"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4218"
class
= "blob-num js-line-number"
data - line - number = "4218" > < /td>
    < td
id = "LC4218"
class
= "blob-code blob-code-inner js-file-line" > function dataAttr(elem, key, data) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4219"
class
    = "blob-num js-line-number"
    data - line - number = "4219" > < /td>
        < td
    id = "LC4219"
class
    = "blob-code blob-code-inner js-file-line" >
    var name;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4220"
class
    = "blob-num js-line-number"
    data - line - number = "4220" > < /td>
        < td
    id = "LC4220"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4221"
class
    = "blob-num js-line-number"
    data - line - number = "4221" > < /td>
        < td
    id = "LC4221"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If nothing was found internally, try to fetch any</span></td>
        < /tr>
        < tr >
        < td
    id = "L4222"
class
    = "blob-num js-line-number"
    data - line - number = "4222" > < /td>
        < td
    id = "LC4222"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> data from the HTML5 data-* attribute</span></td>
        < /tr>
        < tr >
        < td
    id = "L4223"
class
    = "blob-num js-line-number"
    data - line - number = "4223" > < /td>
        < td
    id = "LC4223"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( data <span class="pl-k">===</s
    pan > undefined < span
class
    = "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4224"
class
    = "blob-num js-line-number"
    data - line - number = "4224" > < /td>
        < td
    id = "LC4224"
class
    = "blob-code blob-code-inner js-file-line" > name < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > data - < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> key<span class="pl-k">.</s
    pan > replace(rmultiDash, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>-$&amp;<span class="pl-pds">&quot;</s
    pan > < /span> )<span class="pl-k">.</s
    pan > toLowerCase();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4225"
class
    = "blob-num js-line-number"
    data - line - number = "4225" > < /td>
        < td
    id = "LC4225"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > getAttribute(name);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4226"
class
    = "blob-num js-line-number"
    data - line - number = "4226" > < /td>
        < td
    id = "LC4226"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4227"
class
    = "blob-num js-line-number"
    data - line - number = "4227" > < /td>
        < td
    id = "LC4227"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof data <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>string<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4228"
class
    = "blob-num js-line-number"
    data - line - number = "4228" > < /td>
        < td
    id = "LC4228"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    try
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4229"
class
    = "blob-num js-line-number"
    data - line - number = "4229" > < /td>
        < td
    id = "LC4229"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >= < /span> getData( data );</
    td >
    < /tr>
    < tr >
    < td
    id = "L4230"
class
    = "blob-num js-line-number"
    data - line - number = "4230" > < /td>
        < td
    id = "LC4230"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
catch<
/span> ( e ) {}</
td >
< /tr>
< tr >
< td
id = "L4231"
class
= "blob-num js-line-number"
data - line - number = "4231" > < /td>
    < td
id = "LC4231"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4232"
class
= "blob-num js-line-number"
data - line - number = "4232" > < /td>
    < td
id = "LC4232"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure we set the data so it isn&#39;t changed later</span></td>
    < /tr>
    < tr >
    < td
id = "L4233"
class
= "blob-num js-line-number"
data - line - number = "4233" > < /td>
    < td
id = "LC4233"
class
= "blob-code blob-code-inner js-file-line" > dataUser < span
class
= "pl-k" >
.<
/span>set( elem, key, data );</
td >
< /tr>
< tr >
< td
id = "L4234"
class
= "blob-num js-line-number"
data - line - number = "4234" > < /td>
    < td
id = "LC4234"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4235"
class
= "blob-num js-line-number"
data - line - number = "4235" > < /td>
    < td
id = "LC4235"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >= < /span> undefined;</
td >
< /tr>
< tr >
< td
id = "L4236"
class
= "blob-num js-line-number"
data - line - number = "4236" > < /td>
    < td
id = "LC4236"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4237"
class
= "blob-num js-line-number"
data - line - number = "4237" > < /td>
    < td
id = "LC4237"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4238"
class
= "blob-num js-line-number"
data - line - number = "4238" > < /td>
    < td
id = "LC4238"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> data;</
td >
< /tr>
< tr >
< td
id = "L4239"
class
= "blob-num js-line-number"
data - line - number = "4239" > < /td>
    < td
id = "LC4239"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4240"
class
= "blob-num js-line-number"
data - line - number = "4240" > < /td>
    < td
id = "LC4240"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4241"
class
= "blob-num js-line-number"
data - line - number = "4241" > < /td>
    < td
id = "LC4241"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L4242"
class
= "blob-num js-line-number"
data - line - number = "4242" > < /td>
    < td
id = "LC4242"
class
= "blob-code blob-code-inner js-file-line" > hasData < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L4243"
class
= "blob-num js-line-number"
data - line - number = "4243" > < /td>
    < td
id = "LC4243"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dataUser<span class="pl-k">.</s
pan > hasData(elem) < span
class
= "pl-k" > || < /span> dataPriv<span class="pl-k">.</s
pan > hasData(elem);
<
/td>
< /tr>
< tr >
< td
id = "L4244"
class
= "blob-num js-line-number"
data - line - number = "4244" > < /td>
    < td
id = "LC4244"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4245"
class
= "blob-num js-line-number"
data - line - number = "4245" > < /td>
    < td
id = "LC4245"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4246"
class
= "blob-num js-line-number"
data - line - number = "4246" > < /td>
    < td
id = "LC4246"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >
:<
/span> function( elem, name, data ) {</
td >
< /tr>
< tr >
< td
id = "L4247"
class
= "blob-num js-line-number"
data - line - number = "4247" > < /td>
    < td
id = "LC4247"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dataUser<span class="pl-k">.</s
pan > access(elem, name, data);
<
/td>
< /tr>
< tr >
< td
id = "L4248"
class
= "blob-num js-line-number"
data - line - number = "4248" > < /td>
    < td
id = "LC4248"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4249"
class
= "blob-num js-line-number"
data - line - number = "4249" > < /td>
    < td
id = "LC4249"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4250"
class
= "blob-num js-line-number"
data - line - number = "4250" > < /td>
    < td
id = "LC4250"
class
= "blob-code blob-code-inner js-file-line" > removeData < span
class
= "pl-k" >
:<
/span> function( elem, name ) {</
td >
< /tr>
< tr >
< td
id = "L4251"
class
= "blob-num js-line-number"
data - line - number = "4251" > < /td>
    < td
id = "LC4251"
class
= "blob-code blob-code-inner js-file-line" > dataUser < span
class
= "pl-k" >
.<
/span>remove( elem, name );</
td >
< /tr>
< tr >
< td
id = "L4252"
class
= "blob-num js-line-number"
data - line - number = "4252" > < /td>
    < td
id = "LC4252"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4253"
class
= "blob-num js-line-number"
data - line - number = "4253" > < /td>
    < td
id = "LC4253"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4254"
class
= "blob-num js-line-number"
data - line - number = "4254" > < /td>
    < td
id = "LC4254"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> TODO: Now that all calls to _data and _removeData have been replaced</span></td>
    < /tr>
    < tr >
    < td
id = "L4255"
class
= "blob-num js-line-number"
data - line - number = "4255" > < /td>
    < td
id = "LC4255"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> with direct calls to dataPriv methods, these can be deprecated.</span></td>
    < /tr>
    < tr >
    < td
id = "L4256"
class
= "blob-num js-line-number"
data - line - number = "4256" > < /td>
    < td
id = "LC4256"
class
= "blob-code blob-code-inner js-file-line" > _data < span
class
= "pl-k" >
:<
/span> function( elem, name, data ) {</
td >
< /tr>
< tr >
< td
id = "L4257"
class
= "blob-num js-line-number"
data - line - number = "4257" > < /td>
    < td
id = "LC4257"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dataPriv<span class="pl-k">.</s
pan > access(elem, name, data);
<
/td>
< /tr>
< tr >
< td
id = "L4258"
class
= "blob-num js-line-number"
data - line - number = "4258" > < /td>
    < td
id = "LC4258"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4259"
class
= "blob-num js-line-number"
data - line - number = "4259" > < /td>
    < td
id = "LC4259"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4260"
class
= "blob-num js-line-number"
data - line - number = "4260" > < /td>
    < td
id = "LC4260"
class
= "blob-code blob-code-inner js-file-line" > _removeData < span
class
= "pl-k" >
:<
/span> function( elem, name ) {</
td >
< /tr>
< tr >
< td
id = "L4261"
class
= "blob-num js-line-number"
data - line - number = "4261" > < /td>
    < td
id = "LC4261"
class
= "blob-code blob-code-inner js-file-line" > dataPriv < span
class
= "pl-k" >
.<
/span>remove( elem, name );</
td >
< /tr>
< tr >
< td
id = "L4262"
class
= "blob-num js-line-number"
data - line - number = "4262" > < /td>
    < td
id = "LC4262"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4263"
class
= "blob-num js-line-number"
data - line - number = "4263" > < /td>
    < td
id = "LC4263"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4264"
class
= "blob-num js-line-number"
data - line - number = "4264" > < /td>
    < td
id = "LC4264"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4265"
class
= "blob-num js-line-number"
data - line - number = "4265" > < /td>
    < td
id = "LC4265"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L4266"
class
= "blob-num js-line-number"
data - line - number = "4266" > < /td>
    < td
id = "LC4266"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >
:<
/span> function( key, value ) {</
td >
< /tr>
< tr >
< td
id = "L4267"
class
= "blob-num js-line-number"
data - line - number = "4267" > < /td>
    < td
id = "LC4267"
class
= "blob-code blob-code-inner js-file-line" >
var i, name, data, <
/td>
< /tr>
< tr >
< td
id = "L4268"
class
= "blob-num js-line-number"
data - line - number = "4268" > < /td>
    < td
id = "LC4268"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > [ < span
class
= "pl-c1" > 0 < /span> ],</
td >
< /tr>
< tr >
< td
id = "L4269"
class
= "blob-num js-line-number"
data - line - number = "4269" > < /td>
    < td
id = "LC4269"
class
= "blob-code blob-code-inner js-file-line" > attrs < span
class
= "pl-k" >= < /span> elem <span class="pl-k">&amp;&amp;</s
pan > elem < span
class
= "pl-k" >
.<
/span>attributes;</
td >
< /tr>
< tr >
< td
id = "L4270"
class
= "blob-num js-line-number"
data - line - number = "4270" > < /td>
    < td
id = "LC4270"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4271"
class
= "blob-num js-line-number"
data - line - number = "4271" > < /td>
    < td
id = "LC4271"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Gets all values</span></td>
    < /tr>
    < tr >
    < td
id = "L4272"
class
= "blob-num js-line-number"
data - line - number = "4272" > < /td>
    < td
id = "LC4272"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( key <span class="pl-k">===</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4273"
class
    = "blob-num js-line-number"
    data - line - number = "4273" > < /td>
        < td
    id = "LC4273"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>length ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4274"
class
    = "blob-num js-line-number"
    data - line - number = "4274" > < /td>
        < td
    id = "LC4274"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >= < /span> dataUser<span class="pl-k">.</s
    pan > get(elem);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4275"
class
    = "blob-num js-line-number"
    data - line - number = "4275" > < /td>
        < td
    id = "LC4275"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4276"
class
    = "blob-num js-line-number"
    data - line - number = "4276" > < /td>
        < td
    id = "LC4276"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
    pan > dataPriv < span
class
    = "pl-k" >
.<
    /span>get( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > hasDataAttrs < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4277"
class
    = "blob-num js-line-number"
    data - line - number = "4277" > < /td>
        < td
    id = "LC4277"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> attrs<span class="pl-k">.</s
    pan > length;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4278"
class
    = "blob-num js-line-number"
    data - line - number = "4278" > < /td>
        < td
    id = "LC4278"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( i<span class="pl-k">--</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4279"
class
    = "blob-num js-line-number"
    data - line - number = "4279" > < /td>
        < td
    id = "LC4279"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4280"
class
    = "blob-num js-line-number"
    data - line - number = "4280" > < /td>
        < td
    id = "LC4280"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE 11 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L4281"
class
    = "blob-num js-line-number"
    data - line - number = "4281" > < /td>
        < td
    id = "LC4281"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> The attrs elements can be null (#14894)</span></td>
        < /tr>
        < tr >
        < td
    id = "L4282"
class
    = "blob-num js-line-number"
    data - line - number = "4282" > < /td>
        < td
    id = "LC4282"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( attrs[ i ] ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4283"
class
    = "blob-num js-line-number"
    data - line - number = "4283" > < /td>
        < td
    id = "LC4283"
class
    = "blob-code blob-code-inner js-file-line" > name < span
class
    = "pl-k" >= < /span> attrs[ i ]<span class="pl-k">.</s
    pan > name;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4284"
class
    = "blob-num js-line-number"
    data - line - number = "4284" > < /td>
        < td
    id = "LC4284"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( name<span class="pl-k">.</s
    pan > indexOf( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>data-<span class="pl-pds">&quot;</s
    pan > < /span> ) <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 0 < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4285"
class
    = "blob-num js-line-number"
    data - line - number = "4285" > < /td>
        < td
    id = "LC4285"
class
    = "blob-code blob-code-inner js-file-line" > name < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > camelCase(name < span
class
    = "pl-k" >
.<
    /span>slice( <span class="pl-c1">5</s
    pan >
) )
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4286"
class
    = "blob-num js-line-number"
    data - line - number = "4286" > < /td>
        < td
    id = "LC4286"
class
    = "blob-code blob-code-inner js-file-line" > dataAttr(elem, name, data[name]);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4287"
class
    = "blob-num js-line-number"
    data - line - number = "4287" > < /td>
        < td
    id = "LC4287"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4288"
class
= "blob-num js-line-number"
data - line - number = "4288" > < /td>
    < td
id = "LC4288"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4289"
class
= "blob-num js-line-number"
data - line - number = "4289" > < /td>
    < td
id = "LC4289"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4290"
class
= "blob-num js-line-number"
data - line - number = "4290" > < /td>
    < td
id = "LC4290"
class
= "blob-code blob-code-inner js-file-line" > dataPriv < span
class
= "pl-k" >
.<
/span>set( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > hasDataAttrs < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-c1" > true < /span> );</
td >
< /tr>
< tr >
< td
id = "L4291"
class
= "blob-num js-line-number"
data - line - number = "4291" > < /td>
    < td
id = "LC4291"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4292"
class
= "blob-num js-line-number"
data - line - number = "4292" > < /td>
    < td
id = "LC4292"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4293"
class
= "blob-num js-line-number"
data - line - number = "4293" > < /td>
    < td
id = "LC4293"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4294"
class
= "blob-num js-line-number"
data - line - number = "4294" > < /td>
    < td
id = "LC4294"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> data;</
td >
< /tr>
< tr >
< td
id = "L4295"
class
= "blob-num js-line-number"
data - line - number = "4295" > < /td>
    < td
id = "LC4295"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4296"
class
= "blob-num js-line-number"
data - line - number = "4296" > < /td>
    < td
id = "LC4296"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4297"
class
= "blob-num js-line-number"
data - line - number = "4297" > < /td>
    < td
id = "LC4297"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Sets multiple values</span></td>
    < /tr>
    < tr >
    < td
id = "L4298"
class
= "blob-num js-line-number"
data - line - number = "4298" > < /td>
    < td
id = "LC4298"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof key <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4299"
class
= "blob-num js-line-number"
data - line - number = "4299" > < /td>
    < td
id = "LC4299"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L4300"
class
= "blob-num js-line-number"
data - line - number = "4300" > < /td>
    < td
id = "LC4300"
class
= "blob-code blob-code-inner js-file-line" > dataUser < span
class
= "pl-k" >
.<
/span>set( <span class="pl-c1">this</s
pan >, key
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4301"
class
= "blob-num js-line-number"
data - line - number = "4301" > < /td>
    < td
id = "LC4301"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4302"
class
= "blob-num js-line-number"
data - line - number = "4302" > < /td>
    < td
id = "LC4302"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4303"
class
= "blob-num js-line-number"
data - line - number = "4303" > < /td>
    < td
id = "LC4303"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4304"
class
= "blob-num js-line-number"
data - line - number = "4304" > < /td>
    < td
id = "LC4304"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> access( <span class="pl-c1">this</s
pan >, function (value) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4305"
class
    = "blob-num js-line-number"
    data - line - number = "4305" > < /td>
        < td
    id = "LC4305"
class
    = "blob-code blob-code-inner js-file-line" >
    var data;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4306"
class
    = "blob-num js-line-number"
    data - line - number = "4306" > < /td>
        < td
    id = "LC4306"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4307"
class
    = "blob-num js-line-number"
    data - line - number = "4307" > < /td>
        < td
    id = "LC4307"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> The calling jQuery object (element matches) is not empty</span></td>
        < /tr>
        < tr >
        < td
    id = "L4308"
class
    = "blob-num js-line-number"
    data - line - number = "4308" > < /td>
        < td
    id = "LC4308"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> (and therefore has an element appears at this[ 0 ]) and the</span></td>
        < /tr>
        < tr >
        < td
    id = "L4309"
class
    = "blob-num js-line-number"
    data - line - number = "4309" > < /td>
        < td
    id = "LC4309"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> `value` parameter was not undefined. An empty jQuery object</span></td>
        < /tr>
        < tr >
        < td
    id = "L4310"
class
    = "blob-num js-line-number"
    data - line - number = "4310" > < /td>
        < td
    id = "LC4310"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> will result in `undefined` for elem = this[ 0 ] which will</span></td>
        < /tr>
        < tr >
        < td
    id = "L4311"
class
    = "blob-num js-line-number"
    data - line - number = "4311" > < /td>
        < td
    id = "LC4311"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> throw an exception if an attempt to read a data cache is made.</span></td>
        < /tr>
        < tr >
        < td
    id = "L4312"
class
    = "blob-num js-line-number"
    data - line - number = "4312" > < /td>
        < td
    id = "LC4312"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem <span class="pl-k">&amp;&amp;</s
    pan > value < span
class
    = "pl-k" >= == < /span> undefined ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4313"
class
    = "blob-num js-line-number"
    data - line - number = "4313" > < /td>
        < td
    id = "LC4313"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4314"
class
    = "blob-num js-line-number"
    data - line - number = "4314" > < /td>
        < td
    id = "LC4314"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Attempt to get data from the cache</span></td>
        < /tr>
        < tr >
        < td
    id = "L4315"
class
    = "blob-num js-line-number"
    data - line - number = "4315" > < /td>
        < td
    id = "LC4315"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> The key will always be camelCased in Data</span></td>
        < /tr>
        < tr >
        < td
    id = "L4316"
class
    = "blob-num js-line-number"
    data - line - number = "4316" > < /td>
        < td
    id = "LC4316"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >= < /span> dataUser<span class="pl-k">.</s
    pan > get(elem, key);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4317"
class
    = "blob-num js-line-number"
    data - line - number = "4317" > < /td>
        < td
    id = "LC4317"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( data <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> undefined ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4318"
class
    = "blob-num js-line-number"
    data - line - number = "4318" > < /td>
        < td
    id = "LC4318"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> data;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4319"
class
    = "blob-num js-line-number"
    data - line - number = "4319" > < /td>
        < td
    id = "LC4319"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L4320"
class
= "blob-num js-line-number"
data - line - number = "4320" > < /td>
    < td
id = "LC4320"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4321"
class
= "blob-num js-line-number"
data - line - number = "4321" > < /td>
    < td
id = "LC4321"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Attempt to &quot;discover&quot; the data in</span></td>
    < /tr>
    < tr >
    < td
id = "L4322"
class
= "blob-num js-line-number"
data - line - number = "4322" > < /td>
    < td
id = "LC4322"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> HTML5 custom data-* attrs</span></td>
    < /tr>
    < tr >
    < td
id = "L4323"
class
= "blob-num js-line-number"
data - line - number = "4323" > < /td>
    < td
id = "LC4323"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >= < /span> dataAttr( elem, key );</
td >
< /tr>
< tr >
< td
id = "L4324"
class
= "blob-num js-line-number"
data - line - number = "4324" > < /td>
    < td
id = "LC4324"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( data <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined ) {</
td >
< /tr>
< tr >
< td
id = "L4325"
class
= "blob-num js-line-number"
data - line - number = "4325" > < /td>
    < td
id = "LC4325"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> data;</
td >
< /tr>
< tr >
< td
id = "L4326"
class
= "blob-num js-line-number"
data - line - number = "4326" > < /td>
    < td
id = "LC4326"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4327"
class
= "blob-num js-line-number"
data - line - number = "4327" > < /td>
    < td
id = "LC4327"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4328"
class
= "blob-num js-line-number"
data - line - number = "4328" > < /td>
    < td
id = "LC4328"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> We tried really hard, but the data doesn&#39;t exist.</span></td>
    < /tr>
    < tr >
    < td
id = "L4329"
class
= "blob-num js-line-number"
data - line - number = "4329" > < /td>
    < td
id = "LC4329"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L4330"
class
= "blob-num js-line-number"
data - line - number = "4330" > < /td>
    < td
id = "LC4330"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4331"
class
= "blob-num js-line-number"
data - line - number = "4331" > < /td>
    < td
id = "LC4331"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4332"
class
= "blob-num js-line-number"
data - line - number = "4332" > < /td>
    < td
id = "LC4332"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set the data...</span></td>
    < /tr>
    < tr >
    < td
id = "L4333"
class
= "blob-num js-line-number"
data - line - number = "4333" > < /td>
    < td
id = "LC4333"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > each(function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4334"
class
    = "blob-num js-line-number"
    data - line - number = "4334" > < /td>
        < td
    id = "LC4334"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4335"
class
    = "blob-num js-line-number"
    data - line - number = "4335" > < /td>
        < td
    id = "LC4335"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> We always store the camelCased key</span></td>
        < /tr>
        < tr >
        < td
    id = "L4336"
class
    = "blob-num js-line-number"
    data - line - number = "4336" > < /td>
        < td
    id = "LC4336"
class
    = "blob-code blob-code-inner js-file-line" > dataUser < span
class
    = "pl-k" >
.<
    /span>set( <span class="pl-c1">this</s
    pan >, key, value
);
<
/td>
< /tr>
< tr >
< td
id = "L4337"
class
= "blob-num js-line-number"
data - line - number = "4337" > < /td>
    < td
id = "LC4337"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4338"
class
= "blob-num js-line-number"
data - line - number = "4338" > < /td>
    < td
id = "LC4338"
class
= "blob-code blob-code-inner js-file-line" >
}, <
span
class
= "pl-c1" > null < /span>, value, arguments<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">1</s
pan >,
<
span
class
= "pl-c1" > null < /span>, <span class="pl-c1">true</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4339"
class
= "blob-num js-line-number"
data - line - number = "4339" > < /td>
    < td
id = "LC4339"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4340"
class
= "blob-num js-line-number"
data - line - number = "4340" > < /td>
    < td
id = "LC4340"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4341"
class
= "blob-num js-line-number"
data - line - number = "4341" > < /td>
    < td
id = "LC4341"
class
= "blob-code blob-code-inner js-file-line" > removeData < span
class
= "pl-k" >
:<
/span> function( key ) {</
td >
< /tr>
< tr >
< td
id = "L4342"
class
= "blob-num js-line-number"
data - line - number = "4342" > < /td>
    < td
id = "LC4342"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L4343"
class
= "blob-num js-line-number"
data - line - number = "4343" > < /td>
    < td
id = "LC4343"
class
= "blob-code blob-code-inner js-file-line" > dataUser < span
class
= "pl-k" >
.<
/span>remove( <span class="pl-c1">this</s
pan >, key
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4344"
class
= "blob-num js-line-number"
data - line - number = "4344" > < /td>
    < td
id = "LC4344"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4345"
class
= "blob-num js-line-number"
data - line - number = "4345" > < /td>
    < td
id = "LC4345"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4346"
class
= "blob-num js-line-number"
data - line - number = "4346" > < /td>
    < td
id = "LC4346"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4347"
class
= "blob-num js-line-number"
data - line - number = "4347" > < /td>
    < td
id = "LC4347"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4348"
class
= "blob-num js-line-number"
data - line - number = "4348" > < /td>
    < td
id = "LC4348"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4349"
class
= "blob-num js-line-number"
data - line - number = "4349" > < /td>
    < td
id = "LC4349"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L4350"
class
= "blob-num js-line-number"
data - line - number = "4350" > < /td>
    < td
id = "LC4350"
class
= "blob-code blob-code-inner js-file-line" > queue < span
class
= "pl-k" >
:<
/span> function( elem, type, data ) {</
td >
< /tr>
< tr >
< td
id = "L4351"
class
= "blob-num js-line-number"
data - line - number = "4351" > < /td>
    < td
id = "LC4351"
class
= "blob-code blob-code-inner js-file-line" >
var queue;
<
/td>
< /tr>
< tr >
< td
id = "L4352"
class
= "blob-num js-line-number"
data - line - number = "4352" > < /td>
    < td
id = "LC4352"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4353"
class
= "blob-num js-line-number"
data - line - number = "4353" > < /td>
    < td
id = "LC4353"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem ) {</
td >
< /tr>
< tr >
< td
id = "L4354"
class
= "blob-num js-line-number"
data - line - number = "4354" > < /td>
    < td
id = "LC4354"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >= < /span> ( type <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fx<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>queue<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L4355"
class
= "blob-num js-line-number"
data - line - number = "4355" > < /td>
    < td
id = "LC4355"
class
= "blob-code blob-code-inner js-file-line" > queue < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > get(elem, type);
<
/td>
< /tr>
< tr >
< td
id = "L4356"
class
= "blob-num js-line-number"
data - line - number = "4356" > < /td>
    < td
id = "LC4356"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4357"
class
= "blob-num js-line-number"
data - line - number = "4357" > < /td>
    < td
id = "LC4357"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Speed up dequeue by getting out quickly if this is just a lookup</span></td>
    < /tr>
    < tr >
    < td
id = "L4358"
class
= "blob-num js-line-number"
data - line - number = "4358" > < /td>
    < td
id = "LC4358"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( data ) {</
td >
< /tr>
< tr >
< td
id = "L4359"
class
= "blob-num js-line-number"
data - line - number = "4359" > < /td>
    < td
id = "LC4359"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > queue < span
class
= "pl-k" > || < /span> jQuery<span class="pl-k">.</s
pan > isArray(data)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4360"
class
    = "blob-num js-line-number"
    data - line - number = "4360" > < /td>
        < td
    id = "LC4360"
class
    = "blob-code blob-code-inner js-file-line" > queue < span
class
    = "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
    pan > access(elem, type, jQuery < span
class
    = "pl-k" >
.<
    /span>makeArray( data ) );</
    td >
    < /tr>
    < tr >
    < td
    id = "L4361"
class
    = "blob-num js-line-number"
    data - line - number = "4361" > < /td>
        < td
    id = "LC4361"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4362"
class
= "blob-num js-line-number"
data - line - number = "4362" > < /td>
    < td
id = "LC4362"
class
= "blob-code blob-code-inner js-file-line" > queue < span
class
= "pl-k" >
.<
/span>push( data );</
td >
< /tr>
< tr >
< td
id = "L4363"
class
= "blob-num js-line-number"
data - line - number = "4363" > < /td>
    < td
id = "LC4363"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4364"
class
= "blob-num js-line-number"
data - line - number = "4364" > < /td>
    < td
id = "LC4364"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4365"
class
= "blob-num js-line-number"
data - line - number = "4365" > < /td>
    < td
id = "LC4365"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> queue <span class="pl-k">||</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L4366"
class
= "blob-num js-line-number"
data - line - number = "4366" > < /td>
    < td
id = "LC4366"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4367"
class
= "blob-num js-line-number"
data - line - number = "4367" > < /td>
    < td
id = "LC4367"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4368"
class
= "blob-num js-line-number"
data - line - number = "4368" > < /td>
    < td
id = "LC4368"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4369"
class
= "blob-num js-line-number"
data - line - number = "4369" > < /td>
    < td
id = "LC4369"
class
= "blob-code blob-code-inner js-file-line" > dequeue < span
class
= "pl-k" >
:<
/span> function( elem, type ) {</
td >
< /tr>
< tr >
< td
id = "L4370"
class
= "blob-num js-line-number"
data - line - number = "4370" > < /td>
    < td
id = "LC4370"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >= < /span> type <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fx<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L4371"
class
= "blob-num js-line-number"
data - line - number = "4371" > < /td>
    < td
id = "LC4371"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4372"
class
= "blob-num js-line-number"
data - line - number = "4372" > < /td>
    < td
id = "LC4372"
class
= "blob-code blob-code-inner js-file-line" >
var queue
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > queue(elem, type),
<
/td>
< /tr>
< tr >
< td
id = "L4373"
class
= "blob-num js-line-number"
data - line - number = "4373" > < /td>
    < td
id = "LC4373"
class
= "blob-code blob-code-inner js-file-line" > startLength < span
class
= "pl-k" >= < /span> queue<span class="pl-k">.</s
pan > length,
<
/td>
< /tr>
< tr >
< td
id = "L4374"
class
= "blob-num js-line-number"
data - line - number = "4374" > < /td>
    < td
id = "LC4374"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >= < /span> queue<span class="pl-k">.</s
pan > shift(),
<
/td>
< /tr>
< tr >
< td
id = "L4375"
class
= "blob-num js-line-number"
data - line - number = "4375" > < /td>
    < td
id = "LC4375"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > _queueHooks(elem, type),
<
/td>
< /tr>
< tr >
< td
id = "L4376"
class
= "blob-num js-line-number"
data - line - number = "4376" > < /td>
    < td
id = "LC4376"
class
= "blob-code blob-code-inner js-file-line" > next < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L4377"
class
= "blob-num js-line-number"
data - line - number = "4377" > < /td>
    < td
id = "LC4377"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>dequeue( elem, type );</
td >
< /tr>
< tr >
< td
id = "L4378"
class
= "blob-num js-line-number"
data - line - number = "4378" > < /td>
    < td
id = "LC4378"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L4379"
class
= "blob-num js-line-number"
data - line - number = "4379" > < /td>
    < td
id = "LC4379"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4380"
class
= "blob-num js-line-number"
data - line - number = "4380" > < /td>
    < td
id = "LC4380"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If the fx queue is dequeued, always remove the progress sentinel</span></td>
    < /tr>
    < tr >
    < td
id = "L4381"
class
= "blob-num js-line-number"
data - line - number = "4381" > < /td>
    < td
id = "LC4381"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fn <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>inprogress<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4382"
class
= "blob-num js-line-number"
data - line - number = "4382" > < /td>
    < td
id = "LC4382"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >= < /span> queue<span class="pl-k">.</s
pan > shift();
<
/td>
< /tr>
< tr >
< td
id = "L4383"
class
= "blob-num js-line-number"
data - line - number = "4383" > < /td>
    < td
id = "LC4383"
class
= "blob-code blob-code-inner js-file-line" > startLength < span
class
= "pl-k" > -- < /span>;</
td >
< /tr>
< tr >
< td
id = "L4384"
class
= "blob-num js-line-number"
data - line - number = "4384" > < /td>
    < td
id = "LC4384"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4385"
class
= "blob-num js-line-number"
data - line - number = "4385" > < /td>
    < td
id = "LC4385"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4386"
class
= "blob-num js-line-number"
data - line - number = "4386" > < /td>
    < td
id = "LC4386"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fn ) {</
td >
< /tr>
< tr >
< td
id = "L4387"
class
= "blob-num js-line-number"
data - line - number = "4387" > < /td>
    < td
id = "LC4387"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4388"
class
= "blob-num js-line-number"
data - line - number = "4388" > < /td>
    < td
id = "LC4388"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add a progress sentinel to prevent the fx queue from being</span></td>
    < /tr>
    < tr >
    < td
id = "L4389"
class
= "blob-num js-line-number"
data - line - number = "4389" > < /td>
    < td
id = "LC4389"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> automatically dequeued</span></td>
    < /tr>
    < tr >
    < td
id = "L4390"
class
= "blob-num js-line-number"
data - line - number = "4390" > < /td>
    < td
id = "LC4390"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fx<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4391"
class
= "blob-num js-line-number"
data - line - number = "4391" > < /td>
    < td
id = "LC4391"
class
= "blob-code blob-code-inner js-file-line" > queue < span
class
= "pl-k" >
.<
/span>unshift( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > inprogress < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4392"
class
= "blob-num js-line-number"
data - line - number = "4392" > < /td>
    < td
id = "LC4392"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4393"
class
= "blob-num js-line-number"
data - line - number = "4393" > < /td>
    < td
id = "LC4393"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4394"
class
= "blob-num js-line-number"
data - line - number = "4394" > < /td>
    < td
id = "LC4394"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Clear up the last queue stop function</span></td>
    < /tr>
    < tr >
    < td
id = "L4395"
class
= "blob-num js-line-number"
data - line - number = "4395" > < /td>
    < td
id = "LC4395"
class
= "blob-code blob-code-inner js-file-line" > delete hooks < span
class
= "pl-k" >
.<
/span>stop;</
td >
< /tr>
< tr >
< td
id = "L4396"
class
= "blob-num js-line-number"
data - line - number = "4396" > < /td>
    < td
id = "LC4396"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >
.<
/span>call( elem, next, hooks );</
td >
< /tr>
< tr >
< td
id = "L4397"
class
= "blob-num js-line-number"
data - line - number = "4397" > < /td>
    < td
id = "LC4397"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4398"
class
= "blob-num js-line-number"
data - line - number = "4398" > < /td>
    < td
id = "LC4398"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4399"
class
= "blob-num js-line-number"
data - line - number = "4399" > < /td>
    < td
id = "LC4399"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > startLength < span
class
= "pl-k" > &amp;&amp; < /span> hooks ) {</
td >
< /tr>
< tr >
< td
id = "L4400"
class
= "blob-num js-line-number"
data - line - number = "4400" > < /td>
    < td
id = "LC4400"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >
.<
/span>empty<span class="pl-k">.</s
pan > fire();
<
/td>
< /tr>
< tr >
< td
id = "L4401"
class
= "blob-num js-line-number"
data - line - number = "4401" > < /td>
    < td
id = "LC4401"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4402"
class
= "blob-num js-line-number"
data - line - number = "4402" > < /td>
    < td
id = "LC4402"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4403"
class
= "blob-num js-line-number"
data - line - number = "4403" > < /td>
    < td
id = "LC4403"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4404"
class
= "blob-num js-line-number"
data - line - number = "4404" > < /td>
    < td
id = "LC4404"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Not public - generate a queueHooks object, or return the current one</span></td>
    < /tr>
    < tr >
    < td
id = "L4405"
class
= "blob-num js-line-number"
data - line - number = "4405" > < /td>
    < td
id = "LC4405"
class
= "blob-code blob-code-inner js-file-line" > _queueHooks < span
class
= "pl-k" >
:<
/span> function( elem, type ) {</
td >
< /tr>
< tr >
< td
id = "L4406"
class
= "blob-num js-line-number"
data - line - number = "4406" > < /td>
    < td
id = "LC4406"
class
= "blob-code blob-code-inner js-file-line" >
var key
<
span
class
= "pl-k" >= < /span> type <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>queueHooks<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L4407"
class
= "blob-num js-line-number"
data - line - number = "4407" > < /td>
    < td
id = "LC4407"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> dataPriv<span class="pl-k">.</s
pan > get(elem, key) < span
class
= "pl-k" > || < /span> dataPriv<span class="pl-k">.</s
pan > access(elem, key, { < /td>
    < /tr>
    < tr >
    < td
id = "L4408"
class
= "blob-num js-line-number"
data - line - number = "4408" > < /td>
    < td
id = "LC4408"
class
= "blob-code blob-code-inner js-file-line" > empty < span
class
= "pl-k" >
:<
/span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Callbacks < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > once
memory < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)<
span
class
= "pl-k" >
.<
/span>add( function() {</
td >
< /tr>
< tr >
< td
id = "L4409"
class
= "blob-num js-line-number"
data - line - number = "4409" > < /td>
    < td
id = "LC4409"
class
= "blob-code blob-code-inner js-file-line" > dataPriv < span
class
= "pl-k" >
.<
/span>remove( elem, [ type <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>queue<span class="pl-pds">&quot;</span></span>, key ] );</
td >
< /tr>
< tr >
< td
id = "L4410"
class
= "blob-num js-line-number"
data - line - number = "4410" > < /td>
    < td
id = "LC4410"
class
= "blob-code blob-code-inner js-file-line" >
} )<
/td>
< /tr>
< tr >
< td
id = "L4411"
class
= "blob-num js-line-number"
data - line - number = "4411" > < /td>
    < td
id = "LC4411"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4412"
class
= "blob-num js-line-number"
data - line - number = "4412" > < /td>
    < td
id = "LC4412"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4413"
class
= "blob-num js-line-number"
data - line - number = "4413" > < /td>
    < td
id = "LC4413"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4414"
class
= "blob-num js-line-number"
data - line - number = "4414" > < /td>
    < td
id = "LC4414"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4415"
class
= "blob-num js-line-number"
data - line - number = "4415" > < /td>
    < td
id = "LC4415"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L4416"
class
= "blob-num js-line-number"
data - line - number = "4416" > < /td>
    < td
id = "LC4416"
class
= "blob-code blob-code-inner js-file-line" > queue < span
class
= "pl-k" >
:<
/span> function( type, data ) {</
td >
< /tr>
< tr >
< td
id = "L4417"
class
= "blob-num js-line-number"
data - line - number = "4417" > < /td>
    < td
id = "LC4417"
class
= "blob-code blob-code-inner js-file-line" >
var setter
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">2</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4418"
class
= "blob-num js-line-number"
data - line - number = "4418" > < /td>
    < td
id = "LC4418"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4419"
class
= "blob-num js-line-number"
data - line - number = "4419" > < /td>
    < td
id = "LC4419"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof type <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4420"
class
    = "blob-num js-line-number"
    data - line - number = "4420" > < /td>
        < td
    id = "LC4420"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >= < /span> type;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4421"
class
    = "blob-num js-line-number"
    data - line - number = "4421" > < /td>
        < td
    id = "LC4421"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > fx < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4422"
class
    = "blob-num js-line-number"
    data - line - number = "4422" > < /td>
        < td
    id = "LC4422"
class
    = "blob-code blob-code-inner js-file-line" > setter < span
class
    = "pl-k" > -- < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4423"
class
    = "blob-num js-line-number"
    data - line - number = "4423" > < /td>
        < td
    id = "LC4423"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4424"
class
= "blob-num js-line-number"
data - line - number = "4424" > < /td>
    < td
id = "LC4424"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4425"
class
= "blob-num js-line-number"
data - line - number = "4425" > < /td>
    < td
id = "LC4425"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( arguments<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &lt; < /span> setter ) {</
td >
< /tr>
< tr >
< td
id = "L4426"
class
= "blob-num js-line-number"
data - line - number = "4426" > < /td>
    < td
id = "LC4426"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > queue( < span
class
= "pl-c1" > this < /span>[ <span class="pl-c1">0</span> ], type );</
td >
< /tr>
< tr >
< td
id = "L4427"
class
= "blob-num js-line-number"
data - line - number = "4427" > < /td>
    < td
id = "LC4427"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4428"
class
= "blob-num js-line-number"
data - line - number = "4428" > < /td>
    < td
id = "LC4428"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4429"
class
= "blob-num js-line-number"
data - line - number = "4429" > < /td>
    < td
id = "LC4429"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> data <span class="pl-k">===</s
pan > undefined < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L4430"
class
= "blob-num js-line-number"
data - line - number = "4430" > < /td>
    < td
id = "LC4430"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span> <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L4431"
class
= "blob-num js-line-number"
data - line - number = "4431" > < /td>
    < td
id = "LC4431"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > each(function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4432"
class
    = "blob-num js-line-number"
    data - line - number = "4432" > < /td>
        < td
    id = "LC4432"
class
    = "blob-code blob-code-inner js-file-line" >
    var queue
<
    span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > queue( < span
class
    = "pl-c1" > this < /span>, type, data );</
    td >
    < /tr>
    < tr >
    < td
    id = "L4433"
class
    = "blob-num js-line-number"
    data - line - number = "4433" > < /td>
        < td
    id = "LC4433"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4434"
class
    = "blob-num js-line-number"
    data - line - number = "4434" > < /td>
        < td
    id = "LC4434"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Ensure a hooks for this queue</span></td>
        < /tr>
        < tr >
        < td
    id = "L4435"
class
    = "blob-num js-line-number"
    data - line - number = "4435" > < /td>
        < td
    id = "LC4435"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>_queueHooks( <span class="pl-c1">this</s
    pan >, type
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4436"
class
    = "blob-num js-line-number"
    data - line - number = "4436" > < /td>
        < td
    id = "LC4436"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4437"
class
    = "blob-num js-line-number"
    data - line - number = "4437" > < /td>
        < td
    id = "LC4437"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( type <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>fx<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > queue[ < span
class
    = "pl-c1" > 0 < /span> ] <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > inprogress < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4438"
class
    = "blob-num js-line-number"
    data - line - number = "4438" > < /td>
        < td
    id = "LC4438"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>dequeue( <span class="pl-c1">this</s
    pan >, type
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4439"
class
= "blob-num js-line-number"
data - line - number = "4439" > < /td>
    < td
id = "LC4439"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4440"
class
= "blob-num js-line-number"
data - line - number = "4440" > < /td>
    < td
id = "LC4440"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4441"
class
= "blob-num js-line-number"
data - line - number = "4441" > < /td>
    < td
id = "LC4441"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4442"
class
= "blob-num js-line-number"
data - line - number = "4442" > < /td>
    < td
id = "LC4442"
class
= "blob-code blob-code-inner js-file-line" > dequeue < span
class
= "pl-k" >
:<
/span> function( type ) {</
td >
< /tr>
< tr >
< td
id = "L4443"
class
= "blob-num js-line-number"
data - line - number = "4443" > < /td>
    < td
id = "LC4443"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L4444"
class
= "blob-num js-line-number"
data - line - number = "4444" > < /td>
    < td
id = "LC4444"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>dequeue( <span class="pl-c1">this</s
pan >, type
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4445"
class
= "blob-num js-line-number"
data - line - number = "4445" > < /td>
    < td
id = "LC4445"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4446"
class
= "blob-num js-line-number"
data - line - number = "4446" > < /td>
    < td
id = "LC4446"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4447"
class
= "blob-num js-line-number"
data - line - number = "4447" > < /td>
    < td
id = "LC4447"
class
= "blob-code blob-code-inner js-file-line" > clearQueue < span
class
= "pl-k" >
:<
/span> function( type ) {</
td >
< /tr>
< tr >
< td
id = "L4448"
class
= "blob-num js-line-number"
data - line - number = "4448" > < /td>
    < td
id = "LC4448"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>queue( type <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fx<span class="pl-pds">&quot;</s
pan > < /span>, [] );</
td >
< /tr>
< tr >
< td
id = "L4449"
class
= "blob-num js-line-number"
data - line - number = "4449" > < /td>
    < td
id = "LC4449"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4450"
class
= "blob-num js-line-number"
data - line - number = "4450" > < /td>
    < td
id = "LC4450"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4451"
class
= "blob-num js-line-number"
data - line - number = "4451" > < /td>
    < td
id = "LC4451"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get a promise resolved when queues of a certain type</span></td>
    < /tr>
    < tr >
    < td
id = "L4452"
class
= "blob-num js-line-number"
data - line - number = "4452" > < /td>
    < td
id = "LC4452"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> are emptied (fx is the type by default)</span></td>
    < /tr>
    < tr >
    < td
id = "L4453"
class
= "blob-num js-line-number"
data - line - number = "4453" > < /td>
    < td
id = "LC4453"
class
= "blob-code blob-code-inner js-file-line" > promise < span
class
= "pl-k" >
:<
/span> function( type, obj ) {</
td >
< /tr>
< tr >
< td
id = "L4454"
class
= "blob-num js-line-number"
data - line - number = "4454" > < /td>
    < td
id = "LC4454"
class
= "blob-code blob-code-inner js-file-line" >
var tmp, <
/td>
< /tr>
< tr >
< td
id = "L4455"
class
= "blob-num js-line-number"
data - line - number = "4455" > < /td>
    < td
id = "LC4455"
class
= "blob-code blob-code-inner js-file-line" > count < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L4456"
class
= "blob-num js-line-number"
data - line - number = "4456" > < /td>
    < td
id = "LC4456"
class
= "blob-code blob-code-inner js-file-line" > defer < span
class
= "pl-k" >= < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Deferred < /span>(),</
td >
< /tr>
< tr >
< td
id = "L4457"
class
= "blob-num js-line-number"
data - line - number = "4457" > < /td>
    < td
id = "LC4457"
class
= "blob-code blob-code-inner js-file-line" > elements < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L4458"
class
= "blob-num js-line-number"
data - line - number = "4458" > < /td>
    < td
id = "LC4458"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>length,</
td >
< /tr>
< tr >
< td
id = "L4459"
class
= "blob-num js-line-number"
data - line - number = "4459" > < /td>
    < td
id = "LC4459"
class
= "blob-code blob-code-inner js-file-line" > resolve < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L4460"
class
= "blob-num js-line-number"
data - line - number = "4460" > < /td>
    < td
id = "LC4460"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > ( < span
class
= "pl-k" > -- < /span>count ) ) {</
td >
< /tr>
< tr >
< td
id = "L4461"
class
= "blob-num js-line-number"
data - line - number = "4461" > < /td>
    < td
id = "LC4461"
class
= "blob-code blob-code-inner js-file-line" > defer < span
class
= "pl-k" >
.<
/span>resolveWith( elements, [ elements ] );</
td >
< /tr>
< tr >
< td
id = "L4462"
class
= "blob-num js-line-number"
data - line - number = "4462" > < /td>
    < td
id = "LC4462"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4463"
class
= "blob-num js-line-number"
data - line - number = "4463" > < /td>
    < td
id = "LC4463"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L4464"
class
= "blob-num js-line-number"
data - line - number = "4464" > < /td>
    < td
id = "LC4464"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4465"
class
= "blob-num js-line-number"
data - line - number = "4465" > < /td>
    < td
id = "LC4465"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof type <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4466"
class
    = "blob-num js-line-number"
    data - line - number = "4466" > < /td>
        < td
    id = "LC4466"
class
    = "blob-code blob-code-inner js-file-line" > obj < span
class
    = "pl-k" >= < /span> type;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4467"
class
    = "blob-num js-line-number"
    data - line - number = "4467" > < /td>
        < td
    id = "LC4467"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4468"
class
    = "blob-num js-line-number"
    data - line - number = "4468" > < /td>
        < td
    id = "LC4468"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4469"
class
= "blob-num js-line-number"
data - line - number = "4469" > < /td>
    < td
id = "LC4469"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >= < /span> type <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fx<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L4470"
class
= "blob-num js-line-number"
data - line - number = "4470" > < /td>
    < td
id = "LC4470"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4471"
class
= "blob-num js-line-number"
data - line - number = "4471" > < /td>
    < td
id = "LC4471"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4472"
class
    = "blob-num js-line-number"
    data - line - number = "4472" > < /td>
        < td
    id = "LC4472"
class
    = "blob-code blob-code-inner js-file-line" > tmp < span
class
    = "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
    pan > get(elements[i], type < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > queueHooks < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4473"
class
    = "blob-num js-line-number"
    data - line - number = "4473" > < /td>
        < td
    id = "LC4473"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( tmp <span class="pl-k">&amp;&amp;</s
    pan > tmp < span
class
    = "pl-k" >
.<
    /span>empty ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4474"
class
    = "blob-num js-line-number"
    data - line - number = "4474" > < /td>
        < td
    id = "LC4474"
class
    = "blob-code blob-code-inner js-file-line" > count < span
class
    = "pl-k" > ++ < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4475"
class
    = "blob-num js-line-number"
    data - line - number = "4475" > < /td>
        < td
    id = "LC4475"
class
    = "blob-code blob-code-inner js-file-line" > tmp < span
class
    = "pl-k" >
.<
    /span>empty<span class="pl-k">.</s
    pan > add(resolve);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4476"
class
    = "blob-num js-line-number"
    data - line - number = "4476" > < /td>
        < td
    id = "LC4476"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4477"
class
= "blob-num js-line-number"
data - line - number = "4477" > < /td>
    < td
id = "LC4477"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4478"
class
= "blob-num js-line-number"
data - line - number = "4478" > < /td>
    < td
id = "LC4478"
class
= "blob-code blob-code-inner js-file-line" > resolve();
<
/td>
< /tr>
< tr >
< td
id = "L4479"
class
= "blob-num js-line-number"
data - line - number = "4479" > < /td>
    < td
id = "LC4479"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> defer<span class="pl-k">.</s
pan > promise(obj);
<
/td>
< /tr>
< tr >
< td
id = "L4480"
class
= "blob-num js-line-number"
data - line - number = "4480" > < /td>
    < td
id = "LC4480"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4481"
class
= "blob-num js-line-number"
data - line - number = "4481" > < /td>
    < td
id = "LC4481"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4482"
class
= "blob-num js-line-number"
data - line - number = "4482" > < /td>
    < td
id = "LC4482"
class
= "blob-code blob-code-inner js-file-line" >
var pnum
<
span
class
= "pl-k" >= < /span> ( <span class="pl-k">/ < /span>[<span class="pl-k">+-</span>]<span class="pl-k">?</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>\d<span class="pl-k">*</s
pan >\<
span
class
= "pl-c1" >
.<
/span><span class="pl-k">|</s
pan >
)\d < span
class
= "pl-k" > + < /span>(<span class="pl-k">?:</s
pan > [eE][ < span
class
= "pl-k" > +- < /span>]<span class="pl-k">?</s
pan >\d < span
class
= "pl-k" > + < /span><span class="pl-k">|</s
pan >
)<
span
class
= "pl-k" > / < /span> )<span class="pl-k">.</s
pan > source;
<
/td>
< /tr>
< tr >
< td
id = "L4483"
class
= "blob-num js-line-number"
data - line - number = "4483" > < /td>
    < td
id = "LC4483"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4484"
class
= "blob-num js-line-number"
data - line - number = "4484" > < /td>
    < td
id = "LC4484"
class
= "blob-code blob-code-inner js-file-line" >
var rcssNum
<
span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ^ (? : ([+-]) = |
)
( < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> pnum <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>)([a-z%]*)$<span class="pl-pds">&quot;</s
pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > i < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4485"
class
= "blob-num js-line-number"
data - line - number = "4485" > < /td>
    < td
id = "LC4485"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4486"
class
= "blob-num js-line-number"
data - line - number = "4486" > < /td>
    < td
id = "LC4486"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4487"
class
= "blob-num js-line-number"
data - line - number = "4487" > < /td>
    < td
id = "LC4487"
class
= "blob-code blob-code-inner js-file-line" >
var cssExpand
<
span
class
= "pl-k" >= < /span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>Top<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Right<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Bottom<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Left<span class="pl-pds">&quot;</span></span> ];</
td >
< /tr>
< tr >
< td
id = "L4488"
class
= "blob-num js-line-number"
data - line - number = "4488" > < /td>
    < td
id = "LC4488"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4489"
class
= "blob-num js-line-number"
data - line - number = "4489" > < /td>
    < td
id = "LC4489"
class
= "blob-code blob-code-inner js-file-line" >
var isHiddenWithinTree
<
span
class
= "pl-k" >= < /span> function( elem, el ) {</
td >
< /tr>
< tr >
< td
id = "L4490"
class
= "blob-num js-line-number"
data - line - number = "4490" > < /td>
    < td
id = "LC4490"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4491"
class
= "blob-num js-line-number"
data - line - number = "4491" > < /td>
    < td
id = "LC4491"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> isHiddenWithinTree might be called from jQuery#filter function;</span></td>
    < /tr>
    < tr >
    < td
id = "L4492"
class
= "blob-num js-line-number"
data - line - number = "4492" > < /td>
    < td
id = "LC4492"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> in that case, element will be second argument</span></td>
    < /tr>
    < tr >
    < td
id = "L4493"
class
= "blob-num js-line-number"
data - line - number = "4493" > < /td>
    < td
id = "LC4493"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >= < /span> el <span class="pl-k">||</s
pan > elem;
<
/td>
< /tr>
< tr >
< td
id = "L4494"
class
= "blob-num js-line-number"
data - line - number = "4494" > < /td>
    < td
id = "LC4494"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4495"
class
= "blob-num js-line-number"
data - line - number = "4495" > < /td>
    < td
id = "LC4495"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Inline style trumps all</span></td>
    < /tr>
    < tr >
    < td
id = "L4496"
class
= "blob-num js-line-number"
data - line - number = "4496" > < /td>
    < td
id = "LC4496"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > style < span
class
= "pl-k" >
.<
/span>display <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>none<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L4497"
class
= "blob-num js-line-number"
data - line - number = "4497" > < /td>
    < td
id = "LC4497"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>style<span class="pl-k">.</s
pan > display < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L4498"
class
= "blob-num js-line-number"
data - line - number = "4498" > < /td>
    < td
id = "LC4498"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4499"
class
= "blob-num js-line-number"
data - line - number = "4499" > < /td>
    < td
id = "LC4499"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise, check computed style</span></td>
    < /tr>
    < tr >
    < td
id = "L4500"
class
= "blob-num js-line-number"
data - line - number = "4500" > < /td>
    < td
id = "LC4500"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Firefox &lt;=43 - 45</span></td>
    < /tr>
    < tr >
    < td
id = "L4501"
class
= "blob-num js-line-number"
data - line - number = "4501" > < /td>
    < td
id = "LC4501"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Disconnected elements can have computed display: none, so first confirm that elem is</span></td>
    < /tr>
    < tr >
    < td
id = "L4502"
class
= "blob-num js-line-number"
data - line - number = "4502" > < /td>
    < td
id = "LC4502"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> in the document.</span></td>
    < /tr>
    < tr >
    < td
id = "L4503"
class
= "blob-num js-line-number"
data - line - number = "4503" > < /td>
    < td
id = "LC4503"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>contains( elem<span class="pl-k">.</s
pan > ownerDocument, elem
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L4504"
class
= "blob-num js-line-number"
data - line - number = "4504" > < /td>
    < td
id = "LC4504"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4505"
class
= "blob-num js-line-number"
data - line - number = "4505" > < /td>
    < td
id = "LC4505"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>css( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > display < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > none < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4506"
class
= "blob-num js-line-number"
data - line - number = "4506" > < /td>
    < td
id = "LC4506"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L4507"
class
= "blob-num js-line-number"
data - line - number = "4507" > < /td>
    < td
id = "LC4507"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4508"
class
= "blob-num js-line-number"
data - line - number = "4508" > < /td>
    < td
id = "LC4508"
class
= "blob-code blob-code-inner js-file-line" >
var swap
<
span
class
= "pl-k" >= < /span> function( elem, options, callback, args ) {</
td >
< /tr>
< tr >
< td
id = "L4509"
class
= "blob-num js-line-number"
data - line - number = "4509" > < /td>
    < td
id = "LC4509"
class
= "blob-code blob-code-inner js-file-line" >
var ret, name, <
/td>
< /tr>
< tr >
< td
id = "L4510"
class
= "blob-num js-line-number"
data - line - number = "4510" > < /td>
    < td
id = "LC4510"
class
= "blob-code blob-code-inner js-file-line" > old < span
class
= "pl-k" >= < /span> {};</
td >
< /tr>
< tr >
< td
id = "L4511"
class
= "blob-num js-line-number"
data - line - number = "4511" > < /td>
    < td
id = "LC4511"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4512"
class
= "blob-num js-line-number"
data - line - number = "4512" > < /td>
    < td
id = "LC4512"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remember the old values, and insert the new ones</span></td>
    < /tr>
    < tr >
    < td
id = "L4513"
class
= "blob-num js-line-number"
data - line - number = "4513" > < /td>
    < td
id = "LC4513"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( name in options ) {</
td >
< /tr>
< tr >
< td
id = "L4514"
class
= "blob-num js-line-number"
data - line - number = "4514" > < /td>
    < td
id = "LC4514"
class
= "blob-code blob-code-inner js-file-line" > old[name] < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > style[name];
<
/td>
< /tr>
< tr >
< td
id = "L4515"
class
= "blob-num js-line-number"
data - line - number = "4515" > < /td>
    < td
id = "LC4515"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>style[ name ] <span class="pl-k">=</s
pan > options[name];
<
/td>
< /tr>
< tr >
< td
id = "L4516"
class
= "blob-num js-line-number"
data - line - number = "4516" > < /td>
    < td
id = "LC4516"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4517"
class
= "blob-num js-line-number"
data - line - number = "4517" > < /td>
    < td
id = "LC4517"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4518"
class
= "blob-num js-line-number"
data - line - number = "4518" > < /td>
    < td
id = "LC4518"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >= < /span> callback<span class="pl-k">.</s
pan > apply(elem, args < span
class
= "pl-k" > || < /span> [] );</
td >
< /tr>
< tr >
< td
id = "L4519"
class
= "blob-num js-line-number"
data - line - number = "4519" > < /td>
    < td
id = "LC4519"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4520"
class
= "blob-num js-line-number"
data - line - number = "4520" > < /td>
    < td
id = "LC4520"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Revert the old values</span></td>
    < /tr>
    < tr >
    < td
id = "L4521"
class
= "blob-num js-line-number"
data - line - number = "4521" > < /td>
    < td
id = "LC4521"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( name in options ) {</
td >
< /tr>
< tr >
< td
id = "L4522"
class
= "blob-num js-line-number"
data - line - number = "4522" > < /td>
    < td
id = "LC4522"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>style[ name ] <span class="pl-k">=</s
pan > old[name];
<
/td>
< /tr>
< tr >
< td
id = "L4523"
class
= "blob-num js-line-number"
data - line - number = "4523" > < /td>
    < td
id = "LC4523"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4524"
class
= "blob-num js-line-number"
data - line - number = "4524" > < /td>
    < td
id = "LC4524"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4525"
class
= "blob-num js-line-number"
data - line - number = "4525" > < /td>
    < td
id = "LC4525"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L4526"
class
= "blob-num js-line-number"
data - line - number = "4526" > < /td>
    < td
id = "LC4526"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L4527"
class
= "blob-num js-line-number"
data - line - number = "4527" > < /td>
    < td
id = "LC4527"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4528"
class
= "blob-num js-line-number"
data - line - number = "4528" > < /td>
    < td
id = "LC4528"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4529"
class
= "blob-num js-line-number"
data - line - number = "4529" > < /td>
    < td
id = "LC4529"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4530"
class
= "blob-num js-line-number"
data - line - number = "4530" > < /td>
    < td
id = "LC4530"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4531"
class
= "blob-num js-line-number"
data - line - number = "4531" > < /td>
    < td
id = "LC4531"
class
= "blob-code blob-code-inner js-file-line" > function adjustCSS(elem, prop, valueParts, tween) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4532"
class
    = "blob-num js-line-number"
    data - line - number = "4532" > < /td>
        < td
    id = "LC4532"
class
    = "blob-code blob-code-inner js-file-line" >
    var adjusted, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L4533"
class
    = "blob-num js-line-number"
    data - line - number = "4533" > < /td>
        < td
    id = "LC4533"
class
    = "blob-code blob-code-inner js-file-line" > scale < span
class
    = "pl-k" >= < /span> <span class="pl-c1">1</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4534"
class
    = "blob-num js-line-number"
    data - line - number = "4534" > < /td>
        < td
    id = "LC4534"
class
    = "blob-code blob-code-inner js-file-line" > maxIterations < span
class
    = "pl-k" >= < /span> <span class="pl-c1">20</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4535"
class
    = "blob-num js-line-number"
    data - line - number = "4535" > < /td>
        < td
    id = "LC4535"
class
    = "blob-code blob-code-inner js-file-line" > currentValue < span
class
    = "pl-k" >= < /span> tween <span class="pl-k">?</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L4536"
class
    = "blob-num js-line-number"
    data - line - number = "4536" > < /td>
        < td
    id = "LC4536"
class
    = "blob-code blob-code-inner js-file-line" > function () {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4537"
    class
        = "blob-num js-line-number"
        data - line - number = "4537" > < /td>
            < td
        id = "LC4537"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> tween<span class="pl-k">.</s
        pan > cur();
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4538"
    class
        = "blob-num js-line-number"
        data - line - number = "4538" > < /td>
            < td
        id = "LC4538"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < span
class
    = "pl-k" >
:<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L4539"
class
    = "blob-num js-line-number"
    data - line - number = "4539" > < /td>
        < td
    id = "LC4539"
class
    = "blob-code blob-code-inner js-file-line" > function () {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4540"
    class
        = "blob-num js-line-number"
        data - line - number = "4540" > < /td>
            < td
        id = "LC4540"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> jQuery<span class="pl-k">.</s
        pan > css(elem, prop, < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span><span class="pl-pds">&quot;</s
        pan > < /span> );</
        td >
        < /tr>
        < tr >
        < td
        id = "L4541"
    class
        = "blob-num js-line-number"
        data - line - number = "4541" > < /td>
            < td
        id = "LC4541"
    class
        = "blob-code blob-code-inner js-file-line" >
    },
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4542"
class
    = "blob-num js-line-number"
    data - line - number = "4542" > < /td>
        < td
    id = "LC4542"
class
    = "blob-code blob-code-inner js-file-line" > initial < span
class
    = "pl-k" >= < /span> currentValue(),</
    td >
    < /tr>
    < tr >
    < td
    id = "L4543"
class
    = "blob-num js-line-number"
    data - line - number = "4543" > < /td>
        < td
    id = "LC4543"
class
    = "blob-code blob-code-inner js-file-line" > unit < span
class
    = "pl-k" >= < /span> valueParts <span class="pl-k">&amp;&amp;</s
    pan > valueParts[ < span
class
    = "pl-c1" > 3 < /span> ] <span class="pl-k">||</s
    pan > (jQuery < span
class
    = "pl-k" >
.<
    /span>cssNumber[ prop ] <span class="pl-k">?</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span><span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">:</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>px<span class="pl-pds">&quot;</s
    pan > < /span> ),</
    td >
    < /tr>
    < tr >
    < td
    id = "L4544"
class
    = "blob-num js-line-number"
    data - line - number = "4544" > < /td>
        < td
    id = "LC4544"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4545"
class
    = "blob-num js-line-number"
    data - line - number = "4545" > < /td>
        < td
    id = "LC4545"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Starting value computation is required for potential unit mismatches</span></td>
        < /tr>
        < tr >
        < td
    id = "L4546"
class
    = "blob-num js-line-number"
    data - line - number = "4546" > < /td>
        < td
    id = "LC4546"
class
    = "blob-code blob-code-inner js-file-line" > initialInUnit < span
class
    = "pl-k" >= < /span> ( jQuery<span class="pl-k">.</s
    pan > cssNumber[prop] < span
class
    = "pl-k" > || < /span> unit <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > px < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> <span class="pl-k">+</s
    pan > initial
) <
    span
class
    = "pl-k" > &amp;&amp; < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L4547"
class
    = "blob-num js-line-number"
    data - line - number = "4547" > < /td>
        < td
    id = "LC4547"
class
    = "blob-code blob-code-inner js-file-line" > rcssNum < span
class
    = "pl-k" >
.<
    /span>exec( jQuery<span class="pl-k">.</s
    pan > css(elem, prop)
);
<
/td>
< /tr>
< tr >
< td
id = "L4548"
class
= "blob-num js-line-number"
data - line - number = "4548" > < /td>
    < td
id = "LC4548"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4549"
class
= "blob-num js-line-number"
data - line - number = "4549" > < /td>
    < td
id = "LC4549"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( initialInUnit <span class="pl-k">&amp;&amp;</s
pan > initialInUnit[ < span
class
= "pl-c1" > 3 < /span> ] <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> unit ) {</
td >
< /tr>
< tr >
< td
id = "L4550"
class
= "blob-num js-line-number"
data - line - number = "4550" > < /td>
    < td
id = "LC4550"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4551"
class
= "blob-num js-line-number"
data - line - number = "4551" > < /td>
    < td
id = "LC4551"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Trust units reported by jQuery.css</span></td>
    < /tr>
    < tr >
    < td
id = "L4552"
class
= "blob-num js-line-number"
data - line - number = "4552" > < /td>
    < td
id = "LC4552"
class
= "blob-code blob-code-inner js-file-line" > unit < span
class
= "pl-k" >= < /span> unit <span class="pl-k">||</s
pan > initialInUnit[ < span
class
= "pl-c1" > 3 < /span> ];</
td >
< /tr>
< tr >
< td
id = "L4553"
class
= "blob-num js-line-number"
data - line - number = "4553" > < /td>
    < td
id = "LC4553"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4554"
class
= "blob-num js-line-number"
data - line - number = "4554" > < /td>
    < td
id = "LC4554"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure we update the tween properties later on</span></td>
    < /tr>
    < tr >
    < td
id = "L4555"
class
= "blob-num js-line-number"
data - line - number = "4555" > < /td>
    < td
id = "LC4555"
class
= "blob-code blob-code-inner js-file-line" > valueParts < span
class
= "pl-k" >= < /span> valueParts <span class="pl-k">||</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L4556"
class
= "blob-num js-line-number"
data - line - number = "4556" > < /td>
    < td
id = "LC4556"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4557"
class
= "blob-num js-line-number"
data - line - number = "4557" > < /td>
    < td
id = "LC4557"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Iteratively approximate from a nonzero starting point</span></td>
    < /tr>
    < tr >
    < td
id = "L4558"
class
= "blob-num js-line-number"
data - line - number = "4558" > < /td>
    < td
id = "LC4558"
class
= "blob-code blob-code-inner js-file-line" > initialInUnit < span
class
= "pl-k" >= < /span> <span class="pl-k">+</s
pan > initial < span
class
= "pl-k" > || < /span> <span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4559"
class
= "blob-num js-line-number"
data - line - number = "4559" > < /td>
    < td
id = "LC4559"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4560"
class
= "blob-num js-line-number"
data - line - number = "4560" > < /td>
    < td
id = "LC4560"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > do < /span> {</
td >
< /tr>
< tr >
< td
id = "L4561"
class
= "blob-num js-line-number"
data - line - number = "4561" > < /td>
    < td
id = "LC4561"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4562"
class
= "blob-num js-line-number"
data - line - number = "4562" > < /td>
    < td
id = "LC4562"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If previous iteration zeroed out, double until we get *something*.</span></td>
    < /tr>
    < tr >
    < td
id = "L4563"
class
= "blob-num js-line-number"
data - line - number = "4563" > < /td>
    < td
id = "LC4563"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use string for doubling so we don&#39;t accidentally see scale as unchanged below</span></td>
    < /tr>
    < tr >
    < td
id = "L4564"
class
= "blob-num js-line-number"
data - line - number = "4564" > < /td>
    < td
id = "LC4564"
class
= "blob-code blob-code-inner js-file-line" > scale < span
class
= "pl-k" >= < /span> scale <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>.5<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L4565"
class
= "blob-num js-line-number"
data - line - number = "4565" > < /td>
    < td
id = "LC4565"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4566"
class
= "blob-num js-line-number"
data - line - number = "4566" > < /td>
    < td
id = "LC4566"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Adjust and apply</span></td>
    < /tr>
    < tr >
    < td
id = "L4567"
class
= "blob-num js-line-number"
data - line - number = "4567" > < /td>
    < td
id = "LC4567"
class
= "blob-code blob-code-inner js-file-line" > initialInUnit < span
class
= "pl-k" >= < /span> initialInUnit <span class="pl-k">/ < /span> scale;</
td >
< /tr>
< tr >
< td
id = "L4568"
class
= "blob-num js-line-number"
data - line - number = "4568" > < /td>
    < td
id = "LC4568"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>style( elem, prop, initialInUnit <span class="pl-k">+</s
pan > unit
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4569"
class
= "blob-num js-line-number"
data - line - number = "4569" > < /td>
    < td
id = "LC4569"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4570"
class
= "blob-num js-line-number"
data - line - number = "4570" > < /td>
    < td
id = "LC4570"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Update scale, tolerating zero or NaN from tween.cur()</span></td>
    < /tr>
    < tr >
    < td
id = "L4571"
class
= "blob-num js-line-number"
data - line - number = "4571" > < /td>
    < td
id = "LC4571"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Break the loop if scale is unchanged or perfect, or if we&#39;ve just had enough.</span></td>
    < /tr>
    < tr >
    < td
id = "L4572"
class
= "blob-num js-line-number"
data - line - number = "4572" > < /td>
    < td
id = "LC4572"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
while<
/span> (</
td >
< /tr>
< tr >
< td
id = "L4573"
class
= "blob-num js-line-number"
data - line - number = "4573" > < /td>
    < td
id = "LC4573"
class
= "blob-code blob-code-inner js-file-line" > scale < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > (scale < span
class
= "pl-k" >= < /span> currentValue() <span class="pl-k">/ < /span> initial ) <span class="pl-k">&amp;&amp;</s
pan > scale < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > -- < /span>maxIterations</
td >
< /tr>
< tr >
< td
id = "L4574"
class
= "blob-num js-line-number"
data - line - number = "4574" > < /td>
    < td
id = "LC4574"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4575"
class
= "blob-num js-line-number"
data - line - number = "4575" > < /td>
    < td
id = "LC4575"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4576"
class
= "blob-num js-line-number"
data - line - number = "4576" > < /td>
    < td
id = "LC4576"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4577"
class
= "blob-num js-line-number"
data - line - number = "4577" > < /td>
    < td
id = "LC4577"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( valueParts ) {</
td >
< /tr>
< tr >
< td
id = "L4578"
class
= "blob-num js-line-number"
data - line - number = "4578" > < /td>
    < td
id = "LC4578"
class
= "blob-code blob-code-inner js-file-line" > initialInUnit < span
class
= "pl-k" >= < /span> <span class="pl-k">+</s
pan > initialInUnit < span
class
= "pl-k" > || < /span> <span class="pl-k">+</s
pan > initial < span
class
= "pl-k" > || < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4579"
class
= "blob-num js-line-number"
data - line - number = "4579" > < /td>
    < td
id = "LC4579"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4580"
class
= "blob-num js-line-number"
data - line - number = "4580" > < /td>
    < td
id = "LC4580"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Apply relative offset (+=/-=) if specified</span></td>
    < /tr>
    < tr >
    < td
id = "L4581"
class
= "blob-num js-line-number"
data - line - number = "4581" > < /td>
    < td
id = "LC4581"
class
= "blob-code blob-code-inner js-file-line" > adjusted < span
class
= "pl-k" >= < /span> valueParts[ <span class="pl-c1">1</span> ] <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L4582"
class
= "blob-num js-line-number"
data - line - number = "4582" > < /td>
    < td
id = "LC4582"
class
= "blob-code blob-code-inner js-file-line" > initialInUnit < span
class
= "pl-k" > + < /span> ( valueParts[ <span class="pl-c1">1</span> ] <span class="pl-k">+</s
pan > < span
class
= "pl-c1" > 1 < /span> ) <span class="pl-k">*</s
pan > valueParts[ < span
class
= "pl-c1" > 2 < /span> ] <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L4583"
class
= "blob-num js-line-number"
data - line - number = "4583" > < /td>
    < td
id = "LC4583"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > + < /span>valueParts[ <span class="pl-c1">2</span> ];</
td >
< /tr>
< tr >
< td
id = "L4584"
class
= "blob-num js-line-number"
data - line - number = "4584" > < /td>
    < td
id = "LC4584"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( tween ) {</
td >
< /tr>
< tr >
< td
id = "L4585"
class
= "blob-num js-line-number"
data - line - number = "4585" > < /td>
    < td
id = "LC4585"
class
= "blob-code blob-code-inner js-file-line" > tween < span
class
= "pl-k" >
.<
/span>unit <span class="pl-k">=</s
pan > unit;
<
/td>
< /tr>
< tr >
< td
id = "L4586"
class
= "blob-num js-line-number"
data - line - number = "4586" > < /td>
    < td
id = "LC4586"
class
= "blob-code blob-code-inner js-file-line" > tween < span
class
= "pl-k" >
.<
/span>start <span class="pl-k">=</s
pan > initialInUnit;
<
/td>
< /tr>
< tr >
< td
id = "L4587"
class
= "blob-num js-line-number"
data - line - number = "4587" > < /td>
    < td
id = "LC4587"
class
= "blob-code blob-code-inner js-file-line" > tween < span
class
= "pl-k" >
.<
/span>end <span class="pl-k">=</s
pan > adjusted;
<
/td>
< /tr>
< tr >
< td
id = "L4588"
class
= "blob-num js-line-number"
data - line - number = "4588" > < /td>
    < td
id = "LC4588"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4589"
class
= "blob-num js-line-number"
data - line - number = "4589" > < /td>
    < td
id = "LC4589"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4590"
class
= "blob-num js-line-number"
data - line - number = "4590" > < /td>
    < td
id = "LC4590"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> adjusted;</
td >
< /tr>
< tr >
< td
id = "L4591"
class
= "blob-num js-line-number"
data - line - number = "4591" > < /td>
    < td
id = "LC4591"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4592"
class
= "blob-num js-line-number"
data - line - number = "4592" > < /td>
    < td
id = "LC4592"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4593"
class
= "blob-num js-line-number"
data - line - number = "4593" > < /td>
    < td
id = "LC4593"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4594"
class
= "blob-num js-line-number"
data - line - number = "4594" > < /td>
    < td
id = "LC4594"
class
= "blob-code blob-code-inner js-file-line" >
var defaultDisplayMap
<
span
class
= "pl-k" >= < /span> {};</
td >
< /tr>
< tr >
< td
id = "L4595"
class
= "blob-num js-line-number"
data - line - number = "4595" > < /td>
    < td
id = "LC4595"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4596"
class
= "blob-num js-line-number"
data - line - number = "4596" > < /td>
    < td
id = "LC4596"
class
= "blob-code blob-code-inner js-file-line" > function getDefaultDisplay(elem) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4597"
    class
        = "blob-num js-line-number"
        data - line - number = "4597" > < /td>
            < td
        id = "LC4597"
    class
        = "blob-code blob-code-inner js-file-line" >
        var temp, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4598"
    class
        = "blob-num js-line-number"
        data - line - number = "4598" > < /td>
            < td
        id = "LC4598"
    class
        = "blob-code blob-code-inner js-file-line" > doc < span
    class
        = "pl-k" >= < /span> elem<span class="pl-k">.</s
        pan > ownerDocument,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4599"
    class
        = "blob-num js-line-number"
        data - line - number = "4599" > < /td>
            < td
        id = "LC4599"
    class
        = "blob-code blob-code-inner js-file-line" > nodeName < span
    class
        = "pl-k" >= < /span> elem<span class="pl-k">.</s
        pan > nodeName,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4600"
    class
        = "blob-num js-line-number"
        data - line - number = "4600" > < /td>
            < td
        id = "LC4600"
    class
        = "blob-code blob-code-inner js-file-line" > display < span
    class
        = "pl-k" >= < /span> defaultDisplayMap[ nodeName ];</
        td >
        < /tr>
        < tr >
        < td
        id = "L4601"
    class
        = "blob-num js-line-number"
        data - line - number = "4601" > < /td>
            < td
        id = "LC4601"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L4602"
    class
        = "blob-num js-line-number"
        data - line - number = "4602" > < /td>
            < td
        id = "LC4602"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( display ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L4603"
    class
        = "blob-num js-line-number"
        data - line - number = "4603" > < /td>
            < td
        id = "LC4603"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> display;</
        td >
        < /tr>
        < tr >
        < td
        id = "L4604"
    class
        = "blob-num js-line-number"
        data - line - number = "4604" > < /td>
            < td
        id = "LC4604"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L4605"
class
= "blob-num js-line-number"
data - line - number = "4605" > < /td>
    < td
id = "LC4605"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4606"
class
= "blob-num js-line-number"
data - line - number = "4606" > < /td>
    < td
id = "LC4606"
class
= "blob-code blob-code-inner js-file-line" > temp < span
class
= "pl-k" >= < /span> doc<span class="pl-k">.</s
pan > body < span
class
= "pl-k" >
.<
/span>appendChild( doc<span class="pl-k">.</s
pan > createElement(nodeName)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4607"
class
= "blob-num js-line-number"
data - line - number = "4607" > < /td>
    < td
id = "LC4607"
class
= "blob-code blob-code-inner js-file-line" > display < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > css(temp, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>display<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L4608"
class
= "blob-num js-line-number"
data - line - number = "4608" > < /td>
    < td
id = "LC4608"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4609"
class
= "blob-num js-line-number"
data - line - number = "4609" > < /td>
    < td
id = "LC4609"
class
= "blob-code blob-code-inner js-file-line" > temp < span
class
= "pl-k" >
.<
/span>parentNode<span class="pl-k">.</s
pan > removeChild(temp);
<
/td>
< /tr>
< tr >
< td
id = "L4610"
class
= "blob-num js-line-number"
data - line - number = "4610" > < /td>
    < td
id = "LC4610"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4611"
class
= "blob-num js-line-number"
data - line - number = "4611" > < /td>
    < td
id = "LC4611"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( display <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>none<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4612"
class
= "blob-num js-line-number"
data - line - number = "4612" > < /td>
    < td
id = "LC4612"
class
= "blob-code blob-code-inner js-file-line" > display < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > block < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4613"
class
= "blob-num js-line-number"
data - line - number = "4613" > < /td>
    < td
id = "LC4613"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4614"
class
= "blob-num js-line-number"
data - line - number = "4614" > < /td>
    < td
id = "LC4614"
class
= "blob-code blob-code-inner js-file-line" > defaultDisplayMap[nodeName] < span
class
= "pl-k" >= < /span> display;</
td >
< /tr>
< tr >
< td
id = "L4615"
class
= "blob-num js-line-number"
data - line - number = "4615" > < /td>
    < td
id = "LC4615"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4616"
class
= "blob-num js-line-number"
data - line - number = "4616" > < /td>
    < td
id = "LC4616"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> display;</
td >
< /tr>
< tr >
< td
id = "L4617"
class
= "blob-num js-line-number"
data - line - number = "4617" > < /td>
    < td
id = "LC4617"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4618"
class
= "blob-num js-line-number"
data - line - number = "4618" > < /td>
    < td
id = "LC4618"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4619"
class
= "blob-num js-line-number"
data - line - number = "4619" > < /td>
    < td
id = "LC4619"
class
= "blob-code blob-code-inner js-file-line" > function showHide(elements, show) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4620"
    class
        = "blob-num js-line-number"
        data - line - number = "4620" > < /td>
            < td
        id = "LC4620"
    class
        = "blob-code blob-code-inner js-file-line" >
        var display, elem, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4621"
    class
        = "blob-num js-line-number"
        data - line - number = "4621" > < /td>
            < td
        id = "LC4621"
    class
        = "blob-code blob-code-inner js-file-line" > values < span
    class
        = "pl-k" >= < /span> [],</
        td >
        < /tr>
        < tr >
        < td
        id = "L4622"
    class
        = "blob-num js-line-number"
        data - line - number = "4622" > < /td>
            < td
        id = "LC4622"
    class
        = "blob-code blob-code-inner js-file-line" > index < span
    class
        = "pl-k" >= < /span> <span class="pl-c1">0</s
        pan >,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4623"
    class
        = "blob-num js-line-number"
        data - line - number = "4623" > < /td>
            < td
        id = "LC4623"
    class
        = "blob-code blob-code-inner js-file-line" > length < span
    class
        = "pl-k" >= < /span> elements<span class="pl-k">.</s
        pan > length;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4624"
    class
        = "blob-num js-line-number"
        data - line - number = "4624" > < /td>
            < td
        id = "LC4624"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L4625"
    class
        = "blob-num js-line-number"
        data - line - number = "4625" > < /td>
            < td
        id = "LC4625"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Determine new display value for elements that need to change</span></td>
            < /tr>
            < tr >
            < td
        id = "L4626"
    class
        = "blob-num js-line-number"
        data - line - number = "4626" > < /td>
            < td
        id = "LC4626"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        for<
        /span> ( ; index <span class="pl-k">&lt;</s
        pan > length;
        index < span
    class
        = "pl-k" > ++ < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L4627"
    class
        = "blob-num js-line-number"
        data - line - number = "4627" > < /td>
            < td
        id = "LC4627"
    class
        = "blob-code blob-code-inner js-file-line" > elem < span
    class
        = "pl-k" >= < /span> elements[ index ];</
        td >
        < /tr>
        < tr >
        < td
        id = "L4628"
    class
        = "blob-num js-line-number"
        data - line - number = "4628" > < /td>
            < td
        id = "LC4628"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( <span class="pl-k">!</s
        pan > elem < span
    class
        = "pl-k" >
    .<
        /span>style ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L4629"
    class
        = "blob-num js-line-number"
        data - line - number = "4629" > < /td>
            < td
        id = "LC4629"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        continue
    <
        /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L4630"
    class
        = "blob-num js-line-number"
        data - line - number = "4630" > < /td>
            < td
        id = "LC4630"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L4631"
class
= "blob-num js-line-number"
data - line - number = "4631" > < /td>
    < td
id = "LC4631"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4632"
class
= "blob-num js-line-number"
data - line - number = "4632" > < /td>
    < td
id = "LC4632"
class
= "blob-code blob-code-inner js-file-line" > display < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > style < span
class
= "pl-k" >
.<
/span>display;</
td >
< /tr>
< tr >
< td
id = "L4633"
class
= "blob-num js-line-number"
data - line - number = "4633" > < /td>
    < td
id = "LC4633"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( show ) {</
td >
< /tr>
< tr >
< td
id = "L4634"
class
= "blob-num js-line-number"
data - line - number = "4634" > < /td>
    < td
id = "LC4634"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4635"
class
= "blob-num js-line-number"
data - line - number = "4635" > < /td>
    < td
id = "LC4635"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Since we force visibility upon cascade-hidden elements, an immediate (and slow)</span></td>
    < /tr>
    < tr >
    < td
id = "L4636"
class
= "blob-num js-line-number"
data - line - number = "4636" > < /td>
    < td
id = "LC4636"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> check is required in this first loop unless we have a nonempty display value (either</span></td>
    < /tr>
    < tr >
    < td
id = "L4637"
class
= "blob-num js-line-number"
data - line - number = "4637" > < /td>
    < td
id = "LC4637"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> inline or about-to-be-restored)</span></td>
    < /tr>
    < tr >
    < td
id = "L4638"
class
= "blob-num js-line-number"
data - line - number = "4638" > < /td>
    < td
id = "LC4638"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( display <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>none<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4639"
class
= "blob-num js-line-number"
data - line - number = "4639" > < /td>
    < td
id = "LC4639"
class
= "blob-code blob-code-inner js-file-line" > values[index] < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > get(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>display<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > null < /span>;</
td >
< /tr>
< tr >
< td
id = "L4640"
class
= "blob-num js-line-number"
data - line - number = "4640" > < /td>
    < td
id = "LC4640"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > values[index]
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4641"
class
    = "blob-num js-line-number"
    data - line - number = "4641" > < /td>
        < td
    id = "LC4641"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>style<span class="pl-k">.</s
    pan > display < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4642"
class
    = "blob-num js-line-number"
    data - line - number = "4642" > < /td>
        < td
    id = "LC4642"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4643"
class
= "blob-num js-line-number"
data - line - number = "4643" > < /td>
    < td
id = "LC4643"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4644"
class
= "blob-num js-line-number"
data - line - number = "4644" > < /td>
    < td
id = "LC4644"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem<span class="pl-k">.</s
pan > style < span
class
= "pl-k" >
.<
/span>display <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > isHiddenWithinTree(elem)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4645"
class
    = "blob-num js-line-number"
    data - line - number = "4645" > < /td>
        < td
    id = "LC4645"
class
    = "blob-code blob-code-inner js-file-line" > values[index] < span
class
    = "pl-k" >= < /span> getDefaultDisplay( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L4646"
class
    = "blob-num js-line-number"
    data - line - number = "4646" > < /td>
        < td
    id = "LC4646"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4647"
class
= "blob-num js-line-number"
data - line - number = "4647" > < /td>
    < td
id = "LC4647"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4648"
class
= "blob-num js-line-number"
data - line - number = "4648" > < /td>
    < td
id = "LC4648"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( display <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > none < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4649"
class
    = "blob-num js-line-number"
    data - line - number = "4649" > < /td>
        < td
    id = "LC4649"
class
    = "blob-code blob-code-inner js-file-line" > values[index] < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > none < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4650"
class
    = "blob-num js-line-number"
    data - line - number = "4650" > < /td>
        < td
    id = "LC4650"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4651"
class
    = "blob-num js-line-number"
    data - line - number = "4651" > < /td>
        < td
    id = "LC4651"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Remember what we&#39;re overwriting</span></td>
        < /tr>
        < tr >
        < td
    id = "L4652"
class
    = "blob-num js-line-number"
    data - line - number = "4652" > < /td>
        < td
    id = "LC4652"
class
    = "blob-code blob-code-inner js-file-line" > dataPriv < span
class
    = "pl-k" >
.<
    /span>set( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > display < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >, display
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4653"
class
= "blob-num js-line-number"
data - line - number = "4653" > < /td>
    < td
id = "LC4653"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4654"
class
= "blob-num js-line-number"
data - line - number = "4654" > < /td>
    < td
id = "LC4654"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4655"
class
= "blob-num js-line-number"
data - line - number = "4655" > < /td>
    < td
id = "LC4655"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4656"
class
= "blob-num js-line-number"
data - line - number = "4656" > < /td>
    < td
id = "LC4656"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4657"
class
= "blob-num js-line-number"
data - line - number = "4657" > < /td>
    < td
id = "LC4657"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set the display of the elements in a second loop to avoid constant reflow</span></td>
    < /tr>
    < tr >
    < td
id = "L4658"
class
= "blob-num js-line-number"
data - line - number = "4658" > < /td>
    < td
id = "LC4658"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( index <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 0 < /span>; index <span class="pl-k">&lt;</s
pan > length;
index < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4659"
class
= "blob-num js-line-number"
data - line - number = "4659" > < /td>
    < td
id = "LC4659"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( values[ index ] <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4660"
class
= "blob-num js-line-number"
data - line - number = "4660" > < /td>
    < td
id = "LC4660"
class
= "blob-code blob-code-inner js-file-line" > elements[index] < span
class
= "pl-k" >
.<
/span>style<span class="pl-k">.</s
pan > display < span
class
= "pl-k" >= < /span> values[ index ];</
td >
< /tr>
< tr >
< td
id = "L4661"
class
= "blob-num js-line-number"
data - line - number = "4661" > < /td>
    < td
id = "LC4661"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4662"
class
= "blob-num js-line-number"
data - line - number = "4662" > < /td>
    < td
id = "LC4662"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4663"
class
= "blob-num js-line-number"
data - line - number = "4663" > < /td>
    < td
id = "LC4663"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4664"
class
= "blob-num js-line-number"
data - line - number = "4664" > < /td>
    < td
id = "LC4664"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elements;</
td >
< /tr>
< tr >
< td
id = "L4665"
class
= "blob-num js-line-number"
data - line - number = "4665" > < /td>
    < td
id = "LC4665"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4666"
class
= "blob-num js-line-number"
data - line - number = "4666" > < /td>
    < td
id = "LC4666"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4667"
class
= "blob-num js-line-number"
data - line - number = "4667" > < /td>
    < td
id = "LC4667"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L4668"
class
= "blob-num js-line-number"
data - line - number = "4668" > < /td>
    < td
id = "LC4668"
class
= "blob-code blob-code-inner js-file-line" > show < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L4669"
class
= "blob-num js-line-number"
data - line - number = "4669" > < /td>
    < td
id = "LC4669"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> showHide( <span class="pl-c1">this</s
pan >,
<
span
class
= "pl-c1" > true < /span> );</
td >
< /tr>
< tr >
< td
id = "L4670"
class
= "blob-num js-line-number"
data - line - number = "4670" > < /td>
    < td
id = "LC4670"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4671"
class
= "blob-num js-line-number"
data - line - number = "4671" > < /td>
    < td
id = "LC4671"
class
= "blob-code blob-code-inner js-file-line" > hide < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L4672"
class
= "blob-num js-line-number"
data - line - number = "4672" > < /td>
    < td
id = "LC4672"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> showHide( <span class="pl-c1">this</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4673"
class
= "blob-num js-line-number"
data - line - number = "4673" > < /td>
    < td
id = "LC4673"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L4674"
class
= "blob-num js-line-number"
data - line - number = "4674" > < /td>
    < td
id = "LC4674"
class
= "blob-code blob-code-inner js-file-line" > toggle < span
class
= "pl-k" >
:<
/span> function( state ) {</
td >
< /tr>
< tr >
< td
id = "L4675"
class
= "blob-num js-line-number"
data - line - number = "4675" > < /td>
    < td
id = "LC4675"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof state <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>boolean<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4676"
class
= "blob-num js-line-number"
data - line - number = "4676" > < /td>
    < td
id = "LC4676"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> state <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > show() < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>hide();</
td >
< /tr>
< tr >
< td
id = "L4677"
class
= "blob-num js-line-number"
data - line - number = "4677" > < /td>
    < td
id = "LC4677"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4678"
class
= "blob-num js-line-number"
data - line - number = "4678" > < /td>
    < td
id = "LC4678"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4679"
class
= "blob-num js-line-number"
data - line - number = "4679" > < /td>
    < td
id = "LC4679"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L4680"
class
= "blob-num js-line-number"
data - line - number = "4680" > < /td>
    < td
id = "LC4680"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( isHiddenWithinTree( <span class="pl-c1">this</s
pan >
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4681"
class
    = "blob-num js-line-number"
    data - line - number = "4681" > < /td>
        < td
    id = "LC4681"
class
    = "blob-code blob-code-inner js-file-line" > jQuery( < span
class
    = "pl-c1" > this < /span> )<span class="pl-k">.</s
    pan > show();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4682"
class
    = "blob-num js-line-number"
    data - line - number = "4682" > < /td>
        < td
    id = "LC4682"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4683"
class
= "blob-num js-line-number"
data - line - number = "4683" > < /td>
    < td
id = "LC4683"
class
= "blob-code blob-code-inner js-file-line" > jQuery( < span
class
= "pl-c1" > this < /span> )<span class="pl-k">.</s
pan > hide();
<
/td>
< /tr>
< tr >
< td
id = "L4684"
class
= "blob-num js-line-number"
data - line - number = "4684" > < /td>
    < td
id = "LC4684"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4685"
class
= "blob-num js-line-number"
data - line - number = "4685" > < /td>
    < td
id = "LC4685"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4686"
class
= "blob-num js-line-number"
data - line - number = "4686" > < /td>
    < td
id = "LC4686"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4687"
class
= "blob-num js-line-number"
data - line - number = "4687" > < /td>
    < td
id = "LC4687"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L4688"
class
= "blob-num js-line-number"
data - line - number = "4688" > < /td>
    < td
id = "LC4688"
class
= "blob-code blob-code-inner js-file-line" >
var rcheckableType
<
span
class
= "pl-k" >= < /span> ( <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>checkbox<span class="pl-k">|</s
pan > radio
)
$ < span
class
= "pl-k" > / < /span>i );</
td >
< /tr>
< tr >
< td
id = "L4689"
class
= "blob-num js-line-number"
data - line - number = "4689" > < /td>
    < td
id = "LC4689"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4690"
class
= "blob-num js-line-number"
data - line - number = "4690" > < /td>
    < td
id = "LC4690"
class
= "blob-code blob-code-inner js-file-line" >
var rtagName
<
span
class
= "pl-k" >= < /span> ( <span class="pl-k">/ < /span><span class="pl-k">&lt;</s
pan > ([a < span class = "pl-k" > - < /span>z][<span class="pl-k">^</span>\<span class="pl-k">/</span>\<span class="pl-c1">0</span><span class="pl-k">&gt;</span>\x20\t\r\n\f]<span class="pl-k">+</span >) < span
class
= "pl-k" > / < /span>i );</
td >
< /tr>
< tr >
< td
id = "L4691"
class
= "blob-num js-line-number"
data - line - number = "4691" > < /td>
    < td
id = "LC4691"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4692"
class
= "blob-num js-line-number"
data - line - number = "4692" > < /td>
    < td
id = "LC4692"
class
= "blob-code blob-code-inner js-file-line" >
var rscriptType
<
span
class
= "pl-k" >= < /span> ( <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > $ < span
class
= "pl-k" > | < /span>\<span class="pl-k">/ < /span>(<span class="pl-k">?:</s
pan > java < span
class
= "pl-k" > | < /span>ecma)script<span class="pl-k">/ < /span>i );</
td >
< /tr>
< tr >
< td
id = "L4693"
class
= "blob-num js-line-number"
data - line - number = "4693" > < /td>
    < td
id = "LC4693"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4694"
class
= "blob-num js-line-number"
data - line - number = "4694" > < /td>
    < td
id = "LC4694"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4695"
class
= "blob-num js-line-number"
data - line - number = "4695" > < /td>
    < td
id = "LC4695"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4696"
class
= "blob-num js-line-number"
data - line - number = "4696" > < /td>
    < td
id = "LC4696"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> We have to close these tags to support XHTML (#13200)</span></td>
    < /tr>
    < tr >
    < td
id = "L4697"
class
= "blob-num js-line-number"
data - line - number = "4697" > < /td>
    < td
id = "LC4697"
class
= "blob-code blob-code-inner js-file-line" >
var wrapMap
<
span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L4698"
class
= "blob-num js-line-number"
data - line - number = "4698" > < /td>
    < td
id = "LC4698"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4699"
class
= "blob-num js-line-number"
data - line - number = "4699" > < /td>
    < td
id = "LC4699"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L4700"
class
= "blob-num js-line-number"
data - line - number = "4700" > < /td>
    < td
id = "LC4700"
class
= "blob-code blob-code-inner js-file-line" > option < span
class
= "pl-k" >
:<
/span> [ <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;select multiple=&#39;multiple&#39;&gt;<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/select&gt;<span class="pl-pds">&quot;</span></span> ],</
td >
< /tr>
< tr >
< td
id = "L4701"
class
= "blob-num js-line-number"
data - line - number = "4701" > < /td>
    < td
id = "LC4701"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4702"
class
= "blob-num js-line-number"
data - line - number = "4702" > < /td>
    < td
id = "LC4702"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> XHTML parsers do not magically insert elements in the</span></td>
    < /tr>
    < tr >
    < td
id = "L4703"
class
= "blob-num js-line-number"
data - line - number = "4703" > < /td>
    < td
id = "LC4703"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> same way that tag soup parsers do. So we cannot shorten</span></td>
    < /tr>
    < tr >
    < td
id = "L4704"
class
= "blob-num js-line-number"
data - line - number = "4704" > < /td>
    < td
id = "LC4704"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> this by omitting &lt;tbody&gt; or other required elements.</span></td>
    < /tr>
    < tr >
    < td
id = "L4705"
class
= "blob-num js-line-number"
data - line - number = "4705" > < /td>
    < td
id = "LC4705"
class
= "blob-code blob-code-inner js-file-line" > thead < span
class
= "pl-k" >
:<
/span> [ <span class="pl-c1">1</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;table&gt;<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/table&gt;<span class="pl-pds">&quot;</span></span> ],</
td >
< /tr>
< tr >
< td
id = "L4706"
class
= "blob-num js-line-number"
data - line - number = "4706" > < /td>
    < td
id = "LC4706"
class
= "blob-code blob-code-inner js-file-line" > col < span
class
= "pl-k" >
:<
/span> [ <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;table&gt;&lt;colgroup&gt;<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/colgroup&gt;&lt;/table&gt;<span class="pl-pds">&quot;</span></span> ],</
td >
< /tr>
< tr >
< td
id = "L4707"
class
= "blob-num js-line-number"
data - line - number = "4707" > < /td>
    < td
id = "LC4707"
class
= "blob-code blob-code-inner js-file-line" > tr < span
class
= "pl-k" >
:<
/span> [ <span class="pl-c1">2</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;table&gt;&lt;tbody&gt;<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/tbody&gt;&lt;/table&gt;<span class="pl-pds">&quot;</span></span> ],</
td >
< /tr>
< tr >
< td
id = "L4708"
class
= "blob-num js-line-number"
data - line - number = "4708" > < /td>
    < td
id = "LC4708"
class
= "blob-code blob-code-inner js-file-line" > td < span
class
= "pl-k" >
:<
/span> [ <span class="pl-c1">3</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;<span class="pl-pds">&quot;</span></span> ],</
td >
< /tr>
< tr >
< td
id = "L4709"
class
= "blob-num js-line-number"
data - line - number = "4709" > < /td>
    < td
id = "LC4709"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4710"
class
= "blob-num js-line-number"
data - line - number = "4710" > < /td>
    < td
id = "LC4710"
class
= "blob-code blob-code-inner js-file-line" > _default < span
class
= "pl-k" >
:<
/span> [ <span class="pl-c1">0</span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> ]</
td >
< /tr>
< tr >
< td
id = "L4711"
class
= "blob-num js-line-number"
data - line - number = "4711" > < /td>
    < td
id = "LC4711"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L4712"
class
= "blob-num js-line-number"
data - line - number = "4712" > < /td>
    < td
id = "LC4712"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4713"
class
= "blob-num js-line-number"
data - line - number = "4713" > < /td>
    < td
id = "LC4713"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L4714"
class
= "blob-num js-line-number"
data - line - number = "4714" > < /td>
    < td
id = "LC4714"
class
= "blob-code blob-code-inner js-file-line" > wrapMap < span
class
= "pl-k" >
.<
/span>optgroup <span class="pl-k">=</s
pan > wrapMap < span
class
= "pl-k" >
.<
/span>option;</
td >
< /tr>
< tr >
< td
id = "L4715"
class
= "blob-num js-line-number"
data - line - number = "4715" > < /td>
    < td
id = "LC4715"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4716"
class
= "blob-num js-line-number"
data - line - number = "4716" > < /td>
    < td
id = "LC4716"
class
= "blob-code blob-code-inner js-file-line" > wrapMap < span
class
= "pl-k" >
.<
/span>tbody <span class="pl-k">=</s
pan > wrapMap < span
class
= "pl-k" >
.<
/span>tfoot <span class="pl-k">=</s
pan > wrapMap < span
class
= "pl-k" >
.<
/span>colgroup <span class="pl-k">=</s
pan > wrapMap < span
class
= "pl-k" >
.<
/span>caption <span class="pl-k">=</s
pan > wrapMap < span
class
= "pl-k" >
.<
/span>thead;</
td >
< /tr>
< tr >
< td
id = "L4717"
class
= "blob-num js-line-number"
data - line - number = "4717" > < /td>
    < td
id = "LC4717"
class
= "blob-code blob-code-inner js-file-line" > wrapMap < span
class
= "pl-k" >
.<
/span>th <span class="pl-k">=</s
pan > wrapMap < span
class
= "pl-k" >
.<
/span>td;</
td >
< /tr>
< tr >
< td
id = "L4718"
class
= "blob-num js-line-number"
data - line - number = "4718" > < /td>
    < td
id = "LC4718"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4719"
class
= "blob-num js-line-number"
data - line - number = "4719" > < /td>
    < td
id = "LC4719"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4720"
class
= "blob-num js-line-number"
data - line - number = "4720" > < /td>
    < td
id = "LC4720"
class
= "blob-code blob-code-inner js-file-line" > function getAll(context, tag) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4721"
class
    = "blob-num js-line-number"
    data - line - number = "4721" > < /td>
        < td
    id = "LC4721"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4722"
class
    = "blob-num js-line-number"
    data - line - number = "4722" > < /td>
        < td
    id = "LC4722"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE &lt;=9 - 11 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L4723"
class
    = "blob-num js-line-number"
    data - line - number = "4723" > < /td>
        < td
    id = "LC4723"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Use typeof to avoid zero-argument method invocation on host objects (#15151)</span></td>
        < /tr>
        < tr >
        < td
    id = "L4724"
class
    = "blob-num js-line-number"
    data - line - number = "4724" > < /td>
        < td
    id = "LC4724"
class
    = "blob-code blob-code-inner js-file-line" >
    var ret;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4725"
class
    = "blob-num js-line-number"
    data - line - number = "4725" > < /td>
        < td
    id = "LC4725"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4726"
class
    = "blob-num js-line-number"
    data - line - number = "4726" > < /td>
        < td
    id = "LC4726"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof context<span class="pl-k">.</s
    pan > getElementsByTagName < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>undefined<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4727"
class
    = "blob-num js-line-number"
    data - line - number = "4727" > < /td>
        < td
    id = "LC4727"
class
    = "blob-code blob-code-inner js-file-line" > ret < span
class
    = "pl-k" >= < /span> context<span class="pl-k">.</s
    pan > getElementsByTagName(tag < span
class
    = "pl-k" > || < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > * < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4728"
class
    = "blob-num js-line-number"
    data - line - number = "4728" > < /td>
        < td
    id = "LC4728"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4729"
class
    = "blob-num js-line-number"
    data - line - number = "4729" > < /td>
        < td
    id = "LC4729"
class
    = "blob-code blob-code-inner js-file-line" >
} < span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (typeof context < span
class
= "pl-k" >
.<
/span>querySelectorAll <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > undefined < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4730"
class
    = "blob-num js-line-number"
    data - line - number = "4730" > < /td>
        < td
    id = "LC4730"
class
    = "blob-code blob-code-inner js-file-line" > ret < span
class
    = "pl-k" >= < /span> context<span class="pl-k">.</s
    pan > querySelectorAll(tag < span
class
    = "pl-k" > || < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > * < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4731"
class
    = "blob-num js-line-number"
    data - line - number = "4731" > < /td>
        < td
    id = "LC4731"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4732"
class
    = "blob-num js-line-number"
    data - line - number = "4732" > < /td>
        < td
    id = "LC4732"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4733"
class
= "blob-num js-line-number"
data - line - number = "4733" > < /td>
    < td
id = "LC4733"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >= < /span> [];</
td >
< /tr>
< tr >
< td
id = "L4734"
class
= "blob-num js-line-number"
data - line - number = "4734" > < /td>
    < td
id = "LC4734"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4735"
class
= "blob-num js-line-number"
data - line - number = "4735" > < /td>
    < td
id = "LC4735"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4736"
class
= "blob-num js-line-number"
data - line - number = "4736" > < /td>
    < td
id = "LC4736"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( tag <span class="pl-k">===</s
pan > undefined < span
class
= "pl-k" > || < /span> tag <span class="pl-k">&amp;&amp;</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>nodeName( context, tag ) ) {</
td >
< /tr>
< tr >
< td
id = "L4737"
class
= "blob-num js-line-number"
data - line - number = "4737" > < /td>
    < td
id = "LC4737"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > merge([context], ret);
<
/td>
< /tr>
< tr >
< td
id = "L4738"
class
= "blob-num js-line-number"
data - line - number = "4738" > < /td>
    < td
id = "LC4738"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4739"
class
= "blob-num js-line-number"
data - line - number = "4739" > < /td>
    < td
id = "LC4739"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4740"
class
= "blob-num js-line-number"
data - line - number = "4740" > < /td>
    < td
id = "LC4740"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L4741"
class
= "blob-num js-line-number"
data - line - number = "4741" > < /td>
    < td
id = "LC4741"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4742"
class
= "blob-num js-line-number"
data - line - number = "4742" > < /td>
    < td
id = "LC4742"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4743"
class
= "blob-num js-line-number"
data - line - number = "4743" > < /td>
    < td
id = "LC4743"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4744"
class
= "blob-num js-line-number"
data - line - number = "4744" > < /td>
    < td
id = "LC4744"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Mark scripts as having already been evaluated</span></td>
    < /tr>
    < tr >
    < td
id = "L4745"
class
= "blob-num js-line-number"
data - line - number = "4745" > < /td>
    < td
id = "LC4745"
class
= "blob-code blob-code-inner js-file-line" > function setGlobalEval(elems, refElements) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4746"
    class
        = "blob-num js-line-number"
        data - line - number = "4746" > < /td>
            < td
        id = "LC4746"
    class
        = "blob-code blob-code-inner js-file-line" >
        var i
    <
        span
    class
        = "pl-k" >= < /span> <span class="pl-c1">0</s
        pan >,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4747"
    class
        = "blob-num js-line-number"
        data - line - number = "4747" > < /td>
            < td
        id = "LC4747"
    class
        = "blob-code blob-code-inner js-file-line" > l < span
    class
        = "pl-k" >= < /span> elems<span class="pl-k">.</s
        pan > length;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4748"
    class
        = "blob-num js-line-number"
        data - line - number = "4748" > < /td>
            < td
        id = "LC4748"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L4749"
    class
        = "blob-num js-line-number"
        data - line - number = "4749" > < /td>
            < td
        id = "LC4749"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        for<
        /span> ( ; i <span class="pl-k">&lt;</s
        pan > l;
        i < span
    class
        = "pl-k" > ++ < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L4750"
    class
        = "blob-num js-line-number"
        data - line - number = "4750" > < /td>
            < td
        id = "LC4750"
    class
        = "blob-code blob-code-inner js-file-line" > dataPriv < span
    class
        = "pl-k" >
    .<
        /span>set(</
        td >
        < /tr>
        < tr >
        < td
        id = "L4751"
    class
        = "blob-num js-line-number"
        data - line - number = "4751" > < /td>
            < td
        id = "LC4751"
    class
        = "blob-code blob-code-inner js-file-line" > elems[i],
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4752"
    class
        = "blob-num js-line-number"
        data - line - number = "4752" > < /td>
            < td
        id = "LC4752"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>globalEval<span class="pl-pds">&quot;</s
        pan > < /span>,</
        td >
        < /tr>
        < tr >
        < td
        id = "L4753"
    class
        = "blob-num js-line-number"
        data - line - number = "4753" > < /td>
            < td
        id = "LC4753"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" > ! < /span>refElements <span class="pl-k">||</s
        pan > dataPriv < span
    class
        = "pl-k" >
    .<
        /span>get( refElements[ i ], <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > globalEval < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan >
    ) < /td>
    < /tr>
    < tr >
    < td
id = "L4754"
class
= "blob-num js-line-number"
data - line - number = "4754" > < /td>
    < td
id = "LC4754"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4755"
class
= "blob-num js-line-number"
data - line - number = "4755" > < /td>
    < td
id = "LC4755"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4756"
class
= "blob-num js-line-number"
data - line - number = "4756" > < /td>
    < td
id = "LC4756"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4757"
class
= "blob-num js-line-number"
data - line - number = "4757" > < /td>
    < td
id = "LC4757"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4758"
class
= "blob-num js-line-number"
data - line - number = "4758" > < /td>
    < td
id = "LC4758"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4759"
class
= "blob-num js-line-number"
data - line - number = "4759" > < /td>
    < td
id = "LC4759"
class
= "blob-code blob-code-inner js-file-line" >
var rhtml
<
span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">&lt;</s
pan > < span
class
= "pl-k" > | &amp; < /span>#<span class="pl-k">?</s
pan >\w < span
class
= "pl-k" > + < /span>;<span class="pl-k">/ < /span>;</
td >
< /tr>
< tr >
< td
id = "L4760"
class
= "blob-num js-line-number"
data - line - number = "4760" > < /td>
    < td
id = "LC4760"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4761"
class
= "blob-num js-line-number"
data - line - number = "4761" > < /td>
    < td
id = "LC4761"
class
= "blob-code blob-code-inner js-file-line" > function buildFragment(elems, context, scripts, selection, ignored) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4762"
class
    = "blob-num js-line-number"
    data - line - number = "4762" > < /td>
        < td
    id = "LC4762"
class
    = "blob-code blob-code-inner js-file-line" >
    var elem, tmp, tag, wrap, contains, j, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L4763"
class
    = "blob-num js-line-number"
    data - line - number = "4763" > < /td>
        < td
    id = "LC4763"
class
    = "blob-code blob-code-inner js-file-line" > fragment < span
class
    = "pl-k" >= < /span> context<span class="pl-k">.</s
    pan > createDocumentFragment(),
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4764"
class
    = "blob-num js-line-number"
    data - line - number = "4764" > < /td>
        < td
    id = "LC4764"
class
    = "blob-code blob-code-inner js-file-line" > nodes < span
class
    = "pl-k" >= < /span> [],</
    td >
    < /tr>
    < tr >
    < td
    id = "L4765"
class
    = "blob-num js-line-number"
    data - line - number = "4765" > < /td>
        < td
    id = "LC4765"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4766"
class
    = "blob-num js-line-number"
    data - line - number = "4766" > < /td>
        < td
    id = "LC4766"
class
    = "blob-code blob-code-inner js-file-line" > l < span
class
    = "pl-k" >= < /span> elems<span class="pl-k">.</s
    pan > length;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4767"
class
    = "blob-num js-line-number"
    data - line - number = "4767" > < /td>
        < td
    id = "LC4767"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4768"
class
    = "blob-num js-line-number"
    data - line - number = "4768" > < /td>
        < td
    id = "LC4768"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; i <span class="pl-k">&lt;</s
    pan > l;
    i < span
class
    = "pl-k" > ++ < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4769"
class
    = "blob-num js-line-number"
    data - line - number = "4769" > < /td>
        < td
    id = "LC4769"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >= < /span> elems[ i ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L4770"
class
    = "blob-num js-line-number"
    data - line - number = "4770" > < /td>
        < td
    id = "LC4770"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4771"
class
    = "blob-num js-line-number"
    data - line - number = "4771" > < /td>
        < td
    id = "LC4771"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem <span class="pl-k">||</s
    pan > elem < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">0</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4772"
class
    = "blob-num js-line-number"
    data - line - number = "4772" > < /td>
        < td
    id = "LC4772"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4773"
class
    = "blob-num js-line-number"
    data - line - number = "4773" > < /td>
        < td
    id = "LC4773"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Add nodes directly</span></td>
        < /tr>
        < tr >
        < td
    id = "L4774"
class
    = "blob-num js-line-number"
    data - line - number = "4774" > < /td>
        < td
    id = "LC4774"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > type(elem) < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > object < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4775"
class
    = "blob-num js-line-number"
    data - line - number = "4775" > < /td>
        < td
    id = "LC4775"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4776"
class
    = "blob-num js-line-number"
    data - line - number = "4776" > < /td>
        < td
    id = "LC4776"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: Android &lt;=4.0 only, PhantomJS 1 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L4777"
class
    = "blob-num js-line-number"
    data - line - number = "4777" > < /td>
        < td
    id = "LC4777"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> push.apply(_, arraylike) throws on ancient WebKit</span></td>
        < /tr>
        < tr >
        < td
    id = "L4778"
class
    = "blob-num js-line-number"
    data - line - number = "4778" > < /td>
        < td
    id = "LC4778"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>merge( nodes, elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" > ?
<
    /span> [ elem ] <span class="pl-k">:</s
    pan > elem
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4779"
class
= "blob-num js-line-number"
data - line - number = "4779" > < /td>
    < td
id = "LC4779"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4780"
class
= "blob-num js-line-number"
data - line - number = "4780" > < /td>
    < td
id = "LC4780"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert non-html into a text node</span></td>
    < /tr>
    < tr >
    < td
id = "L4781"
class
= "blob-num js-line-number"
data - line - number = "4781" > < /td>
    < td
id = "LC4781"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > ( < span
class
= "pl-k" > ! < /span>rhtml<span class="pl-k">.</s
pan > test(elem)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4782"
class
    = "blob-num js-line-number"
    data - line - number = "4782" > < /td>
        < td
    id = "LC4782"
class
    = "blob-code blob-code-inner js-file-line" > nodes < span
class
    = "pl-k" >
.<
    /span>push( context<span class="pl-k">.</s
    pan > createTextNode(elem)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4783"
class
= "blob-num js-line-number"
data - line - number = "4783" > < /td>
    < td
id = "LC4783"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4784"
class
= "blob-num js-line-number"
data - line - number = "4784" > < /td>
    < td
id = "LC4784"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert html into DOM nodes</span></td>
    < /tr>
    < tr >
    < td
id = "L4785"
class
= "blob-num js-line-number"
data - line - number = "4785" > < /td>
    < td
id = "LC4785"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4786"
class
= "blob-num js-line-number"
data - line - number = "4786" > < /td>
    < td
id = "LC4786"
class
= "blob-code blob-code-inner js-file-line" > tmp < span
class
= "pl-k" >= < /span> tmp <span class="pl-k">||</s
pan > fragment < span
class
= "pl-k" >
.<
/span>appendChild( context<span class="pl-k">.</s
pan > createElement( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>div<span class="pl-pds">&quot;</s
pan > < /span> ) );</
td >
< /tr>
< tr >
< td
id = "L4787"
class
= "blob-num js-line-number"
data - line - number = "4787" > < /td>
    < td
id = "LC4787"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4788"
class
= "blob-num js-line-number"
data - line - number = "4788" > < /td>
    < td
id = "LC4788"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Deserialize a standard representation</span></td>
    < /tr>
    < tr >
    < td
id = "L4789"
class
= "blob-num js-line-number"
data - line - number = "4789" > < /td>
    < td
id = "LC4789"
class
= "blob-code blob-code-inner js-file-line" > tag < span
class
= "pl-k" >= < /span> ( rtagName<span class="pl-k">.</s
pan > exec(elem) < span
class
= "pl-k" > || < /span> [ <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> ] )[ <span class="pl-c1">1</span> ]<span class="pl-k">.</s
pan > toLowerCase();
<
/td>
< /tr>
< tr >
< td
id = "L4790"
class
= "blob-num js-line-number"
data - line - number = "4790" > < /td>
    < td
id = "LC4790"
class
= "blob-code blob-code-inner js-file-line" > wrap < span
class
= "pl-k" >= < /span> wrapMap[ tag ] <span class="pl-k">||</s
pan > wrapMap < span
class
= "pl-k" >
.<
/span>_default;</
td >
< /tr>
< tr >
< td
id = "L4791"
class
= "blob-num js-line-number"
data - line - number = "4791" > < /td>
    < td
id = "LC4791"
class
= "blob-code blob-code-inner js-file-line" > tmp < span
class
= "pl-k" >
.<
/span>innerHTML <span class="pl-k">=</s
pan > wrap[ < span
class
= "pl-c1" > 1 < /span> ] <span class="pl-k">+</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>htmlPrefilter( elem ) <span class="pl-k">+</s
pan > wrap[ < span
class
= "pl-c1" > 2 < /span> ];</
td >
< /tr>
< tr >
< td
id = "L4792"
class
= "blob-num js-line-number"
data - line - number = "4792" > < /td>
    < td
id = "LC4792"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4793"
class
= "blob-num js-line-number"
data - line - number = "4793" > < /td>
    < td
id = "LC4793"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Descend through wrappers to the right content</span></td>
    < /tr>
    < tr >
    < td
id = "L4794"
class
= "blob-num js-line-number"
data - line - number = "4794" > < /td>
    < td
id = "LC4794"
class
= "blob-code blob-code-inner js-file-line" > j < span
class
= "pl-k" >= < /span> wrap[ <span class="pl-c1">0</span> ];</
td >
< /tr>
< tr >
< td
id = "L4795"
class
= "blob-num js-line-number"
data - line - number = "4795" > < /td>
    < td
id = "LC4795"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( j<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4796"
class
    = "blob-num js-line-number"
    data - line - number = "4796" > < /td>
        < td
    id = "LC4796"
class
    = "blob-code blob-code-inner js-file-line" > tmp < span
class
    = "pl-k" >= < /span> tmp<span class="pl-k">.</s
    pan > lastChild;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4797"
class
    = "blob-num js-line-number"
    data - line - number = "4797" > < /td>
        < td
    id = "LC4797"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4798"
class
= "blob-num js-line-number"
data - line - number = "4798" > < /td>
    < td
id = "LC4798"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4799"
class
= "blob-num js-line-number"
data - line - number = "4799" > < /td>
    < td
id = "LC4799"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android &lt;=4.0 only, PhantomJS 1 only</span></td>
    < /tr>
    < tr >
    < td
id = "L4800"
class
= "blob-num js-line-number"
data - line - number = "4800" > < /td>
    < td
id = "LC4800"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> push.apply(_, arraylike) throws on ancient WebKit</span></td>
    < /tr>
    < tr >
    < td
id = "L4801"
class
= "blob-num js-line-number"
data - line - number = "4801" > < /td>
    < td
id = "LC4801"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>merge( nodes, tmp<span class="pl-k">.</s
pan > childNodes
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4802"
class
= "blob-num js-line-number"
data - line - number = "4802" > < /td>
    < td
id = "LC4802"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4803"
class
= "blob-num js-line-number"
data - line - number = "4803" > < /td>
    < td
id = "LC4803"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remember the top-level container</span></td>
    < /tr>
    < tr >
    < td
id = "L4804"
class
= "blob-num js-line-number"
data - line - number = "4804" > < /td>
    < td
id = "LC4804"
class
= "blob-code blob-code-inner js-file-line" > tmp < span
class
= "pl-k" >= < /span> fragment<span class="pl-k">.</s
pan > firstChild;
<
/td>
< /tr>
< tr >
< td
id = "L4805"
class
= "blob-num js-line-number"
data - line - number = "4805" > < /td>
    < td
id = "LC4805"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4806"
class
= "blob-num js-line-number"
data - line - number = "4806" > < /td>
    < td
id = "LC4806"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Ensure the created nodes are orphaned (#12392)</span></td>
    < /tr>
    < tr >
    < td
id = "L4807"
class
= "blob-num js-line-number"
data - line - number = "4807" > < /td>
    < td
id = "LC4807"
class
= "blob-code blob-code-inner js-file-line" > tmp < span
class
= "pl-k" >
.<
/span>textContent <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L4808"
class
= "blob-num js-line-number"
data - line - number = "4808" > < /td>
    < td
id = "LC4808"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4809"
class
= "blob-num js-line-number"
data - line - number = "4809" > < /td>
    < td
id = "LC4809"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4810"
class
= "blob-num js-line-number"
data - line - number = "4810" > < /td>
    < td
id = "LC4810"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4811"
class
= "blob-num js-line-number"
data - line - number = "4811" > < /td>
    < td
id = "LC4811"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4812"
class
= "blob-num js-line-number"
data - line - number = "4812" > < /td>
    < td
id = "LC4812"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove wrapper from fragment</span></td>
    < /tr>
    < tr >
    < td
id = "L4813"
class
= "blob-num js-line-number"
data - line - number = "4813" > < /td>
    < td
id = "LC4813"
class
= "blob-code blob-code-inner js-file-line" > fragment < span
class
= "pl-k" >
.<
/span>textContent <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L4814"
class
= "blob-num js-line-number"
data - line - number = "4814" > < /td>
    < td
id = "LC4814"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4815"
class
= "blob-num js-line-number"
data - line - number = "4815" > < /td>
    < td
id = "LC4815"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4816"
class
= "blob-num js-line-number"
data - line - number = "4816" > < /td>
    < td
id = "LC4816"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ( elem <span class="pl-k">=</s
pan > nodes[i < span
class
= "pl-k" > ++ < /span> ] ) ) {</
td >
< /tr>
< tr >
< td
id = "L4817"
class
= "blob-num js-line-number"
data - line - number = "4817" > < /td>
    < td
id = "LC4817"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4818"
class
= "blob-num js-line-number"
data - line - number = "4818" > < /td>
    < td
id = "LC4818"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Skip elements already in the context collection (trac-4087)</span></td>
    < /tr>
    < tr >
    < td
id = "L4819"
class
= "blob-num js-line-number"
data - line - number = "4819" > < /td>
    < td
id = "LC4819"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( selection <span class="pl-k">&amp;&amp;</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>inArray( elem, selection ) <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4820"
class
    = "blob-num js-line-number"
    data - line - number = "4820" > < /td>
        < td
    id = "LC4820"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( ignored ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4821"
class
    = "blob-num js-line-number"
    data - line - number = "4821" > < /td>
        < td
    id = "LC4821"
class
    = "blob-code blob-code-inner js-file-line" > ignored < span
class
    = "pl-k" >
.<
    /span>push( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L4822"
class
    = "blob-num js-line-number"
    data - line - number = "4822" > < /td>
        < td
    id = "LC4822"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4823"
class
= "blob-num js-line-number"
data - line - number = "4823" > < /td>
    < td
id = "LC4823"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
continue
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L4824"
class
= "blob-num js-line-number"
data - line - number = "4824" > < /td>
    < td
id = "LC4824"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4825"
class
= "blob-num js-line-number"
data - line - number = "4825" > < /td>
    < td
id = "LC4825"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4826"
class
= "blob-num js-line-number"
data - line - number = "4826" > < /td>
    < td
id = "LC4826"
class
= "blob-code blob-code-inner js-file-line" > contains < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > contains(elem < span
class
= "pl-k" >
.<
/span>ownerDocument, elem );</
td >
< /tr>
< tr >
< td
id = "L4827"
class
= "blob-num js-line-number"
data - line - number = "4827" > < /td>
    < td
id = "LC4827"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4828"
class
= "blob-num js-line-number"
data - line - number = "4828" > < /td>
    < td
id = "LC4828"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Append to fragment</span></td>
    < /tr>
    < tr >
    < td
id = "L4829"
class
= "blob-num js-line-number"
data - line - number = "4829" > < /td>
    < td
id = "LC4829"
class
= "blob-code blob-code-inner js-file-line" > tmp < span
class
= "pl-k" >= < /span> getAll( fragment<span class="pl-k">.</s
pan > appendChild(elem),
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>script<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L4830"
class
= "blob-num js-line-number"
data - line - number = "4830" > < /td>
    < td
id = "LC4830"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4831"
class
= "blob-num js-line-number"
data - line - number = "4831" > < /td>
    < td
id = "LC4831"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Preserve script evaluation history</span></td>
    < /tr>
    < tr >
    < td
id = "L4832"
class
= "blob-num js-line-number"
data - line - number = "4832" > < /td>
    < td
id = "LC4832"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( contains ) {</
td >
< /tr>
< tr >
< td
id = "L4833"
class
= "blob-num js-line-number"
data - line - number = "4833" > < /td>
    < td
id = "LC4833"
class
= "blob-code blob-code-inner js-file-line" > setGlobalEval(tmp);
<
/td>
< /tr>
< tr >
< td
id = "L4834"
class
= "blob-num js-line-number"
data - line - number = "4834" > < /td>
    < td
id = "LC4834"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4835"
class
= "blob-num js-line-number"
data - line - number = "4835" > < /td>
    < td
id = "LC4835"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4836"
class
= "blob-num js-line-number"
data - line - number = "4836" > < /td>
    < td
id = "LC4836"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Capture executables</span></td>
    < /tr>
    < tr >
    < td
id = "L4837"
class
= "blob-num js-line-number"
data - line - number = "4837" > < /td>
    < td
id = "LC4837"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( scripts ) {</
td >
< /tr>
< tr >
< td
id = "L4838"
class
= "blob-num js-line-number"
data - line - number = "4838" > < /td>
    < td
id = "LC4838"
class
= "blob-code blob-code-inner js-file-line" > j < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4839"
class
= "blob-num js-line-number"
data - line - number = "4839" > < /td>
    < td
id = "LC4839"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ( elem <span class="pl-k">=</s
pan > tmp[j < span
class
= "pl-k" > ++ < /span> ] ) ) {</
td >
< /tr>
< tr >
< td
id = "L4840"
class
= "blob-num js-line-number"
data - line - number = "4840" > < /td>
    < td
id = "LC4840"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( rscriptType<span class="pl-k">.</s
pan > test(elem < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> ) ) {</
td >
< /tr>
< tr >
< td
id = "L4841"
class
= "blob-num js-line-number"
data - line - number = "4841" > < /td>
    < td
id = "LC4841"
class
= "blob-code blob-code-inner js-file-line" > scripts < span
class
= "pl-k" >
.<
/span>push( elem );</
td >
< /tr>
< tr >
< td
id = "L4842"
class
= "blob-num js-line-number"
data - line - number = "4842" > < /td>
    < td
id = "LC4842"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4843"
class
= "blob-num js-line-number"
data - line - number = "4843" > < /td>
    < td
id = "LC4843"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4844"
class
= "blob-num js-line-number"
data - line - number = "4844" > < /td>
    < td
id = "LC4844"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4845"
class
= "blob-num js-line-number"
data - line - number = "4845" > < /td>
    < td
id = "LC4845"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4846"
class
= "blob-num js-line-number"
data - line - number = "4846" > < /td>
    < td
id = "LC4846"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4847"
class
= "blob-num js-line-number"
data - line - number = "4847" > < /td>
    < td
id = "LC4847"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> fragment;</
td >
< /tr>
< tr >
< td
id = "L4848"
class
= "blob-num js-line-number"
data - line - number = "4848" > < /td>
    < td
id = "LC4848"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4849"
class
= "blob-num js-line-number"
data - line - number = "4849" > < /td>
    < td
id = "LC4849"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4850"
class
= "blob-num js-line-number"
data - line - number = "4850" > < /td>
    < td
id = "LC4850"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4851"
class
= "blob-num js-line-number"
data - line - number = "4851" > < /td>
    < td
id = "LC4851"
class
= "blob-code blob-code-inner js-file-line" > (function () {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4852"
    class
        = "blob-num js-line-number"
        data - line - number = "4852" > < /td>
            < td
        id = "LC4852"
    class
        = "blob-code blob-code-inner js-file-line" >
        var fragment
    <
        span
    class
        = "pl-k" >= < /span> document<span class="pl-k">.</s
        pan > createDocumentFragment(),
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4853"
    class
        = "blob-num js-line-number"
        data - line - number = "4853" > < /td>
            < td
        id = "LC4853"
    class
        = "blob-code blob-code-inner js-file-line" > div < span
    class
        = "pl-k" >= < /span> fragment<span class="pl-k">.</s
        pan > appendChild(document < span
    class
        = "pl-k" >
    .<
        /span>createElement( <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > div < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan >
    ) ), < /td>
    < /tr>
    < tr >
    < td
id = "L4854"
class
= "blob-num js-line-number"
data - line - number = "4854" > < /td>
    < td
id = "LC4854"
class
= "blob-code blob-code-inner js-file-line" > input < span
class
= "pl-k" >= < /span> document<span class="pl-k">.</s
pan > createElement( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>input<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L4855"
class
= "blob-num js-line-number"
data - line - number = "4855" > < /td>
    < td
id = "LC4855"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4856"
class
= "blob-num js-line-number"
data - line - number = "4856" > < /td>
    < td
id = "LC4856"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android 4.0 - 4.3 only</span></td>
    < /tr>
    < tr >
    < td
id = "L4857"
class
= "blob-num js-line-number"
data - line - number = "4857" > < /td>
    < td
id = "LC4857"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check state lost if the name is set (#11217)</span></td>
    < /tr>
    < tr >
    < td
id = "L4858"
class
= "blob-num js-line-number"
data - line - number = "4858" > < /td>
    < td
id = "LC4858"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Windows Web Apps (WWA)</span></td>
    < /tr>
    < tr >
    < td
id = "L4859"
class
= "blob-num js-line-number"
data - line - number = "4859" > < /td>
    < td
id = "LC4859"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> `name` and `type` must use .setAttribute for WWA (#14901)</span></td>
    < /tr>
    < tr >
    < td
id = "L4860"
class
= "blob-num js-line-number"
data - line - number = "4860" > < /td>
    < td
id = "LC4860"
class
= "blob-code blob-code-inner js-file-line" > input < span
class
= "pl-k" >
.<
/span>setAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > type < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>radio<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L4861"
class
= "blob-num js-line-number"
data - line - number = "4861" > < /td>
    < td
id = "LC4861"
class
= "blob-code blob-code-inner js-file-line" > input < span
class
= "pl-k" >
.<
/span>setAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > checked < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>checked<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L4862"
class
= "blob-num js-line-number"
data - line - number = "4862" > < /td>
    < td
id = "LC4862"
class
= "blob-code blob-code-inner js-file-line" > input < span
class
= "pl-k" >
.<
/span>setAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > name < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>t<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L4863"
class
= "blob-num js-line-number"
data - line - number = "4863" > < /td>
    < td
id = "LC4863"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4864"
class
= "blob-num js-line-number"
data - line - number = "4864" > < /td>
    < td
id = "LC4864"
class
= "blob-code blob-code-inner js-file-line" > div < span
class
= "pl-k" >
.<
/span>appendChild( input );</
td >
< /tr>
< tr >
< td
id = "L4865"
class
= "blob-num js-line-number"
data - line - number = "4865" > < /td>
    < td
id = "LC4865"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4866"
class
= "blob-num js-line-number"
data - line - number = "4866" > < /td>
    < td
id = "LC4866"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android &lt;=4.1 only</span></td>
    < /tr>
    < tr >
    < td
id = "L4867"
class
= "blob-num js-line-number"
data - line - number = "4867" > < /td>
    < td
id = "LC4867"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Older WebKit doesn&#39;t clone checked state correctly in fragments</span></td>
    < /tr>
    < tr >
    < td
id = "L4868"
class
= "blob-num js-line-number"
data - line - number = "4868" > < /td>
    < td
id = "LC4868"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>checkClone <span class="pl-k">=</s
pan > div < span
class
= "pl-k" >
.<
/span>cloneNode( <span class="pl-c1">true</s
pan >
)<
span
class
= "pl-k" >
.<
/span>cloneNode( <span class="pl-c1">true</s
pan >
)<
span
class
= "pl-k" >
.<
/span>lastChild<span class="pl-k">.</s
pan > checked;
<
/td>
< /tr>
< tr >
< td
id = "L4869"
class
= "blob-num js-line-number"
data - line - number = "4869" > < /td>
    < td
id = "LC4869"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4870"
class
= "blob-num js-line-number"
data - line - number = "4870" > < /td>
    < td
id = "LC4870"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L4871"
class
= "blob-num js-line-number"
data - line - number = "4871" > < /td>
    < td
id = "LC4871"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure textarea (and checkbox) defaultValue is properly cloned</span></td>
    < /tr>
    < tr >
    < td
id = "L4872"
class
= "blob-num js-line-number"
data - line - number = "4872" > < /td>
    < td
id = "LC4872"
class
= "blob-code blob-code-inner js-file-line" > div < span
class
= "pl-k" >
.<
/span>innerHTML <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>&lt;textarea&gt;x&lt;/
textarea &gt; < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4873"
class
= "blob-num js-line-number"
data - line - number = "4873" > < /td>
    < td
id = "LC4873"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>noCloneChecked <span class="pl-k">=</s
pan > < span
class
= "pl-k" > !! < /span>div<span class="pl-k">.</s
pan > cloneNode( < span
class
= "pl-c1" > true < /span> )<span class="pl-k">.</s
pan > lastChild < span
class
= "pl-k" >
.<
/span>defaultValue;</
td >
< /tr>
< tr >
< td
id = "L4874"
class
= "blob-num js-line-number"
data - line - number = "4874" > < /td>
    < td
id = "LC4874"
class
= "blob-code blob-code-inner js-file-line" >
} )
();
<
/td>
< /tr>
< tr >
< td
id = "L4875"
class
= "blob-num js-line-number"
data - line - number = "4875" > < /td>
    < td
id = "LC4875"
class
= "blob-code blob-code-inner js-file-line" >
var documentElement
<
span
class
= "pl-k" >= < /span> document<span class="pl-k">.</s
pan > documentElement;
<
/td>
< /tr>
< tr >
< td
id = "L4876"
class
= "blob-num js-line-number"
data - line - number = "4876" > < /td>
    < td
id = "LC4876"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4877"
class
= "blob-num js-line-number"
data - line - number = "4877" > < /td>
    < td
id = "LC4877"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4878"
class
= "blob-num js-line-number"
data - line - number = "4878" > < /td>
    < td
id = "LC4878"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4879"
class
= "blob-num js-line-number"
data - line - number = "4879" > < /td>
    < td
id = "LC4879"
class
= "blob-code blob-code-inner js-file-line" >
var <
/td>
< /tr>
< tr >
< td
id = "L4880"
class
= "blob-num js-line-number"
data - line - number = "4880" > < /td>
    < td
id = "LC4880"
class
= "blob-code blob-code-inner js-file-line" > rkeyEvent < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > key < span
class
= "pl-k" > / < /span>,</
td >
< /tr>
< tr >
< td
id = "L4881"
class
= "blob-num js-line-number"
data - line - number = "4881" > < /td>
    < td
id = "LC4881"
class
= "blob-code blob-code-inner js-file-line" > rmouseEvent < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>mouse<span class="pl-k">|</s
pan > pointer < span
class
= "pl-k" > | < /span>contextmenu<span class="pl-k">|</s
pan > drag < span
class
= "pl-k" > | < /span>drop)<span class="pl-k">|</s
pan > click < span
class
= "pl-k" > / < /span>,</
td >
< /tr>
< tr >
< td
id = "L4882"
class
= "blob-num js-line-number"
data - line - number = "4882" > < /td>
    < td
id = "LC4882"
class
= "blob-code blob-code-inner js-file-line" > rtypenamespace < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ([ < span
class
= "pl-k" > ^ < /span><span class="pl-c1">.</s
pan >
]<
span
class
= "pl-k" > * < /span>)(<span class="pl-k">?:</s
pan >\<
span
class
= "pl-c1" >
.<
/span>(<span class="pl-c1">.</s
pan > < span
class
= "pl-k" > + < /span>)<span class="pl-k">|</s
pan >
)<
span
class
= "pl-k" > / < /span>;</
td >
< /tr>
< tr >
< td
id = "L4883"
class
= "blob-num js-line-number"
data - line - number = "4883" > < /td>
    < td
id = "LC4883"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4884"
class
= "blob-num js-line-number"
data - line - number = "4884" > < /td>
    < td
id = "LC4884"
class
= "blob-code blob-code-inner js-file-line" > function returnTrue() {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4885"
    class
        = "blob-num js-line-number"
        data - line - number = "4885" > < /td>
            < td
        id = "LC4885"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-c1">true</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4886"
    class
        = "blob-num js-line-number"
        data - line - number = "4886" > < /td>
            < td
        id = "LC4886"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L4887"
class
= "blob-num js-line-number"
data - line - number = "4887" > < /td>
    < td
id = "LC4887"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4888"
class
= "blob-num js-line-number"
data - line - number = "4888" > < /td>
    < td
id = "LC4888"
class
= "blob-code blob-code-inner js-file-line" > function returnFalse() {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L4889"
    class
        = "blob-num js-line-number"
        data - line - number = "4889" > < /td>
            < td
        id = "LC4889"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-c1">false</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L4890"
    class
        = "blob-num js-line-number"
        data - line - number = "4890" > < /td>
            < td
        id = "LC4890"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L4891"
class
= "blob-num js-line-number"
data - line - number = "4891" > < /td>
    < td
id = "LC4891"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4892"
class
= "blob-num js-line-number"
data - line - number = "4892" > < /td>
    < td
id = "LC4892"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L4893"
class
= "blob-num js-line-number"
data - line - number = "4893" > < /td>
    < td
id = "LC4893"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> See #13393 for more info</span></td>
    < /tr>
    < tr >
    < td
id = "L4894"
class
= "blob-num js-line-number"
data - line - number = "4894" > < /td>
    < td
id = "LC4894"
class
= "blob-code blob-code-inner js-file-line" > function safeActiveElement() {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4895"
class
    = "blob-num js-line-number"
    data - line - number = "4895" > < /td>
        < td
    id = "LC4895"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    try
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4896"
class
    = "blob-num js-line-number"
    data - line - number = "4896" > < /td>
        < td
    id = "LC4896"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> document<span class="pl-k">.</s
    pan > activeElement;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4897"
class
    = "blob-num js-line-number"
    data - line - number = "4897" > < /td>
        < td
    id = "LC4897"
class
    = "blob-code blob-code-inner js-file-line" >
} < span
class
= "pl-k" >
catch<
/span> ( err ) { }</
td >
< /tr>
< tr >
< td
id = "L4898"
class
= "blob-num js-line-number"
data - line - number = "4898" > < /td>
    < td
id = "LC4898"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4899"
class
= "blob-num js-line-number"
data - line - number = "4899" > < /td>
    < td
id = "LC4899"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4900"
class
= "blob-num js-line-number"
data - line - number = "4900" > < /td>
    < td
id = "LC4900"
class
= "blob-code blob-code-inner js-file-line" > function on(elem, types, selector, data, fn, one) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4901"
class
    = "blob-num js-line-number"
    data - line - number = "4901" > < /td>
        < td
    id = "LC4901"
class
    = "blob-code blob-code-inner js-file-line" >
    var origFn, type;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4902"
class
    = "blob-num js-line-number"
    data - line - number = "4902" > < /td>
        < td
    id = "LC4902"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4903"
class
    = "blob-num js-line-number"
    data - line - number = "4903" > < /td>
        < td
    id = "LC4903"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Types can be a map of types/handlers</span></td>
        < /tr>
        < tr >
        < td
    id = "L4904"
class
    = "blob-num js-line-number"
    data - line - number = "4904" > < /td>
        < td
    id = "LC4904"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof types <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>object<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4905"
class
    = "blob-num js-line-number"
    data - line - number = "4905" > < /td>
        < td
    id = "LC4905"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4906"
class
    = "blob-num js-line-number"
    data - line - number = "4906" > < /td>
        < td
    id = "LC4906"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> ( types-Object, selector, data )</span></td>
        < /tr>
        < tr >
        < td
    id = "L4907"
class
    = "blob-num js-line-number"
    data - line - number = "4907" > < /td>
        < td
    id = "LC4907"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof selector <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > string < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4908"
class
    = "blob-num js-line-number"
    data - line - number = "4908" > < /td>
        < td
    id = "LC4908"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4909"
class
    = "blob-num js-line-number"
    data - line - number = "4909" > < /td>
        < td
    id = "LC4909"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> ( types-Object, data )</span></td>
        < /tr>
        < tr >
        < td
    id = "L4910"
class
    = "blob-num js-line-number"
    data - line - number = "4910" > < /td>
        < td
    id = "LC4910"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >= < /span> data <span class="pl-k">||</s
    pan > selector;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4911"
class
    = "blob-num js-line-number"
    data - line - number = "4911" > < /td>
        < td
    id = "LC4911"
class
    = "blob-code blob-code-inner js-file-line" > selector < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4912"
class
    = "blob-num js-line-number"
    data - line - number = "4912" > < /td>
        < td
    id = "LC4912"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4913"
class
= "blob-num js-line-number"
data - line - number = "4913" > < /td>
    < td
id = "LC4913"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( type in types ) {</
td >
< /tr>
< tr >
< td
id = "L4914"
class
= "blob-num js-line-number"
data - line - number = "4914" > < /td>
    < td
id = "LC4914"
class
= "blob-code blob-code-inner js-file-line" > on(elem, type, selector, data, types[type], one);
<
/td>
< /tr>
< tr >
< td
id = "L4915"
class
= "blob-num js-line-number"
data - line - number = "4915" > < /td>
    < td
id = "LC4915"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4916"
class
= "blob-num js-line-number"
data - line - number = "4916" > < /td>
    < td
id = "LC4916"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem;</
td >
< /tr>
< tr >
< td
id = "L4917"
class
= "blob-num js-line-number"
data - line - number = "4917" > < /td>
    < td
id = "LC4917"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4918"
class
= "blob-num js-line-number"
data - line - number = "4918" > < /td>
    < td
id = "LC4918"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4919"
class
= "blob-num js-line-number"
data - line - number = "4919" > < /td>
    < td
id = "LC4919"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( data <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">&amp;&amp;</s
pan > fn < span
class
= "pl-k" >= =
<
/span> <span class="pl-c1">null</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4920"
class
    = "blob-num js-line-number"
    data - line - number = "4920" > < /td>
        < td
    id = "LC4920"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4921"
class
    = "blob-num js-line-number"
    data - line - number = "4921" > < /td>
        < td
    id = "LC4921"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> ( types, fn )</span></td>
        < /tr>
        < tr >
        < td
    id = "L4922"
class
    = "blob-num js-line-number"
    data - line - number = "4922" > < /td>
        < td
    id = "LC4922"
class
    = "blob-code blob-code-inner js-file-line" > fn < span
class
    = "pl-k" >= < /span> selector;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4923"
class
    = "blob-num js-line-number"
    data - line - number = "4923" > < /td>
        < td
    id = "LC4923"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >= < /span> selector <span class="pl-k">=</s
    pan > undefined;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4924"
class
    = "blob-num js-line-number"
    data - line - number = "4924" > < /td>
        < td
    id = "LC4924"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (fn < span
class
= "pl-k" >= =
<
/span> <span class="pl-c1">null</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4925"
class
    = "blob-num js-line-number"
    data - line - number = "4925" > < /td>
        < td
    id = "LC4925"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof selector <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>string<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L4926"
class
    = "blob-num js-line-number"
    data - line - number = "4926" > < /td>
        < td
    id = "LC4926"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L4927"
class
    = "blob-num js-line-number"
    data - line - number = "4927" > < /td>
        < td
    id = "LC4927"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> ( types, selector, fn )</span></td>
        < /tr>
        < tr >
        < td
    id = "L4928"
class
    = "blob-num js-line-number"
    data - line - number = "4928" > < /td>
        < td
    id = "LC4928"
class
    = "blob-code blob-code-inner js-file-line" > fn < span
class
    = "pl-k" >= < /span> data;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4929"
class
    = "blob-num js-line-number"
    data - line - number = "4929" > < /td>
        < td
    id = "LC4929"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4930"
class
    = "blob-num js-line-number"
    data - line - number = "4930" > < /td>
        < td
    id = "LC4930"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L4931"
class
= "blob-num js-line-number"
data - line - number = "4931" > < /td>
    < td
id = "LC4931"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4932"
class
= "blob-num js-line-number"
data - line - number = "4932" > < /td>
    < td
id = "LC4932"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ( types, data, fn )</span></td>
    < /tr>
    < tr >
    < td
id = "L4933"
class
= "blob-num js-line-number"
data - line - number = "4933" > < /td>
    < td
id = "LC4933"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >= < /span> data;</
td >
< /tr>
< tr >
< td
id = "L4934"
class
= "blob-num js-line-number"
data - line - number = "4934" > < /td>
    < td
id = "LC4934"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >= < /span> selector;</
td >
< /tr>
< tr >
< td
id = "L4935"
class
= "blob-num js-line-number"
data - line - number = "4935" > < /td>
    < td
id = "LC4935"
class
= "blob-code blob-code-inner js-file-line" > selector < span
class
= "pl-k" >= < /span> undefined;</
td >
< /tr>
< tr >
< td
id = "L4936"
class
= "blob-num js-line-number"
data - line - number = "4936" > < /td>
    < td
id = "LC4936"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4937"
class
= "blob-num js-line-number"
data - line - number = "4937" > < /td>
    < td
id = "LC4937"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4938"
class
= "blob-num js-line-number"
data - line - number = "4938" > < /td>
    < td
id = "LC4938"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fn <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4939"
class
= "blob-num js-line-number"
data - line - number = "4939" > < /td>
    < td
id = "LC4939"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >= < /span> returnFalse;</
td >
< /tr>
< tr >
< td
id = "L4940"
class
= "blob-num js-line-number"
data - line - number = "4940" > < /td>
    < td
id = "LC4940"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > ( < span
class
= "pl-k" > ! < /span>fn ) {</
td >
< /tr>
< tr >
< td
id = "L4941"
class
= "blob-num js-line-number"
data - line - number = "4941" > < /td>
    < td
id = "LC4941"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem;</
td >
< /tr>
< tr >
< td
id = "L4942"
class
= "blob-num js-line-number"
data - line - number = "4942" > < /td>
    < td
id = "LC4942"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4943"
class
= "blob-num js-line-number"
data - line - number = "4943" > < /td>
    < td
id = "LC4943"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4944"
class
= "blob-num js-line-number"
data - line - number = "4944" > < /td>
    < td
id = "LC4944"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( one <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 1 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L4945"
class
= "blob-num js-line-number"
data - line - number = "4945" > < /td>
    < td
id = "LC4945"
class
= "blob-code blob-code-inner js-file-line" > origFn < span
class
= "pl-k" >= < /span> fn;</
td >
< /tr>
< tr >
< td
id = "L4946"
class
= "blob-num js-line-number"
data - line - number = "4946" > < /td>
    < td
id = "LC4946"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >= < /span> function( event ) {</
td >
< /tr>
< tr >
< td
id = "L4947"
class
= "blob-num js-line-number"
data - line - number = "4947" > < /td>
    < td
id = "LC4947"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4948"
class
= "blob-num js-line-number"
data - line - number = "4948" > < /td>
    < td
id = "LC4948"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Can use an empty set, since event contains the info</span></td>
    < /tr>
    < tr >
    < td
id = "L4949"
class
= "blob-num js-line-number"
data - line - number = "4949" > < /td>
    < td
id = "LC4949"
class
= "blob-code blob-code-inner js-file-line" > jQuery() < span
class
= "pl-k" >
.<
/span>off( event );</
td >
< /tr>
< tr >
< td
id = "L4950"
class
= "blob-num js-line-number"
data - line - number = "4950" > < /td>
    < td
id = "LC4950"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> origFn<span class="pl-k">.</s
pan > apply( < span
class
= "pl-c1" > this < /span>, arguments );</
td >
< /tr>
< tr >
< td
id = "L4951"
class
= "blob-num js-line-number"
data - line - number = "4951" > < /td>
    < td
id = "LC4951"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L4952"
class
= "blob-num js-line-number"
data - line - number = "4952" > < /td>
    < td
id = "LC4952"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4953"
class
= "blob-num js-line-number"
data - line - number = "4953" > < /td>
    < td
id = "LC4953"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use same guid so caller can remove using origFn</span></td>
    < /tr>
    < tr >
    < td
id = "L4954"
class
= "blob-num js-line-number"
data - line - number = "4954" > < /td>
    < td
id = "LC4954"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >
.<
/span>guid <span class="pl-k">=</s
pan > origFn < span
class
= "pl-k" >
.<
/span>guid <span class="pl-k">||</s
pan > (origFn < span
class
= "pl-k" >
.<
/span>guid <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>guid<span class="pl-k">++</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L4955"
class
= "blob-num js-line-number"
data - line - number = "4955" > < /td>
    < td
id = "LC4955"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4956"
class
= "blob-num js-line-number"
data - line - number = "4956" > < /td>
    < td
id = "LC4956"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > each(function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4957"
class
    = "blob-num js-line-number"
    data - line - number = "4957" > < /td>
        < td
    id = "LC4957"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>event<span class="pl-k">.</s
    pan > add( < span
class
    = "pl-c1" > this < /span>, types, fn, data, selector );</
    td >
    < /tr>
    < tr >
    < td
    id = "L4958"
class
    = "blob-num js-line-number"
    data - line - number = "4958" > < /td>
        < td
    id = "LC4958"
class
    = "blob-code blob-code-inner js-file-line" >
});
<
/td>
< /tr>
< tr >
< td
id = "L4959"
class
= "blob-num js-line-number"
data - line - number = "4959" > < /td>
    < td
id = "LC4959"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4960"
class
= "blob-num js-line-number"
data - line - number = "4960" > < /td>
    < td
id = "LC4960"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4961"
class
= "blob-num js-line-number"
data - line - number = "4961" > < /td>
    < td
id = "LC4961"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span></span></td>
      </tr>
      <tr>
        <td id="L4962" class="blob-num js-line-number" data-line-number="4962"></td>
        <td id="LC4962" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Helper functions for managing events -- not part of the public interface.</span></td>
      </tr>
      <tr>
        <td id="L4963" class="blob-num js-line-number" data-line-number="4963"></td>
        <td id="LC4963" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Props to Dean Edwards&#39; addEvent library for many of the ideas.</span></td>
      </tr>
      <tr>
        <td id="L4964" class="blob-num js-line-number" data-line-number="4964"></td>
        <td id="LC4964" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L4965"
class
= "blob-num js-line-number"
data - line - number = "4965" > < /td>
    < td
id = "LC4965"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event <span class="pl-k">=</s
pan > { < /td>
< /tr>
< tr >
< td
id = "L4966"
class
= "blob-num js-line-number"
data - line - number = "4966" > < /td>
    < td
id = "LC4966"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4967"
class
= "blob-num js-line-number"
data - line - number = "4967" > < /td>
    < td
id = "LC4967"
class
= "blob-code blob-code-inner js-file-line" > global < span
class
= "pl-k" >
:<
/span> {},</
td >
< /tr>
< tr >
< td
id = "L4968"
class
= "blob-num js-line-number"
data - line - number = "4968" > < /td>
    < td
id = "LC4968"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4969"
class
= "blob-num js-line-number"
data - line - number = "4969" > < /td>
    < td
id = "LC4969"
class
= "blob-code blob-code-inner js-file-line" > add < span
class
= "pl-k" >
:<
/span> function( elem, types, handler, data, selector ) {</
td >
< /tr>
< tr >
< td
id = "L4970"
class
= "blob-num js-line-number"
data - line - number = "4970" > < /td>
    < td
id = "LC4970"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4971"
class
= "blob-num js-line-number"
data - line - number = "4971" > < /td>
    < td
id = "LC4971"
class
= "blob-code blob-code-inner js-file-line" >
var handleObjIn, eventHandle, tmp, <
/td>
< /tr>
< tr >
< td
id = "L4972"
class
= "blob-num js-line-number"
data - line - number = "4972" > < /td>
    < td
id = "LC4972"
class
= "blob-code blob-code-inner js-file-line" > events, t, handleObj,
<
/td>
< /tr>
< tr >
< td
id = "L4973"
class
= "blob-num js-line-number"
data - line - number = "4973" > < /td>
    < td
id = "LC4973"
class
= "blob-code blob-code-inner js-file-line" > special, handlers, type, namespaces, origType,
<
/td>
< /tr>
< tr >
< td
id = "L4974"
class
= "blob-num js-line-number"
data - line - number = "4974" > < /td>
    < td
id = "LC4974"
class
= "blob-code blob-code-inner js-file-line" > elemData < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > get(elem);
<
/td>
< /tr>
< tr >
< td
id = "L4975"
class
= "blob-num js-line-number"
data - line - number = "4975" > < /td>
    < td
id = "LC4975"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4976"
class
= "blob-num js-line-number"
data - line - number = "4976" > < /td>
    < td
id = "LC4976"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t attach events to noData or text/comment nodes (but allow plain objects)</span></td>
    < /tr>
    < tr >
    < td
id = "L4977"
class
= "blob-num js-line-number"
data - line - number = "4977" > < /td>
    < td
id = "LC4977"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > elemData
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4978"
class
    = "blob-num js-line-number"
    data - line - number = "4978" > < /td>
        < td
    id = "LC4978"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4979"
class
    = "blob-num js-line-number"
    data - line - number = "4979" > < /td>
        < td
    id = "LC4979"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4980"
class
= "blob-num js-line-number"
data - line - number = "4980" > < /td>
    < td
id = "LC4980"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4981"
class
= "blob-num js-line-number"
data - line - number = "4981" > < /td>
    < td
id = "LC4981"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Caller can pass in an object of custom data in lieu of the handler</span></td>
    < /tr>
    < tr >
    < td
id = "L4982"
class
= "blob-num js-line-number"
data - line - number = "4982" > < /td>
    < td
id = "LC4982"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( handler<span class="pl-k">.</s
pan > handler
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4983"
class
    = "blob-num js-line-number"
    data - line - number = "4983" > < /td>
        < td
    id = "LC4983"
class
    = "blob-code blob-code-inner js-file-line" > handleObjIn < span
class
    = "pl-k" >= < /span> handler;</
    td >
    < /tr>
    < tr >
    < td
    id = "L4984"
class
    = "blob-num js-line-number"
    data - line - number = "4984" > < /td>
        < td
    id = "LC4984"
class
    = "blob-code blob-code-inner js-file-line" > handler < span
class
    = "pl-k" >= < /span> handleObjIn<span class="pl-k">.</s
    pan > handler;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4985"
class
    = "blob-num js-line-number"
    data - line - number = "4985" > < /td>
        < td
    id = "LC4985"
class
    = "blob-code blob-code-inner js-file-line" > selector < span
class
    = "pl-k" >= < /span> handleObjIn<span class="pl-k">.</s
    pan > selector;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L4986"
class
    = "blob-num js-line-number"
    data - line - number = "4986" > < /td>
        < td
    id = "LC4986"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L4987"
class
= "blob-num js-line-number"
data - line - number = "4987" > < /td>
    < td
id = "LC4987"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4988"
class
= "blob-num js-line-number"
data - line - number = "4988" > < /td>
    < td
id = "LC4988"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Ensure that invalid selectors throw exceptions at attach time</span></td>
    < /tr>
    < tr >
    < td
id = "L4989"
class
= "blob-num js-line-number"
data - line - number = "4989" > < /td>
    < td
id = "LC4989"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Evaluate against documentElement in case elem is a non-element node (e.g., document)</span></td>
    < /tr>
    < tr >
    < td
id = "L4990"
class
= "blob-num js-line-number"
data - line - number = "4990" > < /td>
    < td
id = "LC4990"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( selector ) {</
td >
< /tr>
< tr >
< td
id = "L4991"
class
= "blob-num js-line-number"
data - line - number = "4991" > < /td>
    < td
id = "LC4991"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>find<span class="pl-k">.</s
pan > matchesSelector(documentElement, selector);
<
/td>
< /tr>
< tr >
< td
id = "L4992"
class
= "blob-num js-line-number"
data - line - number = "4992" > < /td>
    < td
id = "LC4992"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4993"
class
= "blob-num js-line-number"
data - line - number = "4993" > < /td>
    < td
id = "LC4993"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4994"
class
= "blob-num js-line-number"
data - line - number = "4994" > < /td>
    < td
id = "LC4994"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure that the handler has a unique ID, used to find/remove it later</span></td>
    < /tr>
    < tr >
    < td
id = "L4995"
class
= "blob-num js-line-number"
data - line - number = "4995" > < /td>
    < td
id = "LC4995"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > handler < span
class
= "pl-k" >
.<
/span>guid ) {</
td >
< /tr>
< tr >
< td
id = "L4996"
class
= "blob-num js-line-number"
data - line - number = "4996" > < /td>
    < td
id = "LC4996"
class
= "blob-code blob-code-inner js-file-line" > handler < span
class
= "pl-k" >
.<
/span>guid <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>guid<span class="pl-k">++</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L4997"
class
= "blob-num js-line-number"
data - line - number = "4997" > < /td>
    < td
id = "LC4997"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L4998"
class
= "blob-num js-line-number"
data - line - number = "4998" > < /td>
    < td
id = "LC4998"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L4999"
class
= "blob-num js-line-number"
data - line - number = "4999" > < /td>
    < td
id = "LC4999"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Init the element&#39;s event structure and main handler, if this is the first</span></td>
    < /tr>
    < tr >
    < td
id = "L5000"
class
= "blob-num js-line-number"
data - line - number = "5000" > < /td>
    < td
id = "LC5000"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > (events < span
class
= "pl-k" >= < /span> elemData<span class="pl-k">.</s
pan > events
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5001"
class
    = "blob-num js-line-number"
    data - line - number = "5001" > < /td>
        < td
    id = "LC5001"
class
    = "blob-code blob-code-inner js-file-line" > events < span
class
    = "pl-k" >= < /span> elemData<span class="pl-k">.</s
    pan > events < span
class
    = "pl-k" >= < /span> {};</
    td >
    < /tr>
    < tr >
    < td
    id = "L5002"
class
    = "blob-num js-line-number"
    data - line - number = "5002" > < /td>
        < td
    id = "LC5002"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5003"
class
= "blob-num js-line-number"
data - line - number = "5003" > < /td>
    < td
id = "LC5003"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > (eventHandle < span
class
= "pl-k" >= < /span> elemData<span class="pl-k">.</s
pan > handle
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5004"
class
    = "blob-num js-line-number"
    data - line - number = "5004" > < /td>
        < td
    id = "LC5004"
class
    = "blob-code blob-code-inner js-file-line" > eventHandle < span
class
    = "pl-k" >= < /span> elemData<span class="pl-k">.</s
    pan > handle < span
class
    = "pl-k" >= < /span> function( e ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5005"
class
    = "blob-num js-line-number"
    data - line - number = "5005" > < /td>
        < td
    id = "LC5005"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5006"
class
    = "blob-num js-line-number"
    data - line - number = "5006" > < /td>
        < td
    id = "LC5006"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Discard the second event of a jQuery.event.trigger() and</span></td>
        < /tr>
        < tr >
        < td
    id = "L5007"
class
    = "blob-num js-line-number"
    data - line - number = "5007" > < /td>
        < td
    id = "LC5007"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> when an event is called after a page has unloaded</span></td>
        < /tr>
        < tr >
        < td
    id = "L5008"
class
    = "blob-num js-line-number"
    data - line - number = "5008" > < /td>
        < td
    id = "LC5008"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> typeof jQuery <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > undefined < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> jQuery<span class="pl-k">.</s
    pan > event < span
class
    = "pl-k" >
.<
    /span>triggered <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> e<span class="pl-k">.</s
    pan > type < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L5009"
class
    = "blob-num js-line-number"
    data - line - number = "5009" > < /td>
        < td
    id = "LC5009"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>event<span class="pl-k">.</s
    pan > dispatch < span
class
    = "pl-k" >
.<
    /span>apply( elem, arguments ) <span class="pl-k">:</s
    pan > undefined;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5010"
class
    = "blob-num js-line-number"
    data - line - number = "5010" > < /td>
        < td
    id = "LC5010"
class
    = "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L5011"
class
= "blob-num js-line-number"
data - line - number = "5011" > < /td>
    < td
id = "LC5011"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5012"
class
= "blob-num js-line-number"
data - line - number = "5012" > < /td>
    < td
id = "LC5012"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5013"
class
= "blob-num js-line-number"
data - line - number = "5013" > < /td>
    < td
id = "LC5013"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle multiple events separated by a space</span></td>
    < /tr>
    < tr >
    < td
id = "L5014"
class
= "blob-num js-line-number"
data - line - number = "5014" > < /td>
    < td
id = "LC5014"
class
= "blob-code blob-code-inner js-file-line" > types < span
class
= "pl-k" >= < /span> ( types <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > match(rnothtmlwhite) < span
class
= "pl-k" > || < /span> [ <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> ];</
td >
< /tr>
< tr >
< td
id = "L5015"
class
= "blob-num js-line-number"
data - line - number = "5015" > < /td>
    < td
id = "LC5015"
class
= "blob-code blob-code-inner js-file-line" > t < span
class
= "pl-k" >= < /span> types<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L5016"
class
= "blob-num js-line-number"
data - line - number = "5016" > < /td>
    < td
id = "LC5016"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( t<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5017"
class
    = "blob-num js-line-number"
    data - line - number = "5017" > < /td>
        < td
    id = "LC5017"
class
    = "blob-code blob-code-inner js-file-line" > tmp < span
class
    = "pl-k" >= < /span> rtypenamespace<span class="pl-k">.</s
    pan > exec(types[t]) < span
class
    = "pl-k" > || < /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L5018"
class
    = "blob-num js-line-number"
    data - line - number = "5018" > < /td>
        < td
    id = "LC5018"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >= < /span> origType <span class="pl-k">=</s
    pan > tmp[ < span
class
    = "pl-c1" > 1 < /span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L5019"
class
    = "blob-num js-line-number"
    data - line - number = "5019" > < /td>
        < td
    id = "LC5019"
class
    = "blob-code blob-code-inner js-file-line" > namespaces < span
class
    = "pl-k" >= < /span> ( tmp[ <span class="pl-c1">2</span> ] <span class="pl-k">||</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span><span class="pl-pds">&quot;</s
    pan > < /span> )<span class="pl-k">.</s
    pan > split( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>.<span class="pl-pds">&quot;</s
    pan > < /span> )<span class="pl-k">.</s
    pan > sort();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5020"
class
    = "blob-num js-line-number"
    data - line - number = "5020" > < /td>
        < td
    id = "LC5020"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5021"
class
    = "blob-num js-line-number"
    data - line - number = "5021" > < /td>
        < td
    id = "LC5021"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> There *must* be a type, no attaching namespace-only handlers</span></td>
        < /tr>
        < tr >
        < td
    id = "L5022"
class
    = "blob-num js-line-number"
    data - line - number = "5022" > < /td>
        < td
    id = "LC5022"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > type
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L5023"
    class
        = "blob-num js-line-number"
        data - line - number = "5023" > < /td>
            < td
        id = "LC5023"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        continue
    <
        /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L5024"
    class
        = "blob-num js-line-number"
        data - line - number = "5024" > < /td>
            < td
        id = "LC5024"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5025"
class
    = "blob-num js-line-number"
    data - line - number = "5025" > < /td>
        < td
    id = "LC5025"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5026"
class
    = "blob-num js-line-number"
    data - line - number = "5026" > < /td>
        < td
    id = "LC5026"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If event changes its type, use the special event handlers for the changed type</span></td>
        < /tr>
        < tr >
        < td
    id = "L5027"
class
    = "blob-num js-line-number"
    data - line - number = "5027" > < /td>
        < td
    id = "LC5027"
class
    = "blob-code blob-code-inner js-file-line" > special < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > event < span
class
    = "pl-k" >
.<
    /span>special[ type ] <span class="pl-k">||</s
    pan > {};
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5028"
class
    = "blob-num js-line-number"
    data - line - number = "5028" > < /td>
        < td
    id = "LC5028"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5029"
class
    = "blob-num js-line-number"
    data - line - number = "5029" > < /td>
        < td
    id = "LC5029"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If selector defined, determine special event api type, otherwise given type</span></td>
        < /tr>
        < tr >
        < td
    id = "L5030"
class
    = "blob-num js-line-number"
    data - line - number = "5030" > < /td>
        < td
    id = "LC5030"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >= < /span> ( selector <span class="pl-k">?</s
    pan > special < span
class
    = "pl-k" >
.<
    /span>delegateType <span class="pl-k">:</s
    pan > special < span
class
    = "pl-k" >
.<
    /span>bindType ) <span class="pl-k">||</s
    pan > type;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5031"
class
    = "blob-num js-line-number"
    data - line - number = "5031" > < /td>
        < td
    id = "LC5031"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5032"
class
    = "blob-num js-line-number"
    data - line - number = "5032" > < /td>
        < td
    id = "LC5032"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Update special based on newly reset type</span></td>
        < /tr>
        < tr >
        < td
    id = "L5033"
class
    = "blob-num js-line-number"
    data - line - number = "5033" > < /td>
        < td
    id = "LC5033"
class
    = "blob-code blob-code-inner js-file-line" > special < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > event < span
class
    = "pl-k" >
.<
    /span>special[ type ] <span class="pl-k">||</s
    pan > {};
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5034"
class
    = "blob-num js-line-number"
    data - line - number = "5034" > < /td>
        < td
    id = "LC5034"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5035"
class
    = "blob-num js-line-number"
    data - line - number = "5035" > < /td>
        < td
    id = "LC5035"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> handleObj is passed to all event handlers</span></td>
        < /tr>
        < tr >
        < td
    id = "L5036"
class
    = "blob-num js-line-number"
    data - line - number = "5036" > < /td>
        < td
    id = "LC5036"
class
    = "blob-code blob-code-inner js-file-line" > handleObj < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > extend({ < /td>
        < /tr>
        < tr >
        < td
    id = "L5037"
class
    = "blob-num js-line-number"
    data - line - number = "5037" > < /td>
        < td
    id = "LC5037"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >
:<
    /span> type,</
    td >
    < /tr>
    < tr >
    < td
    id = "L5038"
class
    = "blob-num js-line-number"
    data - line - number = "5038" > < /td>
        < td
    id = "LC5038"
class
    = "blob-code blob-code-inner js-file-line" > origType < span
class
    = "pl-k" >
:<
    /span> origType,</
    td >
    < /tr>
    < tr >
    < td
    id = "L5039"
class
    = "blob-num js-line-number"
    data - line - number = "5039" > < /td>
        < td
    id = "LC5039"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >
:<
    /span> data,</
    td >
    < /tr>
    < tr >
    < td
    id = "L5040"
class
    = "blob-num js-line-number"
    data - line - number = "5040" > < /td>
        < td
    id = "LC5040"
class
    = "blob-code blob-code-inner js-file-line" > handler < span
class
    = "pl-k" >
:<
    /span> handler,</
    td >
    < /tr>
    < tr >
    < td
    id = "L5041"
class
    = "blob-num js-line-number"
    data - line - number = "5041" > < /td>
        < td
    id = "LC5041"
class
    = "blob-code blob-code-inner js-file-line" > guid < span
class
    = "pl-k" >
:<
    /span> handler<span class="pl-k">.</s
    pan > guid,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5042"
class
    = "blob-num js-line-number"
    data - line - number = "5042" > < /td>
        < td
    id = "LC5042"
class
    = "blob-code blob-code-inner js-file-line" > selector < span
class
    = "pl-k" >
:<
    /span> selector,</
    td >
    < /tr>
    < tr >
    < td
    id = "L5043"
class
    = "blob-num js-line-number"
    data - line - number = "5043" > < /td>
        < td
    id = "LC5043"
class
    = "blob-code blob-code-inner js-file-line" > needsContext < span
class
    = "pl-k" >
:<
    /span> selector <span class="pl-k">&amp;&amp;</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>expr<span class="pl-k">.</s
    pan > match < span
class
    = "pl-k" >
.<
    /span>needsContext<span class="pl-k">.</s
    pan > test(selector),
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5044"
class
    = "blob-num js-line-number"
    data - line - number = "5044" > < /td>
        < td
    id = "LC5044"
class
    = "blob-code blob-code-inner js-file-line" > namespace < span
class
    = "pl-k" >
:<
    /span> namespaces<span class="pl-k">.</s
    pan > join( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>.<span class="pl-pds">&quot;</s
    pan > < /span> )</
    td >
    < /tr>
    < tr >
    < td
    id = "L5045"
class
    = "blob-num js-line-number"
    data - line - number = "5045" > < /td>
        < td
    id = "LC5045"
class
    = "blob-code blob-code-inner js-file-line" >
},
    handleObjIn
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5046"
class
    = "blob-num js-line-number"
    data - line - number = "5046" > < /td>
        < td
    id = "LC5046"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5047"
class
    = "blob-num js-line-number"
    data - line - number = "5047" > < /td>
        < td
    id = "LC5047"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Init the event handler queue if we&#39;re the first</span></td>
        < /tr>
        < tr >
        < td
    id = "L5048"
class
    = "blob-num js-line-number"
    data - line - number = "5048" > < /td>
        < td
    id = "LC5048"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > (handlers < span
class
    = "pl-k" >= < /span> events[ type ] ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5049"
class
    = "blob-num js-line-number"
    data - line - number = "5049" > < /td>
        < td
    id = "LC5049"
class
    = "blob-code blob-code-inner js-file-line" > handlers < span
class
    = "pl-k" >= < /span> events[ type ] <span class="pl-k">=</s
    pan > [];
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5050"
class
    = "blob-num js-line-number"
    data - line - number = "5050" > < /td>
        < td
    id = "LC5050"
class
    = "blob-code blob-code-inner js-file-line" > handlers < span
class
    = "pl-k" >
.<
    /span>delegateCount <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > 0 < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5051"
class
    = "blob-num js-line-number"
    data - line - number = "5051" > < /td>
        < td
    id = "LC5051"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5052"
class
    = "blob-num js-line-number"
    data - line - number = "5052" > < /td>
        < td
    id = "LC5052"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Only use addEventListener if the special events handler returns false</span></td>
        < /tr>
        < tr >
        < td
    id = "L5053"
class
    = "blob-num js-line-number"
    data - line - number = "5053" > < /td>
        < td
    id = "LC5053"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > special < span
class
    = "pl-k" >
.<
    /span>setup <span class="pl-k">||</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L5054"
class
    = "blob-num js-line-number"
    data - line - number = "5054" > < /td>
        < td
    id = "LC5054"
class
    = "blob-code blob-code-inner js-file-line" > special < span
class
    = "pl-k" >
.<
    /span>setup<span class="pl-k">.</s
    pan > call(elem, data, namespaces, eventHandle) < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">false</s
    pan >
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L5055"
    class
        = "blob-num js-line-number"
        data - line - number = "5055" > < /td>
            < td
        id = "LC5055"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L5056"
    class
        = "blob-num js-line-number"
        data - line - number = "5056" > < /td>
            < td
        id = "LC5056"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( elem<span class="pl-k">.</s
        pan > addEventListener
    )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5057"
class
    = "blob-num js-line-number"
    data - line - number = "5057" > < /td>
        < td
    id = "LC5057"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>addEventListener( type, eventHandle );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5058"
class
    = "blob-num js-line-number"
    data - line - number = "5058" > < /td>
        < td
    id = "LC5058"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5059"
class
= "blob-num js-line-number"
data - line - number = "5059" > < /td>
    < td
id = "LC5059"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5060"
class
= "blob-num js-line-number"
data - line - number = "5060" > < /td>
    < td
id = "LC5060"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5061"
class
= "blob-num js-line-number"
data - line - number = "5061" > < /td>
    < td
id = "LC5061"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5062"
class
= "blob-num js-line-number"
data - line - number = "5062" > < /td>
    < td
id = "LC5062"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( special<span class="pl-k">.</s
pan > add
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5063"
class
    = "blob-num js-line-number"
    data - line - number = "5063" > < /td>
        < td
    id = "LC5063"
class
    = "blob-code blob-code-inner js-file-line" > special < span
class
    = "pl-k" >
.<
    /span>add<span class="pl-k">.</s
    pan > call(elem, handleObj);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5064"
class
    = "blob-num js-line-number"
    data - line - number = "5064" > < /td>
        < td
    id = "LC5064"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5065"
class
    = "blob-num js-line-number"
    data - line - number = "5065" > < /td>
        < td
    id = "LC5065"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > handleObj < span
class
    = "pl-k" >
.<
    /span>handler<span class="pl-k">.</s
    pan > guid
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5066"
class
    = "blob-num js-line-number"
    data - line - number = "5066" > < /td>
        < td
    id = "LC5066"
class
    = "blob-code blob-code-inner js-file-line" > handleObj < span
class
    = "pl-k" >
.<
    /span>handler<span class="pl-k">.</s
    pan > guid < span
class
    = "pl-k" >= < /span> handler<span class="pl-k">.</s
    pan > guid;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5067"
class
    = "blob-num js-line-number"
    data - line - number = "5067" > < /td>
        < td
    id = "LC5067"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5068"
class
= "blob-num js-line-number"
data - line - number = "5068" > < /td>
    < td
id = "LC5068"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5069"
class
= "blob-num js-line-number"
data - line - number = "5069" > < /td>
    < td
id = "LC5069"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5070"
class
= "blob-num js-line-number"
data - line - number = "5070" > < /td>
    < td
id = "LC5070"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add to the element&#39;s handler list, delegates in front</span></td>
    < /tr>
    < tr >
    < td
id = "L5071"
class
= "blob-num js-line-number"
data - line - number = "5071" > < /td>
    < td
id = "LC5071"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( selector ) {</
td >
< /tr>
< tr >
< td
id = "L5072"
class
= "blob-num js-line-number"
data - line - number = "5072" > < /td>
    < td
id = "LC5072"
class
= "blob-code blob-code-inner js-file-line" > handlers < span
class
= "pl-k" >
.<
/span>splice( handlers<span class="pl-k">.</s
pan > delegateCount < span
class
= "pl-k" > ++ < /span>, <span class="pl-c1">0</s
pan >, handleObj
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5073"
class
= "blob-num js-line-number"
data - line - number = "5073" > < /td>
    < td
id = "LC5073"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5074"
class
= "blob-num js-line-number"
data - line - number = "5074" > < /td>
    < td
id = "LC5074"
class
= "blob-code blob-code-inner js-file-line" > handlers < span
class
= "pl-k" >
.<
/span>push( handleObj );</
td >
< /tr>
< tr >
< td
id = "L5075"
class
= "blob-num js-line-number"
data - line - number = "5075" > < /td>
    < td
id = "LC5075"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5076"
class
= "blob-num js-line-number"
data - line - number = "5076" > < /td>
    < td
id = "LC5076"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5077"
class
= "blob-num js-line-number"
data - line - number = "5077" > < /td>
    < td
id = "LC5077"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Keep track of which events have ever been used, for event optimization</span></td>
    < /tr>
    < tr >
    < td
id = "L5078"
class
= "blob-num js-line-number"
data - line - number = "5078" > < /td>
    < td
id = "LC5078"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event<span class="pl-k">.</s
pan > global[type] < span
class
= "pl-k" >= < /span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5079"
class
= "blob-num js-line-number"
data - line - number = "5079" > < /td>
    < td
id = "LC5079"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5080"
class
= "blob-num js-line-number"
data - line - number = "5080" > < /td>
    < td
id = "LC5080"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5081"
class
= "blob-num js-line-number"
data - line - number = "5081" > < /td>
    < td
id = "LC5081"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5082"
class
= "blob-num js-line-number"
data - line - number = "5082" > < /td>
    < td
id = "LC5082"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5083"
class
= "blob-num js-line-number"
data - line - number = "5083" > < /td>
    < td
id = "LC5083"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Detach an event or set of events from an element</span></td>
    < /tr>
    < tr >
    < td
id = "L5084"
class
= "blob-num js-line-number"
data - line - number = "5084" > < /td>
    < td
id = "LC5084"
class
= "blob-code blob-code-inner js-file-line" > remove < span
class
= "pl-k" >
:<
/span> function( elem, types, handler, selector, mappedTypes ) {</
td >
< /tr>
< tr >
< td
id = "L5085"
class
= "blob-num js-line-number"
data - line - number = "5085" > < /td>
    < td
id = "LC5085"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5086"
class
= "blob-num js-line-number"
data - line - number = "5086" > < /td>
    < td
id = "LC5086"
class
= "blob-code blob-code-inner js-file-line" >
var j, origCount, tmp, <
/td>
< /tr>
< tr >
< td
id = "L5087"
class
= "blob-num js-line-number"
data - line - number = "5087" > < /td>
    < td
id = "LC5087"
class
= "blob-code blob-code-inner js-file-line" > events, t, handleObj,
<
/td>
< /tr>
< tr >
< td
id = "L5088"
class
= "blob-num js-line-number"
data - line - number = "5088" > < /td>
    < td
id = "LC5088"
class
= "blob-code blob-code-inner js-file-line" > special, handlers, type, namespaces, origType,
<
/td>
< /tr>
< tr >
< td
id = "L5089"
class
= "blob-num js-line-number"
data - line - number = "5089" > < /td>
    < td
id = "LC5089"
class
= "blob-code blob-code-inner js-file-line" > elemData < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > hasData(elem) < span
class
= "pl-k" > &amp;&amp; < /span> dataPriv<span class="pl-k">.</s
pan > get(elem);
<
/td>
< /tr>
< tr >
< td
id = "L5090"
class
= "blob-num js-line-number"
data - line - number = "5090" > < /td>
    < td
id = "LC5090"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5091"
class
= "blob-num js-line-number"
data - line - number = "5091" > < /td>
    < td
id = "LC5091"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > elemData < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > (events < span
class
= "pl-k" >= < /span> elemData<span class="pl-k">.</s
pan > events
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5092"
class
    = "blob-num js-line-number"
    data - line - number = "5092" > < /td>
        < td
    id = "LC5092"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5093"
class
    = "blob-num js-line-number"
    data - line - number = "5093" > < /td>
        < td
    id = "LC5093"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5094"
class
= "blob-num js-line-number"
data - line - number = "5094" > < /td>
    < td
id = "LC5094"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5095"
class
= "blob-num js-line-number"
data - line - number = "5095" > < /td>
    < td
id = "LC5095"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Once for each type.namespace in types; type may be omitted</span></td>
    < /tr>
    < tr >
    < td
id = "L5096"
class
= "blob-num js-line-number"
data - line - number = "5096" > < /td>
    < td
id = "LC5096"
class
= "blob-code blob-code-inner js-file-line" > types < span
class
= "pl-k" >= < /span> ( types <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > match(rnothtmlwhite) < span
class
= "pl-k" > || < /span> [ <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> ];</
td >
< /tr>
< tr >
< td
id = "L5097"
class
= "blob-num js-line-number"
data - line - number = "5097" > < /td>
    < td
id = "LC5097"
class
= "blob-code blob-code-inner js-file-line" > t < span
class
= "pl-k" >= < /span> types<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L5098"
class
= "blob-num js-line-number"
data - line - number = "5098" > < /td>
    < td
id = "LC5098"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( t<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5099"
class
    = "blob-num js-line-number"
    data - line - number = "5099" > < /td>
        < td
    id = "LC5099"
class
    = "blob-code blob-code-inner js-file-line" > tmp < span
class
    = "pl-k" >= < /span> rtypenamespace<span class="pl-k">.</s
    pan > exec(types[t]) < span
class
    = "pl-k" > || < /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L5100"
class
    = "blob-num js-line-number"
    data - line - number = "5100" > < /td>
        < td
    id = "LC5100"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >= < /span> origType <span class="pl-k">=</s
    pan > tmp[ < span
class
    = "pl-c1" > 1 < /span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L5101"
class
    = "blob-num js-line-number"
    data - line - number = "5101" > < /td>
        < td
    id = "LC5101"
class
    = "blob-code blob-code-inner js-file-line" > namespaces < span
class
    = "pl-k" >= < /span> ( tmp[ <span class="pl-c1">2</span> ] <span class="pl-k">||</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span><span class="pl-pds">&quot;</s
    pan > < /span> )<span class="pl-k">.</s
    pan > split( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>.<span class="pl-pds">&quot;</s
    pan > < /span> )<span class="pl-k">.</s
    pan > sort();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5102"
class
    = "blob-num js-line-number"
    data - line - number = "5102" > < /td>
        < td
    id = "LC5102"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5103"
class
    = "blob-num js-line-number"
    data - line - number = "5103" > < /td>
        < td
    id = "LC5103"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Unbind all events (on this namespace, if provided) for the element</span></td>
        < /tr>
        < tr >
        < td
    id = "L5104"
class
    = "blob-num js-line-number"
    data - line - number = "5104" > < /td>
        < td
    id = "LC5104"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > type
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L5105"
    class
        = "blob-num js-line-number"
        data - line - number = "5105" > < /td>
            < td
        id = "LC5105"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        for<
        /span> ( type in events ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L5106"
    class
        = "blob-num js-line-number"
        data - line - number = "5106" > < /td>
            < td
        id = "LC5106"
    class
        = "blob-code blob-code-inner js-file-line" > jQuery < span
    class
        = "pl-k" >
    .<
        /span>event<span class="pl-k">.</s
        pan > remove(elem, type < span
    class
        = "pl-k" > + < /span> types[ t ], handler, selector, <span class="pl-c1">true</s
        pan >
    )
        ;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L5107"
    class
        = "blob-num js-line-number"
        data - line - number = "5107" > < /td>
            < td
        id = "LC5107"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5108"
class
    = "blob-num js-line-number"
    data - line - number = "5108" > < /td>
        < td
    id = "LC5108"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    continue
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5109"
class
    = "blob-num js-line-number"
    data - line - number = "5109" > < /td>
        < td
    id = "LC5109"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5110"
class
= "blob-num js-line-number"
data - line - number = "5110" > < /td>
    < td
id = "LC5110"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5111"
class
= "blob-num js-line-number"
data - line - number = "5111" > < /td>
    < td
id = "LC5111"
class
= "blob-code blob-code-inner js-file-line" > special < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" >
.<
/span>special[ type ] <span class="pl-k">||</s
pan > {};
<
/td>
< /tr>
< tr >
< td
id = "L5112"
class
= "blob-num js-line-number"
data - line - number = "5112" > < /td>
    < td
id = "LC5112"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >= < /span> ( selector <span class="pl-k">?</s
pan > special < span
class
= "pl-k" >
.<
/span>delegateType <span class="pl-k">:</s
pan > special < span
class
= "pl-k" >
.<
/span>bindType ) <span class="pl-k">||</s
pan > type;
<
/td>
< /tr>
< tr >
< td
id = "L5113"
class
= "blob-num js-line-number"
data - line - number = "5113" > < /td>
    < td
id = "LC5113"
class
= "blob-code blob-code-inner js-file-line" > handlers < span
class
= "pl-k" >= < /span> events[ type ] <span class="pl-k">||</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L5114"
class
= "blob-num js-line-number"
data - line - number = "5114" > < /td>
    < td
id = "LC5114"
class
= "blob-code blob-code-inner js-file-line" > tmp < span
class
= "pl-k" >= < /span> tmp[ <span class="pl-c1">2</span> ] <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5115"
class
= "blob-num js-line-number"
data - line - number = "5115" > < /td>
    < td
id = "LC5115"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>(^|<span class="pl-cce">\\</s
pan >
.)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> namespaces<span class="pl-k">.</s
pan > join( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-cce">\\</s
pan >
.
(? :. * < span
class
= "pl-cce" >\\<
/span>.|)<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>(<span class="pl-cce">\\</s
pan >
.|
$
)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5116"
class
= "blob-num js-line-number"
data - line - number = "5116" > < /td>
    < td
id = "LC5116"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5117"
class
= "blob-num js-line-number"
data - line - number = "5117" > < /td>
    < td
id = "LC5117"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove matching events</span></td>
    < /tr>
    < tr >
    < td
id = "L5118"
class
= "blob-num js-line-number"
data - line - number = "5118" > < /td>
    < td
id = "LC5118"
class
= "blob-code blob-code-inner js-file-line" > origCount < span
class
= "pl-k" >= < /span> j <span class="pl-k">=</s
pan > handlers < span
class
= "pl-k" >
.<
/span>length;</
td >
< /tr>
< tr >
< td
id = "L5119"
class
= "blob-num js-line-number"
data - line - number = "5119" > < /td>
    < td
id = "LC5119"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( j<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5120"
class
    = "blob-num js-line-number"
    data - line - number = "5120" > < /td>
        < td
    id = "LC5120"
class
    = "blob-code blob-code-inner js-file-line" > handleObj < span
class
    = "pl-k" >= < /span> handlers[ j ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L5121"
class
    = "blob-num js-line-number"
    data - line - number = "5121" > < /td>
        < td
    id = "LC5121"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5122"
class
    = "blob-num js-line-number"
    data - line - number = "5122" > < /td>
        < td
    id = "LC5122"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( ( mappedTypes <span class="pl-k">||</s
    pan > origType < span
class
    = "pl-k" >= == < /span> handleObj<span class="pl-k">.</s
    pan > origType
)
<
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L5123"
class
= "blob-num js-line-number"
data - line - number = "5123" > < /td>
    < td
id = "LC5123"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-k" > ! < /span>handler <span class="pl-k">||</s
pan > handler < span
class
= "pl-k" >
.<
/span>guid <span class="pl-k">===</s
pan > handleObj < span
class
= "pl-k" >
.<
/span>guid ) <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5124"
class
= "blob-num js-line-number"
data - line - number = "5124" > < /td>
    < td
id = "LC5124"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-k" > ! < /span>tmp <span class="pl-k">||</s
pan > tmp < span
class
= "pl-k" >
.<
/span>test( handleObj<span class="pl-k">.</s
pan > namespace
) ) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L5125"
class
= "blob-num js-line-number"
data - line - number = "5125" > < /td>
    < td
id = "LC5125"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-k" > ! < /span>selector <span class="pl-k">||</s
pan > selector < span
class
= "pl-k" >= == < /span> handleObj<span class="pl-k">.</s
pan > selector < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L5126"
class
= "blob-num js-line-number"
data - line - number = "5126" > < /td>
    < td
id = "LC5126"
class
= "blob-code blob-code-inner js-file-line" > selector < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ** < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> handleObj<span class="pl-k">.</s
pan > selector
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5127"
class
    = "blob-num js-line-number"
    data - line - number = "5127" > < /td>
        < td
    id = "LC5127"
class
    = "blob-code blob-code-inner js-file-line" > handlers < span
class
    = "pl-k" >
.<
    /span>splice( j, <span class="pl-c1">1</s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5128"
class
= "blob-num js-line-number"
data - line - number = "5128" > < /td>
    < td
id = "LC5128"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5129"
class
= "blob-num js-line-number"
data - line - number = "5129" > < /td>
    < td
id = "LC5129"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( handleObj<span class="pl-k">.</s
pan > selector
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5130"
class
    = "blob-num js-line-number"
    data - line - number = "5130" > < /td>
        < td
    id = "LC5130"
class
    = "blob-code blob-code-inner js-file-line" > handlers < span
class
    = "pl-k" >
.<
    /span>delegateCount<span class="pl-k">--</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5131"
class
    = "blob-num js-line-number"
    data - line - number = "5131" > < /td>
        < td
    id = "LC5131"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5132"
class
= "blob-num js-line-number"
data - line - number = "5132" > < /td>
    < td
id = "LC5132"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( special<span class="pl-k">.</s
pan > remove
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5133"
class
    = "blob-num js-line-number"
    data - line - number = "5133" > < /td>
        < td
    id = "LC5133"
class
    = "blob-code blob-code-inner js-file-line" > special < span
class
    = "pl-k" >
.<
    /span>remove<span class="pl-k">.</s
    pan > call(elem, handleObj);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5134"
class
    = "blob-num js-line-number"
    data - line - number = "5134" > < /td>
        < td
    id = "LC5134"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5135"
class
= "blob-num js-line-number"
data - line - number = "5135" > < /td>
    < td
id = "LC5135"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5136"
class
= "blob-num js-line-number"
data - line - number = "5136" > < /td>
    < td
id = "LC5136"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5137"
class
= "blob-num js-line-number"
data - line - number = "5137" > < /td>
    < td
id = "LC5137"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5138"
class
= "blob-num js-line-number"
data - line - number = "5138" > < /td>
    < td
id = "LC5138"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove generic event handler if we removed something and no more handlers exist</span></td>
    < /tr>
    < tr >
    < td
id = "L5139"
class
= "blob-num js-line-number"
data - line - number = "5139" > < /td>
    < td
id = "LC5139"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (avoids potential for endless recursion during removal of special event handlers)</span></td>
    < /tr>
    < tr >
    < td
id = "L5140"
class
= "blob-num js-line-number"
data - line - number = "5140" > < /td>
    < td
id = "LC5140"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( origCount <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>handlers<span class="pl-k">.</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5141"
class
    = "blob-num js-line-number"
    data - line - number = "5141" > < /td>
        < td
    id = "LC5141"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > special < span
class
    = "pl-k" >
.<
    /span>teardown <span class="pl-k">||</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L5142"
class
    = "blob-num js-line-number"
    data - line - number = "5142" > < /td>
        < td
    id = "LC5142"
class
    = "blob-code blob-code-inner js-file-line" > special < span
class
    = "pl-k" >
.<
    /span>teardown<span class="pl-k">.</s
    pan > call(elem, namespaces, elemData < span
class
    = "pl-k" >
.<
    /span>handle ) <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > false < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5143"
class
    = "blob-num js-line-number"
    data - line - number = "5143" > < /td>
        < td
    id = "LC5143"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5144"
class
    = "blob-num js-line-number"
    data - line - number = "5144" > < /td>
        < td
    id = "LC5144"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>removeEvent( elem, type, elemData<span class="pl-k">.</s
    pan > handle
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5145"
class
    = "blob-num js-line-number"
    data - line - number = "5145" > < /td>
        < td
    id = "LC5145"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5146"
class
= "blob-num js-line-number"
data - line - number = "5146" > < /td>
    < td
id = "LC5146"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5147"
class
= "blob-num js-line-number"
data - line - number = "5147" > < /td>
    < td
id = "LC5147"
class
= "blob-code blob-code-inner js-file-line" > delete events[type];
<
/td>
< /tr>
< tr >
< td
id = "L5148"
class
= "blob-num js-line-number"
data - line - number = "5148" > < /td>
    < td
id = "LC5148"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5149"
class
= "blob-num js-line-number"
data - line - number = "5149" > < /td>
    < td
id = "LC5149"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5150"
class
= "blob-num js-line-number"
data - line - number = "5150" > < /td>
    < td
id = "LC5150"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5151"
class
= "blob-num js-line-number"
data - line - number = "5151" > < /td>
    < td
id = "LC5151"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove data and the expando if it&#39;s no longer used</span></td>
    < /tr>
    < tr >
    < td
id = "L5152"
class
= "blob-num js-line-number"
data - line - number = "5152" > < /td>
    < td
id = "LC5152"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isEmptyObject(events)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5153"
class
    = "blob-num js-line-number"
    data - line - number = "5153" > < /td>
        < td
    id = "LC5153"
class
    = "blob-code blob-code-inner js-file-line" > dataPriv < span
class
    = "pl-k" >
.<
    /span>remove( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > handle
    events < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5154"
class
= "blob-num js-line-number"
data - line - number = "5154" > < /td>
    < td
id = "LC5154"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5155"
class
= "blob-num js-line-number"
data - line - number = "5155" > < /td>
    < td
id = "LC5155"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5156"
class
= "blob-num js-line-number"
data - line - number = "5156" > < /td>
    < td
id = "LC5156"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5157"
class
= "blob-num js-line-number"
data - line - number = "5157" > < /td>
    < td
id = "LC5157"
class
= "blob-code blob-code-inner js-file-line" > dispatch < span
class
= "pl-k" >
:<
/span> function( nativeEvent ) {</
td >
< /tr>
< tr >
< td
id = "L5158"
class
= "blob-num js-line-number"
data - line - number = "5158" > < /td>
    < td
id = "LC5158"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5159"
class
= "blob-num js-line-number"
data - line - number = "5159" > < /td>
    < td
id = "LC5159"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make a writable jQuery.Event from the native event object</span></td>
    < /tr>
    < tr >
    < td
id = "L5160"
class
= "blob-num js-line-number"
data - line - number = "5160" > < /td>
    < td
id = "LC5160"
class
= "blob-code blob-code-inner js-file-line" >
var event
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" >
.<
/span>fix( nativeEvent );</
td >
< /tr>
< tr >
< td
id = "L5161"
class
= "blob-num js-line-number"
data - line - number = "5161" > < /td>
    < td
id = "LC5161"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5162"
class
= "blob-num js-line-number"
data - line - number = "5162" > < /td>
    < td
id = "LC5162"
class
= "blob-code blob-code-inner js-file-line" >
var i, j, ret, matched, handleObj, handlerQueue, <
/td>
< /tr>
< tr >
< td
id = "L5163"
class
= "blob-num js-line-number"
data - line - number = "5163" > < /td>
    < td
id = "LC5163"
class
= "blob-code blob-code-inner js-file-line" > args < span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > Array < /span>( arguments<span class="pl-k">.</s
pan > length
),<
/td>
< /tr>
< tr >
< td
id = "L5164"
class
= "blob-num js-line-number"
data - line - number = "5164" > < /td>
    < td
id = "LC5164"
class
= "blob-code blob-code-inner js-file-line" > handlers < span
class
= "pl-k" >= < /span> ( dataPriv<span class="pl-k">.</s
pan > get( < span
class
= "pl-c1" > this < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > events < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" > || < /span> {} )[ event<span class="pl-k">.</span>type ] <span class="pl-k">||</s
pan > [],
<
/td>
< /tr>
< tr >
< td
id = "L5165"
class
= "blob-num js-line-number"
data - line - number = "5165" > < /td>
    < td
id = "LC5165"
class
= "blob-code blob-code-inner js-file-line" > special < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" >
.<
/span>special[ event<span class="pl-k">.</span>type ] <span class="pl-k">||</s
pan > {};
<
/td>
< /tr>
< tr >
< td
id = "L5166"
class
= "blob-num js-line-number"
data - line - number = "5166" > < /td>
    < td
id = "LC5166"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5167"
class
= "blob-num js-line-number"
data - line - number = "5167" > < /td>
    < td
id = "LC5167"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use the fix-ed jQuery.Event rather than the (read-only) native event</span></td>
    < /tr>
    < tr >
    < td
id = "L5168"
class
= "blob-num js-line-number"
data - line - number = "5168" > < /td>
    < td
id = "LC5168"
class
= "blob-code blob-code-inner js-file-line" > args[ < span
class
= "pl-c1" > 0 < /span> ] <span class="pl-k">=</s
pan > event;
<
/td>
< /tr>
< tr >
< td
id = "L5169"
class
= "blob-num js-line-number"
data - line - number = "5169" > < /td>
    < td
id = "LC5169"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5170"
class
= "blob-num js-line-number"
data - line - number = "5170" > < /td>
    < td
id = "LC5170"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 1 < /span>; i <span class="pl-k">&lt;</s
pan > arguments < span
class
= "pl-k" >
.<
/span>length; i<span class="pl-k">++</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5171"
class
    = "blob-num js-line-number"
    data - line - number = "5171" > < /td>
        < td
    id = "LC5171"
class
    = "blob-code blob-code-inner js-file-line" > args[i] < span
class
    = "pl-k" >= < /span> arguments[ i ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L5172"
class
    = "blob-num js-line-number"
    data - line - number = "5172" > < /td>
        < td
    id = "LC5172"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5173"
class
= "blob-num js-line-number"
data - line - number = "5173" > < /td>
    < td
id = "LC5173"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5174"
class
= "blob-num js-line-number"
data - line - number = "5174" > < /td>
    < td
id = "LC5174"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >
.<
/span>delegateTarget <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > this < /span>;</
td >
< /tr>
< tr >
< td
id = "L5175"
class
= "blob-num js-line-number"
data - line - number = "5175" > < /td>
    < td
id = "LC5175"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5176"
class
= "blob-num js-line-number"
data - line - number = "5176" > < /td>
    < td
id = "LC5176"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Call the preDispatch hook for the mapped type, and let it bail if desired</span></td>
    < /tr>
    < tr >
    < td
id = "L5177"
class
= "blob-num js-line-number"
data - line - number = "5177" > < /td>
    < td
id = "LC5177"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( special<span class="pl-k">.</s
pan > preDispatch < span
class
= "pl-k" > &amp;&amp; < /span> special<span class="pl-k">.</s
pan > preDispatch < span
class
= "pl-k" >
.<
/span>call( <span class="pl-c1">this</s
pan >, event
) <
span
class
= "pl-k" >= == < /span> <span class="pl-c1">false</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5178"
class
    = "blob-num js-line-number"
    data - line - number = "5178" > < /td>
        < td
    id = "LC5178"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5179"
class
    = "blob-num js-line-number"
    data - line - number = "5179" > < /td>
        < td
    id = "LC5179"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5180"
class
= "blob-num js-line-number"
data - line - number = "5180" > < /td>
    < td
id = "LC5180"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5181"
class
= "blob-num js-line-number"
data - line - number = "5181" > < /td>
    < td
id = "LC5181"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Determine handlers</span></td>
    < /tr>
    < tr >
    < td
id = "L5182"
class
= "blob-num js-line-number"
data - line - number = "5182" > < /td>
    < td
id = "LC5182"
class
= "blob-code blob-code-inner js-file-line" > handlerQueue < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" >
.<
/span>handlers<span class="pl-k">.</s
pan > call( < span
class
= "pl-c1" > this < /span>, event, handlers );</
td >
< /tr>
< tr >
< td
id = "L5183"
class
= "blob-num js-line-number"
data - line - number = "5183" > < /td>
    < td
id = "LC5183"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5184"
class
= "blob-num js-line-number"
data - line - number = "5184" > < /td>
    < td
id = "LC5184"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Run delegates first; they may want to stop propagation beneath us</span></td>
    < /tr>
    < tr >
    < td
id = "L5185"
class
= "blob-num js-line-number"
data - line - number = "5185" > < /td>
    < td
id = "LC5185"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5186"
class
= "blob-num js-line-number"
data - line - number = "5186" > < /td>
    < td
id = "LC5186"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ( matched <span class="pl-k">=</s
pan > handlerQueue[i < span
class
= "pl-k" > ++ < /span> ] ) <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>event<span class="pl-k">.</s
pan > isPropagationStopped()
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5187"
class
    = "blob-num js-line-number"
    data - line - number = "5187" > < /td>
        < td
    id = "LC5187"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>currentTarget <span class="pl-k">=</s
    pan > matched < span
class
    = "pl-k" >
.<
    /span>elem;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5188"
class
    = "blob-num js-line-number"
    data - line - number = "5188" > < /td>
        < td
    id = "LC5188"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5189"
class
    = "blob-num js-line-number"
    data - line - number = "5189" > < /td>
        < td
    id = "LC5189"
class
    = "blob-code blob-code-inner js-file-line" > j < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5190"
class
    = "blob-num js-line-number"
    data - line - number = "5190" > < /td>
        < td
    id = "LC5190"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( ( handleObj <span class="pl-k">=</s
    pan > matched < span
class
    = "pl-k" >
.<
    /span>handlers[ j<span class="pl-k">++</span> ] ) <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L5191"
class
    = "blob-num js-line-number"
    data - line - number = "5191" > < /td>
        < td
    id = "LC5191"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" > ! < /span>event<span class="pl-k">.</s
    pan > isImmediatePropagationStopped()
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5192"
class
    = "blob-num js-line-number"
    data - line - number = "5192" > < /td>
        < td
    id = "LC5192"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5193"
class
    = "blob-num js-line-number"
    data - line - number = "5193" > < /td>
        < td
    id = "LC5193"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Triggered event must either 1) have no namespace, or 2) have namespace(s)</span></td>
        < /tr>
        < tr >
        < td
    id = "L5194"
class
    = "blob-num js-line-number"
    data - line - number = "5194" > < /td>
        < td
    id = "LC5194"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> a subset or equal to those in the bound event (both can have no namespace).</span></td>
        < /tr>
        < tr >
        < td
    id = "L5195"
class
    = "blob-num js-line-number"
    data - line - number = "5195" > < /td>
        < td
    id = "LC5195"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > event < span
class
    = "pl-k" >
.<
    /span>rnamespace <span class="pl-k">||</s
    pan > event < span
class
    = "pl-k" >
.<
    /span>rnamespace<span class="pl-k">.</s
    pan > test(handleObj < span
class
    = "pl-k" >
.<
    /span>namespace ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5196"
class
    = "blob-num js-line-number"
    data - line - number = "5196" > < /td>
        < td
    id = "LC5196"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5197"
class
    = "blob-num js-line-number"
    data - line - number = "5197" > < /td>
        < td
    id = "LC5197"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>handleObj <span class="pl-k">=</s
    pan > handleObj;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5198"
class
    = "blob-num js-line-number"
    data - line - number = "5198" > < /td>
        < td
    id = "LC5198"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>data <span class="pl-k">=</s
    pan > handleObj < span
class
    = "pl-k" >
.<
    /span>data;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5199"
class
    = "blob-num js-line-number"
    data - line - number = "5199" > < /td>
        < td
    id = "LC5199"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5200"
class
    = "blob-num js-line-number"
    data - line - number = "5200" > < /td>
        < td
    id = "LC5200"
class
    = "blob-code blob-code-inner js-file-line" > ret < span
class
    = "pl-k" >= < /span> ( ( jQuery<span class="pl-k">.</s
    pan > event < span
class
    = "pl-k" >
.<
    /span>special[ handleObj<span class="pl-k">.</span>origType ] <span class="pl-k">||</s
    pan > {}
)<
    span
class
    = "pl-k" >
.<
    /span>handle <span class="pl-k">||</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L5201"
class
    = "blob-num js-line-number"
    data - line - number = "5201" > < /td>
        < td
    id = "LC5201"
class
    = "blob-code blob-code-inner js-file-line" > handleObj < span
class
    = "pl-k" >
.<
    /span>handler )<span class="pl-k">.</s
    pan > apply(matched < span
class
    = "pl-k" >
.<
    /span>elem, args );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5202"
class
    = "blob-num js-line-number"
    data - line - number = "5202" > < /td>
        < td
    id = "LC5202"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5203"
class
    = "blob-num js-line-number"
    data - line - number = "5203" > < /td>
        < td
    id = "LC5203"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( ret <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> undefined ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5204"
class
    = "blob-num js-line-number"
    data - line - number = "5204" > < /td>
        < td
    id = "LC5204"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( ( event<span class="pl-k">.</s
    pan > result < span
class
    = "pl-k" >= < /span> ret ) <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > false < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5205"
class
    = "blob-num js-line-number"
    data - line - number = "5205" > < /td>
        < td
    id = "LC5205"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>preventDefault();</
    td >
    < /tr>
    < tr >
    < td
    id = "L5206"
class
    = "blob-num js-line-number"
    data - line - number = "5206" > < /td>
        < td
    id = "LC5206"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>stopPropagation();</
    td >
    < /tr>
    < tr >
    < td
    id = "L5207"
class
    = "blob-num js-line-number"
    data - line - number = "5207" > < /td>
        < td
    id = "LC5207"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5208"
class
= "blob-num js-line-number"
data - line - number = "5208" > < /td>
    < td
id = "LC5208"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5209"
class
= "blob-num js-line-number"
data - line - number = "5209" > < /td>
    < td
id = "LC5209"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5210"
class
= "blob-num js-line-number"
data - line - number = "5210" > < /td>
    < td
id = "LC5210"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5211"
class
= "blob-num js-line-number"
data - line - number = "5211" > < /td>
    < td
id = "LC5211"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5212"
class
= "blob-num js-line-number"
data - line - number = "5212" > < /td>
    < td
id = "LC5212"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5213"
class
= "blob-num js-line-number"
data - line - number = "5213" > < /td>
    < td
id = "LC5213"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Call the postDispatch hook for the mapped type</span></td>
    < /tr>
    < tr >
    < td
id = "L5214"
class
= "blob-num js-line-number"
data - line - number = "5214" > < /td>
    < td
id = "LC5214"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( special<span class="pl-k">.</s
pan > postDispatch
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5215"
class
    = "blob-num js-line-number"
    data - line - number = "5215" > < /td>
        < td
    id = "LC5215"
class
    = "blob-code blob-code-inner js-file-line" > special < span
class
    = "pl-k" >
.<
    /span>postDispatch<span class="pl-k">.</s
    pan > call( < span
class
    = "pl-c1" > this < /span>, event );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5216"
class
    = "blob-num js-line-number"
    data - line - number = "5216" > < /td>
        < td
    id = "LC5216"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5217"
class
= "blob-num js-line-number"
data - line - number = "5217" > < /td>
    < td
id = "LC5217"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5218"
class
= "blob-num js-line-number"
data - line - number = "5218" > < /td>
    < td
id = "LC5218"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> event<span class="pl-k">.</s
pan > result;
<
/td>
< /tr>
< tr >
< td
id = "L5219"
class
= "blob-num js-line-number"
data - line - number = "5219" > < /td>
    < td
id = "LC5219"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5220"
class
= "blob-num js-line-number"
data - line - number = "5220" > < /td>
    < td
id = "LC5220"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5221"
class
= "blob-num js-line-number"
data - line - number = "5221" > < /td>
    < td
id = "LC5221"
class
= "blob-code blob-code-inner js-file-line" > handlers < span
class
= "pl-k" >
:<
/span> function( event, handlers ) {</
td >
< /tr>
< tr >
< td
id = "L5222"
class
= "blob-num js-line-number"
data - line - number = "5222" > < /td>
    < td
id = "LC5222"
class
= "blob-code blob-code-inner js-file-line" >
var i, handleObj, sel, matchedHandlers, matchedSelectors, <
/td>
< /tr>
< tr >
< td
id = "L5223"
class
= "blob-num js-line-number"
data - line - number = "5223" > < /td>
    < td
id = "LC5223"
class
= "blob-code blob-code-inner js-file-line" > handlerQueue < span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L5224"
class
= "blob-num js-line-number"
data - line - number = "5224" > < /td>
    < td
id = "LC5224"
class
= "blob-code blob-code-inner js-file-line" > delegateCount < span
class
= "pl-k" >= < /span> handlers<span class="pl-k">.</s
pan > delegateCount,
<
/td>
< /tr>
< tr >
< td
id = "L5225"
class
= "blob-num js-line-number"
data - line - number = "5225" > < /td>
    < td
id = "LC5225"
class
= "blob-code blob-code-inner js-file-line" > cur < span
class
= "pl-k" >= < /span> event<span class="pl-k">.</s
pan > target;
<
/td>
< /tr>
< tr >
< td
id = "L5226"
class
= "blob-num js-line-number"
data - line - number = "5226" > < /td>
    < td
id = "LC5226"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5227"
class
= "blob-num js-line-number"
data - line - number = "5227" > < /td>
    < td
id = "LC5227"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Find delegate handlers</span></td>
    < /tr>
    < tr >
    < td
id = "L5228"
class
= "blob-num js-line-number"
data - line - number = "5228" > < /td>
    < td
id = "LC5228"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( delegateCount <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5229"
class
= "blob-num js-line-number"
data - line - number = "5229" > < /td>
    < td
id = "LC5229"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5230"
class
= "blob-num js-line-number"
data - line - number = "5230" > < /td>
    < td
id = "LC5230"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9</span></td>
    < /tr>
    < tr >
    < td
id = "L5231"
class
= "blob-num js-line-number"
data - line - number = "5231" > < /td>
    < td
id = "LC5231"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Black-hole SVG &lt;use&gt; instance trees (trac-13180)</span></td>
    < /tr>
    < tr >
    < td
id = "L5232"
class
= "blob-num js-line-number"
data - line - number = "5232" > < /td>
    < td
id = "LC5232"
class
= "blob-code blob-code-inner js-file-line" > cur < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5233"
class
= "blob-num js-line-number"
data - line - number = "5233" > < /td>
    < td
id = "LC5233"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5234"
class
= "blob-num js-line-number"
data - line - number = "5234" > < /td>
    < td
id = "LC5234"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Firefox &lt;=42</span></td>
    < /tr>
    < tr >
    < td
id = "L5235"
class
= "blob-num js-line-number"
data - line - number = "5235" > < /td>
    < td
id = "LC5235"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)</span></td>
    < /tr>
    < tr >
    < td
id = "L5236"
class
= "blob-num js-line-number"
data - line - number = "5236" > < /td>
    < td
id = "LC5236"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click</span></td>
    < /tr>
    < tr >
    < td
id = "L5237"
class
= "blob-num js-line-number"
data - line - number = "5237" > < /td>
    < td
id = "LC5237"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE 11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L5238"
class
= "blob-num js-line-number"
data - line - number = "5238" > < /td>
    < td
id = "LC5238"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ...but not arrow key &quot;clicks&quot; of radio inputs, which can have `button` -1 (gh-2343)</span></td>
    < /tr>
    < tr >
    < td
id = "L5239"
class
= "blob-num js-line-number"
data - line - number = "5239" > < /td>
    < td
id = "LC5239"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>( event<span class="pl-k">.</s
pan > type < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > click < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> event<span class="pl-k">.</s
pan > button < span
class
= "pl-k" > &gt;= < /span> <span class="pl-c1">1</s
pan >
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5240"
class
    = "blob-num js-line-number"
    data - line - number = "5240" > < /td>
        < td
    id = "LC5240"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5241"
class
    = "blob-num js-line-number"
    data - line - number = "5241" > < /td>
        < td
    id = "LC5241"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; cur <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan >;
    cur < span
class
    = "pl-k" >= < /span> cur<span class="pl-k">.</s
    pan > parentNode < span
class
    = "pl-k" > || < /span> <span class="pl-c1">this</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5242"
class
    = "blob-num js-line-number"
    data - line - number = "5242" > < /td>
        < td
    id = "LC5242"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5243"
class
    = "blob-num js-line-number"
    data - line - number = "5243" > < /td>
        < td
    id = "LC5243"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Don&#39;t check non-elements (#13208)</span></td>
        < /tr>
        < tr >
        < td
    id = "L5244"
class
    = "blob-num js-line-number"
    data - line - number = "5244" > < /td>
        < td
    id = "LC5244"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Don&#39;t process clicks on disabled elements (#6911, #8165, #11382, #11764)</span></td>
        < /tr>
        < tr >
        < td
    id = "L5245"
class
    = "blob-num js-line-number"
    data - line - number = "5245" > < /td>
        < td
    id = "LC5245"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( cur<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
    pan > (event < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>click<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > cur < span
class
    = "pl-k" >
.<
    /span>disabled <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > true < /span> ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5246"
class
    = "blob-num js-line-number"
    data - line - number = "5246" > < /td>
        < td
    id = "LC5246"
class
    = "blob-code blob-code-inner js-file-line" > matchedHandlers < span
class
    = "pl-k" >= < /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L5247"
class
    = "blob-num js-line-number"
    data - line - number = "5247" > < /td>
        < td
    id = "LC5247"
class
    = "blob-code blob-code-inner js-file-line" > matchedSelectors < span
class
    = "pl-k" >= < /span> {};</
    td >
    < /tr>
    < tr >
    < td
    id = "L5248"
class
    = "blob-num js-line-number"
    data - line - number = "5248" > < /td>
        < td
    id = "LC5248"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( i <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > 0 < /span>; i <span class="pl-k">&lt;</s
    pan > delegateCount;
    i < span
class
    = "pl-k" > ++ < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5249"
class
    = "blob-num js-line-number"
    data - line - number = "5249" > < /td>
        < td
    id = "LC5249"
class
    = "blob-code blob-code-inner js-file-line" > handleObj < span
class
    = "pl-k" >= < /span> handlers[ i ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L5250"
class
    = "blob-num js-line-number"
    data - line - number = "5250" > < /td>
        < td
    id = "LC5250"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5251"
class
    = "blob-num js-line-number"
    data - line - number = "5251" > < /td>
        < td
    id = "LC5251"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Don&#39;t conflict with Object.prototype properties (#13203)</span></td>
        < /tr>
        < tr >
        < td
    id = "L5252"
class
    = "blob-num js-line-number"
    data - line - number = "5252" > < /td>
        < td
    id = "LC5252"
class
    = "blob-code blob-code-inner js-file-line" > sel < span
class
    = "pl-k" >= < /span> handleObj<span class="pl-k">.</s
    pan > selector < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5253"
class
    = "blob-num js-line-number"
    data - line - number = "5253" > < /td>
        < td
    id = "LC5253"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5254"
class
    = "blob-num js-line-number"
    data - line - number = "5254" > < /td>
        < td
    id = "LC5254"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( matchedSelectors[ sel ] <span class="pl-k">===</s
    pan > undefined
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L5255"
    class
        = "blob-num js-line-number"
        data - line - number = "5255" > < /td>
            < td
        id = "LC5255"
    class
        = "blob-code blob-code-inner js-file-line" > matchedSelectors[sel] < span
    class
        = "pl-k" >= < /span> handleObj<span class="pl-k">.</s
        pan > needsContext < span
    class
        = "pl-k" > ?
    <
        /span></
        td >
        < /tr>
        < tr >
        < td
        id = "L5256"
    class
        = "blob-num js-line-number"
        data - line - number = "5256" > < /td>
            < td
        id = "LC5256"
    class
        = "blob-code blob-code-inner js-file-line" > jQuery(sel, < span
    class
        = "pl-c1" > this < /span> )<span class="pl-k">.</s
        pan > index(cur) < span
    class
        = "pl-k" > &gt; < /span> <span class="pl-k">-</s
        pan > < span
    class
        = "pl-c1" > 1 < /span> <span class="pl-k">:</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L5257"
    class
        = "blob-num js-line-number"
        data - line - number = "5257" > < /td>
            < td
        id = "LC5257"
    class
        = "blob-code blob-code-inner js-file-line" > jQuery < span
    class
        = "pl-k" >
    .<
        /span>find( sel, <span class="pl-c1">this</s
        pan >,
    <
        span
    class
        = "pl-c1" > null < /span>, [ cur ] )<span class="pl-k">.</s
        pan > length;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L5258"
    class
        = "blob-num js-line-number"
        data - line - number = "5258" > < /td>
            < td
        id = "LC5258"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5259"
class
    = "blob-num js-line-number"
    data - line - number = "5259" > < /td>
        < td
    id = "LC5259"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( matchedSelectors[ sel ] ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5260"
class
    = "blob-num js-line-number"
    data - line - number = "5260" > < /td>
        < td
    id = "LC5260"
class
    = "blob-code blob-code-inner js-file-line" > matchedHandlers < span
class
    = "pl-k" >
.<
    /span>push( handleObj );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5261"
class
    = "blob-num js-line-number"
    data - line - number = "5261" > < /td>
        < td
    id = "LC5261"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5262"
class
= "blob-num js-line-number"
data - line - number = "5262" > < /td>
    < td
id = "LC5262"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5263"
class
= "blob-num js-line-number"
data - line - number = "5263" > < /td>
    < td
id = "LC5263"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( matchedHandlers<span class="pl-k">.</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5264"
class
    = "blob-num js-line-number"
    data - line - number = "5264" > < /td>
        < td
    id = "LC5264"
class
    = "blob-code blob-code-inner js-file-line" > handlerQueue < span
class
    = "pl-k" >
.<
    /span>push( { elem<span class="pl-k">:</s
    pan > cur, handlers < span
class
    = "pl-k" >
:<
    /span> matchedHandlers } );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5265"
class
    = "blob-num js-line-number"
    data - line - number = "5265" > < /td>
        < td
    id = "LC5265"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5266"
class
= "blob-num js-line-number"
data - line - number = "5266" > < /td>
    < td
id = "LC5266"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5267"
class
= "blob-num js-line-number"
data - line - number = "5267" > < /td>
    < td
id = "LC5267"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5268"
class
= "blob-num js-line-number"
data - line - number = "5268" > < /td>
    < td
id = "LC5268"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5269"
class
= "blob-num js-line-number"
data - line - number = "5269" > < /td>
    < td
id = "LC5269"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5270"
class
= "blob-num js-line-number"
data - line - number = "5270" > < /td>
    < td
id = "LC5270"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add the remaining (directly-bound) handlers</span></td>
    < /tr>
    < tr >
    < td
id = "L5271"
class
= "blob-num js-line-number"
data - line - number = "5271" > < /td>
    < td
id = "LC5271"
class
= "blob-code blob-code-inner js-file-line" > cur < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5272"
class
= "blob-num js-line-number"
data - line - number = "5272" > < /td>
    < td
id = "LC5272"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( delegateCount <span class="pl-k">&lt;</s
pan > handlers < span
class
= "pl-k" >
.<
/span>length ) {</
td >
< /tr>
< tr >
< td
id = "L5273"
class
= "blob-num js-line-number"
data - line - number = "5273" > < /td>
    < td
id = "LC5273"
class
= "blob-code blob-code-inner js-file-line" > handlerQueue < span
class
= "pl-k" >
.<
/span>push( { elem<span class="pl-k">:</s
pan > cur, handlers < span
class
= "pl-k" >
:<
/span> handlers<span class="pl-k">.</s
pan > slice(delegateCount)
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5274"
class
= "blob-num js-line-number"
data - line - number = "5274" > < /td>
    < td
id = "LC5274"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5275"
class
= "blob-num js-line-number"
data - line - number = "5275" > < /td>
    < td
id = "LC5275"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5276"
class
= "blob-num js-line-number"
data - line - number = "5276" > < /td>
    < td
id = "LC5276"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> handlerQueue;</
td >
< /tr>
< tr >
< td
id = "L5277"
class
= "blob-num js-line-number"
data - line - number = "5277" > < /td>
    < td
id = "LC5277"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5278"
class
= "blob-num js-line-number"
data - line - number = "5278" > < /td>
    < td
id = "LC5278"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5279"
class
= "blob-num js-line-number"
data - line - number = "5279" > < /td>
    < td
id = "LC5279"
class
= "blob-code blob-code-inner js-file-line" > addProp < span
class
= "pl-k" >
:<
/span> function( name, hook ) {</
td >
< /tr>
< tr >
< td
id = "L5280"
class
= "blob-num js-line-number"
data - line - number = "5280" > < /td>
    < td
id = "LC5280"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Object < /span><span class="pl-k">.</s
pan > defineProperty( < span
class
= "pl-smi" > jQuery < span
class
= "pl-k" >
.<
/span>Event</s
pan > < span
class
= "pl-k" >
.<
/span>prototype, name, {</
td >
< /tr>
< tr >
< td
id = "L5281"
class
= "blob-num js-line-number"
data - line - number = "5281" > < /td>
    < td
id = "LC5281"
class
= "blob-code blob-code-inner js-file-line" > enumerable < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5282"
class
= "blob-num js-line-number"
data - line - number = "5282" > < /td>
    < td
id = "LC5282"
class
= "blob-code blob-code-inner js-file-line" > configurable < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5283"
class
= "blob-num js-line-number"
data - line - number = "5283" > < /td>
    < td
id = "LC5283"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5284"
class
= "blob-num js-line-number"
data - line - number = "5284" > < /td>
    < td
id = "LC5284"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> jQuery<span class="pl-k">.</s
pan > isFunction(hook) < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L5285"
class
= "blob-num js-line-number"
data - line - number = "5285" > < /td>
    < td
id = "LC5285"
class
= "blob-code blob-code-inner js-file-line" > function () {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L5286"
    class
        = "blob-num js-line-number"
        data - line - number = "5286" > < /td>
            < td
        id = "LC5286"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( <span class="pl-c1">this</s
        pan > < span
    class
        = "pl-k" >
    .<
        /span>originalEvent ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L5287"
    class
        = "blob-num js-line-number"
        data - line - number = "5287" > < /td>
            < td
        id = "LC5287"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> hook( <span class="pl-c1">this</s
        pan > < span
    class
        = "pl-k" >
    .<
        /span>originalEvent );</
        td >
        < /tr>
        < tr >
        < td
        id = "L5288"
    class
        = "blob-num js-line-number"
        data - line - number = "5288" > < /td>
            < td
        id = "LC5288"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L5289"
class
= "blob-num js-line-number"
data - line - number = "5289" > < /td>
    < td
id = "LC5289"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L5290"
class
= "blob-num js-line-number"
data - line - number = "5290" > < /td>
    < td
id = "LC5290"
class
= "blob-code blob-code-inner js-file-line" > function () {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L5291"
    class
        = "blob-num js-line-number"
        data - line - number = "5291" > < /td>
            < td
        id = "LC5291"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( <span class="pl-c1">this</s
        pan > < span
    class
        = "pl-k" >
    .<
        /span>originalEvent ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L5292"
    class
        = "blob-num js-line-number"
        data - line - number = "5292" > < /td>
            < td
        id = "LC5292"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-c1">this</s
        pan > < span
    class
        = "pl-k" >
    .<
        /span>originalEvent[ name ];</
        td >
        < /tr>
        < tr >
        < td
        id = "L5293"
    class
        = "blob-num js-line-number"
        data - line - number = "5293" > < /td>
            < td
        id = "LC5293"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L5294"
class
= "blob-num js-line-number"
data - line - number = "5294" > < /td>
    < td
id = "LC5294"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5295"
class
= "blob-num js-line-number"
data - line - number = "5295" > < /td>
    < td
id = "LC5295"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5296"
class
= "blob-num js-line-number"
data - line - number = "5296" > < /td>
    < td
id = "LC5296"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( value ) {</
td >
< /tr>
< tr >
< td
id = "L5297"
class
= "blob-num js-line-number"
data - line - number = "5297" > < /td>
    < td
id = "LC5297"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Object < /span><span class="pl-k">.</s
pan > defineProperty( < span
class
= "pl-c1" > this < /span>, name, {</
td >
< /tr>
< tr >
< td
id = "L5298"
class
= "blob-num js-line-number"
data - line - number = "5298" > < /td>
    < td
id = "LC5298"
class
= "blob-code blob-code-inner js-file-line" > enumerable < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5299"
class
= "blob-num js-line-number"
data - line - number = "5299" > < /td>
    < td
id = "LC5299"
class
= "blob-code blob-code-inner js-file-line" > configurable < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5300"
class
= "blob-num js-line-number"
data - line - number = "5300" > < /td>
    < td
id = "LC5300"
class
= "blob-code blob-code-inner js-file-line" > writable < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5301"
class
= "blob-num js-line-number"
data - line - number = "5301" > < /td>
    < td
id = "LC5301"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >
:<
/span> value</
td >
< /tr>
< tr >
< td
id = "L5302"
class
= "blob-num js-line-number"
data - line - number = "5302" > < /td>
    < td
id = "LC5302"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5303"
class
= "blob-num js-line-number"
data - line - number = "5303" > < /td>
    < td
id = "LC5303"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5304"
class
= "blob-num js-line-number"
data - line - number = "5304" > < /td>
    < td
id = "LC5304"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5305"
class
= "blob-num js-line-number"
data - line - number = "5305" > < /td>
    < td
id = "LC5305"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5306"
class
= "blob-num js-line-number"
data - line - number = "5306" > < /td>
    < td
id = "LC5306"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5307"
class
= "blob-num js-line-number"
data - line - number = "5307" > < /td>
    < td
id = "LC5307"
class
= "blob-code blob-code-inner js-file-line" > fix < span
class
= "pl-k" >
:<
/span> function( originalEvent ) {</
td >
< /tr>
< tr >
< td
id = "L5308"
class
= "blob-num js-line-number"
data - line - number = "5308" > < /td>
    < td
id = "LC5308"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> originalEvent[ jQuery<span class="pl-k">.</span>expando ] <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5309"
class
= "blob-num js-line-number"
data - line - number = "5309" > < /td>
    < td
id = "LC5309"
class
= "blob-code blob-code-inner js-file-line" > originalEvent < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L5310"
class
= "blob-num js-line-number"
data - line - number = "5310" > < /td>
    < td
id = "LC5310"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > new < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Event < /span>( originalEvent );</
td >
< /tr>
< tr >
< td
id = "L5311"
class
= "blob-num js-line-number"
data - line - number = "5311" > < /td>
    < td
id = "LC5311"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5312"
class
= "blob-num js-line-number"
data - line - number = "5312" > < /td>
    < td
id = "LC5312"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5313"
class
= "blob-num js-line-number"
data - line - number = "5313" > < /td>
    < td
id = "LC5313"
class
= "blob-code blob-code-inner js-file-line" > special < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5314"
class
= "blob-num js-line-number"
data - line - number = "5314" > < /td>
    < td
id = "LC5314"
class
= "blob-code blob-code-inner js-file-line" > load < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5315"
class
= "blob-num js-line-number"
data - line - number = "5315" > < /td>
    < td
id = "LC5315"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5316"
class
= "blob-num js-line-number"
data - line - number = "5316" > < /td>
    < td
id = "LC5316"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Prevent triggered image.load events from bubbling to window.load</span></td>
    < /tr>
    < tr >
    < td
id = "L5317"
class
= "blob-num js-line-number"
data - line - number = "5317" > < /td>
    < td
id = "LC5317"
class
= "blob-code blob-code-inner js-file-line" > noBubble < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5318"
class
= "blob-num js-line-number"
data - line - number = "5318" > < /td>
    < td
id = "LC5318"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5319"
class
= "blob-num js-line-number"
data - line - number = "5319" > < /td>
    < td
id = "LC5319"
class
= "blob-code blob-code-inner js-file-line" > focus < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5320"
class
= "blob-num js-line-number"
data - line - number = "5320" > < /td>
    < td
id = "LC5320"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5321"
class
= "blob-num js-line-number"
data - line - number = "5321" > < /td>
    < td
id = "LC5321"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fire native event if possible so blur/focus sequence is correct</span></td>
    < /tr>
    < tr >
    < td
id = "L5322"
class
= "blob-num js-line-number"
data - line - number = "5322" > < /td>
    < td
id = "LC5322"
class
= "blob-code blob-code-inner js-file-line" > trigger < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5323"
class
= "blob-num js-line-number"
data - line - number = "5323" > < /td>
    < td
id = "LC5323"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > safeActiveElement() < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>focus ) {</
td >
< /tr>
< tr >
< td
id = "L5324"
class
= "blob-num js-line-number"
data - line - number = "5324" > < /td>
    < td
id = "LC5324"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > focus();
<
/td>
< /tr>
< tr >
< td
id = "L5325"
class
= "blob-num js-line-number"
data - line - number = "5325" > < /td>
    < td
id = "LC5325"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5326"
class
= "blob-num js-line-number"
data - line - number = "5326" > < /td>
    < td
id = "LC5326"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5327"
class
= "blob-num js-line-number"
data - line - number = "5327" > < /td>
    < td
id = "LC5327"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5328"
class
= "blob-num js-line-number"
data - line - number = "5328" > < /td>
    < td
id = "LC5328"
class
= "blob-code blob-code-inner js-file-line" > delegateType < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > focusin < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L5329"
class
= "blob-num js-line-number"
data - line - number = "5329" > < /td>
    < td
id = "LC5329"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5330"
class
= "blob-num js-line-number"
data - line - number = "5330" > < /td>
    < td
id = "LC5330"
class
= "blob-code blob-code-inner js-file-line" > blur < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5331"
class
= "blob-num js-line-number"
data - line - number = "5331" > < /td>
    < td
id = "LC5331"
class
= "blob-code blob-code-inner js-file-line" > trigger < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5332"
class
= "blob-num js-line-number"
data - line - number = "5332" > < /td>
    < td
id = "LC5332"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >= == < /span> safeActiveElement() <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > blur
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5333"
class
    = "blob-num js-line-number"
    data - line - number = "5333" > < /td>
        < td
    id = "LC5333"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > blur();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5334"
class
    = "blob-num js-line-number"
    data - line - number = "5334" > < /td>
        < td
    id = "LC5334"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5335"
class
    = "blob-num js-line-number"
    data - line - number = "5335" > < /td>
        < td
    id = "LC5335"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5336"
class
= "blob-num js-line-number"
data - line - number = "5336" > < /td>
    < td
id = "LC5336"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5337"
class
= "blob-num js-line-number"
data - line - number = "5337" > < /td>
    < td
id = "LC5337"
class
= "blob-code blob-code-inner js-file-line" > delegateType < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > focusout < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L5338"
class
= "blob-num js-line-number"
data - line - number = "5338" > < /td>
    < td
id = "LC5338"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5339"
class
= "blob-num js-line-number"
data - line - number = "5339" > < /td>
    < td
id = "LC5339"
class
= "blob-code blob-code-inner js-file-line" > click < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5340"
class
= "blob-num js-line-number"
data - line - number = "5340" > < /td>
    < td
id = "LC5340"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5341"
class
= "blob-num js-line-number"
data - line - number = "5341" > < /td>
    < td
id = "LC5341"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> For checkbox, fire native event so checked state will be right</span></td>
    < /tr>
    < tr >
    < td
id = "L5342"
class
= "blob-num js-line-number"
data - line - number = "5342" > < /td>
    < td
id = "LC5342"
class
= "blob-code blob-code-inner js-file-line" > trigger < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5343"
class
= "blob-num js-line-number"
data - line - number = "5343" > < /td>
    < td
id = "LC5343"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>checkbox<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > click < span
class
= "pl-k" > &amp;&amp; < /span> jQuery<span class="pl-k">.</s
pan > nodeName( < span
class
= "pl-c1" > this < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > input < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5344"
class
    = "blob-num js-line-number"
    data - line - number = "5344" > < /td>
        < td
    id = "LC5344"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > click();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5345"
class
    = "blob-num js-line-number"
    data - line - number = "5345" > < /td>
        < td
    id = "LC5345"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5346"
class
    = "blob-num js-line-number"
    data - line - number = "5346" > < /td>
        < td
    id = "LC5346"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5347"
class
= "blob-num js-line-number"
data - line - number = "5347" > < /td>
    < td
id = "LC5347"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5348"
class
= "blob-num js-line-number"
data - line - number = "5348" > < /td>
    < td
id = "LC5348"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5349"
class
= "blob-num js-line-number"
data - line - number = "5349" > < /td>
    < td
id = "LC5349"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> For cross-browser consistency, don&#39;t fire native .click() on links</span></td>
    < /tr>
    < tr >
    < td
id = "L5350"
class
= "blob-num js-line-number"
data - line - number = "5350" > < /td>
    < td
id = "LC5350"
class
= "blob-code blob-code-inner js-file-line" > _default < span
class
= "pl-k" >
:<
/span> function( event ) {</
td >
< /tr>
< tr >
< td
id = "L5351"
class
= "blob-num js-line-number"
data - line - number = "5351" > < /td>
    < td
id = "LC5351"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > nodeName(event < span
class
= "pl-k" >
.<
/span>target, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > a < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5352"
class
= "blob-num js-line-number"
data - line - number = "5352" > < /td>
    < td
id = "LC5352"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5353"
class
= "blob-num js-line-number"
data - line - number = "5353" > < /td>
    < td
id = "LC5353"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5354"
class
= "blob-num js-line-number"
data - line - number = "5354" > < /td>
    < td
id = "LC5354"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5355"
class
= "blob-num js-line-number"
data - line - number = "5355" > < /td>
    < td
id = "LC5355"
class
= "blob-code blob-code-inner js-file-line" > beforeunload < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5356"
class
= "blob-num js-line-number"
data - line - number = "5356" > < /td>
    < td
id = "LC5356"
class
= "blob-code blob-code-inner js-file-line" > postDispatch < span
class
= "pl-k" >
:<
/span> function( event ) {</
td >
< /tr>
< tr >
< td
id = "L5357"
class
= "blob-num js-line-number"
data - line - number = "5357" > < /td>
    < td
id = "LC5357"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5358"
class
= "blob-num js-line-number"
data - line - number = "5358" > < /td>
    < td
id = "LC5358"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Firefox 20+</span></td>
    < /tr>
    < tr >
    < td
id = "L5359"
class
= "blob-num js-line-number"
data - line - number = "5359" > < /td>
    < td
id = "LC5359"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Firefox doesn&#39;t alert if the returnValue field is not set.</span></td>
    < /tr>
    < tr >
    < td
id = "L5360"
class
= "blob-num js-line-number"
data - line - number = "5360" > < /td>
    < td
id = "LC5360"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( event<span class="pl-k">.</s
pan > result < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined < span
class
= "pl-k" > &amp;&amp; < /span> event<span class="pl-k">.</s
pan > originalEvent
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5361"
class
    = "blob-num js-line-number"
    data - line - number = "5361" > < /td>
        < td
    id = "LC5361"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>originalEvent<span class="pl-k">.</s
    pan > returnValue < span
class
    = "pl-k" >= < /span> event<span class="pl-k">.</s
    pan > result;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5362"
class
    = "blob-num js-line-number"
    data - line - number = "5362" > < /td>
        < td
    id = "LC5362"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5363"
class
= "blob-num js-line-number"
data - line - number = "5363" > < /td>
    < td
id = "LC5363"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5364"
class
= "blob-num js-line-number"
data - line - number = "5364" > < /td>
    < td
id = "LC5364"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5365"
class
= "blob-num js-line-number"
data - line - number = "5365" > < /td>
    < td
id = "LC5365"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5366"
class
= "blob-num js-line-number"
data - line - number = "5366" > < /td>
    < td
id = "LC5366"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L5367"
class
= "blob-num js-line-number"
data - line - number = "5367" > < /td>
    < td
id = "LC5367"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5368"
class
= "blob-num js-line-number"
data - line - number = "5368" > < /td>
    < td
id = "LC5368"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>removeEvent <span class="pl-k">=</s
pan > function (elem, type, handle) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5369"
class
    = "blob-num js-line-number"
    data - line - number = "5369" > < /td>
        < td
    id = "LC5369"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5370"
class
    = "blob-num js-line-number"
    data - line - number = "5370" > < /td>
        < td
    id = "LC5370"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> This &quot;if&quot; is needed for plain objects</span></td>
        < /tr>
        < tr >
        < td
    id = "L5371"
class
    = "blob-num js-line-number"
    data - line - number = "5371" > < /td>
        < td
    id = "LC5371"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > removeEventListener
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5372"
class
    = "blob-num js-line-number"
    data - line - number = "5372" > < /td>
        < td
    id = "LC5372"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>removeEventListener( type, handle );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5373"
class
    = "blob-num js-line-number"
    data - line - number = "5373" > < /td>
        < td
    id = "LC5373"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5374"
class
= "blob-num js-line-number"
data - line - number = "5374" > < /td>
    < td
id = "LC5374"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L5375"
class
= "blob-num js-line-number"
data - line - number = "5375" > < /td>
    < td
id = "LC5375"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5376"
class
= "blob-num js-line-number"
data - line - number = "5376" > < /td>
    < td
id = "LC5376"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > jQuery < span
class
= "pl-k" >
.<
/span>Event</s
pan > < span
class
= "pl-k" >= < /span> function( src, props ) {</
td >
< /tr>
< tr >
< td
id = "L5377"
class
= "blob-num js-line-number"
data - line - number = "5377" > < /td>
    < td
id = "LC5377"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5378"
class
= "blob-num js-line-number"
data - line - number = "5378" > < /td>
    < td
id = "LC5378"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Allow instantiation without the &#39;new&#39; keyword</span></td>
    < /tr>
    < tr >
    < td
id = "L5379"
class
= "blob-num js-line-number"
data - line - number = "5379" > < /td>
    < td
id = "LC5379"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > ( < span
class
= "pl-c1" > this < /span> <span class="pl-k">instanceof</s
pan > < span
class
= "pl-smi" > jQuery < span
class
= "pl-k" >
.<
/span>Event</s
pan >
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5380"
class
    = "blob-num js-line-number"
    data - line - number = "5380" > < /td>
        < td
    id = "LC5380"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">new</s
    pan > < span
class
    = "pl-smi" > jQuery < span
class
    = "pl-k" >
.<
    /span>Event</s
    pan > (src, props);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5381"
class
    = "blob-num js-line-number"
    data - line - number = "5381" > < /td>
        < td
    id = "LC5381"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5382"
class
= "blob-num js-line-number"
data - line - number = "5382" > < /td>
    < td
id = "LC5382"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5383"
class
= "blob-num js-line-number"
data - line - number = "5383" > < /td>
    < td
id = "LC5383"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Event object</span></td>
    < /tr>
    < tr >
    < td
id = "L5384"
class
= "blob-num js-line-number"
data - line - number = "5384" > < /td>
    < td
id = "LC5384"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( src <span class="pl-k">&amp;&amp;</s
pan > src < span
class
= "pl-k" >
.<
/span>type ) {</
td >
< /tr>
< tr >
< td
id = "L5385"
class
= "blob-num js-line-number"
data - line - number = "5385" > < /td>
    < td
id = "LC5385"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > originalEvent < span
class
= "pl-k" >= < /span> src;</
td >
< /tr>
< tr >
< td
id = "L5386"
class
= "blob-num js-line-number"
data - line - number = "5386" > < /td>
    < td
id = "LC5386"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > type < span
class
= "pl-k" >= < /span> src<span class="pl-k">.</s
pan > type;
<
/td>
< /tr>
< tr >
< td
id = "L5387"
class
= "blob-num js-line-number"
data - line - number = "5387" > < /td>
    < td
id = "LC5387"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5388"
class
= "blob-num js-line-number"
data - line - number = "5388" > < /td>
    < td
id = "LC5388"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Events bubbling up the document may have been marked as prevented</span></td>
    < /tr>
    < tr >
    < td
id = "L5389"
class
= "blob-num js-line-number"
data - line - number = "5389" > < /td>
    < td
id = "LC5389"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> by a handler lower down the tree; reflect the correct value.</span></td>
    < /tr>
    < tr >
    < td
id = "L5390"
class
= "blob-num js-line-number"
data - line - number = "5390" > < /td>
    < td
id = "LC5390"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > isDefaultPrevented < span
class
= "pl-k" >= < /span> src<span class="pl-k">.</s
pan > defaultPrevented < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L5391"
class
= "blob-num js-line-number"
data - line - number = "5391" > < /td>
    < td
id = "LC5391"
class
= "blob-code blob-code-inner js-file-line" > src < span
class
= "pl-k" >
.<
/span>defaultPrevented <span class="pl-k">===</s
pan > undefined < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L5392"
class
= "blob-num js-line-number"
data - line - number = "5392" > < /td>
    < td
id = "LC5392"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5393"
class
= "blob-num js-line-number"
data - line - number = "5393" > < /td>
    < td
id = "LC5393"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android &lt;=2.3 only</span></td>
    < /tr>
    < tr >
    < td
id = "L5394"
class
= "blob-num js-line-number"
data - line - number = "5394" > < /td>
    < td
id = "LC5394"
class
= "blob-code blob-code-inner js-file-line" > src < span
class
= "pl-k" >
.<
/span>returnValue <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5395"
class
= "blob-num js-line-number"
data - line - number = "5395" > < /td>
    < td
id = "LC5395"
class
= "blob-code blob-code-inner js-file-line" > returnTrue < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L5396"
class
= "blob-num js-line-number"
data - line - number = "5396" > < /td>
    < td
id = "LC5396"
class
= "blob-code blob-code-inner js-file-line" > returnFalse;
<
/td>
< /tr>
< tr >
< td
id = "L5397"
class
= "blob-num js-line-number"
data - line - number = "5397" > < /td>
    < td
id = "LC5397"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5398"
class
= "blob-num js-line-number"
data - line - number = "5398" > < /td>
    < td
id = "LC5398"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Create target properties</span></td>
    < /tr>
    < tr >
    < td
id = "L5399"
class
= "blob-num js-line-number"
data - line - number = "5399" > < /td>
    < td
id = "LC5399"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Safari &lt;=6 - 7 only</span></td>
    < /tr>
    < tr >
    < td
id = "L5400"
class
= "blob-num js-line-number"
data - line - number = "5400" > < /td>
    < td
id = "LC5400"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Target should not be a text node (#504, #13143)</span></td>
    < /tr>
    < tr >
    < td
id = "L5401"
class
= "blob-num js-line-number"
data - line - number = "5401" > < /td>
    < td
id = "LC5401"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > target < span
class
= "pl-k" >= < /span> ( src<span class="pl-k">.</s
pan > target < span
class
= "pl-k" > &amp;&amp; < /span> src<span class="pl-k">.</s
pan > target < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 3 < /span> ) <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5402"
class
= "blob-num js-line-number"
data - line - number = "5402" > < /td>
    < td
id = "LC5402"
class
= "blob-code blob-code-inner js-file-line" > src < span
class
= "pl-k" >
.<
/span>target<span class="pl-k">.</s
pan > parentNode < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L5403"
class
= "blob-num js-line-number"
data - line - number = "5403" > < /td>
    < td
id = "LC5403"
class
= "blob-code blob-code-inner js-file-line" > src < span
class
= "pl-k" >
.<
/span>target;</
td >
< /tr>
< tr >
< td
id = "L5404"
class
= "blob-num js-line-number"
data - line - number = "5404" > < /td>
    < td
id = "LC5404"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5405"
class
= "blob-num js-line-number"
data - line - number = "5405" > < /td>
    < td
id = "LC5405"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > currentTarget < span
class
= "pl-k" >= < /span> src<span class="pl-k">.</s
pan > currentTarget;
<
/td>
< /tr>
< tr >
< td
id = "L5406"
class
= "blob-num js-line-number"
data - line - number = "5406" > < /td>
    < td
id = "LC5406"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > relatedTarget < span
class
= "pl-k" >= < /span> src<span class="pl-k">.</s
pan > relatedTarget;
<
/td>
< /tr>
< tr >
< td
id = "L5407"
class
= "blob-num js-line-number"
data - line - number = "5407" > < /td>
    < td
id = "LC5407"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5408"
class
= "blob-num js-line-number"
data - line - number = "5408" > < /td>
    < td
id = "LC5408"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Event type</span></td>
    < /tr>
    < tr >
    < td
id = "L5409"
class
= "blob-num js-line-number"
data - line - number = "5409" > < /td>
    < td
id = "LC5409"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5410"
class
= "blob-num js-line-number"
data - line - number = "5410" > < /td>
    < td
id = "LC5410"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > type < span
class
= "pl-k" >= < /span> src;</
td >
< /tr>
< tr >
< td
id = "L5411"
class
= "blob-num js-line-number"
data - line - number = "5411" > < /td>
    < td
id = "LC5411"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5412"
class
= "blob-num js-line-number"
data - line - number = "5412" > < /td>
    < td
id = "LC5412"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5413"
class
= "blob-num js-line-number"
data - line - number = "5413" > < /td>
    < td
id = "LC5413"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Put explicitly provided properties onto the event object</span></td>
    < /tr>
    < tr >
    < td
id = "L5414"
class
= "blob-num js-line-number"
data - line - number = "5414" > < /td>
    < td
id = "LC5414"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( props ) {</
td >
< /tr>
< tr >
< td
id = "L5415"
class
= "blob-num js-line-number"
data - line - number = "5415" > < /td>
    < td
id = "LC5415"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( <span class="pl-c1">this</s
pan >, props
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5416"
class
= "blob-num js-line-number"
data - line - number = "5416" > < /td>
    < td
id = "LC5416"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5417"
class
= "blob-num js-line-number"
data - line - number = "5417" > < /td>
    < td
id = "LC5417"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5418"
class
= "blob-num js-line-number"
data - line - number = "5418" > < /td>
    < td
id = "LC5418"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Create a timestamp if incoming event doesn&#39;t have one</span></td>
    < /tr>
    < tr >
    < td
id = "L5419"
class
= "blob-num js-line-number"
data - line - number = "5419" > < /td>
    < td
id = "LC5419"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > timeStamp < span
class
= "pl-k" >= < /span> src <span class="pl-k">&amp;&amp;</s
pan > src < span
class
= "pl-k" >
.<
/span>timeStamp <span class="pl-k">||</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>now();</
td >
< /tr>
< tr >
< td
id = "L5420"
class
= "blob-num js-line-number"
data - line - number = "5420" > < /td>
    < td
id = "LC5420"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5421"
class
= "blob-num js-line-number"
data - line - number = "5421" > < /td>
    < td
id = "LC5421"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Mark it as fixed</span></td>
    < /tr>
    < tr >
    < td
id = "L5422"
class
= "blob-num js-line-number"
data - line - number = "5422" > < /td>
    < td
id = "LC5422"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span>[ jQuery<span class="pl-k">.</span>expando ] <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > true < /span>;</
td >
< /tr>
< tr >
< td
id = "L5423"
class
= "blob-num js-line-number"
data - line - number = "5423" > < /td>
    < td
id = "LC5423"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L5424"
class
= "blob-num js-line-number"
data - line - number = "5424" > < /td>
    < td
id = "LC5424"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5425"
class
= "blob-num js-line-number"
data - line - number = "5425" > < /td>
    < td
id = "LC5425"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding</span></td>
    < /tr>
    < tr >
    < td
id = "L5426"
class
= "blob-num js-line-number"
data - line - number = "5426" > < /td>
    < td
id = "LC5426"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html</span></td>
    < /tr>
    < tr >
    < td
id = "L5427"
class
= "blob-num js-line-number"
data - line - number = "5427" > < /td>
    < td
id = "LC5427"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > jQuery < span
class
= "pl-k" >
.<
/span>Event</s
pan > < span
class
= "pl-k" >
.<
/span>prototype <span class="pl-k">=</s
pan > { < /td>
< /tr>
< tr >
< td
id = "L5428"
class
= "blob-num js-line-number"
data - line - number = "5428" > < /td>
    < td
id = "LC5428"
class
= "blob-code blob-code-inner js-file-line" > constructor < span
class
= "pl-k" >
:<
/span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Event < /span>,</
td >
< /tr>
< tr >
< td
id = "L5429"
class
= "blob-num js-line-number"
data - line - number = "5429" > < /td>
    < td
id = "LC5429"
class
= "blob-code blob-code-inner js-file-line" > isDefaultPrevented < span
class
= "pl-k" >
:<
/span> returnFalse,</
td >
< /tr>
< tr >
< td
id = "L5430"
class
= "blob-num js-line-number"
data - line - number = "5430" > < /td>
    < td
id = "LC5430"
class
= "blob-code blob-code-inner js-file-line" > isPropagationStopped < span
class
= "pl-k" >
:<
/span> returnFalse,</
td >
< /tr>
< tr >
< td
id = "L5431"
class
= "blob-num js-line-number"
data - line - number = "5431" > < /td>
    < td
id = "LC5431"
class
= "blob-code blob-code-inner js-file-line" > isImmediatePropagationStopped < span
class
= "pl-k" >
:<
/span> returnFalse,</
td >
< /tr>
< tr >
< td
id = "L5432"
class
= "blob-num js-line-number"
data - line - number = "5432" > < /td>
    < td
id = "LC5432"
class
= "blob-code blob-code-inner js-file-line" > isSimulated < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">false</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5433"
class
= "blob-num js-line-number"
data - line - number = "5433" > < /td>
    < td
id = "LC5433"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5434"
class
= "blob-num js-line-number"
data - line - number = "5434" > < /td>
    < td
id = "LC5434"
class
= "blob-code blob-code-inner js-file-line" > preventDefault < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5435"
class
= "blob-num js-line-number"
data - line - number = "5435" > < /td>
    < td
id = "LC5435"
class
= "blob-code blob-code-inner js-file-line" >
var e
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>originalEvent;</
td >
< /tr>
< tr >
< td
id = "L5436"
class
= "blob-num js-line-number"
data - line - number = "5436" > < /td>
    < td
id = "LC5436"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5437"
class
= "blob-num js-line-number"
data - line - number = "5437" > < /td>
    < td
id = "LC5437"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > isDefaultPrevented < span
class
= "pl-k" >= < /span> returnTrue;</
td >
< /tr>
< tr >
< td
id = "L5438"
class
= "blob-num js-line-number"
data - line - number = "5438" > < /td>
    < td
id = "LC5438"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5439"
class
= "blob-num js-line-number"
data - line - number = "5439" > < /td>
    < td
id = "LC5439"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( e <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span><span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>isSimulated ) {</
td >
< /tr>
< tr >
< td
id = "L5440"
class
= "blob-num js-line-number"
data - line - number = "5440" > < /td>
    < td
id = "LC5440"
class
= "blob-code blob-code-inner js-file-line" > e < span
class
= "pl-k" >
.<
/span>preventDefault();</
td >
< /tr>
< tr >
< td
id = "L5441"
class
= "blob-num js-line-number"
data - line - number = "5441" > < /td>
    < td
id = "LC5441"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5442"
class
= "blob-num js-line-number"
data - line - number = "5442" > < /td>
    < td
id = "LC5442"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5443"
class
= "blob-num js-line-number"
data - line - number = "5443" > < /td>
    < td
id = "LC5443"
class
= "blob-code blob-code-inner js-file-line" > stopPropagation < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5444"
class
= "blob-num js-line-number"
data - line - number = "5444" > < /td>
    < td
id = "LC5444"
class
= "blob-code blob-code-inner js-file-line" >
var e
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>originalEvent;</
td >
< /tr>
< tr >
< td
id = "L5445"
class
= "blob-num js-line-number"
data - line - number = "5445" > < /td>
    < td
id = "LC5445"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5446"
class
= "blob-num js-line-number"
data - line - number = "5446" > < /td>
    < td
id = "LC5446"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > isPropagationStopped < span
class
= "pl-k" >= < /span> returnTrue;</
td >
< /tr>
< tr >
< td
id = "L5447"
class
= "blob-num js-line-number"
data - line - number = "5447" > < /td>
    < td
id = "LC5447"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5448"
class
= "blob-num js-line-number"
data - line - number = "5448" > < /td>
    < td
id = "LC5448"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( e <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span><span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>isSimulated ) {</
td >
< /tr>
< tr >
< td
id = "L5449"
class
= "blob-num js-line-number"
data - line - number = "5449" > < /td>
    < td
id = "LC5449"
class
= "blob-code blob-code-inner js-file-line" > e < span
class
= "pl-k" >
.<
/span>stopPropagation();</
td >
< /tr>
< tr >
< td
id = "L5450"
class
= "blob-num js-line-number"
data - line - number = "5450" > < /td>
    < td
id = "LC5450"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5451"
class
= "blob-num js-line-number"
data - line - number = "5451" > < /td>
    < td
id = "LC5451"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5452"
class
= "blob-num js-line-number"
data - line - number = "5452" > < /td>
    < td
id = "LC5452"
class
= "blob-code blob-code-inner js-file-line" > stopImmediatePropagation < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5453"
class
= "blob-num js-line-number"
data - line - number = "5453" > < /td>
    < td
id = "LC5453"
class
= "blob-code blob-code-inner js-file-line" >
var e
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>originalEvent;</
td >
< /tr>
< tr >
< td
id = "L5454"
class
= "blob-num js-line-number"
data - line - number = "5454" > < /td>
    < td
id = "LC5454"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5455"
class
= "blob-num js-line-number"
data - line - number = "5455" > < /td>
    < td
id = "LC5455"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > isImmediatePropagationStopped < span
class
= "pl-k" >= < /span> returnTrue;</
td >
< /tr>
< tr >
< td
id = "L5456"
class
= "blob-num js-line-number"
data - line - number = "5456" > < /td>
    < td
id = "LC5456"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5457"
class
= "blob-num js-line-number"
data - line - number = "5457" > < /td>
    < td
id = "LC5457"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( e <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span><span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>isSimulated ) {</
td >
< /tr>
< tr >
< td
id = "L5458"
class
= "blob-num js-line-number"
data - line - number = "5458" > < /td>
    < td
id = "LC5458"
class
= "blob-code blob-code-inner js-file-line" > e < span
class
= "pl-k" >
.<
/span>stopImmediatePropagation();</
td >
< /tr>
< tr >
< td
id = "L5459"
class
= "blob-num js-line-number"
data - line - number = "5459" > < /td>
    < td
id = "LC5459"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5460"
class
= "blob-num js-line-number"
data - line - number = "5460" > < /td>
    < td
id = "LC5460"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5461"
class
= "blob-num js-line-number"
data - line - number = "5461" > < /td>
    < td
id = "LC5461"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > stopPropagation();
<
/td>
< /tr>
< tr >
< td
id = "L5462"
class
= "blob-num js-line-number"
data - line - number = "5462" > < /td>
    < td
id = "LC5462"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5463"
class
= "blob-num js-line-number"
data - line - number = "5463" > < /td>
    < td
id = "LC5463"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L5464"
class
= "blob-num js-line-number"
data - line - number = "5464" > < /td>
    < td
id = "LC5464"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5465"
class
= "blob-num js-line-number"
data - line - number = "5465" > < /td>
    < td
id = "LC5465"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Includes all common event props including KeyEvent and MouseEvent specific props</span></td>
    < /tr>
    < tr >
    < td
id = "L5466"
class
= "blob-num js-line-number"
data - line - number = "5466" > < /td>
    < td
id = "LC5466"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( {</
td >
< /tr>
< tr >
< td
id = "L5467"
class
= "blob-num js-line-number"
data - line - number = "5467" > < /td>
    < td
id = "LC5467"
class
= "blob-code blob-code-inner js-file-line" > altKey < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5468"
class
= "blob-num js-line-number"
data - line - number = "5468" > < /td>
    < td
id = "LC5468"
class
= "blob-code blob-code-inner js-file-line" > bubbles < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5469"
class
= "blob-num js-line-number"
data - line - number = "5469" > < /td>
    < td
id = "LC5469"
class
= "blob-code blob-code-inner js-file-line" > cancelable < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5470"
class
= "blob-num js-line-number"
data - line - number = "5470" > < /td>
    < td
id = "LC5470"
class
= "blob-code blob-code-inner js-file-line" > changedTouches < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5471"
class
= "blob-num js-line-number"
data - line - number = "5471" > < /td>
    < td
id = "LC5471"
class
= "blob-code blob-code-inner js-file-line" > ctrlKey < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5472"
class
= "blob-num js-line-number"
data - line - number = "5472" > < /td>
    < td
id = "LC5472"
class
= "blob-code blob-code-inner js-file-line" > detail < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5473"
class
= "blob-num js-line-number"
data - line - number = "5473" > < /td>
    < td
id = "LC5473"
class
= "blob-code blob-code-inner js-file-line" > eventPhase < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5474"
class
= "blob-num js-line-number"
data - line - number = "5474" > < /td>
    < td
id = "LC5474"
class
= "blob-code blob-code-inner js-file-line" > metaKey < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5475"
class
= "blob-num js-line-number"
data - line - number = "5475" > < /td>
    < td
id = "LC5475"
class
= "blob-code blob-code-inner js-file-line" > pageX < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5476"
class
= "blob-num js-line-number"
data - line - number = "5476" > < /td>
    < td
id = "LC5476"
class
= "blob-code blob-code-inner js-file-line" > pageY < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5477"
class
= "blob-num js-line-number"
data - line - number = "5477" > < /td>
    < td
id = "LC5477"
class
= "blob-code blob-code-inner js-file-line" > shiftKey < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5478"
class
= "blob-num js-line-number"
data - line - number = "5478" > < /td>
    < td
id = "LC5478"
class
= "blob-code blob-code-inner js-file-line" > view < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5479"
class
= "blob-num js-line-number"
data - line - number = "5479" > < /td>
    < td
id = "LC5479"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>char<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L5480"
class
= "blob-num js-line-number"
data - line - number = "5480" > < /td>
    < td
id = "LC5480"
class
= "blob-code blob-code-inner js-file-line" > charCode < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5481"
class
= "blob-num js-line-number"
data - line - number = "5481" > < /td>
    < td
id = "LC5481"
class
= "blob-code blob-code-inner js-file-line" > key < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5482"
class
= "blob-num js-line-number"
data - line - number = "5482" > < /td>
    < td
id = "LC5482"
class
= "blob-code blob-code-inner js-file-line" > keyCode < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5483"
class
= "blob-num js-line-number"
data - line - number = "5483" > < /td>
    < td
id = "LC5483"
class
= "blob-code blob-code-inner js-file-line" > button < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5484"
class
= "blob-num js-line-number"
data - line - number = "5484" > < /td>
    < td
id = "LC5484"
class
= "blob-code blob-code-inner js-file-line" > buttons < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5485"
class
= "blob-num js-line-number"
data - line - number = "5485" > < /td>
    < td
id = "LC5485"
class
= "blob-code blob-code-inner js-file-line" > clientX < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5486"
class
= "blob-num js-line-number"
data - line - number = "5486" > < /td>
    < td
id = "LC5486"
class
= "blob-code blob-code-inner js-file-line" > clientY < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5487"
class
= "blob-num js-line-number"
data - line - number = "5487" > < /td>
    < td
id = "LC5487"
class
= "blob-code blob-code-inner js-file-line" > offsetX < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5488"
class
= "blob-num js-line-number"
data - line - number = "5488" > < /td>
    < td
id = "LC5488"
class
= "blob-code blob-code-inner js-file-line" > offsetY < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5489"
class
= "blob-num js-line-number"
data - line - number = "5489" > < /td>
    < td
id = "LC5489"
class
= "blob-code blob-code-inner js-file-line" > pointerId < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5490"
class
= "blob-num js-line-number"
data - line - number = "5490" > < /td>
    < td
id = "LC5490"
class
= "blob-code blob-code-inner js-file-line" > pointerType < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5491"
class
= "blob-num js-line-number"
data - line - number = "5491" > < /td>
    < td
id = "LC5491"
class
= "blob-code blob-code-inner js-file-line" > screenX < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5492"
class
= "blob-num js-line-number"
data - line - number = "5492" > < /td>
    < td
id = "LC5492"
class
= "blob-code blob-code-inner js-file-line" > screenY < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5493"
class
= "blob-num js-line-number"
data - line - number = "5493" > < /td>
    < td
id = "LC5493"
class
= "blob-code blob-code-inner js-file-line" > targetTouches < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5494"
class
= "blob-num js-line-number"
data - line - number = "5494" > < /td>
    < td
id = "LC5494"
class
= "blob-code blob-code-inner js-file-line" > toElement < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5495"
class
= "blob-num js-line-number"
data - line - number = "5495" > < /td>
    < td
id = "LC5495"
class
= "blob-code blob-code-inner js-file-line" > touches < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5496"
class
= "blob-num js-line-number"
data - line - number = "5496" > < /td>
    < td
id = "LC5496"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5497"
class
= "blob-num js-line-number"
data - line - number = "5497" > < /td>
    < td
id = "LC5497"
class
= "blob-code blob-code-inner js-file-line" > which < span
class
= "pl-k" >
:<
/span> function( event ) {</
td >
< /tr>
< tr >
< td
id = "L5498"
class
= "blob-num js-line-number"
data - line - number = "5498" > < /td>
    < td
id = "LC5498"
class
= "blob-code blob-code-inner js-file-line" >
var button
<
span
class
= "pl-k" >= < /span> event<span class="pl-k">.</s
pan > button;
<
/td>
< /tr>
< tr >
< td
id = "L5499"
class
= "blob-num js-line-number"
data - line - number = "5499" > < /td>
    < td
id = "LC5499"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5500"
class
= "blob-num js-line-number"
data - line - number = "5500" > < /td>
    < td
id = "LC5500"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add which for key events</span></td>
    < /tr>
    < tr >
    < td
id = "L5501"
class
= "blob-num js-line-number"
data - line - number = "5501" > < /td>
    < td
id = "LC5501"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( event<span class="pl-k">.</s
pan > which < span
class
= "pl-k" >= =
<
/span> <span class="pl-c1">null</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> rkeyEvent<span class="pl-k">.</s
pan > test(event < span
class
= "pl-k" >
.<
/span>type ) ) {</
td >
< /tr>
< tr >
< td
id = "L5502"
class
= "blob-num js-line-number"
data - line - number = "5502" > < /td>
    < td
id = "LC5502"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> event<span class="pl-k">.</s
pan > charCode < span
class
= "pl-k" > != < /span> <span class="pl-c1">null</s
pan > < span
class
= "pl-k" > ?
<
/span> event<span class="pl-k">.</s
pan > charCode < span
class
= "pl-k" >
:<
/span> event<span class="pl-k">.</s
pan > keyCode;
<
/td>
< /tr>
< tr >
< td
id = "L5503"
class
= "blob-num js-line-number"
data - line - number = "5503" > < /td>
    < td
id = "LC5503"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5504"
class
= "blob-num js-line-number"
data - line - number = "5504" > < /td>
    < td
id = "LC5504"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5505"
class
= "blob-num js-line-number"
data - line - number = "5505" > < /td>
    < td
id = "LC5505"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add which for click: 1 === left; 2 === middle; 3 === right</span></td>
    < /tr>
    < tr >
    < td
id = "L5506"
class
= "blob-num js-line-number"
data - line - number = "5506" > < /td>
    < td
id = "LC5506"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > event < span
class
= "pl-k" >
.<
/span>which <span class="pl-k">&amp;&amp;</s
pan > button < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined < span
class
= "pl-k" > &amp;&amp; < /span> rmouseEvent<span class="pl-k">.</s
pan > test(event < span
class
= "pl-k" >
.<
/span>type ) ) {</
td >
< /tr>
< tr >
< td
id = "L5507"
class
= "blob-num js-line-number"
data - line - number = "5507" > < /td>
    < td
id = "LC5507"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( button <span class="pl-k">&amp;</s
pan > < span
class
= "pl-c1" > 1 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5508"
class
= "blob-num js-line-number"
data - line - number = "5508" > < /td>
    < td
id = "LC5508"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5509"
class
= "blob-num js-line-number"
data - line - number = "5509" > < /td>
    < td
id = "LC5509"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5510"
class
= "blob-num js-line-number"
data - line - number = "5510" > < /td>
    < td
id = "LC5510"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5511"
class
= "blob-num js-line-number"
data - line - number = "5511" > < /td>
    < td
id = "LC5511"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( button <span class="pl-k">&amp;</s
pan > < span
class
= "pl-c1" > 2 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5512"
class
= "blob-num js-line-number"
data - line - number = "5512" > < /td>
    < td
id = "LC5512"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">3</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5513"
class
= "blob-num js-line-number"
data - line - number = "5513" > < /td>
    < td
id = "LC5513"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5514"
class
= "blob-num js-line-number"
data - line - number = "5514" > < /td>
    < td
id = "LC5514"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5515"
class
= "blob-num js-line-number"
data - line - number = "5515" > < /td>
    < td
id = "LC5515"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( button <span class="pl-k">&amp;</s
pan > < span
class
= "pl-c1" > 4 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5516"
class
= "blob-num js-line-number"
data - line - number = "5516" > < /td>
    < td
id = "LC5516"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">2</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5517"
class
= "blob-num js-line-number"
data - line - number = "5517" > < /td>
    < td
id = "LC5517"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5518"
class
= "blob-num js-line-number"
data - line - number = "5518" > < /td>
    < td
id = "LC5518"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5519"
class
= "blob-num js-line-number"
data - line - number = "5519" > < /td>
    < td
id = "LC5519"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5520"
class
= "blob-num js-line-number"
data - line - number = "5520" > < /td>
    < td
id = "LC5520"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5521"
class
= "blob-num js-line-number"
data - line - number = "5521" > < /td>
    < td
id = "LC5521"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5522"
class
= "blob-num js-line-number"
data - line - number = "5522" > < /td>
    < td
id = "LC5522"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> event<span class="pl-k">.</s
pan > which;
<
/td>
< /tr>
< tr >
< td
id = "L5523"
class
= "blob-num js-line-number"
data - line - number = "5523" > < /td>
    < td
id = "LC5523"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5524"
class
= "blob-num js-line-number"
data - line - number = "5524" > < /td>
    < td
id = "LC5524"
class
= "blob-code blob-code-inner js-file-line" >
},
jQuery < span
class
= "pl-k" >
.<
/span>event<span class="pl-k">.</s
pan > addProp
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5525"
class
= "blob-num js-line-number"
data - line - number = "5525" > < /td>
    < td
id = "LC5525"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5526"
class
= "blob-num js-line-number"
data - line - number = "5526" > < /td>
    < td
id = "LC5526"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Create mouseenter/leave events using mouseover/out and event-time checks</span></td>
    < /tr>
    < tr >
    < td
id = "L5527"
class
= "blob-num js-line-number"
data - line - number = "5527" > < /td>
    < td
id = "LC5527"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> so that event delegation works in jQuery.</span></td>
    < /tr>
    < tr >
    < td
id = "L5528"
class
= "blob-num js-line-number"
data - line - number = "5528" > < /td>
    < td
id = "LC5528"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Do the same for pointerenter/pointerleave and pointerover/pointerout</span></td>
    < /tr>
    < tr >
    < td
id = "L5529"
class
= "blob-num js-line-number"
data - line - number = "5529" > < /td>
    < td
id = "LC5529"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L5530"
class
= "blob-num js-line-number"
data - line - number = "5530" > < /td>
    < td
id = "LC5530"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Safari 7 only</span></td>
    < /tr>
    < tr >
    < td
id = "L5531"
class
= "blob-num js-line-number"
data - line - number = "5531" > < /td>
    < td
id = "LC5531"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Safari sends mouseenter too often; see:</span></td>
    < /tr>
    < tr >
    < td
id = "L5532"
class
= "blob-num js-line-number"
data - line - number = "5532" > < /td>
    < td
id = "LC5532"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://bugs.chromium.org/p/chromium/issues/detail?id=470258</span></td>
    < /tr>
    < tr >
    < td
id = "L5533"
class
= "blob-num js-line-number"
data - line - number = "5533" > < /td>
    < td
id = "LC5533"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> for the description of the bug (it existed in older Chrome versions as well).</span></td>
    < /tr>
    < tr >
    < td
id = "L5534"
class
= "blob-num js-line-number"
data - line - number = "5534" > < /td>
    < td
id = "LC5534"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( {</
td >
< /tr>
< tr >
< td
id = "L5535"
class
= "blob-num js-line-number"
data - line - number = "5535" > < /td>
    < td
id = "LC5535"
class
= "blob-code blob-code-inner js-file-line" > mouseenter < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > mouseover < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5536"
class
= "blob-num js-line-number"
data - line - number = "5536" > < /td>
    < td
id = "LC5536"
class
= "blob-code blob-code-inner js-file-line" > mouseleave < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > mouseout < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5537"
class
= "blob-num js-line-number"
data - line - number = "5537" > < /td>
    < td
id = "LC5537"
class
= "blob-code blob-code-inner js-file-line" > pointerenter < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > pointerover < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L5538"
class
= "blob-num js-line-number"
data - line - number = "5538" > < /td>
    < td
id = "LC5538"
class
= "blob-code blob-code-inner js-file-line" > pointerleave < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > pointerout < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L5539"
class
= "blob-num js-line-number"
data - line - number = "5539" > < /td>
    < td
id = "LC5539"
class
= "blob-code blob-code-inner js-file-line" >
},

function (orig, fix) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5540"
class
    = "blob-num js-line-number"
    data - line - number = "5540" > < /td>
        < td
    id = "LC5540"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>event<span class="pl-k">.</s
    pan > special[orig] < span
class
    = "pl-k" >= < /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5541"
class
    = "blob-num js-line-number"
    data - line - number = "5541" > < /td>
        < td
    id = "LC5541"
class
    = "blob-code blob-code-inner js-file-line" > delegateType < span
class
    = "pl-k" >
:<
    /span> fix,</
    td >
    < /tr>
    < tr >
    < td
    id = "L5542"
class
    = "blob-num js-line-number"
    data - line - number = "5542" > < /td>
        < td
    id = "LC5542"
class
    = "blob-code blob-code-inner js-file-line" > bindType < span
class
    = "pl-k" >
:<
    /span> fix,</
    td >
    < /tr>
    < tr >
    < td
    id = "L5543"
class
    = "blob-num js-line-number"
    data - line - number = "5543" > < /td>
        < td
    id = "LC5543"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5544"
class
    = "blob-num js-line-number"
    data - line - number = "5544" > < /td>
        < td
    id = "LC5544"
class
    = "blob-code blob-code-inner js-file-line" > handle < span
class
    = "pl-k" >
:<
    /span> function( event ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5545"
class
    = "blob-num js-line-number"
    data - line - number = "5545" > < /td>
        < td
    id = "LC5545"
class
    = "blob-code blob-code-inner js-file-line" >
    var ret, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L5546"
class
    = "blob-num js-line-number"
    data - line - number = "5546" > < /td>
        < td
    id = "LC5546"
class
    = "blob-code blob-code-inner js-file-line" > target < span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5547"
class
    = "blob-num js-line-number"
    data - line - number = "5547" > < /td>
        < td
    id = "LC5547"
class
    = "blob-code blob-code-inner js-file-line" > related < span
class
    = "pl-k" >= < /span> event<span class="pl-k">.</s
    pan > relatedTarget,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5548"
class
    = "blob-num js-line-number"
    data - line - number = "5548" > < /td>
        < td
    id = "LC5548"
class
    = "blob-code blob-code-inner js-file-line" > handleObj < span
class
    = "pl-k" >= < /span> event<span class="pl-k">.</s
    pan > handleObj;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5549"
class
    = "blob-num js-line-number"
    data - line - number = "5549" > < /td>
        < td
    id = "LC5549"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5550"
class
    = "blob-num js-line-number"
    data - line - number = "5550" > < /td>
        < td
    id = "LC5550"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> For mouseenter/leave call the handler if related is outside the target.</span></td>
        < /tr>
        < tr >
        < td
    id = "L5551"
class
    = "blob-num js-line-number"
    data - line - number = "5551" > < /td>
        < td
    id = "LC5551"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> NB: No relatedTarget if the mouse left/entered the browser window</span></td>
        < /tr>
        < tr >
        < td
    id = "L5552"
class
    = "blob-num js-line-number"
    data - line - number = "5552" > < /td>
        < td
    id = "LC5552"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > related < span
class
    = "pl-k" > || < /span> ( related <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> target <span class="pl-k">&amp;&amp;</s
    pan > < span
class
    = "pl-k" > ! < /span>jQuery<span class="pl-k">.</s
    pan > contains(target, related)
)

)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5553"
class
    = "blob-num js-line-number"
    data - line - number = "5553" > < /td>
        < td
    id = "LC5553"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">=</s
    pan > handleObj < span
class
    = "pl-k" >
.<
    /span>origType;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5554"
class
    = "blob-num js-line-number"
    data - line - number = "5554" > < /td>
        < td
    id = "LC5554"
class
    = "blob-code blob-code-inner js-file-line" > ret < span
class
    = "pl-k" >= < /span> handleObj<span class="pl-k">.</s
    pan > handler < span
class
    = "pl-k" >
.<
    /span>apply( <span class="pl-c1">this</s
    pan >, arguments
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5555"
class
= "blob-num js-line-number"
data - line - number = "5555" > < /td>
    < td
id = "LC5555"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">=</s
pan > fix;
<
/td>
< /tr>
< tr >
< td
id = "L5556"
class
= "blob-num js-line-number"
data - line - number = "5556" > < /td>
    < td
id = "LC5556"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5557"
class
= "blob-num js-line-number"
data - line - number = "5557" > < /td>
    < td
id = "LC5557"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L5558"
class
= "blob-num js-line-number"
data - line - number = "5558" > < /td>
    < td
id = "LC5558"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5559"
class
= "blob-num js-line-number"
data - line - number = "5559" > < /td>
    < td
id = "LC5559"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L5560"
class
= "blob-num js-line-number"
data - line - number = "5560" > < /td>
    < td
id = "LC5560"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5561"
class
= "blob-num js-line-number"
data - line - number = "5561" > < /td>
    < td
id = "LC5561"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5562"
class
= "blob-num js-line-number"
data - line - number = "5562" > < /td>
    < td
id = "LC5562"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L5563"
class
= "blob-num js-line-number"
data - line - number = "5563" > < /td>
    < td
id = "LC5563"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5564"
class
= "blob-num js-line-number"
data - line - number = "5564" > < /td>
    < td
id = "LC5564"
class
= "blob-code blob-code-inner js-file-line" > on < span
class
= "pl-k" >
:<
/span> function( types, selector, data, fn ) {</
td >
< /tr>
< tr >
< td
id = "L5565"
class
= "blob-num js-line-number"
data - line - number = "5565" > < /td>
    < td
id = "LC5565"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> on( <span class="pl-c1">this</s
pan >, types, selector, data, fn
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5566"
class
= "blob-num js-line-number"
data - line - number = "5566" > < /td>
    < td
id = "LC5566"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5567"
class
= "blob-num js-line-number"
data - line - number = "5567" > < /td>
    < td
id = "LC5567"
class
= "blob-code blob-code-inner js-file-line" > one < span
class
= "pl-k" >
:<
/span> function( types, selector, data, fn ) {</
td >
< /tr>
< tr >
< td
id = "L5568"
class
= "blob-num js-line-number"
data - line - number = "5568" > < /td>
    < td
id = "LC5568"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> on( <span class="pl-c1">this</s
pan >, types, selector, data, fn,
<
span
class
= "pl-c1" > 1 < /span> );</
td >
< /tr>
< tr >
< td
id = "L5569"
class
= "blob-num js-line-number"
data - line - number = "5569" > < /td>
    < td
id = "LC5569"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5570"
class
= "blob-num js-line-number"
data - line - number = "5570" > < /td>
    < td
id = "LC5570"
class
= "blob-code blob-code-inner js-file-line" > off < span
class
= "pl-k" >
:<
/span> function( types, selector, fn ) {</
td >
< /tr>
< tr >
< td
id = "L5571"
class
= "blob-num js-line-number"
data - line - number = "5571" > < /td>
    < td
id = "LC5571"
class
= "blob-code blob-code-inner js-file-line" >
var handleObj, type;
<
/td>
< /tr>
< tr >
< td
id = "L5572"
class
= "blob-num js-line-number"
data - line - number = "5572" > < /td>
    < td
id = "LC5572"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( types <span class="pl-k">&amp;&amp;</s
pan > types < span
class
= "pl-k" >
.<
/span>preventDefault <span class="pl-k">&amp;&amp;</s
pan > types < span
class
= "pl-k" >
.<
/span>handleObj ) {</
td >
< /tr>
< tr >
< td
id = "L5573"
class
= "blob-num js-line-number"
data - line - number = "5573" > < /td>
    < td
id = "LC5573"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5574"
class
= "blob-num js-line-number"
data - line - number = "5574" > < /td>
    < td
id = "LC5574"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ( event )  dispatched jQuery.Event</span></td>
    < /tr>
    < tr >
    < td
id = "L5575"
class
= "blob-num js-line-number"
data - line - number = "5575" > < /td>
    < td
id = "LC5575"
class
= "blob-code blob-code-inner js-file-line" > handleObj < span
class
= "pl-k" >= < /span> types<span class="pl-k">.</s
pan > handleObj;
<
/td>
< /tr>
< tr >
< td
id = "L5576"
class
= "blob-num js-line-number"
data - line - number = "5576" > < /td>
    < td
id = "LC5576"
class
= "blob-code blob-code-inner js-file-line" > jQuery(types < span
class
= "pl-k" >
.<
/span>delegateTarget )<span class="pl-k">.</s
pan > off( < /td>
< /tr>
< tr >
< td
id = "L5577"
class
= "blob-num js-line-number"
data - line - number = "5577" > < /td>
    < td
id = "LC5577"
class
= "blob-code blob-code-inner js-file-line" > handleObj < span
class
= "pl-k" >
.<
/span>namespace <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5578"
class
= "blob-num js-line-number"
data - line - number = "5578" > < /td>
    < td
id = "LC5578"
class
= "blob-code blob-code-inner js-file-line" > handleObj < span
class
= "pl-k" >
.<
/span>origType <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>.<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > handleObj < span
class
= "pl-k" >
.<
/span>namespace <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5579"
class
= "blob-num js-line-number"
data - line - number = "5579" > < /td>
    < td
id = "LC5579"
class
= "blob-code blob-code-inner js-file-line" > handleObj < span
class
= "pl-k" >
.<
/span>origType,</
td >
< /tr>
< tr >
< td
id = "L5580"
class
= "blob-num js-line-number"
data - line - number = "5580" > < /td>
    < td
id = "LC5580"
class
= "blob-code blob-code-inner js-file-line" > handleObj < span
class
= "pl-k" >
.<
/span>selector,</
td >
< /tr>
< tr >
< td
id = "L5581"
class
= "blob-num js-line-number"
data - line - number = "5581" > < /td>
    < td
id = "LC5581"
class
= "blob-code blob-code-inner js-file-line" > handleObj < span
class
= "pl-k" >
.<
/span>handler</
td >
< /tr>
< tr >
< td
id = "L5582"
class
= "blob-num js-line-number"
data - line - number = "5582" > < /td>
    < td
id = "LC5582"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5583"
class
= "blob-num js-line-number"
data - line - number = "5583" > < /td>
    < td
id = "LC5583"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5584"
class
= "blob-num js-line-number"
data - line - number = "5584" > < /td>
    < td
id = "LC5584"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5585"
class
= "blob-num js-line-number"
data - line - number = "5585" > < /td>
    < td
id = "LC5585"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof types <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5586"
class
= "blob-num js-line-number"
data - line - number = "5586" > < /td>
    < td
id = "LC5586"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5587"
class
= "blob-num js-line-number"
data - line - number = "5587" > < /td>
    < td
id = "LC5587"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ( types-object [, selector] )</span></td>
    < /tr>
    < tr >
    < td
id = "L5588"
class
= "blob-num js-line-number"
data - line - number = "5588" > < /td>
    < td
id = "LC5588"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( type in types ) {</
td >
< /tr>
< tr >
< td
id = "L5589"
class
= "blob-num js-line-number"
data - line - number = "5589" > < /td>
    < td
id = "LC5589"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > off(type, selector, types[type]);
<
/td>
< /tr>
< tr >
< td
id = "L5590"
class
= "blob-num js-line-number"
data - line - number = "5590" > < /td>
    < td
id = "LC5590"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5591"
class
= "blob-num js-line-number"
data - line - number = "5591" > < /td>
    < td
id = "LC5591"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5592"
class
= "blob-num js-line-number"
data - line - number = "5592" > < /td>
    < td
id = "LC5592"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5593"
class
= "blob-num js-line-number"
data - line - number = "5593" > < /td>
    < td
id = "LC5593"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( selector <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> <span class="pl-k">||</s
pan > typeof selector < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > function<span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5594"
class
    = "blob-num js-line-number"
    data - line - number = "5594" > < /td>
        < td
    id = "LC5594"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5595"
class
    = "blob-num js-line-number"
    data - line - number = "5595" > < /td>
        < td
    id = "LC5595"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> ( types [, fn] )</span></td>
        < /tr>
        < tr >
        < td
    id = "L5596"
class
    = "blob-num js-line-number"
    data - line - number = "5596" > < /td>
        < td
    id = "LC5596"
class
    = "blob-code blob-code-inner js-file-line" > fn < span
class
    = "pl-k" >= < /span> selector;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5597"
class
    = "blob-num js-line-number"
    data - line - number = "5597" > < /td>
        < td
    id = "LC5597"
class
    = "blob-code blob-code-inner js-file-line" > selector < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5598"
class
    = "blob-num js-line-number"
    data - line - number = "5598" > < /td>
        < td
    id = "LC5598"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5599"
class
= "blob-num js-line-number"
data - line - number = "5599" > < /td>
    < td
id = "LC5599"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fn <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5600"
class
= "blob-num js-line-number"
data - line - number = "5600" > < /td>
    < td
id = "LC5600"
class
= "blob-code blob-code-inner js-file-line" > fn < span
class
= "pl-k" >= < /span> returnFalse;</
td >
< /tr>
< tr >
< td
id = "L5601"
class
= "blob-num js-line-number"
data - line - number = "5601" > < /td>
    < td
id = "LC5601"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5602"
class
= "blob-num js-line-number"
data - line - number = "5602" > < /td>
    < td
id = "LC5602"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L5603"
class
= "blob-num js-line-number"
data - line - number = "5603" > < /td>
    < td
id = "LC5603"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event<span class="pl-k">.</s
pan > remove( < span
class
= "pl-c1" > this < /span>, types, fn, selector );</
td >
< /tr>
< tr >
< td
id = "L5604"
class
= "blob-num js-line-number"
data - line - number = "5604" > < /td>
    < td
id = "LC5604"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5605"
class
= "blob-num js-line-number"
data - line - number = "5605" > < /td>
    < td
id = "LC5605"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5606"
class
= "blob-num js-line-number"
data - line - number = "5606" > < /td>
    < td
id = "LC5606"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5607"
class
= "blob-num js-line-number"
data - line - number = "5607" > < /td>
    < td
id = "LC5607"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5608"
class
= "blob-num js-line-number"
data - line - number = "5608" > < /td>
    < td
id = "LC5608"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5609"
class
= "blob-num js-line-number"
data - line - number = "5609" > < /td>
    < td
id = "LC5609"
class
= "blob-code blob-code-inner js-file-line" >
var <
/td>
< /tr>
< tr >
< td
id = "L5610"
class
= "blob-num js-line-number"
data - line - number = "5610" > < /td>
    < td
id = "LC5610"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5611"
class
= "blob-num js-line-number"
data - line - number = "5611" > < /td>
    < td
id = "LC5611"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> eslint-disable max-len <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L5612"
class
= "blob-num js-line-number"
data - line - number = "5612" > < /td>
    < td
id = "LC5612"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5613"
class
= "blob-num js-line-number"
data - line - number = "5613" > < /td>
    < td
id = "LC5613"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> See https://github.com/eslint/eslint/issues/3229</span></td>
    < /tr>
    < tr >
    < td
id = "L5614"
class
= "blob-num js-line-number"
data - line - number = "5614" > < /td>
    < td
id = "LC5614"
class
= "blob-code blob-code-inner js-file-line" > rxhtmlTag < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">&lt;</s
pan > ( < span
class
= "pl-k" > ?
<
/span><span class="pl-k">!</s
pan > area < span
class
= "pl-k" > | < /span>br<span class="pl-k">|</s
pan > col < span
class
= "pl-k" > | < /span>embed<span class="pl-k">|</s
pan > hr < span
class
= "pl-k" > | < /span>img<span class="pl-k">|</s
pan > input < span
class
= "pl-k" > | < /span>link<span class="pl-k">|</s
pan > meta < span
class
= "pl-k" > | < /span>param)(([a<span class="pl-k">-</span>z][<span class="pl-k">^</span>\<span class="pl-k">/</span>\<span class="pl-c1">0</span><span class="pl-k">&gt;</span>\x20\t\r\n\f]<span class="pl-k">*</s
pan >
)
[ < span
class
= "pl-k" > ^ < /span><span class="pl-k">&gt;</s
pan >
]<
span
class
= "pl-k" > * < /span>)\<span class="pl-k">/ < /span><span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > / < /span>gi,</
td >
< /tr>
< tr >
< td
id = "L5615"
class
= "blob-num js-line-number"
data - line - number = "5615" > < /td>
    < td
id = "LC5615"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5616"
class
= "blob-num js-line-number"
data - line - number = "5616" > < /td>
    < td
id = "LC5616"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> eslint-enable <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L5617"
class
= "blob-num js-line-number"
data - line - number = "5617" > < /td>
    < td
id = "LC5617"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5618"
class
= "blob-num js-line-number"
data - line - number = "5618" > < /td>
    < td
id = "LC5618"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=10 - 11, Edge 12 - 13</span></td>
    < /tr>
    < tr >
    < td
id = "L5619"
class
= "blob-num js-line-number"
data - line - number = "5619" > < /td>
    < td
id = "LC5619"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> In IE/Edge using regex groups here causes severe slowdowns.</span></td>
    < /tr>
    < tr >
    < td
id = "L5620"
class
= "blob-num js-line-number"
data - line - number = "5620" > < /td>
    < td
id = "LC5620"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> See https://connect.microsoft.com/IE/feedback/details/1736512/</span></td>
    < /tr>
    < tr >
    < td
id = "L5621"
class
= "blob-num js-line-number"
data - line - number = "5621" > < /td>
    < td
id = "LC5621"
class
= "blob-code blob-code-inner js-file-line" > rnoInnerhtml < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">&lt;</s
pan > script < span
class
= "pl-k" > | < /span><span class="pl-k">&lt;</s
pan > style < span
class
= "pl-k" > | < /span><span class="pl-k">&lt;</s
pan > link < span
class
= "pl-k" > / < /span>i,</
td >
< /tr>
< tr >
< td
id = "L5622"
class
= "blob-num js-line-number"
data - line - number = "5622" > < /td>
    < td
id = "LC5622"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5623"
class
= "blob-num js-line-number"
data - line - number = "5623" > < /td>
    < td
id = "LC5623"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> checked=&quot;checked&quot; or checked</span></td>
    < /tr>
    < tr >
    < td
id = "L5624"
class
= "blob-num js-line-number"
data - line - number = "5624" > < /td>
    < td
id = "LC5624"
class
= "blob-code blob-code-inner js-file-line" > rchecked < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>checked\s<span class="pl-k">*</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>[<span class="pl-k">^</span><span class="pl-k">=</span>]<span class="pl-k">|=</s
pan >\s < span
class
= "pl-k" > * < /span><span class="pl-k">.</s
pan > checked < span
class
= "pl-k" >
.<
/span>)<span class="pl-k">/ < /span>i,</
td >
< /tr>
< tr >
< td
id = "L5625"
class
= "blob-num js-line-number"
data - line - number = "5625" > < /td>
    < td
id = "LC5625"
class
= "blob-code blob-code-inner js-file-line" > rscriptTypeMasked < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > < span
class
= "pl-c1" > true < /span>\<span class="pl-k">/ < /span>(<span class="pl-c1">.</s
pan > < span
class
= "pl-k" > * < /span>)<span class="pl-k">/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L5626"
class
= "blob-num js-line-number"
data - line - number = "5626" > < /td>
    < td
id = "LC5626"
class
= "blob-code blob-code-inner js-file-line" > rcleanScript < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan >\s < span
class
= "pl-k" > * < /span><span class="pl-k">&lt;</s
pan > < span
class
= "pl-k" > ! < /span>(<span class="pl-k">?:</s
pan >\[ < span
class
= "pl-c1" > CDATA < /span>\[<span class="pl-k">|</s
pan > < span
class
= "pl-k" > -- < /span>)<span class="pl-k">|</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>\]\]<span class="pl-k">|</s
pan > < span
class
= "pl-k" > -- < /span>)<span class="pl-k">&gt;</s
pan >\s < span
class
= "pl-k" > * < /span>$<span class="pl-k">/ < /span>g;</
td >
< /tr>
< tr >
< td
id = "L5627"
class
= "blob-num js-line-number"
data - line - number = "5627" > < /td>
    < td
id = "LC5627"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5628"
class
= "blob-num js-line-number"
data - line - number = "5628" > < /td>
    < td
id = "LC5628"
class
= "blob-code blob-code-inner js-file-line" > function manipulationTarget(elem, content) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L5629"
    class
        = "blob-num js-line-number"
        data - line - number = "5629" > < /td>
            < td
        id = "LC5629"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( jQuery<span class="pl-k">.</s
        pan > nodeName(elem, < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>table<span class="pl-pds">&quot;</s
        pan > < /span> ) <span class="pl-k">&amp;&amp;</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L5630"
    class
        = "blob-num js-line-number"
        data - line - number = "5630" > < /td>
            < td
        id = "LC5630"
    class
        = "blob-code blob-code-inner js-file-line" > jQuery < span
    class
        = "pl-k" >
    .<
        /span>nodeName( content<span class="pl-k">.</s
        pan > nodeType < span
    class
        = "pl-k" > != < /span><span class="pl-k">=</s
        pan > < span
    class
        = "pl-c1" > 11 < /span> <span class="pl-k">?</s
        pan > content < span
    class
        = "pl-k" >
    :<
        /span> content<span class="pl-k">.</s
        pan > firstChild,
    <
        span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>tr<span class="pl-pds">&quot;</s
        pan > < /span> ) ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L5631"
    class
        = "blob-num js-line-number"
        data - line - number = "5631" > < /td>
            < td
        id = "LC5631"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L5632"
    class
        = "blob-num js-line-number"
        data - line - number = "5632" > < /td>
            < td
        id = "LC5632"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> elem<span class="pl-k">.</s
        pan > getElementsByTagName( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>tbody<span class="pl-pds">&quot;</s
        pan > < /span> )[ <span class="pl-c1">0</span> ] <span class="pl-k">||</s
        pan > elem;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L5633"
    class
        = "blob-num js-line-number"
        data - line - number = "5633" > < /td>
            < td
        id = "LC5633"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L5634"
class
= "blob-num js-line-number"
data - line - number = "5634" > < /td>
    < td
id = "LC5634"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5635"
class
= "blob-num js-line-number"
data - line - number = "5635" > < /td>
    < td
id = "LC5635"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem;</
td >
< /tr>
< tr >
< td
id = "L5636"
class
= "blob-num js-line-number"
data - line - number = "5636" > < /td>
    < td
id = "LC5636"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5637"
class
= "blob-num js-line-number"
data - line - number = "5637" > < /td>
    < td
id = "LC5637"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5638"
class
= "blob-num js-line-number"
data - line - number = "5638" > < /td>
    < td
id = "LC5638"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Replace/restore the type attribute of script elements for safe DOM manipulation</span></td>
    < /tr>
    < tr >
    < td
id = "L5639"
class
= "blob-num js-line-number"
data - line - number = "5639" > < /td>
    < td
id = "LC5639"
class
= "blob-code blob-code-inner js-file-line" > function disableScript(elem) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L5640"
    class
        = "blob-num js-line-number"
        data - line - number = "5640" > < /td>
            < td
        id = "LC5640"
    class
        = "blob-code blob-code-inner js-file-line" > elem < span
    class
        = "pl-k" >
    .<
        /span>type <span class="pl-k">=</s
        pan > (elem < span
    class
        = "pl-k" >
    .<
        /span>getAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > type < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan >
    ) <
        span
    class
        = "pl-k" > != < /span><span class="pl-k">=</s
        pan > < span
    class
        = "pl-c1" > null < /span> ) <span class="pl-k">+</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>/ < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan > < span
    class
        = "pl-k" > + < /span> elem<span class="pl-k">.</s
        pan > type;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L5641"
    class
        = "blob-num js-line-number"
        data - line - number = "5641" > < /td>
            < td
        id = "LC5641"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> elem;</
        td >
        < /tr>
        < tr >
        < td
        id = "L5642"
    class
        = "blob-num js-line-number"
        data - line - number = "5642" > < /td>
            < td
        id = "LC5642"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L5643"
class
= "blob-num js-line-number"
data - line - number = "5643" > < /td>
    < td
id = "LC5643"
class
= "blob-code blob-code-inner js-file-line" > function restoreScript(elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5644"
class
    = "blob-num js-line-number"
    data - line - number = "5644" > < /td>
        < td
    id = "LC5644"
class
    = "blob-code blob-code-inner js-file-line" >
    var match
<
    span
class
    = "pl-k" >= < /span> rscriptTypeMasked<span class="pl-k">.</s
    pan > exec(elem < span
class
    = "pl-k" >
.<
    /span>type );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5645"
class
    = "blob-num js-line-number"
    data - line - number = "5645" > < /td>
        < td
    id = "LC5645"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5646"
class
    = "blob-num js-line-number"
    data - line - number = "5646" > < /td>
        < td
    id = "LC5646"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( match ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5647"
class
    = "blob-num js-line-number"
    data - line - number = "5647" > < /td>
        < td
    id = "LC5647"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">=</s
    pan > match[ < span
class
    = "pl-c1" > 1 < /span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L5648"
class
    = "blob-num js-line-number"
    data - line - number = "5648" > < /td>
        < td
    id = "LC5648"
class
    = "blob-code blob-code-inner js-file-line" >
} < span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5649"
class
= "blob-num js-line-number"
data - line - number = "5649" > < /td>
    < td
id = "LC5649"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>removeAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > type < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5650"
class
= "blob-num js-line-number"
data - line - number = "5650" > < /td>
    < td
id = "LC5650"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5651"
class
= "blob-num js-line-number"
data - line - number = "5651" > < /td>
    < td
id = "LC5651"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5652"
class
= "blob-num js-line-number"
data - line - number = "5652" > < /td>
    < td
id = "LC5652"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem;</
td >
< /tr>
< tr >
< td
id = "L5653"
class
= "blob-num js-line-number"
data - line - number = "5653" > < /td>
    < td
id = "LC5653"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5654"
class
= "blob-num js-line-number"
data - line - number = "5654" > < /td>
    < td
id = "LC5654"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5655"
class
= "blob-num js-line-number"
data - line - number = "5655" > < /td>
    < td
id = "LC5655"
class
= "blob-code blob-code-inner js-file-line" > function cloneCopyEvent(src, dest) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L5656"
    class
        = "blob-num js-line-number"
        data - line - number = "5656" > < /td>
            < td
        id = "LC5656"
    class
        = "blob-code blob-code-inner js-file-line" >
        var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L5657"
    class
        = "blob-num js-line-number"
        data - line - number = "5657" > < /td>
            < td
        id = "LC5657"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L5658"
    class
        = "blob-num js-line-number"
        data - line - number = "5658" > < /td>
            < td
        id = "LC5658"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( dest<span class="pl-k">.</s
        pan > nodeType < span
    class
        = "pl-k" > != < /span><span class="pl-k">=</s
        pan > < span
    class
        = "pl-c1" > 1 < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L5659"
    class
        = "blob-num js-line-number"
        data - line - number = "5659" > < /td>
            < td
        id = "LC5659"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L5660"
    class
        = "blob-num js-line-number"
        data - line - number = "5660" > < /td>
            < td
        id = "LC5660"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L5661"
class
= "blob-num js-line-number"
data - line - number = "5661" > < /td>
    < td
id = "LC5661"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5662"
class
= "blob-num js-line-number"
data - line - number = "5662" > < /td>
    < td
id = "LC5662"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> 1. Copy private data: events, handlers, etc.</span></td>
    < /tr>
    < tr >
    < td
id = "L5663"
class
= "blob-num js-line-number"
data - line - number = "5663" > < /td>
    < td
id = "LC5663"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( dataPriv<span class="pl-k">.</s
pan > hasData(src)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5664"
class
    = "blob-num js-line-number"
    data - line - number = "5664" > < /td>
        < td
    id = "LC5664"
class
    = "blob-code blob-code-inner js-file-line" > pdataOld < span
class
    = "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
    pan > access(src);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5665"
class
    = "blob-num js-line-number"
    data - line - number = "5665" > < /td>
        < td
    id = "LC5665"
class
    = "blob-code blob-code-inner js-file-line" > pdataCur < span
class
    = "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
    pan > set(dest, pdataOld);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5666"
class
    = "blob-num js-line-number"
    data - line - number = "5666" > < /td>
        < td
    id = "LC5666"
class
    = "blob-code blob-code-inner js-file-line" > events < span
class
    = "pl-k" >= < /span> pdataOld<span class="pl-k">.</s
    pan > events;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5667"
class
    = "blob-num js-line-number"
    data - line - number = "5667" > < /td>
        < td
    id = "LC5667"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5668"
class
    = "blob-num js-line-number"
    data - line - number = "5668" > < /td>
        < td
    id = "LC5668"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( events ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5669"
class
    = "blob-num js-line-number"
    data - line - number = "5669" > < /td>
        < td
    id = "LC5669"
class
    = "blob-code blob-code-inner js-file-line" > delete pdataCur < span
class
    = "pl-k" >
.<
    /span>handle;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5670"
class
    = "blob-num js-line-number"
    data - line - number = "5670" > < /td>
        < td
    id = "LC5670"
class
    = "blob-code blob-code-inner js-file-line" > pdataCur < span
class
    = "pl-k" >
.<
    /span>events <span class="pl-k">=</s
    pan > {};
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5671"
class
    = "blob-num js-line-number"
    data - line - number = "5671" > < /td>
        < td
    id = "LC5671"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5672"
class
    = "blob-num js-line-number"
    data - line - number = "5672" > < /td>
        < td
    id = "LC5672"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( type in events ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5673"
class
    = "blob-num js-line-number"
    data - line - number = "5673" > < /td>
        < td
    id = "LC5673"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( i <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > 0 < /span>, l <span class="pl-k">=</s
    pan > events[type] < span
class
    = "pl-k" >
.<
    /span>length; i <span class="pl-k">&lt;</s
    pan > l;
    i < span
class
    = "pl-k" > ++ < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5674"
class
    = "blob-num js-line-number"
    data - line - number = "5674" > < /td>
        < td
    id = "LC5674"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>event<span class="pl-k">.</s
    pan > add(dest, type, events[type][i]);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5675"
class
    = "blob-num js-line-number"
    data - line - number = "5675" > < /td>
        < td
    id = "LC5675"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5676"
class
= "blob-num js-line-number"
data - line - number = "5676" > < /td>
    < td
id = "LC5676"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5677"
class
= "blob-num js-line-number"
data - line - number = "5677" > < /td>
    < td
id = "LC5677"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5678"
class
= "blob-num js-line-number"
data - line - number = "5678" > < /td>
    < td
id = "LC5678"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5679"
class
= "blob-num js-line-number"
data - line - number = "5679" > < /td>
    < td
id = "LC5679"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5680"
class
= "blob-num js-line-number"
data - line - number = "5680" > < /td>
    < td
id = "LC5680"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> 2. Copy user data</span></td>
    < /tr>
    < tr >
    < td
id = "L5681"
class
= "blob-num js-line-number"
data - line - number = "5681" > < /td>
    < td
id = "LC5681"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( dataUser<span class="pl-k">.</s
pan > hasData(src)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5682"
class
    = "blob-num js-line-number"
    data - line - number = "5682" > < /td>
        < td
    id = "LC5682"
class
    = "blob-code blob-code-inner js-file-line" > udataOld < span
class
    = "pl-k" >= < /span> dataUser<span class="pl-k">.</s
    pan > access(src);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5683"
class
    = "blob-num js-line-number"
    data - line - number = "5683" > < /td>
        < td
    id = "LC5683"
class
    = "blob-code blob-code-inner js-file-line" > udataCur < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > extend({}, udataOld);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5684"
class
    = "blob-num js-line-number"
    data - line - number = "5684" > < /td>
        < td
    id = "LC5684"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5685"
class
    = "blob-num js-line-number"
    data - line - number = "5685" > < /td>
        < td
    id = "LC5685"
class
    = "blob-code blob-code-inner js-file-line" > dataUser < span
class
    = "pl-k" >
.<
    /span>set( dest, udataCur );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5686"
class
    = "blob-num js-line-number"
    data - line - number = "5686" > < /td>
        < td
    id = "LC5686"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5687"
class
= "blob-num js-line-number"
data - line - number = "5687" > < /td>
    < td
id = "LC5687"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5688"
class
= "blob-num js-line-number"
data - line - number = "5688" > < /td>
    < td
id = "LC5688"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5689"
class
= "blob-num js-line-number"
data - line - number = "5689" > < /td>
    < td
id = "LC5689"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fix IE bugs, see support tests</span></td>
    < /tr>
    < tr >
    < td
id = "L5690"
class
= "blob-num js-line-number"
data - line - number = "5690" > < /td>
    < td
id = "LC5690"
class
= "blob-code blob-code-inner js-file-line" > function fixInput(src, dest) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5691"
class
    = "blob-num js-line-number"
    data - line - number = "5691" > < /td>
        < td
    id = "LC5691"
class
    = "blob-code blob-code-inner js-file-line" >
    var nodeName
<
    span
class
    = "pl-k" >= < /span> dest<span class="pl-k">.</s
    pan > nodeName < span
class
    = "pl-k" >
.<
    /span>toLowerCase();</
    td >
    < /tr>
    < tr >
    < td
    id = "L5692"
class
    = "blob-num js-line-number"
    data - line - number = "5692" > < /td>
        < td
    id = "LC5692"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5693"
class
    = "blob-num js-line-number"
    data - line - number = "5693" > < /td>
        < td
    id = "LC5693"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Fails to persist the checked state of a cloned checkbox or radio button.</span></td>
        < /tr>
        < tr >
        < td
    id = "L5694"
class
    = "blob-num js-line-number"
    data - line - number = "5694" > < /td>
        < td
    id = "LC5694"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( nodeName <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>input<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > rcheckableType < span
class
    = "pl-k" >
.<
    /span>test( src<span class="pl-k">.</s
    pan > type
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5695"
class
    = "blob-num js-line-number"
    data - line - number = "5695" > < /td>
        < td
    id = "LC5695"
class
    = "blob-code blob-code-inner js-file-line" > dest < span
class
    = "pl-k" >
.<
    /span>checked <span class="pl-k">=</s
    pan > src < span
class
    = "pl-k" >
.<
    /span>checked;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5696"
class
    = "blob-num js-line-number"
    data - line - number = "5696" > < /td>
        < td
    id = "LC5696"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5697"
class
    = "blob-num js-line-number"
    data - line - number = "5697" > < /td>
        < td
    id = "LC5697"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Fails to return the selected option to the default selected state when cloning options</span></td>
        < /tr>
        < tr >
        < td
    id = "L5698"
class
    = "blob-num js-line-number"
    data - line - number = "5698" > < /td>
        < td
    id = "LC5698"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (nodeName < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > input < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > || < /span> nodeName <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>textarea<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5699"
class
= "blob-num js-line-number"
data - line - number = "5699" > < /td>
    < td
id = "LC5699"
class
= "blob-code blob-code-inner js-file-line" > dest < span
class
= "pl-k" >
.<
/span>defaultValue <span class="pl-k">=</s
pan > src < span
class
= "pl-k" >
.<
/span>defaultValue;</
td >
< /tr>
< tr >
< td
id = "L5700"
class
= "blob-num js-line-number"
data - line - number = "5700" > < /td>
    < td
id = "LC5700"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5701"
class
= "blob-num js-line-number"
data - line - number = "5701" > < /td>
    < td
id = "LC5701"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5702"
class
= "blob-num js-line-number"
data - line - number = "5702" > < /td>
    < td
id = "LC5702"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5703"
class
= "blob-num js-line-number"
data - line - number = "5703" > < /td>
    < td
id = "LC5703"
class
= "blob-code blob-code-inner js-file-line" > function domManip(collection, args, callback, ignored) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5704"
class
    = "blob-num js-line-number"
    data - line - number = "5704" > < /td>
        < td
    id = "LC5704"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5705"
class
    = "blob-num js-line-number"
    data - line - number = "5705" > < /td>
        < td
    id = "LC5705"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Flatten any nested arrays</span></td>
        < /tr>
        < tr >
        < td
    id = "L5706"
class
    = "blob-num js-line-number"
    data - line - number = "5706" > < /td>
        < td
    id = "LC5706"
class
    = "blob-code blob-code-inner js-file-line" > args < span
class
    = "pl-k" >= < /span> concat<span class="pl-k">.</s
    pan > apply([], args);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5707"
class
    = "blob-num js-line-number"
    data - line - number = "5707" > < /td>
        < td
    id = "LC5707"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5708"
class
    = "blob-num js-line-number"
    data - line - number = "5708" > < /td>
        < td
    id = "LC5708"
class
    = "blob-code blob-code-inner js-file-line" >
    var fragment, first, scripts, hasScripts, node, doc, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L5709"
class
    = "blob-num js-line-number"
    data - line - number = "5709" > < /td>
        < td
    id = "LC5709"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5710"
class
    = "blob-num js-line-number"
    data - line - number = "5710" > < /td>
        < td
    id = "LC5710"
class
    = "blob-code blob-code-inner js-file-line" > l < span
class
    = "pl-k" >= < /span> collection<span class="pl-k">.</s
    pan > length,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5711"
class
    = "blob-num js-line-number"
    data - line - number = "5711" > < /td>
        < td
    id = "LC5711"
class
    = "blob-code blob-code-inner js-file-line" > iNoClone < span
class
    = "pl-k" >= < /span> l <span class="pl-k">-</s
    pan > < span
class
    = "pl-c1" > 1 < /span>,</
    td >
    < /tr>
    < tr >
    < td
    id = "L5712"
class
    = "blob-num js-line-number"
    data - line - number = "5712" > < /td>
        < td
    id = "LC5712"
class
    = "blob-code blob-code-inner js-file-line" > value < span
class
    = "pl-k" >= < /span> args[ <span class="pl-c1">0</span> ],</
    td >
    < /tr>
    < tr >
    < td
    id = "L5713"
class
    = "blob-num js-line-number"
    data - line - number = "5713" > < /td>
        < td
    id = "LC5713"
class
    = "blob-code blob-code-inner js-file-line" > isFunction < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > isFunction(value);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5714"
class
    = "blob-num js-line-number"
    data - line - number = "5714" > < /td>
        < td
    id = "LC5714"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5715"
class
    = "blob-num js-line-number"
    data - line - number = "5715" > < /td>
        < td
    id = "LC5715"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> We can&#39;t cloneNode fragments that contain checked, in WebKit</span></td>
        < /tr>
        < tr >
        < td
    id = "L5716"
class
    = "blob-num js-line-number"
    data - line - number = "5716" > < /td>
        < td
    id = "LC5716"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( isFunction <span class="pl-k">||</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L5717"
class
    = "blob-num js-line-number"
    data - line - number = "5717" > < /td>
        < td
    id = "LC5717"
class
    = "blob-code blob-code-inner js-file-line" > (l < span
class
    = "pl-k" > &gt; < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> typeof value <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>string<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L5718"
class
    = "blob-num js-line-number"
    data - line - number = "5718" > < /td>
        < td
    id = "LC5718"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" > ! < /span>support<span class="pl-k">.</s
    pan > checkClone < span
class
    = "pl-k" > &amp;&amp; < /span> rchecked<span class="pl-k">.</s
    pan > test(value)
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5719"
class
    = "blob-num js-line-number"
    data - line - number = "5719" > < /td>
        < td
    id = "LC5719"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> collection<span class="pl-k">.</s
    pan > each(function (index) {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L5720"
        class
            = "blob-num js-line-number"
            data - line - number = "5720" > < /td>
                < td
            id = "LC5720"
        class
            = "blob-code blob-code-inner js-file-line" >
            var self
        <
            span
        class
            = "pl-k" >= < /span> collection<span class="pl-k">.</s
            pan > eq(index);
        <
            /td>
            < /tr>
            < tr >
            < td
            id = "L5721"
        class
            = "blob-num js-line-number"
            data - line - number = "5721" > < /td>
                < td
            id = "LC5721"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-k" >
            if<
            /span> ( isFunction ) {</
            td >
            < /tr>
            < tr >
            < td
            id = "L5722"
        class
            = "blob-num js-line-number"
            data - line - number = "5722" > < /td>
                < td
            id = "LC5722"
        class
            = "blob-code blob-code-inner js-file-line" > args[ < span
        class
            = "pl-c1" > 0 < /span> ] <span class="pl-k">=</s
            pan > value < span
        class
            = "pl-k" >
        .<
            /span>call( <span class="pl-c1">this</s
            pan >, index, self < span
        class
            = "pl-k" >
        .<
            /span>html() );</
            td >
            < /tr>
            < tr >
            < td
            id = "L5723"
        class
            = "blob-num js-line-number"
            data - line - number = "5723" > < /td>
                < td
            id = "LC5723"
        class
            = "blob-code blob-code-inner js-file-line" >
        } < /td>
        < /tr>
        < tr >
        < td
    id = "L5724"
class
    = "blob-num js-line-number"
    data - line - number = "5724" > < /td>
        < td
    id = "LC5724"
class
    = "blob-code blob-code-inner js-file-line" > domManip(self, args, callback, ignored);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5725"
class
    = "blob-num js-line-number"
    data - line - number = "5725" > < /td>
        < td
    id = "LC5725"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5726"
class
= "blob-num js-line-number"
data - line - number = "5726" > < /td>
    < td
id = "LC5726"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5727"
class
= "blob-num js-line-number"
data - line - number = "5727" > < /td>
    < td
id = "LC5727"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5728"
class
= "blob-num js-line-number"
data - line - number = "5728" > < /td>
    < td
id = "LC5728"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( l ) {</
td >
< /tr>
< tr >
< td
id = "L5729"
class
= "blob-num js-line-number"
data - line - number = "5729" > < /td>
    < td
id = "LC5729"
class
= "blob-code blob-code-inner js-file-line" > fragment < span
class
= "pl-k" >= < /span> buildFragment( args, collection[ <span class="pl-c1">0</span> ]<span class="pl-k">.</s
pan > ownerDocument,
<
span
class
= "pl-c1" > false < /span>, collection, ignored );</
td >
< /tr>
< tr >
< td
id = "L5730"
class
= "blob-num js-line-number"
data - line - number = "5730" > < /td>
    < td
id = "LC5730"
class
= "blob-code blob-code-inner js-file-line" > first < span
class
= "pl-k" >= < /span> fragment<span class="pl-k">.</s
pan > firstChild;
<
/td>
< /tr>
< tr >
< td
id = "L5731"
class
= "blob-num js-line-number"
data - line - number = "5731" > < /td>
    < td
id = "LC5731"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5732"
class
= "blob-num js-line-number"
data - line - number = "5732" > < /td>
    < td
id = "LC5732"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fragment<span class="pl-k">.</s
pan > childNodes < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 1 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5733"
class
= "blob-num js-line-number"
data - line - number = "5733" > < /td>
    < td
id = "LC5733"
class
= "blob-code blob-code-inner js-file-line" > fragment < span
class
= "pl-k" >= < /span> first;</
td >
< /tr>
< tr >
< td
id = "L5734"
class
= "blob-num js-line-number"
data - line - number = "5734" > < /td>
    < td
id = "LC5734"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5735"
class
= "blob-num js-line-number"
data - line - number = "5735" > < /td>
    < td
id = "LC5735"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5736"
class
= "blob-num js-line-number"
data - line - number = "5736" > < /td>
    < td
id = "LC5736"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Require either new content or an interest in ignored elements to invoke the callback</span></td>
    < /tr>
    < tr >
    < td
id = "L5737"
class
= "blob-num js-line-number"
data - line - number = "5737" > < /td>
    < td
id = "LC5737"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( first <span class="pl-k">||</s
pan > ignored
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5738"
class
    = "blob-num js-line-number"
    data - line - number = "5738" > < /td>
        < td
    id = "LC5738"
class
    = "blob-code blob-code-inner js-file-line" > scripts < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > map(getAll(fragment, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>script<span class="pl-pds">&quot;</s
    pan > < /span> ), disableScript );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5739"
class
    = "blob-num js-line-number"
    data - line - number = "5739" > < /td>
        < td
    id = "LC5739"
class
    = "blob-code blob-code-inner js-file-line" > hasScripts < span
class
    = "pl-k" >= < /span> scripts<span class="pl-k">.</s
    pan > length;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5740"
class
    = "blob-num js-line-number"
    data - line - number = "5740" > < /td>
        < td
    id = "LC5740"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5741"
class
    = "blob-num js-line-number"
    data - line - number = "5741" > < /td>
        < td
    id = "LC5741"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Use the original fragment for the last item</span></td>
        < /tr>
        < tr >
        < td
    id = "L5742"
class
    = "blob-num js-line-number"
    data - line - number = "5742" > < /td>
        < td
    id = "LC5742"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> instead of the first because it can end up</span></td>
        < /tr>
        < tr >
        < td
    id = "L5743"
class
    = "blob-num js-line-number"
    data - line - number = "5743" > < /td>
        < td
    id = "LC5743"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> being emptied incorrectly in certain situations (#8070).</span></td>
        < /tr>
        < tr >
        < td
    id = "L5744"
class
    = "blob-num js-line-number"
    data - line - number = "5744" > < /td>
        < td
    id = "LC5744"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; i <span class="pl-k">&lt;</s
    pan > l;
    i < span
class
    = "pl-k" > ++ < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5745"
class
    = "blob-num js-line-number"
    data - line - number = "5745" > < /td>
        < td
    id = "LC5745"
class
    = "blob-code blob-code-inner js-file-line" > node < span
class
    = "pl-k" >= < /span> fragment;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5746"
class
    = "blob-num js-line-number"
    data - line - number = "5746" > < /td>
        < td
    id = "LC5746"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5747"
class
    = "blob-num js-line-number"
    data - line - number = "5747" > < /td>
        < td
    id = "LC5747"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( i <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> iNoClone ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5748"
class
    = "blob-num js-line-number"
    data - line - number = "5748" > < /td>
        < td
    id = "LC5748"
class
    = "blob-code blob-code-inner js-file-line" > node < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > clone(node, < span
class
    = "pl-c1" > true < /span>, <span class="pl-c1">true</s
    pan >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5749"
class
    = "blob-num js-line-number"
    data - line - number = "5749" > < /td>
        < td
    id = "LC5749"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5750"
class
    = "blob-num js-line-number"
    data - line - number = "5750" > < /td>
        < td
    id = "LC5750"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Keep references to cloned scripts for later restoration</span></td>
        < /tr>
        < tr >
        < td
    id = "L5751"
class
    = "blob-num js-line-number"
    data - line - number = "5751" > < /td>
        < td
    id = "LC5751"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( hasScripts ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5752"
class
    = "blob-num js-line-number"
    data - line - number = "5752" > < /td>
        < td
    id = "LC5752"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5753"
class
    = "blob-num js-line-number"
    data - line - number = "5753" > < /td>
        < td
    id = "LC5753"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: Android &lt;=4.0 only, PhantomJS 1 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L5754"
class
    = "blob-num js-line-number"
    data - line - number = "5754" > < /td>
        < td
    id = "LC5754"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> push.apply(_, arraylike) throws on ancient WebKit</span></td>
        < /tr>
        < tr >
        < td
    id = "L5755"
class
    = "blob-num js-line-number"
    data - line - number = "5755" > < /td>
        < td
    id = "LC5755"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>merge( scripts, getAll( node, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > script < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) )
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5756"
class
    = "blob-num js-line-number"
    data - line - number = "5756" > < /td>
        < td
    id = "LC5756"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5757"
class
= "blob-num js-line-number"
data - line - number = "5757" > < /td>
    < td
id = "LC5757"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5758"
class
= "blob-num js-line-number"
data - line - number = "5758" > < /td>
    < td
id = "LC5758"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5759"
class
= "blob-num js-line-number"
data - line - number = "5759" > < /td>
    < td
id = "LC5759"
class
= "blob-code blob-code-inner js-file-line" > callback < span
class
= "pl-k" >
.<
/span>call( collection[ i ], node, i );</
td >
< /tr>
< tr >
< td
id = "L5760"
class
= "blob-num js-line-number"
data - line - number = "5760" > < /td>
    < td
id = "LC5760"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5761"
class
= "blob-num js-line-number"
data - line - number = "5761" > < /td>
    < td
id = "LC5761"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5762"
class
= "blob-num js-line-number"
data - line - number = "5762" > < /td>
    < td
id = "LC5762"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hasScripts ) {</
td >
< /tr>
< tr >
< td
id = "L5763"
class
= "blob-num js-line-number"
data - line - number = "5763" > < /td>
    < td
id = "LC5763"
class
= "blob-code blob-code-inner js-file-line" > doc < span
class
= "pl-k" >= < /span> scripts[ scripts<span class="pl-k">.</span>length <span class="pl-k">-</span> <span class="pl-c1">1</span> ]<span class="pl-k">.</s
pan > ownerDocument;
<
/td>
< /tr>
< tr >
< td
id = "L5764"
class
= "blob-num js-line-number"
data - line - number = "5764" > < /td>
    < td
id = "LC5764"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5765"
class
= "blob-num js-line-number"
data - line - number = "5765" > < /td>
    < td
id = "LC5765"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Reenable scripts</span></td>
    < /tr>
    < tr >
    < td
id = "L5766"
class
= "blob-num js-line-number"
data - line - number = "5766" > < /td>
    < td
id = "LC5766"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>map( scripts, restoreScript );</
td >
< /tr>
< tr >
< td
id = "L5767"
class
= "blob-num js-line-number"
data - line - number = "5767" > < /td>
    < td
id = "LC5767"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5768"
class
= "blob-num js-line-number"
data - line - number = "5768" > < /td>
    < td
id = "LC5768"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Evaluate executable scripts on first document insertion</span></td>
    < /tr>
    < tr >
    < td
id = "L5769"
class
= "blob-num js-line-number"
data - line - number = "5769" > < /td>
    < td
id = "LC5769"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 0 < /span>; i <span class="pl-k">&lt;</s
pan > hasScripts;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5770"
class
= "blob-num js-line-number"
data - line - number = "5770" > < /td>
    < td
id = "LC5770"
class
= "blob-code blob-code-inner js-file-line" > node < span
class
= "pl-k" >= < /span> scripts[ i ];</
td >
< /tr>
< tr >
< td
id = "L5771"
class
= "blob-num js-line-number"
data - line - number = "5771" > < /td>
    < td
id = "LC5771"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( rscriptType<span class="pl-k">.</s
pan > test(node < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5772"
class
= "blob-num js-line-number"
data - line - number = "5772" > < /td>
    < td
id = "LC5772"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>dataPriv<span class="pl-k">.</s
pan > access(node, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>globalEval<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5773"
class
= "blob-num js-line-number"
data - line - number = "5773" > < /td>
    < td
id = "LC5773"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>contains( doc, node ) ) {</
td >
< /tr>
< tr >
< td
id = "L5774"
class
= "blob-num js-line-number"
data - line - number = "5774" > < /td>
    < td
id = "LC5774"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5775"
class
= "blob-num js-line-number"
data - line - number = "5775" > < /td>
    < td
id = "LC5775"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( node<span class="pl-k">.</s
pan > src
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5776"
class
    = "blob-num js-line-number"
    data - line - number = "5776" > < /td>
        < td
    id = "LC5776"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5777"
class
    = "blob-num js-line-number"
    data - line - number = "5777" > < /td>
        < td
    id = "LC5777"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Optional AJAX dependency, but won&#39;t run scripts if not present</span></td>
        < /tr>
        < tr >
        < td
    id = "L5778"
class
    = "blob-num js-line-number"
    data - line - number = "5778" > < /td>
        < td
    id = "LC5778"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > _evalUrl
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5779"
class
    = "blob-num js-line-number"
    data - line - number = "5779" > < /td>
        < td
    id = "LC5779"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>_evalUrl( node<span class="pl-k">.</s
    pan > src
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5780"
class
= "blob-num js-line-number"
data - line - number = "5780" > < /td>
    < td
id = "LC5780"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5781"
class
= "blob-num js-line-number"
data - line - number = "5781" > < /td>
    < td
id = "LC5781"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5782"
class
= "blob-num js-line-number"
data - line - number = "5782" > < /td>
    < td
id = "LC5782"
class
= "blob-code blob-code-inner js-file-line" > DOMEval(node < span
class
= "pl-k" >
.<
/span>textContent<span class="pl-k">.</s
pan > replace(rcleanScript, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> ), doc );</
td >
< /tr>
< tr >
< td
id = "L5783"
class
= "blob-num js-line-number"
data - line - number = "5783" > < /td>
    < td
id = "LC5783"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5784"
class
= "blob-num js-line-number"
data - line - number = "5784" > < /td>
    < td
id = "LC5784"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5785"
class
= "blob-num js-line-number"
data - line - number = "5785" > < /td>
    < td
id = "LC5785"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5786"
class
= "blob-num js-line-number"
data - line - number = "5786" > < /td>
    < td
id = "LC5786"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5787"
class
= "blob-num js-line-number"
data - line - number = "5787" > < /td>
    < td
id = "LC5787"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5788"
class
= "blob-num js-line-number"
data - line - number = "5788" > < /td>
    < td
id = "LC5788"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5789"
class
= "blob-num js-line-number"
data - line - number = "5789" > < /td>
    < td
id = "LC5789"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5790"
class
= "blob-num js-line-number"
data - line - number = "5790" > < /td>
    < td
id = "LC5790"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> collection;</
td >
< /tr>
< tr >
< td
id = "L5791"
class
= "blob-num js-line-number"
data - line - number = "5791" > < /td>
    < td
id = "LC5791"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5792"
class
= "blob-num js-line-number"
data - line - number = "5792" > < /td>
    < td
id = "LC5792"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5793"
class
= "blob-num js-line-number"
data - line - number = "5793" > < /td>
    < td
id = "LC5793"
class
= "blob-code blob-code-inner js-file-line" > function remove(elem, selector, keepData) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5794"
class
    = "blob-num js-line-number"
    data - line - number = "5794" > < /td>
        < td
    id = "LC5794"
class
    = "blob-code blob-code-inner js-file-line" >
    var node, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L5795"
class
    = "blob-num js-line-number"
    data - line - number = "5795" > < /td>
        < td
    id = "LC5795"
class
    = "blob-code blob-code-inner js-file-line" > nodes < span
class
    = "pl-k" >= < /span> selector <span class="pl-k">?</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>filter( selector, elem ) <span class="pl-k">:</s
    pan > elem,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5796"
class
    = "blob-num js-line-number"
    data - line - number = "5796" > < /td>
        < td
    id = "LC5796"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5797"
class
    = "blob-num js-line-number"
    data - line - number = "5797" > < /td>
        < td
    id = "LC5797"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5798"
class
    = "blob-num js-line-number"
    data - line - number = "5798" > < /td>
        < td
    id = "LC5798"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; ( node <span class="pl-k">=</s
    pan > nodes[i]
) < span
class
= "pl-k" > != < /span> <span class="pl-c1">null</s
pan >;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5799"
class
= "blob-num js-line-number"
data - line - number = "5799" > < /td>
    < td
id = "LC5799"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > keepData < span
class
= "pl-k" > &amp;&amp; < /span> node<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5800"
class
    = "blob-num js-line-number"
    data - line - number = "5800" > < /td>
        < td
    id = "LC5800"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>cleanData( getAll( node ) );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5801"
class
    = "blob-num js-line-number"
    data - line - number = "5801" > < /td>
        < td
    id = "LC5801"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5802"
class
= "blob-num js-line-number"
data - line - number = "5802" > < /td>
    < td
id = "LC5802"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5803"
class
= "blob-num js-line-number"
data - line - number = "5803" > < /td>
    < td
id = "LC5803"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( node<span class="pl-k">.</s
pan > parentNode
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5804"
class
    = "blob-num js-line-number"
    data - line - number = "5804" > < /td>
        < td
    id = "LC5804"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( keepData <span class="pl-k">&amp;&amp;</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>contains( node<span class="pl-k">.</s
    pan > ownerDocument, node
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5805"
class
    = "blob-num js-line-number"
    data - line - number = "5805" > < /td>
        < td
    id = "LC5805"
class
    = "blob-code blob-code-inner js-file-line" > setGlobalEval(getAll(node, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>script<span class="pl-pds">&quot;</s
    pan > < /span> ) );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5806"
class
    = "blob-num js-line-number"
    data - line - number = "5806" > < /td>
        < td
    id = "LC5806"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5807"
class
= "blob-num js-line-number"
data - line - number = "5807" > < /td>
    < td
id = "LC5807"
class
= "blob-code blob-code-inner js-file-line" > node < span
class
= "pl-k" >
.<
/span>parentNode<span class="pl-k">.</s
pan > removeChild(node);
<
/td>
< /tr>
< tr >
< td
id = "L5808"
class
= "blob-num js-line-number"
data - line - number = "5808" > < /td>
    < td
id = "LC5808"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5809"
class
= "blob-num js-line-number"
data - line - number = "5809" > < /td>
    < td
id = "LC5809"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5810"
class
= "blob-num js-line-number"
data - line - number = "5810" > < /td>
    < td
id = "LC5810"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5811"
class
= "blob-num js-line-number"
data - line - number = "5811" > < /td>
    < td
id = "LC5811"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem;</
td >
< /tr>
< tr >
< td
id = "L5812"
class
= "blob-num js-line-number"
data - line - number = "5812" > < /td>
    < td
id = "LC5812"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5813"
class
= "blob-num js-line-number"
data - line - number = "5813" > < /td>
    < td
id = "LC5813"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5814"
class
= "blob-num js-line-number"
data - line - number = "5814" > < /td>
    < td
id = "LC5814"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L5815"
class
= "blob-num js-line-number"
data - line - number = "5815" > < /td>
    < td
id = "LC5815"
class
= "blob-code blob-code-inner js-file-line" > htmlPrefilter < span
class
= "pl-k" >
:<
/span> function( html ) {</
td >
< /tr>
< tr >
< td
id = "L5816"
class
= "blob-num js-line-number"
data - line - number = "5816" > < /td>
    < td
id = "LC5816"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> html<span class="pl-k">.</s
pan > replace(rxhtmlTag, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>&lt;$1&gt;&lt;/
$2 &gt; < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5817"
class
= "blob-num js-line-number"
data - line - number = "5817" > < /td>
    < td
id = "LC5817"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5818"
class
= "blob-num js-line-number"
data - line - number = "5818" > < /td>
    < td
id = "LC5818"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5819"
class
= "blob-num js-line-number"
data - line - number = "5819" > < /td>
    < td
id = "LC5819"
class
= "blob-code blob-code-inner js-file-line" > clone < span
class
= "pl-k" >
:<
/span> function( elem, dataAndEvents, deepDataAndEvents ) {</
td >
< /tr>
< tr >
< td
id = "L5820"
class
= "blob-num js-line-number"
data - line - number = "5820" > < /td>
    < td
id = "LC5820"
class
= "blob-code blob-code-inner js-file-line" >
var i, l, srcElements, destElements, <
/td>
< /tr>
< tr >
< td
id = "L5821"
class
= "blob-num js-line-number"
data - line - number = "5821" > < /td>
    < td
id = "LC5821"
class
= "blob-code blob-code-inner js-file-line" > clone < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > cloneNode( < span
class
= "pl-c1" > true < /span> ),</
td >
< /tr>
< tr >
< td
id = "L5822"
class
= "blob-num js-line-number"
data - line - number = "5822" > < /td>
    < td
id = "LC5822"
class
= "blob-code blob-code-inner js-file-line" > inPage < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > contains(elem < span
class
= "pl-k" >
.<
/span>ownerDocument, elem );</
td >
< /tr>
< tr >
< td
id = "L5823"
class
= "blob-num js-line-number"
data - line - number = "5823" > < /td>
    < td
id = "LC5823"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5824"
class
= "blob-num js-line-number"
data - line - number = "5824" > < /td>
    < td
id = "LC5824"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fix IE cloning issues</span></td>
    < /tr>
    < tr >
    < td
id = "L5825"
class
= "blob-num js-line-number"
data - line - number = "5825" > < /td>
    < td
id = "LC5825"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>noCloneChecked <span class="pl-k">&amp;&amp;</s
pan > (elem < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">||</s
pan > elem < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 11 < /span> ) <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L5826"
class
= "blob-num js-line-number"
data - line - number = "5826" > < /td>
    < td
id = "LC5826"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>jQuery<span class="pl-k">.</s
pan > isXMLDoc(elem)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5827"
class
    = "blob-num js-line-number"
    data - line - number = "5827" > < /td>
        < td
    id = "LC5827"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5828"
class
    = "blob-num js-line-number"
    data - line - number = "5828" > < /td>
        < td
    id = "LC5828"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2</span></td>
        < /tr>
        < tr >
        < td
    id = "L5829"
class
    = "blob-num js-line-number"
    data - line - number = "5829" > < /td>
        < td
    id = "LC5829"
class
    = "blob-code blob-code-inner js-file-line" > destElements < span
class
    = "pl-k" >= < /span> getAll( clone );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5830"
class
    = "blob-num js-line-number"
    data - line - number = "5830" > < /td>
        < td
    id = "LC5830"
class
    = "blob-code blob-code-inner js-file-line" > srcElements < span
class
    = "pl-k" >= < /span> getAll( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5831"
class
    = "blob-num js-line-number"
    data - line - number = "5831" > < /td>
        < td
    id = "LC5831"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5832"
class
    = "blob-num js-line-number"
    data - line - number = "5832" > < /td>
        < td
    id = "LC5832"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( i <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > 0 < /span>, l <span class="pl-k">=</s
    pan > srcElements < span
class
    = "pl-k" >
.<
    /span>length; i <span class="pl-k">&lt;</s
    pan > l;
    i < span
class
    = "pl-k" > ++ < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5833"
class
    = "blob-num js-line-number"
    data - line - number = "5833" > < /td>
        < td
    id = "LC5833"
class
    = "blob-code blob-code-inner js-file-line" > fixInput(srcElements[i], destElements[i]);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5834"
class
    = "blob-num js-line-number"
    data - line - number = "5834" > < /td>
        < td
    id = "LC5834"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5835"
class
= "blob-num js-line-number"
data - line - number = "5835" > < /td>
    < td
id = "LC5835"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5836"
class
= "blob-num js-line-number"
data - line - number = "5836" > < /td>
    < td
id = "LC5836"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5837"
class
= "blob-num js-line-number"
data - line - number = "5837" > < /td>
    < td
id = "LC5837"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Copy the events from the original to the clone</span></td>
    < /tr>
    < tr >
    < td
id = "L5838"
class
= "blob-num js-line-number"
data - line - number = "5838" > < /td>
    < td
id = "LC5838"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( dataAndEvents ) {</
td >
< /tr>
< tr >
< td
id = "L5839"
class
= "blob-num js-line-number"
data - line - number = "5839" > < /td>
    < td
id = "LC5839"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( deepDataAndEvents ) {</
td >
< /tr>
< tr >
< td
id = "L5840"
class
= "blob-num js-line-number"
data - line - number = "5840" > < /td>
    < td
id = "LC5840"
class
= "blob-code blob-code-inner js-file-line" > srcElements < span
class
= "pl-k" >= < /span> srcElements <span class="pl-k">||</s
pan > getAll(elem);
<
/td>
< /tr>
< tr >
< td
id = "L5841"
class
= "blob-num js-line-number"
data - line - number = "5841" > < /td>
    < td
id = "LC5841"
class
= "blob-code blob-code-inner js-file-line" > destElements < span
class
= "pl-k" >= < /span> destElements <span class="pl-k">||</s
pan > getAll(clone);
<
/td>
< /tr>
< tr >
< td
id = "L5842"
class
= "blob-num js-line-number"
data - line - number = "5842" > < /td>
    < td
id = "LC5842"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5843"
class
= "blob-num js-line-number"
data - line - number = "5843" > < /td>
    < td
id = "LC5843"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 0 < /span>, l <span class="pl-k">=</s
pan > srcElements < span
class
= "pl-k" >
.<
/span>length; i <span class="pl-k">&lt;</s
pan > l;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5844"
class
= "blob-num js-line-number"
data - line - number = "5844" > < /td>
    < td
id = "LC5844"
class
= "blob-code blob-code-inner js-file-line" > cloneCopyEvent(srcElements[i], destElements[i]);
<
/td>
< /tr>
< tr >
< td
id = "L5845"
class
= "blob-num js-line-number"
data - line - number = "5845" > < /td>
    < td
id = "LC5845"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5846"
class
= "blob-num js-line-number"
data - line - number = "5846" > < /td>
    < td
id = "LC5846"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5847"
class
= "blob-num js-line-number"
data - line - number = "5847" > < /td>
    < td
id = "LC5847"
class
= "blob-code blob-code-inner js-file-line" > cloneCopyEvent(elem, clone);
<
/td>
< /tr>
< tr >
< td
id = "L5848"
class
= "blob-num js-line-number"
data - line - number = "5848" > < /td>
    < td
id = "LC5848"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5849"
class
= "blob-num js-line-number"
data - line - number = "5849" > < /td>
    < td
id = "LC5849"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5850"
class
= "blob-num js-line-number"
data - line - number = "5850" > < /td>
    < td
id = "LC5850"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5851"
class
= "blob-num js-line-number"
data - line - number = "5851" > < /td>
    < td
id = "LC5851"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Preserve script evaluation history</span></td>
    < /tr>
    < tr >
    < td
id = "L5852"
class
= "blob-num js-line-number"
data - line - number = "5852" > < /td>
    < td
id = "LC5852"
class
= "blob-code blob-code-inner js-file-line" > destElements < span
class
= "pl-k" >= < /span> getAll( clone, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > script < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5853"
class
= "blob-num js-line-number"
data - line - number = "5853" > < /td>
    < td
id = "LC5853"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( destElements<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">0</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5854"
class
    = "blob-num js-line-number"
    data - line - number = "5854" > < /td>
        < td
    id = "LC5854"
class
    = "blob-code blob-code-inner js-file-line" > setGlobalEval(destElements, < span
class
    = "pl-k" > ! < /span>inPage <span class="pl-k">&amp;&amp;</s
    pan > getAll(elem, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>script<span class="pl-pds">&quot;</s
    pan > < /span> ) );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5855"
class
    = "blob-num js-line-number"
    data - line - number = "5855" > < /td>
        < td
    id = "LC5855"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5856"
class
= "blob-num js-line-number"
data - line - number = "5856" > < /td>
    < td
id = "LC5856"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5857"
class
= "blob-num js-line-number"
data - line - number = "5857" > < /td>
    < td
id = "LC5857"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return the cloned set</span></td>
    < /tr>
    < tr >
    < td
id = "L5858"
class
= "blob-num js-line-number"
data - line - number = "5858" > < /td>
    < td
id = "LC5858"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> clone;</
td >
< /tr>
< tr >
< td
id = "L5859"
class
= "blob-num js-line-number"
data - line - number = "5859" > < /td>
    < td
id = "LC5859"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5860"
class
= "blob-num js-line-number"
data - line - number = "5860" > < /td>
    < td
id = "LC5860"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5861"
class
= "blob-num js-line-number"
data - line - number = "5861" > < /td>
    < td
id = "LC5861"
class
= "blob-code blob-code-inner js-file-line" > cleanData < span
class
= "pl-k" >
:<
/span> function( elems ) {</
td >
< /tr>
< tr >
< td
id = "L5862"
class
= "blob-num js-line-number"
data - line - number = "5862" > < /td>
    < td
id = "LC5862"
class
= "blob-code blob-code-inner js-file-line" >
var data, elem, type, <
/td>
< /tr>
< tr >
< td
id = "L5863"
class
= "blob-num js-line-number"
data - line - number = "5863" > < /td>
    < td
id = "LC5863"
class
= "blob-code blob-code-inner js-file-line" > special < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" >
.<
/span>special,</
td >
< /tr>
< tr >
< td
id = "L5864"
class
= "blob-num js-line-number"
data - line - number = "5864" > < /td>
    < td
id = "LC5864"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5865"
class
= "blob-num js-line-number"
data - line - number = "5865" > < /td>
    < td
id = "LC5865"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5866"
class
= "blob-num js-line-number"
data - line - number = "5866" > < /td>
    < td
id = "LC5866"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; ( elem <span class="pl-k">=</s
pan > elems[i]
) <
span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5867"
class
= "blob-num js-line-number"
data - line - number = "5867" > < /td>
    < td
id = "LC5867"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( acceptData( elem ) ) {</
td >
< /tr>
< tr >
< td
id = "L5868"
class
= "blob-num js-line-number"
data - line - number = "5868" > < /td>
    < td
id = "LC5868"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ( data <span class="pl-k">=</s
pan > elem[dataPriv < span
class
= "pl-k" >
.<
/span>expando ] ) ) {</
td >
< /tr>
< tr >
< td
id = "L5869"
class
= "blob-num js-line-number"
data - line - number = "5869" > < /td>
    < td
id = "LC5869"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( data<span class="pl-k">.</s
pan > events
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5870"
class
    = "blob-num js-line-number"
    data - line - number = "5870" > < /td>
        < td
    id = "LC5870"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( type in data<span class="pl-k">.</s
    pan > events
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5871"
class
    = "blob-num js-line-number"
    data - line - number = "5871" > < /td>
        < td
    id = "LC5871"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( special[ type ] ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5872"
class
    = "blob-num js-line-number"
    data - line - number = "5872" > < /td>
        < td
    id = "LC5872"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>event<span class="pl-k">.</s
    pan > remove(elem, type);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5873"
class
    = "blob-num js-line-number"
    data - line - number = "5873" > < /td>
        < td
    id = "LC5873"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5874"
class
    = "blob-num js-line-number"
    data - line - number = "5874" > < /td>
        < td
    id = "LC5874"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> This is a shortcut to avoid jQuery.event.remove&#39;s overhead</span></td>
        < /tr>
        < tr >
        < td
    id = "L5875"
class
    = "blob-num js-line-number"
    data - line - number = "5875" > < /td>
        < td
    id = "LC5875"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L5876"
class
= "blob-num js-line-number"
data - line - number = "5876" > < /td>
    < td
id = "LC5876"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>removeEvent( elem, type, data<span class="pl-k">.</s
pan > handle
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5877"
class
= "blob-num js-line-number"
data - line - number = "5877" > < /td>
    < td
id = "LC5877"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5878"
class
= "blob-num js-line-number"
data - line - number = "5878" > < /td>
    < td
id = "LC5878"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5879"
class
= "blob-num js-line-number"
data - line - number = "5879" > < /td>
    < td
id = "LC5879"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5880"
class
= "blob-num js-line-number"
data - line - number = "5880" > < /td>
    < td
id = "LC5880"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5881"
class
= "blob-num js-line-number"
data - line - number = "5881" > < /td>
    < td
id = "LC5881"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Chrome &lt;=35 - 45+</span></td>
    < /tr>
    < tr >
    < td
id = "L5882"
class
= "blob-num js-line-number"
data - line - number = "5882" > < /td>
    < td
id = "LC5882"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Assign undefined instead of using delete, see Data#remove</span></td>
    < /tr>
    < tr >
    < td
id = "L5883"
class
= "blob-num js-line-number"
data - line - number = "5883" > < /td>
    < td
id = "LC5883"
class
= "blob-code blob-code-inner js-file-line" > elem[dataPriv < span
class
= "pl-k" >
.<
/span>expando ] <span class="pl-k">=</s
pan > undefined;
<
/td>
< /tr>
< tr >
< td
id = "L5884"
class
= "blob-num js-line-number"
data - line - number = "5884" > < /td>
    < td
id = "LC5884"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5885"
class
= "blob-num js-line-number"
data - line - number = "5885" > < /td>
    < td
id = "LC5885"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem[ dataUser<span class="pl-k">.</span>expando ] ) {</
td >
< /tr>
< tr >
< td
id = "L5886"
class
= "blob-num js-line-number"
data - line - number = "5886" > < /td>
    < td
id = "LC5886"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5887"
class
= "blob-num js-line-number"
data - line - number = "5887" > < /td>
    < td
id = "LC5887"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Chrome &lt;=35 - 45+</span></td>
    < /tr>
    < tr >
    < td
id = "L5888"
class
= "blob-num js-line-number"
data - line - number = "5888" > < /td>
    < td
id = "LC5888"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Assign undefined instead of using delete, see Data#remove</span></td>
    < /tr>
    < tr >
    < td
id = "L5889"
class
= "blob-num js-line-number"
data - line - number = "5889" > < /td>
    < td
id = "LC5889"
class
= "blob-code blob-code-inner js-file-line" > elem[dataUser < span
class
= "pl-k" >
.<
/span>expando ] <span class="pl-k">=</s
pan > undefined;
<
/td>
< /tr>
< tr >
< td
id = "L5890"
class
= "blob-num js-line-number"
data - line - number = "5890" > < /td>
    < td
id = "LC5890"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5891"
class
= "blob-num js-line-number"
data - line - number = "5891" > < /td>
    < td
id = "LC5891"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5892"
class
= "blob-num js-line-number"
data - line - number = "5892" > < /td>
    < td
id = "LC5892"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5893"
class
= "blob-num js-line-number"
data - line - number = "5893" > < /td>
    < td
id = "LC5893"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5894"
class
= "blob-num js-line-number"
data - line - number = "5894" > < /td>
    < td
id = "LC5894"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5895"
class
= "blob-num js-line-number"
data - line - number = "5895" > < /td>
    < td
id = "LC5895"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5896"
class
= "blob-num js-line-number"
data - line - number = "5896" > < /td>
    < td
id = "LC5896"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L5897"
class
= "blob-num js-line-number"
data - line - number = "5897" > < /td>
    < td
id = "LC5897"
class
= "blob-code blob-code-inner js-file-line" > detach < span
class
= "pl-k" >
:<
/span> function( selector ) {</
td >
< /tr>
< tr >
< td
id = "L5898"
class
= "blob-num js-line-number"
data - line - number = "5898" > < /td>
    < td
id = "LC5898"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> remove( <span class="pl-c1">this</s
pan >, selector,
<
span
class
= "pl-c1" > true < /span> );</
td >
< /tr>
< tr >
< td
id = "L5899"
class
= "blob-num js-line-number"
data - line - number = "5899" > < /td>
    < td
id = "LC5899"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5900"
class
= "blob-num js-line-number"
data - line - number = "5900" > < /td>
    < td
id = "LC5900"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5901"
class
= "blob-num js-line-number"
data - line - number = "5901" > < /td>
    < td
id = "LC5901"
class
= "blob-code blob-code-inner js-file-line" > remove < span
class
= "pl-k" >
:<
/span> function( selector ) {</
td >
< /tr>
< tr >
< td
id = "L5902"
class
= "blob-num js-line-number"
data - line - number = "5902" > < /td>
    < td
id = "LC5902"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> remove( <span class="pl-c1">this</s
pan >, selector
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5903"
class
= "blob-num js-line-number"
data - line - number = "5903" > < /td>
    < td
id = "LC5903"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5904"
class
= "blob-num js-line-number"
data - line - number = "5904" > < /td>
    < td
id = "LC5904"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5905"
class
= "blob-num js-line-number"
data - line - number = "5905" > < /td>
    < td
id = "LC5905"
class
= "blob-code blob-code-inner js-file-line" > text < span
class
= "pl-k" >
:<
/span> function( value ) {</
td >
< /tr>
< tr >
< td
id = "L5906"
class
= "blob-num js-line-number"
data - line - number = "5906" > < /td>
    < td
id = "LC5906"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> access( <span class="pl-c1">this</s
pan >, function (value) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5907"
class
    = "blob-num js-line-number"
    data - line - number = "5907" > < /td>
        < td
    id = "LC5907"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> value <span class="pl-k">===</s
    pan > undefined < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L5908"
class
    = "blob-num js-line-number"
    data - line - number = "5908" > < /td>
        < td
    id = "LC5908"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>text( <span class="pl-c1">this</s
    pan >
) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L5909"
class
= "blob-num js-line-number"
data - line - number = "5909" > < /td>
    < td
id = "LC5909"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > empty() < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L5910"
class
= "blob-num js-line-number"
data - line - number = "5910" > < /td>
    < td
id = "LC5910"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">11</s
pan > < span
class
= "pl-k" > || < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 9 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L5911"
class
= "blob-num js-line-number"
data - line - number = "5911" > < /td>
    < td
id = "LC5911"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > textContent < span
class
= "pl-k" >= < /span> value;</
td >
< /tr>
< tr >
< td
id = "L5912"
class
= "blob-num js-line-number"
data - line - number = "5912" > < /td>
    < td
id = "LC5912"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5913"
class
= "blob-num js-line-number"
data - line - number = "5913" > < /td>
    < td
id = "LC5913"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5914"
class
= "blob-num js-line-number"
data - line - number = "5914" > < /td>
    < td
id = "LC5914"
class
= "blob-code blob-code-inner js-file-line" >
}, <
span
class
= "pl-c1" > null < /span>, value, arguments<span class="pl-k">.</s
pan > length
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5915"
class
= "blob-num js-line-number"
data - line - number = "5915" > < /td>
    < td
id = "LC5915"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5916"
class
= "blob-num js-line-number"
data - line - number = "5916" > < /td>
    < td
id = "LC5916"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5917"
class
= "blob-num js-line-number"
data - line - number = "5917" > < /td>
    < td
id = "LC5917"
class
= "blob-code blob-code-inner js-file-line" > append < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5918"
class
= "blob-num js-line-number"
data - line - number = "5918" > < /td>
    < td
id = "LC5918"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> domManip( <span class="pl-c1">this</s
pan >, arguments, function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5919"
class
    = "blob-num js-line-number"
    data - line - number = "5919" > < /td>
        < td
    id = "LC5919"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>nodeType <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 1 < /span> <span class="pl-k">||</s
    pan > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">11</s
    pan > < span
class
    = "pl-k" > || < /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>nodeType <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 9 < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5920"
class
    = "blob-num js-line-number"
    data - line - number = "5920" > < /td>
        < td
    id = "LC5920"
class
    = "blob-code blob-code-inner js-file-line" >
    var target
<
    span
class
    = "pl-k" >= < /span> manipulationTarget( <span class="pl-c1">this</s
    pan >, elem
);
<
/td>
< /tr>
< tr >
< td
id = "L5921"
class
= "blob-num js-line-number"
data - line - number = "5921" > < /td>
    < td
id = "LC5921"
class
= "blob-code blob-code-inner js-file-line" > target < span
class
= "pl-k" >
.<
/span>appendChild( elem );</
td >
< /tr>
< tr >
< td
id = "L5922"
class
= "blob-num js-line-number"
data - line - number = "5922" > < /td>
    < td
id = "LC5922"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5923"
class
= "blob-num js-line-number"
data - line - number = "5923" > < /td>
    < td
id = "LC5923"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5924"
class
= "blob-num js-line-number"
data - line - number = "5924" > < /td>
    < td
id = "LC5924"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5925"
class
= "blob-num js-line-number"
data - line - number = "5925" > < /td>
    < td
id = "LC5925"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5926"
class
= "blob-num js-line-number"
data - line - number = "5926" > < /td>
    < td
id = "LC5926"
class
= "blob-code blob-code-inner js-file-line" > prepend < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5927"
class
= "blob-num js-line-number"
data - line - number = "5927" > < /td>
    < td
id = "LC5927"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> domManip( <span class="pl-c1">this</s
pan >, arguments, function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5928"
class
    = "blob-num js-line-number"
    data - line - number = "5928" > < /td>
        < td
    id = "LC5928"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>nodeType <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 1 < /span> <span class="pl-k">||</s
    pan > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">11</s
    pan > < span
class
    = "pl-k" > || < /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>nodeType <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > 9 < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5929"
class
    = "blob-num js-line-number"
    data - line - number = "5929" > < /td>
        < td
    id = "LC5929"
class
    = "blob-code blob-code-inner js-file-line" >
    var target
<
    span
class
    = "pl-k" >= < /span> manipulationTarget( <span class="pl-c1">this</s
    pan >, elem
);
<
/td>
< /tr>
< tr >
< td
id = "L5930"
class
= "blob-num js-line-number"
data - line - number = "5930" > < /td>
    < td
id = "LC5930"
class
= "blob-code blob-code-inner js-file-line" > target < span
class
= "pl-k" >
.<
/span>insertBefore( elem, target<span class="pl-k">.</s
pan > firstChild
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5931"
class
= "blob-num js-line-number"
data - line - number = "5931" > < /td>
    < td
id = "LC5931"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5932"
class
= "blob-num js-line-number"
data - line - number = "5932" > < /td>
    < td
id = "LC5932"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5933"
class
= "blob-num js-line-number"
data - line - number = "5933" > < /td>
    < td
id = "LC5933"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5934"
class
= "blob-num js-line-number"
data - line - number = "5934" > < /td>
    < td
id = "LC5934"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5935"
class
= "blob-num js-line-number"
data - line - number = "5935" > < /td>
    < td
id = "LC5935"
class
= "blob-code blob-code-inner js-file-line" > before < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5936"
class
= "blob-num js-line-number"
data - line - number = "5936" > < /td>
    < td
id = "LC5936"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> domManip( <span class="pl-c1">this</s
pan >, arguments, function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5937"
class
    = "blob-num js-line-number"
    data - line - number = "5937" > < /td>
        < td
    id = "LC5937"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>parentNode ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5938"
class
    = "blob-num js-line-number"
    data - line - number = "5938" > < /td>
        < td
    id = "LC5938"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > parentNode < span
class
    = "pl-k" >
.<
    /span>insertBefore( elem, <span class="pl-c1">this</s
    pan >
);
<
/td>
< /tr>
< tr >
< td
id = "L5939"
class
= "blob-num js-line-number"
data - line - number = "5939" > < /td>
    < td
id = "LC5939"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5940"
class
= "blob-num js-line-number"
data - line - number = "5940" > < /td>
    < td
id = "LC5940"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5941"
class
= "blob-num js-line-number"
data - line - number = "5941" > < /td>
    < td
id = "LC5941"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5942"
class
= "blob-num js-line-number"
data - line - number = "5942" > < /td>
    < td
id = "LC5942"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5943"
class
= "blob-num js-line-number"
data - line - number = "5943" > < /td>
    < td
id = "LC5943"
class
= "blob-code blob-code-inner js-file-line" > after < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5944"
class
= "blob-num js-line-number"
data - line - number = "5944" > < /td>
    < td
id = "LC5944"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> domManip( <span class="pl-c1">this</s
pan >, arguments, function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5945"
class
    = "blob-num js-line-number"
    data - line - number = "5945" > < /td>
        < td
    id = "LC5945"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>parentNode ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5946"
class
    = "blob-num js-line-number"
    data - line - number = "5946" > < /td>
        < td
    id = "LC5946"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > parentNode < span
class
    = "pl-k" >
.<
    /span>insertBefore( elem, <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>nextSibling );</
    td >
    < /tr>
    < tr >
    < td
    id = "L5947"
class
    = "blob-num js-line-number"
    data - line - number = "5947" > < /td>
        < td
    id = "LC5947"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L5948"
class
= "blob-num js-line-number"
data - line - number = "5948" > < /td>
    < td
id = "LC5948"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5949"
class
= "blob-num js-line-number"
data - line - number = "5949" > < /td>
    < td
id = "LC5949"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5950"
class
= "blob-num js-line-number"
data - line - number = "5950" > < /td>
    < td
id = "LC5950"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5951"
class
= "blob-num js-line-number"
data - line - number = "5951" > < /td>
    < td
id = "LC5951"
class
= "blob-code blob-code-inner js-file-line" > empty < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L5952"
class
= "blob-num js-line-number"
data - line - number = "5952" > < /td>
    < td
id = "LC5952"
class
= "blob-code blob-code-inner js-file-line" >
var elem, <
/td>
< /tr>
< tr >
< td
id = "L5953"
class
= "blob-num js-line-number"
data - line - number = "5953" > < /td>
    < td
id = "LC5953"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5954"
class
= "blob-num js-line-number"
data - line - number = "5954" > < /td>
    < td
id = "LC5954"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5955"
class
= "blob-num js-line-number"
data - line - number = "5955" > < /td>
    < td
id = "LC5955"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; ( elem <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > this < /span>[ i ] ) <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span>; i<span class="pl-k">++</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5956"
class
    = "blob-num js-line-number"
    data - line - number = "5956" > < /td>
        < td
    id = "LC5956"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5957"
class
    = "blob-num js-line-number"
    data - line - number = "5957" > < /td>
        < td
    id = "LC5957"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5958"
class
    = "blob-num js-line-number"
    data - line - number = "5958" > < /td>
        < td
    id = "LC5958"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Prevent memory leaks</span></td>
        < /tr>
        < tr >
        < td
    id = "L5959"
class
    = "blob-num js-line-number"
    data - line - number = "5959" > < /td>
        < td
    id = "LC5959"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>cleanData( getAll( elem, <span class="pl-c1">false</s
    pan >
)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L5960"
class
= "blob-num js-line-number"
data - line - number = "5960" > < /td>
    < td
id = "LC5960"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5961"
class
= "blob-num js-line-number"
data - line - number = "5961" > < /td>
    < td
id = "LC5961"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove any remaining nodes</span></td>
    < /tr>
    < tr >
    < td
id = "L5962"
class
= "blob-num js-line-number"
data - line - number = "5962" > < /td>
    < td
id = "LC5962"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>textContent <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L5963"
class
= "blob-num js-line-number"
data - line - number = "5963" > < /td>
    < td
id = "LC5963"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5964"
class
= "blob-num js-line-number"
data - line - number = "5964" > < /td>
    < td
id = "LC5964"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L5965"
class
= "blob-num js-line-number"
data - line - number = "5965" > < /td>
    < td
id = "LC5965"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5966"
class
= "blob-num js-line-number"
data - line - number = "5966" > < /td>
    < td
id = "LC5966"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L5967"
class
= "blob-num js-line-number"
data - line - number = "5967" > < /td>
    < td
id = "LC5967"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5968"
class
= "blob-num js-line-number"
data - line - number = "5968" > < /td>
    < td
id = "LC5968"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5969"
class
= "blob-num js-line-number"
data - line - number = "5969" > < /td>
    < td
id = "LC5969"
class
= "blob-code blob-code-inner js-file-line" > clone < span
class
= "pl-k" >
:<
/span> function( dataAndEvents, deepDataAndEvents ) {</
td >
< /tr>
< tr >
< td
id = "L5970"
class
= "blob-num js-line-number"
data - line - number = "5970" > < /td>
    < td
id = "LC5970"
class
= "blob-code blob-code-inner js-file-line" > dataAndEvents < span
class
= "pl-k" >= < /span> dataAndEvents <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > false < /span> <span class="pl-k">:</s
pan > dataAndEvents;
<
/td>
< /tr>
< tr >
< td
id = "L5971"
class
= "blob-num js-line-number"
data - line - number = "5971" > < /td>
    < td
id = "LC5971"
class
= "blob-code blob-code-inner js-file-line" > deepDataAndEvents < span
class
= "pl-k" >= < /span> deepDataAndEvents <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > dataAndEvents < span
class
= "pl-k" >
:<
/span> deepDataAndEvents;</
td >
< /tr>
< tr >
< td
id = "L5972"
class
= "blob-num js-line-number"
data - line - number = "5972" > < /td>
    < td
id = "LC5972"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5973"
class
= "blob-num js-line-number"
data - line - number = "5973" > < /td>
    < td
id = "LC5973"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>map( function() {</
td >
< /tr>
< tr >
< td
id = "L5974"
class
= "blob-num js-line-number"
data - line - number = "5974" > < /td>
    < td
id = "LC5974"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > clone( < span
class
= "pl-c1" > this < /span>, dataAndEvents, deepDataAndEvents );</
td >
< /tr>
< tr >
< td
id = "L5975"
class
= "blob-num js-line-number"
data - line - number = "5975" > < /td>
    < td
id = "LC5975"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L5976"
class
= "blob-num js-line-number"
data - line - number = "5976" > < /td>
    < td
id = "LC5976"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L5977"
class
= "blob-num js-line-number"
data - line - number = "5977" > < /td>
    < td
id = "LC5977"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5978"
class
= "blob-num js-line-number"
data - line - number = "5978" > < /td>
    < td
id = "LC5978"
class
= "blob-code blob-code-inner js-file-line" > html < span
class
= "pl-k" >
:<
/span> function( value ) {</
td >
< /tr>
< tr >
< td
id = "L5979"
class
= "blob-num js-line-number"
data - line - number = "5979" > < /td>
    < td
id = "LC5979"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> access( <span class="pl-c1">this</s
pan >, function (value) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5980"
class
    = "blob-num js-line-number"
    data - line - number = "5980" > < /td>
        < td
    id = "LC5980"
class
    = "blob-code blob-code-inner js-file-line" >
    var elem
<
    span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan > [ < span
class
    = "pl-c1" > 0 < /span> ] <span class="pl-k">||</s
    pan > {},
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5981"
class
    = "blob-num js-line-number"
    data - line - number = "5981" > < /td>
        < td
    id = "LC5981"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5982"
class
    = "blob-num js-line-number"
    data - line - number = "5982" > < /td>
        < td
    id = "LC5982"
class
    = "blob-code blob-code-inner js-file-line" > l < span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>length;</
    td >
    < /tr>
    < tr >
    < td
    id = "L5983"
class
    = "blob-num js-line-number"
    data - line - number = "5983" > < /td>
        < td
    id = "LC5983"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5984"
class
    = "blob-num js-line-number"
    data - line - number = "5984" > < /td>
        < td
    id = "LC5984"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( value <span class="pl-k">===</s
    pan > undefined < span
class
    = "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5985"
class
    = "blob-num js-line-number"
    data - line - number = "5985" > < /td>
        < td
    id = "LC5985"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem<span class="pl-k">.</s
    pan > innerHTML;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5986"
class
    = "blob-num js-line-number"
    data - line - number = "5986" > < /td>
        < td
    id = "LC5986"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L5987"
class
= "blob-num js-line-number"
data - line - number = "5987" > < /td>
    < td
id = "LC5987"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L5988"
class
= "blob-num js-line-number"
data - line - number = "5988" > < /td>
    < td
id = "LC5988"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> See if we can take a shortcut and just use innerHTML</span></td>
    < /tr>
    < tr >
    < td
id = "L5989"
class
= "blob-num js-line-number"
data - line - number = "5989" > < /td>
    < td
id = "LC5989"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof value <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>rnoInnerhtml<span class="pl-k">.</s
pan > test(value) < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L5990"
class
= "blob-num js-line-number"
data - line - number = "5990" > < /td>
    < td
id = "LC5990"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>wrapMap[ ( rtagName<span class="pl-k">.</span>exec( value ) <span class="pl-k">||</span> [ <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> ] )[ <span class="pl-c1">1</span> ]<span class="pl-k">.</s
pan > toLowerCase()
] )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5991"
class
    = "blob-num js-line-number"
    data - line - number = "5991" > < /td>
        < td
    id = "LC5991"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5992"
class
    = "blob-num js-line-number"
    data - line - number = "5992" > < /td>
        < td
    id = "LC5992"
class
    = "blob-code blob-code-inner js-file-line" > value < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > htmlPrefilter(value);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L5993"
class
    = "blob-num js-line-number"
    data - line - number = "5993" > < /td>
        < td
    id = "LC5993"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5994"
class
    = "blob-num js-line-number"
    data - line - number = "5994" > < /td>
        < td
    id = "LC5994"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    try
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5995"
class
    = "blob-num js-line-number"
    data - line - number = "5995" > < /td>
        < td
    id = "LC5995"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; i <span class="pl-k">&lt;</s
    pan > l;
    i < span
class
    = "pl-k" > ++ < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L5996"
class
    = "blob-num js-line-number"
    data - line - number = "5996" > < /td>
        < td
    id = "LC5996"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan > [i] < span
class
    = "pl-k" > || < /span> {};</
    td >
    < /tr>
    < tr >
    < td
    id = "L5997"
class
    = "blob-num js-line-number"
    data - line - number = "5997" > < /td>
        < td
    id = "LC5997"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L5998"
class
    = "blob-num js-line-number"
    data - line - number = "5998" > < /td>
        < td
    id = "LC5998"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Remove element nodes and prevent memory leaks</span></td>
        < /tr>
        < tr >
        < td
    id = "L5999"
class
    = "blob-num js-line-number"
    data - line - number = "5999" > < /td>
        < td
    id = "LC5999"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6000"
class
    = "blob-num js-line-number"
    data - line - number = "6000" > < /td>
        < td
    id = "LC6000"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>cleanData( getAll( elem, <span class="pl-c1">false</s
    pan >
)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6001"
class
= "blob-num js-line-number"
data - line - number = "6001" > < /td>
    < td
id = "LC6001"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>innerHTML <span class="pl-k">=</s
pan > value;
<
/td>
< /tr>
< tr >
< td
id = "L6002"
class
= "blob-num js-line-number"
data - line - number = "6002" > < /td>
    < td
id = "LC6002"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6003"
class
= "blob-num js-line-number"
data - line - number = "6003" > < /td>
    < td
id = "LC6003"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6004"
class
= "blob-num js-line-number"
data - line - number = "6004" > < /td>
    < td
id = "LC6004"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6005"
class
= "blob-num js-line-number"
data - line - number = "6005" > < /td>
    < td
id = "LC6005"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6006"
class
= "blob-num js-line-number"
data - line - number = "6006" > < /td>
    < td
id = "LC6006"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6007"
class
= "blob-num js-line-number"
data - line - number = "6007" > < /td>
    < td
id = "LC6007"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If using innerHTML throws an exception, use the fallback method</span></td>
    < /tr>
    < tr >
    < td
id = "L6008"
class
= "blob-num js-line-number"
data - line - number = "6008" > < /td>
    < td
id = "LC6008"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> ( e ) {}</
td >
< /tr>
< tr >
< td
id = "L6009"
class
= "blob-num js-line-number"
data - line - number = "6009" > < /td>
    < td
id = "LC6009"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6010"
class
= "blob-num js-line-number"
data - line - number = "6010" > < /td>
    < td
id = "LC6010"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6011"
class
= "blob-num js-line-number"
data - line - number = "6011" > < /td>
    < td
id = "LC6011"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem ) {</
td >
< /tr>
< tr >
< td
id = "L6012"
class
= "blob-num js-line-number"
data - line - number = "6012" > < /td>
    < td
id = "LC6012"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > empty() < span
class
= "pl-k" >
.<
/span>append( value );</
td >
< /tr>
< tr >
< td
id = "L6013"
class
= "blob-num js-line-number"
data - line - number = "6013" > < /td>
    < td
id = "LC6013"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6014"
class
= "blob-num js-line-number"
data - line - number = "6014" > < /td>
    < td
id = "LC6014"
class
= "blob-code blob-code-inner js-file-line" >
}, <
span
class
= "pl-c1" > null < /span>, value, arguments<span class="pl-k">.</s
pan > length
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6015"
class
= "blob-num js-line-number"
data - line - number = "6015" > < /td>
    < td
id = "LC6015"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6016"
class
= "blob-num js-line-number"
data - line - number = "6016" > < /td>
    < td
id = "LC6016"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6017"
class
= "blob-num js-line-number"
data - line - number = "6017" > < /td>
    < td
id = "LC6017"
class
= "blob-code blob-code-inner js-file-line" > replaceWith < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L6018"
class
= "blob-num js-line-number"
data - line - number = "6018" > < /td>
    < td
id = "LC6018"
class
= "blob-code blob-code-inner js-file-line" >
var ignored
<
span
class
= "pl-k" >= < /span> [];</
td >
< /tr>
< tr >
< td
id = "L6019"
class
= "blob-num js-line-number"
data - line - number = "6019" > < /td>
    < td
id = "LC6019"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6020"
class
= "blob-num js-line-number"
data - line - number = "6020" > < /td>
    < td
id = "LC6020"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make the changes, replacing each non-ignored context element with the new content</span></td>
    < /tr>
    < tr >
    < td
id = "L6021"
class
= "blob-num js-line-number"
data - line - number = "6021" > < /td>
    < td
id = "LC6021"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> domManip( <span class="pl-c1">this</s
pan >, arguments, function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6022"
class
    = "blob-num js-line-number"
    data - line - number = "6022" > < /td>
        < td
    id = "LC6022"
class
    = "blob-code blob-code-inner js-file-line" >
    var parent
<
    span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>parentNode;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6023"
class
    = "blob-num js-line-number"
    data - line - number = "6023" > < /td>
        < td
    id = "LC6023"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6024"
class
    = "blob-num js-line-number"
    data - line - number = "6024" > < /td>
        < td
    id = "LC6024"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > inArray( < span
class
    = "pl-c1" > this < /span>, ignored ) <span class="pl-k">&lt;</s
    pan > < span
class
    = "pl-c1" > 0 < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6025"
class
    = "blob-num js-line-number"
    data - line - number = "6025" > < /td>
        < td
    id = "LC6025"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>cleanData( getAll( <span class="pl-c1">this</s
    pan >
) );
<
/td>
< /tr>
< tr >
< td
id = "L6026"
class
= "blob-num js-line-number"
data - line - number = "6026" > < /td>
    < td
id = "LC6026"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( parent ) {</
td >
< /tr>
< tr >
< td
id = "L6027"
class
= "blob-num js-line-number"
data - line - number = "6027" > < /td>
    < td
id = "LC6027"
class
= "blob-code blob-code-inner js-file-line" > parent < span
class
= "pl-k" >
.<
/span>replaceChild( elem, <span class="pl-c1">this</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6028"
class
= "blob-num js-line-number"
data - line - number = "6028" > < /td>
    < td
id = "LC6028"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6029"
class
= "blob-num js-line-number"
data - line - number = "6029" > < /td>
    < td
id = "LC6029"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6030"
class
= "blob-num js-line-number"
data - line - number = "6030" > < /td>
    < td
id = "LC6030"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6031"
class
= "blob-num js-line-number"
data - line - number = "6031" > < /td>
    < td
id = "LC6031"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Force callback invocation</span></td>
    < /tr>
    < tr >
    < td
id = "L6032"
class
= "blob-num js-line-number"
data - line - number = "6032" > < /td>
    < td
id = "LC6032"
class
= "blob-code blob-code-inner js-file-line" >
},
ignored
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6033"
class
= "blob-num js-line-number"
data - line - number = "6033" > < /td>
    < td
id = "LC6033"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6034"
class
= "blob-num js-line-number"
data - line - number = "6034" > < /td>
    < td
id = "LC6034"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6035"
class
= "blob-num js-line-number"
data - line - number = "6035" > < /td>
    < td
id = "LC6035"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6036"
class
= "blob-num js-line-number"
data - line - number = "6036" > < /td>
    < td
id = "LC6036"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( {</
td >
< /tr>
< tr >
< td
id = "L6037"
class
= "blob-num js-line-number"
data - line - number = "6037" > < /td>
    < td
id = "LC6037"
class
= "blob-code blob-code-inner js-file-line" > appendTo < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > append < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L6038"
class
= "blob-num js-line-number"
data - line - number = "6038" > < /td>
    < td
id = "LC6038"
class
= "blob-code blob-code-inner js-file-line" > prependTo < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > prepend < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L6039"
class
= "blob-num js-line-number"
data - line - number = "6039" > < /td>
    < td
id = "LC6039"
class
= "blob-code blob-code-inner js-file-line" > insertBefore < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > before < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L6040"
class
= "blob-num js-line-number"
data - line - number = "6040" > < /td>
    < td
id = "LC6040"
class
= "blob-code blob-code-inner js-file-line" > insertAfter < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > after < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L6041"
class
= "blob-num js-line-number"
data - line - number = "6041" > < /td>
    < td
id = "LC6041"
class
= "blob-code blob-code-inner js-file-line" > replaceAll < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > replaceWith < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L6042"
class
= "blob-num js-line-number"
data - line - number = "6042" > < /td>
    < td
id = "LC6042"
class
= "blob-code blob-code-inner js-file-line" >
},

function (name, original) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6043"
class
    = "blob-num js-line-number"
    data - line - number = "6043" > < /td>
        < td
    id = "LC6043"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>fn[ name ] <span class="pl-k">=</s
    pan > function (selector) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6044"
    class
        = "blob-num js-line-number"
        data - line - number = "6044" > < /td>
            < td
        id = "LC6044"
    class
        = "blob-code blob-code-inner js-file-line" >
        var elems, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6045"
    class
        = "blob-num js-line-number"
        data - line - number = "6045" > < /td>
            < td
        id = "LC6045"
    class
        = "blob-code blob-code-inner js-file-line" > ret < span
    class
        = "pl-k" >= < /span> [],</
        td >
        < /tr>
        < tr >
        < td
        id = "L6046"
    class
        = "blob-num js-line-number"
        data - line - number = "6046" > < /td>
            < td
        id = "LC6046"
    class
        = "blob-code blob-code-inner js-file-line" > insert < span
    class
        = "pl-k" >= < /span> jQuery( selector ),</
        td >
        < /tr>
        < tr >
        < td
        id = "L6047"
    class
        = "blob-num js-line-number"
        data - line - number = "6047" > < /td>
            < td
        id = "LC6047"
    class
        = "blob-code blob-code-inner js-file-line" > last < span
    class
        = "pl-k" >= < /span> insert<span class="pl-k">.</s
        pan > length < span
    class
        = "pl-k" > - < /span> <span class="pl-c1">1</s
        pan >,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6048"
    class
        = "blob-num js-line-number"
        data - line - number = "6048" > < /td>
            < td
        id = "LC6048"
    class
        = "blob-code blob-code-inner js-file-line" > i < span
    class
        = "pl-k" >= < /span> <span class="pl-c1">0</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6049"
    class
        = "blob-num js-line-number"
        data - line - number = "6049" > < /td>
            < td
        id = "LC6049"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6050"
    class
        = "blob-num js-line-number"
        data - line - number = "6050" > < /td>
            < td
        id = "LC6050"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        for<
        /span> ( ; i <span class="pl-k">&lt;=</s
        pan > last;
        i < span
    class
        = "pl-k" > ++ < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6051"
    class
        = "blob-num js-line-number"
        data - line - number = "6051" > < /td>
            < td
        id = "LC6051"
    class
        = "blob-code blob-code-inner js-file-line" > elems < span
    class
        = "pl-k" >= < /span> i <span class="pl-k">===</s
        pan > last < span
    class
        = "pl-k" > ?
    <
        /span> <span class="pl-c1">this</s
        pan > < span
    class
        = "pl-k" >
    :<
        /span> <span class="pl-c1">this</s
        pan > < span
    class
        = "pl-k" >
    .<
        /span>clone( <span class="pl-c1">true</s
        pan >
    );
<
/td>
< /tr>
< tr >
< td
id = "L6052"
class
= "blob-num js-line-number"
data - line - number = "6052" > < /td>
    < td
id = "LC6052"
class
= "blob-code blob-code-inner js-file-line" > jQuery(insert[i])[original](elems);
<
/td>
< /tr>
< tr >
< td
id = "L6053"
class
= "blob-num js-line-number"
data - line - number = "6053" > < /td>
    < td
id = "LC6053"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6054"
class
= "blob-num js-line-number"
data - line - number = "6054" > < /td>
    < td
id = "LC6054"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android &lt;=4.0 only, PhantomJS 1 only</span></td>
    < /tr>
    < tr >
    < td
id = "L6055"
class
= "blob-num js-line-number"
data - line - number = "6055" > < /td>
    < td
id = "LC6055"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> .get() because push.apply(_, arraylike) throws on ancient WebKit</span></td>
    < /tr>
    < tr >
    < td
id = "L6056"
class
= "blob-num js-line-number"
data - line - number = "6056" > < /td>
    < td
id = "LC6056"
class
= "blob-code blob-code-inner js-file-line" > push < span
class
= "pl-k" >
.<
/span>apply( ret, elems<span class="pl-k">.</s
pan > get()
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6057"
class
= "blob-num js-line-number"
data - line - number = "6057" > < /td>
    < td
id = "LC6057"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6058"
class
= "blob-num js-line-number"
data - line - number = "6058" > < /td>
    < td
id = "LC6058"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6059"
class
= "blob-num js-line-number"
data - line - number = "6059" > < /td>
    < td
id = "LC6059"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>pushStack( ret );</
td >
< /tr>
< tr >
< td
id = "L6060"
class
= "blob-num js-line-number"
data - line - number = "6060" > < /td>
    < td
id = "LC6060"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L6061"
class
= "blob-num js-line-number"
data - line - number = "6061" > < /td>
    < td
id = "LC6061"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6062"
class
= "blob-num js-line-number"
data - line - number = "6062" > < /td>
    < td
id = "LC6062"
class
= "blob-code blob-code-inner js-file-line" >
var rmargin
<
span
class
= "pl-k" >= < /span> ( <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > margin < span
class
= "pl-k" > / < /span> );</
td >
< /tr>
< tr >
< td
id = "L6063"
class
= "blob-num js-line-number"
data - line - number = "6063" > < /td>
    < td
id = "LC6063"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6064"
class
= "blob-num js-line-number"
data - line - number = "6064" > < /td>
    < td
id = "LC6064"
class
= "blob-code blob-code-inner js-file-line" >
var rnumnonpx
<
span
class
= "pl-k" >= < /span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > RegExp < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ^ ( < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> pnum <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>)(?!px)[a-z%]+$<span class="pl-pds">&quot;</s
pan > < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > i < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6065"
class
= "blob-num js-line-number"
data - line - number = "6065" > < /td>
    < td
id = "LC6065"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6066"
class
= "blob-num js-line-number"
data - line - number = "6066" > < /td>
    < td
id = "LC6066"
class
= "blob-code blob-code-inner js-file-line" >
var getStyles
<
span
class
= "pl-k" >= < /span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L6067"
class
= "blob-num js-line-number"
data - line - number = "6067" > < /td>
    < td
id = "LC6067"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6068"
class
= "blob-num js-line-number"
data - line - number = "6068" > < /td>
    < td
id = "LC6068"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=11 only, Firefox &lt;=30 (#15098, #14150)</span></td>
    < /tr>
    < tr >
    < td
id = "L6069"
class
= "blob-num js-line-number"
data - line - number = "6069" > < /td>
    < td
id = "LC6069"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> IE throws on elements created in popups</span></td>
    < /tr>
    < tr >
    < td
id = "L6070"
class
= "blob-num js-line-number"
data - line - number = "6070" > < /td>
    < td
id = "LC6070"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> FF meanwhile throws on frame elements through &quot;defaultView.getComputedStyle&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L6071"
class
= "blob-num js-line-number"
data - line - number = "6071" > < /td>
    < td
id = "LC6071"
class
= "blob-code blob-code-inner js-file-line" >
var view
<
span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > ownerDocument < span
class
= "pl-k" >
.<
/span>defaultView;</
td >
< /tr>
< tr >
< td
id = "L6072"
class
= "blob-num js-line-number"
data - line - number = "6072" > < /td>
    < td
id = "LC6072"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6073"
class
= "blob-num js-line-number"
data - line - number = "6073" > < /td>
    < td
id = "LC6073"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > view < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > view < span
class
= "pl-k" >
.<
/span>opener ) {</
td >
< /tr>
< tr >
< td
id = "L6074"
class
= "blob-num js-line-number"
data - line - number = "6074" > < /td>
    < td
id = "LC6074"
class
= "blob-code blob-code-inner js-file-line" > view < span
class
= "pl-k" >= < /span> window;</
td >
< /tr>
< tr >
< td
id = "L6075"
class
= "blob-num js-line-number"
data - line - number = "6075" > < /td>
    < td
id = "LC6075"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6076"
class
= "blob-num js-line-number"
data - line - number = "6076" > < /td>
    < td
id = "LC6076"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6077"
class
= "blob-num js-line-number"
data - line - number = "6077" > < /td>
    < td
id = "LC6077"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> view<span class="pl-k">.</s
pan > getComputedStyle(elem);
<
/td>
< /tr>
< tr >
< td
id = "L6078"
class
= "blob-num js-line-number"
data - line - number = "6078" > < /td>
    < td
id = "LC6078"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L6079"
class
= "blob-num js-line-number"
data - line - number = "6079" > < /td>
    < td
id = "LC6079"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6080"
class
= "blob-num js-line-number"
data - line - number = "6080" > < /td>
    < td
id = "LC6080"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6081"
class
= "blob-num js-line-number"
data - line - number = "6081" > < /td>
    < td
id = "LC6081"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6082"
class
= "blob-num js-line-number"
data - line - number = "6082" > < /td>
    < td
id = "LC6082"
class
= "blob-code blob-code-inner js-file-line" > (function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6083"
class
    = "blob-num js-line-number"
    data - line - number = "6083" > < /td>
        < td
    id = "LC6083"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6084"
class
    = "blob-num js-line-number"
    data - line - number = "6084" > < /td>
        < td
    id = "LC6084"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Executing both pixelPosition &amp; boxSizingReliable tests require only one layout</span></td>
        < /tr>
        < tr >
        < td
    id = "L6085"
class
    = "blob-num js-line-number"
    data - line - number = "6085" > < /td>
        < td
    id = "LC6085"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> so they&#39;re executed at the same time to save the second computation.</span></td>
        < /tr>
        < tr >
        < td
    id = "L6086"
class
    = "blob-num js-line-number"
    data - line - number = "6086" > < /td>
        < td
    id = "LC6086"
class
    = "blob-code blob-code-inner js-file-line" > function computeStyleTests() {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6087"
    class
        = "blob-num js-line-number"
        data - line - number = "6087" > < /td>
            < td
        id = "LC6087"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6088"
    class
        = "blob-num js-line-number"
        data - line - number = "6088" > < /td>
            < td
        id = "LC6088"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> This is a singleton, we need to execute it only once</span></td>
            < /tr>
            < tr >
            < td
        id = "L6089"
    class
        = "blob-num js-line-number"
        data - line - number = "6089" > < /td>
            < td
        id = "LC6089"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( <span class="pl-k">!</s
        pan > div
    )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6090"
class
    = "blob-num js-line-number"
    data - line - number = "6090" > < /td>
        < td
    id = "LC6090"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6091"
class
    = "blob-num js-line-number"
    data - line - number = "6091" > < /td>
        < td
    id = "LC6091"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6092"
class
= "blob-num js-line-number"
data - line - number = "6092" > < /td>
    < td
id = "LC6092"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6093"
class
= "blob-num js-line-number"
data - line - number = "6093" > < /td>
    < td
id = "LC6093"
class
= "blob-code blob-code-inner js-file-line" > div < span
class
= "pl-k" >
.<
/span>style<span class="pl-k">.</s
pan > cssText < span
class
= "pl-k" >= < /span></
td >
< /tr>
< tr >
< td
id = "L6094"
class
= "blob-num js-line-number"
data - line - number = "6094" > < /td>
    < td
id = "LC6094"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>box-sizing:border-box;<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6095"
class
= "blob-num js-line-number"
data - line - number = "6095" > < /td>
    < td
id = "LC6095"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>position:relative;display:block;<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6096"
class
= "blob-num js-line-number"
data - line - number = "6096" > < /td>
    < td
id = "LC6096"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>margin:auto;border:1px;padding:1px;<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6097"
class
= "blob-num js-line-number"
data - line - number = "6097" > < /td>
    < td
id = "LC6097"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>top:1%;width:50%<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L6098"
class
= "blob-num js-line-number"
data - line - number = "6098" > < /td>
    < td
id = "LC6098"
class
= "blob-code blob-code-inner js-file-line" > div < span
class
= "pl-k" >
.<
/span>innerHTML <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L6099"
class
= "blob-num js-line-number"
data - line - number = "6099" > < /td>
    < td
id = "LC6099"
class
= "blob-code blob-code-inner js-file-line" > documentElement < span
class
= "pl-k" >
.<
/span>appendChild( container );</
td >
< /tr>
< tr >
< td
id = "L6100"
class
= "blob-num js-line-number"
data - line - number = "6100" > < /td>
    < td
id = "LC6100"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6101"
class
= "blob-num js-line-number"
data - line - number = "6101" > < /td>
    < td
id = "LC6101"
class
= "blob-code blob-code-inner js-file-line" >
var divStyle
<
span
class
= "pl-k" >= < /span> window<span class="pl-k">.</s
pan > getComputedStyle(div);
<
/td>
< /tr>
< tr >
< td
id = "L6102"
class
= "blob-num js-line-number"
data - line - number = "6102" > < /td>
    < td
id = "LC6102"
class
= "blob-code blob-code-inner js-file-line" > pixelPositionVal < span
class
= "pl-k" >= < /span> divStyle<span class="pl-k">.</s
pan > top < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>1%<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L6103"
class
= "blob-num js-line-number"
data - line - number = "6103" > < /td>
    < td
id = "LC6103"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6104"
class
= "blob-num js-line-number"
data - line - number = "6104" > < /td>
    < td
id = "LC6104"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android 4.0 - 4.3 only, Firefox &lt;=3 - 44</span></td>
    < /tr>
    < tr >
    < td
id = "L6105"
class
= "blob-num js-line-number"
data - line - number = "6105" > < /td>
    < td
id = "LC6105"
class
= "blob-code blob-code-inner js-file-line" > reliableMarginLeftVal < span
class
= "pl-k" >= < /span> divStyle<span class="pl-k">.</s
pan > marginLeft < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > 2
px < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6106"
class
= "blob-num js-line-number"
data - line - number = "6106" > < /td>
    < td
id = "LC6106"
class
= "blob-code blob-code-inner js-file-line" > boxSizingReliableVal < span
class
= "pl-k" >= < /span> divStyle<span class="pl-k">.</s
pan > width < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > 4
px < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6107"
class
= "blob-num js-line-number"
data - line - number = "6107" > < /td>
    < td
id = "LC6107"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6108"
class
= "blob-num js-line-number"
data - line - number = "6108" > < /td>
    < td
id = "LC6108"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android 4.0 - 4.3 only</span></td>
    < /tr>
    < tr >
    < td
id = "L6109"
class
= "blob-num js-line-number"
data - line - number = "6109" > < /td>
    < td
id = "LC6109"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Some styles come back with percentage values, even though they shouldn&#39;t</span></td>
    < /tr>
    < tr >
    < td
id = "L6110"
class
= "blob-num js-line-number"
data - line - number = "6110" > < /td>
    < td
id = "LC6110"
class
= "blob-code blob-code-inner js-file-line" > div < span
class
= "pl-k" >
.<
/span>style<span class="pl-k">.</s
pan > marginRight < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > 50 % < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6111"
class
= "blob-num js-line-number"
data - line - number = "6111" > < /td>
    < td
id = "LC6111"
class
= "blob-code blob-code-inner js-file-line" > pixelMarginRightVal < span
class
= "pl-k" >= < /span> divStyle<span class="pl-k">.</s
pan > marginRight < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > 4
px < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6112"
class
= "blob-num js-line-number"
data - line - number = "6112" > < /td>
    < td
id = "LC6112"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6113"
class
= "blob-num js-line-number"
data - line - number = "6113" > < /td>
    < td
id = "LC6113"
class
= "blob-code blob-code-inner js-file-line" > documentElement < span
class
= "pl-k" >
.<
/span>removeChild( container );</
td >
< /tr>
< tr >
< td
id = "L6114"
class
= "blob-num js-line-number"
data - line - number = "6114" > < /td>
    < td
id = "LC6114"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6115"
class
= "blob-num js-line-number"
data - line - number = "6115" > < /td>
    < td
id = "LC6115"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Nullify the div so it wouldn&#39;t be stored in the memory and</span></td>
    < /tr>
    < tr >
    < td
id = "L6116"
class
= "blob-num js-line-number"
data - line - number = "6116" > < /td>
    < td
id = "LC6116"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> it will also be a sign that checks already performed</span></td>
    < /tr>
    < tr >
    < td
id = "L6117"
class
= "blob-num js-line-number"
data - line - number = "6117" > < /td>
    < td
id = "LC6117"
class
= "blob-code blob-code-inner js-file-line" > div < span
class
= "pl-k" >= < /span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6118"
class
= "blob-num js-line-number"
data - line - number = "6118" > < /td>
    < td
id = "LC6118"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6119"
class
= "blob-num js-line-number"
data - line - number = "6119" > < /td>
    < td
id = "LC6119"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6120"
class
= "blob-num js-line-number"
data - line - number = "6120" > < /td>
    < td
id = "LC6120"
class
= "blob-code blob-code-inner js-file-line" >
var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal, <
/td>
< /tr>
< tr >
< td
id = "L6121"
class
= "blob-num js-line-number"
data - line - number = "6121" > < /td>
    < td
id = "LC6121"
class
= "blob-code blob-code-inner js-file-line" > container < span
class
= "pl-k" >= < /span> document<span class="pl-k">.</s
pan > createElement( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>div<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L6122"
class
= "blob-num js-line-number"
data - line - number = "6122" > < /td>
    < td
id = "LC6122"
class
= "blob-code blob-code-inner js-file-line" > div < span
class
= "pl-k" >= < /span> document<span class="pl-k">.</s
pan > createElement( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>div<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L6123"
class
= "blob-num js-line-number"
data - line - number = "6123" > < /td>
    < td
id = "LC6123"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6124"
class
= "blob-num js-line-number"
data - line - number = "6124" > < /td>
    < td
id = "LC6124"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Finish early in limited (non-browser) environments</span></td>
    < /tr>
    < tr >
    < td
id = "L6125"
class
= "blob-num js-line-number"
data - line - number = "6125" > < /td>
    < td
id = "LC6125"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > div < span
class
= "pl-k" >
.<
/span>style ) {</
td >
< /tr>
< tr >
< td
id = "L6126"
class
= "blob-num js-line-number"
data - line - number = "6126" > < /td>
    < td
id = "LC6126"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L6127"
class
= "blob-num js-line-number"
data - line - number = "6127" > < /td>
    < td
id = "LC6127"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6128"
class
= "blob-num js-line-number"
data - line - number = "6128" > < /td>
    < td
id = "LC6128"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6129"
class
= "blob-num js-line-number"
data - line - number = "6129" > < /td>
    < td
id = "LC6129"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 - 11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L6130"
class
= "blob-num js-line-number"
data - line - number = "6130" > < /td>
    < td
id = "LC6130"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Style of cloned element affects source element cloned (#8908)</span></td>
    < /tr>
    < tr >
    < td
id = "L6131"
class
= "blob-num js-line-number"
data - line - number = "6131" > < /td>
    < td
id = "LC6131"
class
= "blob-code blob-code-inner js-file-line" > div < span
class
= "pl-k" >
.<
/span>style<span class="pl-k">.</s
pan > backgroundClip < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > content - box < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6132"
class
= "blob-num js-line-number"
data - line - number = "6132" > < /td>
    < td
id = "LC6132"
class
= "blob-code blob-code-inner js-file-line" > div < span
class
= "pl-k" >
.<
/span>cloneNode( <span class="pl-c1">true</s
pan >
)<
span
class
= "pl-k" >
.<
/span>style<span class="pl-k">.</s
pan > backgroundClip < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6133"
class
= "blob-num js-line-number"
data - line - number = "6133" > < /td>
    < td
id = "LC6133"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>clearCloneStyle <span class="pl-k">=</s
pan > div < span
class
= "pl-k" >
.<
/span>style<span class="pl-k">.</s
pan > backgroundClip < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > content - box < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6134"
class
= "blob-num js-line-number"
data - line - number = "6134" > < /td>
    < td
id = "LC6134"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6135"
class
= "blob-num js-line-number"
data - line - number = "6135" > < /td>
    < td
id = "LC6135"
class
= "blob-code blob-code-inner js-file-line" > container < span
class
= "pl-k" >
.<
/span>style<span class="pl-k">.</s
pan > cssText < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > border
:
0;
width:8
px;
height:0;
top:0;
left:-9999
px;
<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span></
td >
< /tr>
< tr >
< td
id = "L6136"
class
= "blob-num js-line-number"
data - line - number = "6136" > < /td>
    < td
id = "LC6136"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>padding:0;margin-top:1px;position:absolute<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L6137"
class
= "blob-num js-line-number"
data - line - number = "6137" > < /td>
    < td
id = "LC6137"
class
= "blob-code blob-code-inner js-file-line" > container < span
class
= "pl-k" >
.<
/span>appendChild( div );</
td >
< /tr>
< tr >
< td
id = "L6138"
class
= "blob-num js-line-number"
data - line - number = "6138" > < /td>
    < td
id = "LC6138"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6139"
class
= "blob-num js-line-number"
data - line - number = "6139" > < /td>
    < td
id = "LC6139"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( support, {</
td >
< /tr>
< tr >
< td
id = "L6140"
class
= "blob-num js-line-number"
data - line - number = "6140" > < /td>
    < td
id = "LC6140"
class
= "blob-code blob-code-inner js-file-line" > pixelPosition < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L6141"
class
= "blob-num js-line-number"
data - line - number = "6141" > < /td>
    < td
id = "LC6141"
class
= "blob-code blob-code-inner js-file-line" > computeStyleTests();
<
/td>
< /tr>
< tr >
< td
id = "L6142"
class
= "blob-num js-line-number"
data - line - number = "6142" > < /td>
    < td
id = "LC6142"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> pixelPositionVal;</
td >
< /tr>
< tr >
< td
id = "L6143"
class
= "blob-num js-line-number"
data - line - number = "6143" > < /td>
    < td
id = "LC6143"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6144"
class
= "blob-num js-line-number"
data - line - number = "6144" > < /td>
    < td
id = "LC6144"
class
= "blob-code blob-code-inner js-file-line" > boxSizingReliable < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L6145"
class
= "blob-num js-line-number"
data - line - number = "6145" > < /td>
    < td
id = "LC6145"
class
= "blob-code blob-code-inner js-file-line" > computeStyleTests();
<
/td>
< /tr>
< tr >
< td
id = "L6146"
class
= "blob-num js-line-number"
data - line - number = "6146" > < /td>
    < td
id = "LC6146"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> boxSizingReliableVal;</
td >
< /tr>
< tr >
< td
id = "L6147"
class
= "blob-num js-line-number"
data - line - number = "6147" > < /td>
    < td
id = "LC6147"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6148"
class
= "blob-num js-line-number"
data - line - number = "6148" > < /td>
    < td
id = "LC6148"
class
= "blob-code blob-code-inner js-file-line" > pixelMarginRight < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L6149"
class
= "blob-num js-line-number"
data - line - number = "6149" > < /td>
    < td
id = "LC6149"
class
= "blob-code blob-code-inner js-file-line" > computeStyleTests();
<
/td>
< /tr>
< tr >
< td
id = "L6150"
class
= "blob-num js-line-number"
data - line - number = "6150" > < /td>
    < td
id = "LC6150"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> pixelMarginRightVal;</
td >
< /tr>
< tr >
< td
id = "L6151"
class
= "blob-num js-line-number"
data - line - number = "6151" > < /td>
    < td
id = "LC6151"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6152"
class
= "blob-num js-line-number"
data - line - number = "6152" > < /td>
    < td
id = "LC6152"
class
= "blob-code blob-code-inner js-file-line" > reliableMarginLeft < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L6153"
class
= "blob-num js-line-number"
data - line - number = "6153" > < /td>
    < td
id = "LC6153"
class
= "blob-code blob-code-inner js-file-line" > computeStyleTests();
<
/td>
< /tr>
< tr >
< td
id = "L6154"
class
= "blob-num js-line-number"
data - line - number = "6154" > < /td>
    < td
id = "LC6154"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> reliableMarginLeftVal;</
td >
< /tr>
< tr >
< td
id = "L6155"
class
= "blob-num js-line-number"
data - line - number = "6155" > < /td>
    < td
id = "LC6155"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6156"
class
= "blob-num js-line-number"
data - line - number = "6156" > < /td>
    < td
id = "LC6156"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6157"
class
= "blob-num js-line-number"
data - line - number = "6157" > < /td>
    < td
id = "LC6157"
class
= "blob-code blob-code-inner js-file-line" >
} )
();
<
/td>
< /tr>
< tr >
< td
id = "L6158"
class
= "blob-num js-line-number"
data - line - number = "6158" > < /td>
    < td
id = "LC6158"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6159"
class
= "blob-num js-line-number"
data - line - number = "6159" > < /td>
    < td
id = "LC6159"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6160"
class
= "blob-num js-line-number"
data - line - number = "6160" > < /td>
    < td
id = "LC6160"
class
= "blob-code blob-code-inner js-file-line" > function curCSS(elem, name, computed) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6161"
    class
        = "blob-num js-line-number"
        data - line - number = "6161" > < /td>
            < td
        id = "LC6161"
    class
        = "blob-code blob-code-inner js-file-line" >
        var width, minWidth, maxWidth, ret, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6162"
    class
        = "blob-num js-line-number"
        data - line - number = "6162" > < /td>
            < td
        id = "LC6162"
    class
        = "blob-code blob-code-inner js-file-line" > style < span
    class
        = "pl-k" >= < /span> elem<span class="pl-k">.</s
        pan > style;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6163"
    class
        = "blob-num js-line-number"
        data - line - number = "6163" > < /td>
            < td
        id = "LC6163"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6164"
    class
        = "blob-num js-line-number"
        data - line - number = "6164" > < /td>
            < td
        id = "LC6164"
    class
        = "blob-code blob-code-inner js-file-line" > computed < span
    class
        = "pl-k" >= < /span> computed <span class="pl-k">||</s
        pan > getStyles(elem);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6165"
    class
        = "blob-num js-line-number"
        data - line - number = "6165" > < /td>
            < td
        id = "LC6165"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6166"
    class
        = "blob-num js-line-number"
        data - line - number = "6166" > < /td>
            < td
        id = "LC6166"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Support: IE &lt;=9 only</span></td>
            < /tr>
            < tr >
            < td
        id = "L6167"
    class
        = "blob-num js-line-number"
        data - line - number = "6167" > < /td>
            < td
        id = "LC6167"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> getPropertyValue is only needed for .css(&#39;filter&#39;) (#12537)</span></td>
            < /tr>
            < tr >
            < td
        id = "L6168"
    class
        = "blob-num js-line-number"
        data - line - number = "6168" > < /td>
            < td
        id = "LC6168"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( computed ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6169"
    class
        = "blob-num js-line-number"
        data - line - number = "6169" > < /td>
            < td
        id = "LC6169"
    class
        = "blob-code blob-code-inner js-file-line" > ret < span
    class
        = "pl-k" >= < /span> computed<span class="pl-k">.</s
        pan > getPropertyValue(name) < span
    class
        = "pl-k" > || < /span> computed[ name ];</
        td >
        < /tr>
        < tr >
        < td
        id = "L6170"
    class
        = "blob-num js-line-number"
        data - line - number = "6170" > < /td>
            < td
        id = "LC6170"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6171"
    class
        = "blob-num js-line-number"
        data - line - number = "6171" > < /td>
            < td
        id = "LC6171"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( ret <span class="pl-k">===</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span><span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">&amp;&amp;</s
        pan > < span
    class
        = "pl-k" > ! < /span>jQuery<span class="pl-k">.</s
        pan > contains(elem < span
    class
        = "pl-k" >
    .<
        /span>ownerDocument, elem ) ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6172"
    class
        = "blob-num js-line-number"
        data - line - number = "6172" > < /td>
            < td
        id = "LC6172"
    class
        = "blob-code blob-code-inner js-file-line" > ret < span
    class
        = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
        pan > style(elem, name);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6173"
    class
        = "blob-num js-line-number"
        data - line - number = "6173" > < /td>
            < td
        id = "LC6173"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L6174"
class
= "blob-num js-line-number"
data - line - number = "6174" > < /td>
    < td
id = "LC6174"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6175"
class
= "blob-num js-line-number"
data - line - number = "6175" > < /td>
    < td
id = "LC6175"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> A tribute to the &quot;awesome hack by Dean Edwards&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L6176"
class
= "blob-num js-line-number"
data - line - number = "6176" > < /td>
    < td
id = "LC6176"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Android Browser returns percentage for some values,</span></td>
    < /tr>
    < tr >
    < td
id = "L6177"
class
= "blob-num js-line-number"
data - line - number = "6177" > < /td>
    < td
id = "LC6177"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> but width seems to be reliably pixels.</span></td>
    < /tr>
    < tr >
    < td
id = "L6178"
class
= "blob-num js-line-number"
data - line - number = "6178" > < /td>
    < td
id = "LC6178"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> This is against the CSSOM draft spec:</span></td>
    < /tr>
    < tr >
    < td
id = "L6179"
class
= "blob-num js-line-number"
data - line - number = "6179" > < /td>
    < td
id = "LC6179"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://drafts.csswg.org/cssom/#resolved-values</span></td>
    < /tr>
    < tr >
    < td
id = "L6180"
class
= "blob-num js-line-number"
data - line - number = "6180" > < /td>
    < td
id = "LC6180"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>pixelMarginRight() <span class="pl-k">&amp;&amp;</s
pan > rnumnonpx < span
class
= "pl-k" >
.<
/span>test( ret ) <span class="pl-k">&amp;&amp;</s
pan > rmargin < span
class
= "pl-k" >
.<
/span>test( name ) ) {</
td >
< /tr>
< tr >
< td
id = "L6181"
class
= "blob-num js-line-number"
data - line - number = "6181" > < /td>
    < td
id = "LC6181"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6182"
class
= "blob-num js-line-number"
data - line - number = "6182" > < /td>
    < td
id = "LC6182"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remember the original values</span></td>
    < /tr>
    < tr >
    < td
id = "L6183"
class
= "blob-num js-line-number"
data - line - number = "6183" > < /td>
    < td
id = "LC6183"
class
= "blob-code blob-code-inner js-file-line" > width < span
class
= "pl-k" >= < /span> style<span class="pl-k">.</s
pan > width;
<
/td>
< /tr>
< tr >
< td
id = "L6184"
class
= "blob-num js-line-number"
data - line - number = "6184" > < /td>
    < td
id = "LC6184"
class
= "blob-code blob-code-inner js-file-line" > minWidth < span
class
= "pl-k" >= < /span> style<span class="pl-k">.</s
pan > minWidth;
<
/td>
< /tr>
< tr >
< td
id = "L6185"
class
= "blob-num js-line-number"
data - line - number = "6185" > < /td>
    < td
id = "LC6185"
class
= "blob-code blob-code-inner js-file-line" > maxWidth < span
class
= "pl-k" >= < /span> style<span class="pl-k">.</s
pan > maxWidth;
<
/td>
< /tr>
< tr >
< td
id = "L6186"
class
= "blob-num js-line-number"
data - line - number = "6186" > < /td>
    < td
id = "LC6186"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6187"
class
= "blob-num js-line-number"
data - line - number = "6187" > < /td>
    < td
id = "LC6187"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Put in the new values to get a computed value out</span></td>
    < /tr>
    < tr >
    < td
id = "L6188"
class
= "blob-num js-line-number"
data - line - number = "6188" > < /td>
    < td
id = "LC6188"
class
= "blob-code blob-code-inner js-file-line" > style < span
class
= "pl-k" >
.<
/span>minWidth <span class="pl-k">=</s
pan > style < span
class
= "pl-k" >
.<
/span>maxWidth <span class="pl-k">=</s
pan > style < span
class
= "pl-k" >
.<
/span>width <span class="pl-k">=</s
pan > ret;
<
/td>
< /tr>
< tr >
< td
id = "L6189"
class
= "blob-num js-line-number"
data - line - number = "6189" > < /td>
    < td
id = "LC6189"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >= < /span> computed<span class="pl-k">.</s
pan > width;
<
/td>
< /tr>
< tr >
< td
id = "L6190"
class
= "blob-num js-line-number"
data - line - number = "6190" > < /td>
    < td
id = "LC6190"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6191"
class
= "blob-num js-line-number"
data - line - number = "6191" > < /td>
    < td
id = "LC6191"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Revert the changed values</span></td>
    < /tr>
    < tr >
    < td
id = "L6192"
class
= "blob-num js-line-number"
data - line - number = "6192" > < /td>
    < td
id = "LC6192"
class
= "blob-code blob-code-inner js-file-line" > style < span
class
= "pl-k" >
.<
/span>width <span class="pl-k">=</s
pan > width;
<
/td>
< /tr>
< tr >
< td
id = "L6193"
class
= "blob-num js-line-number"
data - line - number = "6193" > < /td>
    < td
id = "LC6193"
class
= "blob-code blob-code-inner js-file-line" > style < span
class
= "pl-k" >
.<
/span>minWidth <span class="pl-k">=</s
pan > minWidth;
<
/td>
< /tr>
< tr >
< td
id = "L6194"
class
= "blob-num js-line-number"
data - line - number = "6194" > < /td>
    < td
id = "LC6194"
class
= "blob-code blob-code-inner js-file-line" > style < span
class
= "pl-k" >
.<
/span>maxWidth <span class="pl-k">=</s
pan > maxWidth;
<
/td>
< /tr>
< tr >
< td
id = "L6195"
class
= "blob-num js-line-number"
data - line - number = "6195" > < /td>
    < td
id = "LC6195"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6196"
class
= "blob-num js-line-number"
data - line - number = "6196" > < /td>
    < td
id = "LC6196"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6197"
class
= "blob-num js-line-number"
data - line - number = "6197" > < /td>
    < td
id = "LC6197"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6198"
class
= "blob-num js-line-number"
data - line - number = "6198" > < /td>
    < td
id = "LC6198"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6199"
class
= "blob-num js-line-number"
data - line - number = "6199" > < /td>
    < td
id = "LC6199"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6200"
class
= "blob-num js-line-number"
data - line - number = "6200" > < /td>
    < td
id = "LC6200"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 - 11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L6201"
class
= "blob-num js-line-number"
data - line - number = "6201" > < /td>
    < td
id = "LC6201"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> IE returns zIndex value as an integer.</span></td>
    < /tr>
    < tr >
    < td
id = "L6202"
class
= "blob-num js-line-number"
data - line - number = "6202" > < /td>
    < td
id = "LC6202"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L6203"
class
= "blob-num js-line-number"
data - line - number = "6203" > < /td>
    < td
id = "LC6203"
class
= "blob-code blob-code-inner js-file-line" > ret;
<
/td>
< /tr>
< tr >
< td
id = "L6204"
class
= "blob-num js-line-number"
data - line - number = "6204" > < /td>
    < td
id = "LC6204"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6205"
class
= "blob-num js-line-number"
data - line - number = "6205" > < /td>
    < td
id = "LC6205"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6206"
class
= "blob-num js-line-number"
data - line - number = "6206" > < /td>
    < td
id = "LC6206"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6207"
class
= "blob-num js-line-number"
data - line - number = "6207" > < /td>
    < td
id = "LC6207"
class
= "blob-code blob-code-inner js-file-line" > function addGetHookIf(conditionFn, hookFn) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6208"
    class
        = "blob-num js-line-number"
        data - line - number = "6208" > < /td>
            < td
        id = "LC6208"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6209"
    class
        = "blob-num js-line-number"
        data - line - number = "6209" > < /td>
            < td
        id = "LC6209"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Define the hook, we&#39;ll check on the first run if it&#39;s really needed.</span></td>
            < /tr>
            < tr >
            < td
        id = "L6210"
    class
        = "blob-num js-line-number"
        data - line - number = "6210" > < /td>
            < td
        id = "LC6210"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6211"
    class
        = "blob-num js-line-number"
        data - line - number = "6211" > < /td>
            < td
        id = "LC6211"
    class
        = "blob-code blob-code-inner js-file-line" > get < span
    class
        = "pl-k" >
    :<
        /span> function() {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6212"
    class
        = "blob-num js-line-number"
        data - line - number = "6212" > < /td>
            < td
        id = "LC6212"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( conditionFn() ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6213"
    class
        = "blob-num js-line-number"
        data - line - number = "6213" > < /td>
            < td
        id = "LC6213"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6214"
    class
        = "blob-num js-line-number"
        data - line - number = "6214" > < /td>
            < td
        id = "LC6214"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Hook not needed (or it&#39;s not possible to use it due</span></td>
            < /tr>
            < tr >
            < td
        id = "L6215"
    class
        = "blob-num js-line-number"
        data - line - number = "6215" > < /td>
            < td
        id = "LC6215"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> to missing dependency), remove it.</span></td>
            < /tr>
            < tr >
            < td
        id = "L6216"
    class
        = "blob-num js-line-number"
        data - line - number = "6216" > < /td>
            < td
        id = "LC6216"
    class
        = "blob-code blob-code-inner js-file-line" > delete < span
    class
        = "pl-c1" > this < /span><span class="pl-k">.</s
        pan > get;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6217"
    class
        = "blob-num js-line-number"
        data - line - number = "6217" > < /td>
            < td
        id = "LC6217"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L6218"
    class
        = "blob-num js-line-number"
        data - line - number = "6218" > < /td>
            < td
        id = "LC6218"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L6219"
class
= "blob-num js-line-number"
data - line - number = "6219" > < /td>
    < td
id = "LC6219"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6220"
class
= "blob-num js-line-number"
data - line - number = "6220" > < /td>
    < td
id = "LC6220"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Hook needed; redefine it so that the support test is not executed again.</span></td>
    < /tr>
    < tr >
    < td
id = "L6221"
class
= "blob-num js-line-number"
data - line - number = "6221" > < /td>
    < td
id = "LC6221"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>get <span class="pl-k">=</s
pan > hookFn
)<
span
class
= "pl-k" >
.<
/span>apply( <span class="pl-c1">this</s
pan >, arguments
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6222"
class
= "blob-num js-line-number"
data - line - number = "6222" > < /td>
    < td
id = "LC6222"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6223"
class
= "blob-num js-line-number"
data - line - number = "6223" > < /td>
    < td
id = "LC6223"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L6224"
class
= "blob-num js-line-number"
data - line - number = "6224" > < /td>
    < td
id = "LC6224"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6225"
class
= "blob-num js-line-number"
data - line - number = "6225" > < /td>
    < td
id = "LC6225"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6226"
class
= "blob-num js-line-number"
data - line - number = "6226" > < /td>
    < td
id = "LC6226"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6227"
class
= "blob-num js-line-number"
data - line - number = "6227" > < /td>
    < td
id = "LC6227"
class
= "blob-code blob-code-inner js-file-line" >
var <
/td>
< /tr>
< tr >
< td
id = "L6228"
class
= "blob-num js-line-number"
data - line - number = "6228" > < /td>
    < td
id = "LC6228"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6229"
class
= "blob-num js-line-number"
data - line - number = "6229" > < /td>
    < td
id = "LC6229"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Swappable if display is none or starts with table</span></td>
    < /tr>
    < tr >
    < td
id = "L6230"
class
= "blob-num js-line-number"
data - line - number = "6230" > < /td>
    < td
id = "LC6230"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> except &quot;table&quot;, &quot;table-cell&quot;, or &quot;table-caption&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L6231"
class
= "blob-num js-line-number"
data - line - number = "6231" > < /td>
    < td
id = "LC6231"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display</span></td>
    < /tr>
    < tr >
    < td
id = "L6232"
class
= "blob-num js-line-number"
data - line - number = "6232" > < /td>
    < td
id = "LC6232"
class
= "blob-code blob-code-inner js-file-line" > rdisplayswap < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > (none < span
class
= "pl-k" > | < /span>table(<span class="pl-k">?</s
pan > < span
class
= "pl-k" > ! < /span><span class="pl-k">-</s
pan > c[ea]
)<
span
class
= "pl-c1" >
.<
/span><span class="pl-k">+</s
pan >
)<
span
class
= "pl-k" > / < /span>,</
td >
< /tr>
< tr >
< td
id = "L6233"
class
= "blob-num js-line-number"
data - line - number = "6233" > < /td>
    < td
id = "LC6233"
class
= "blob-code blob-code-inner js-file-line" > cssShow < span
class
= "pl-k" >= < /span> { position<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>absolute<span class="pl-pds">&quot;</s
pan > < /span>, visibility<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>hidden<span class="pl-pds">&quot;</s
pan > < /span>, display<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>block<span class="pl-pds">&quot;</s
pan > < /span> },</
td >
< /tr>
< tr >
< td
id = "L6234"
class
= "blob-num js-line-number"
data - line - number = "6234" > < /td>
    < td
id = "LC6234"
class
= "blob-code blob-code-inner js-file-line" > cssNormalTransform < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L6235"
class
= "blob-num js-line-number"
data - line - number = "6235" > < /td>
    < td
id = "LC6235"
class
= "blob-code blob-code-inner js-file-line" > letterSpacing < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > 0 < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L6236"
class
= "blob-num js-line-number"
data - line - number = "6236" > < /td>
    < td
id = "LC6236"
class
= "blob-code blob-code-inner js-file-line" > fontWeight < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > 400 < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L6237"
class
= "blob-num js-line-number"
data - line - number = "6237" > < /td>
    < td
id = "LC6237"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6238"
class
= "blob-num js-line-number"
data - line - number = "6238" > < /td>
    < td
id = "LC6238"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6239"
class
= "blob-num js-line-number"
data - line - number = "6239" > < /td>
    < td
id = "LC6239"
class
= "blob-code blob-code-inner js-file-line" > cssPrefixes < span
class
= "pl-k" >= < /span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>Webkit<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>Moz<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>ms<span class="pl-pds">&quot;</span></span> ],</
td >
< /tr>
< tr >
< td
id = "L6240"
class
= "blob-num js-line-number"
data - line - number = "6240" > < /td>
    < td
id = "LC6240"
class
= "blob-code blob-code-inner js-file-line" > emptyStyle < span
class
= "pl-k" >= < /span> document<span class="pl-k">.</s
pan > createElement( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>div<span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > style;
<
/td>
< /tr>
< tr >
< td
id = "L6241"
class
= "blob-num js-line-number"
data - line - number = "6241" > < /td>
    < td
id = "LC6241"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6242"
class
= "blob-num js-line-number"
data - line - number = "6242" > < /td>
    < td
id = "LC6242"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return a css property mapped to a potentially vendor prefixed property</span></td>
    < /tr>
    < tr >
    < td
id = "L6243"
class
= "blob-num js-line-number"
data - line - number = "6243" > < /td>
    < td
id = "LC6243"
class
= "blob-code blob-code-inner js-file-line" > function vendorPropName(name) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6244"
    class
        = "blob-num js-line-number"
        data - line - number = "6244" > < /td>
            < td
        id = "LC6244"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6245"
    class
        = "blob-num js-line-number"
        data - line - number = "6245" > < /td>
            < td
        id = "LC6245"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Shortcut for names that are not vendor prefixed</span></td>
            < /tr>
            < tr >
            < td
        id = "L6246"
    class
        = "blob-num js-line-number"
        data - line - number = "6246" > < /td>
            < td
        id = "LC6246"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( name in emptyStyle ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6247"
    class
        = "blob-num js-line-number"
        data - line - number = "6247" > < /td>
            < td
        id = "LC6247"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> name;</
        td >
        < /tr>
        < tr >
        < td
        id = "L6248"
    class
        = "blob-num js-line-number"
        data - line - number = "6248" > < /td>
            < td
        id = "LC6248"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L6249"
class
= "blob-num js-line-number"
data - line - number = "6249" > < /td>
    < td
id = "LC6249"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6250"
class
= "blob-num js-line-number"
data - line - number = "6250" > < /td>
    < td
id = "LC6250"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check for vendor prefixed names</span></td>
    < /tr>
    < tr >
    < td
id = "L6251"
class
= "blob-num js-line-number"
data - line - number = "6251" > < /td>
    < td
id = "LC6251"
class
= "blob-code blob-code-inner js-file-line" >
var capName
<
span
class
= "pl-k" >= < /span> name[ <span class="pl-c1">0</span> ]<span class="pl-k">.</s
pan > toUpperCase() < span
class
= "pl-k" > + < /span> name<span class="pl-k">.</s
pan > slice( < span
class
= "pl-c1" > 1 < /span> ),</
td >
< /tr>
< tr >
< td
id = "L6252"
class
= "blob-num js-line-number"
data - line - number = "6252" > < /td>
    < td
id = "LC6252"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> cssPrefixes<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L6253"
class
= "blob-num js-line-number"
data - line - number = "6253" > < /td>
    < td
id = "LC6253"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6254"
class
= "blob-num js-line-number"
data - line - number = "6254" > < /td>
    < td
id = "LC6254"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6255"
class
    = "blob-num js-line-number"
    data - line - number = "6255" > < /td>
        < td
    id = "LC6255"
class
    = "blob-code blob-code-inner js-file-line" > name < span
class
    = "pl-k" >= < /span> cssPrefixes[ i ] <span class="pl-k">+</s
    pan > capName;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6256"
class
    = "blob-num js-line-number"
    data - line - number = "6256" > < /td>
        < td
    id = "LC6256"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( name in emptyStyle ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6257"
class
    = "blob-num js-line-number"
    data - line - number = "6257" > < /td>
        < td
    id = "LC6257"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> name;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6258"
class
    = "blob-num js-line-number"
    data - line - number = "6258" > < /td>
        < td
    id = "LC6258"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6259"
class
= "blob-num js-line-number"
data - line - number = "6259" > < /td>
    < td
id = "LC6259"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6260"
class
= "blob-num js-line-number"
data - line - number = "6260" > < /td>
    < td
id = "LC6260"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6261"
class
= "blob-num js-line-number"
data - line - number = "6261" > < /td>
    < td
id = "LC6261"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6262"
class
= "blob-num js-line-number"
data - line - number = "6262" > < /td>
    < td
id = "LC6262"
class
= "blob-code blob-code-inner js-file-line" > function setPositiveNumber(elem, value, subtract) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6263"
    class
        = "blob-num js-line-number"
        data - line - number = "6263" > < /td>
            < td
        id = "LC6263"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6264"
    class
        = "blob-num js-line-number"
        data - line - number = "6264" > < /td>
            < td
        id = "LC6264"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Any relative (+/-) values have already been</span></td>
            < /tr>
            < tr >
            < td
        id = "L6265"
    class
        = "blob-num js-line-number"
        data - line - number = "6265" > < /td>
            < td
        id = "LC6265"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> normalized at this point</span></td>
            < /tr>
            < tr >
            < td
        id = "L6266"
    class
        = "blob-num js-line-number"
        data - line - number = "6266" > < /td>
            < td
        id = "LC6266"
    class
        = "blob-code blob-code-inner js-file-line" >
        var matches
    <
        span
    class
        = "pl-k" >= < /span> rcssNum<span class="pl-k">.</s
        pan > exec(value);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6267"
    class
        = "blob-num js-line-number"
        data - line - number = "6267" > < /td>
            < td
        id = "LC6267"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> matches <span class="pl-k">?</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L6268"
    class
        = "blob-num js-line-number"
        data - line - number = "6268" > < /td>
            < td
        id = "LC6268"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6269"
    class
        = "blob-num js-line-number"
        data - line - number = "6269" > < /td>
            < td
        id = "LC6269"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Guard against undefined &quot;subtract&quot;, e.g., when used as in cssHooks</span></td>
            < /tr>
            < tr >
            < td
        id = "L6270"
    class
        = "blob-num js-line-number"
        data - line - number = "6270" > < /td>
            < td
        id = "LC6270"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-smi" > Math < /span><span class="pl-k">.</s
        pan > max( < span
    class
        = "pl-c1" > 0 < /span>, matches[ <span class="pl-c1">2</span> ] <span class="pl-k">-</s
        pan > (subtract < span
    class
        = "pl-k" > || < /span> <span class="pl-c1">0</s
        pan >
    ) ) <
        span
    class
        = "pl-k" > + < /span> ( matches[ <span class="pl-c1">3</span> ] <span class="pl-k">||</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>px<span class="pl-pds">&quot;</s
        pan > < /span> ) <span class="pl-k">:</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L6271"
    class
        = "blob-num js-line-number"
        data - line - number = "6271" > < /td>
            < td
        id = "LC6271"
    class
        = "blob-code blob-code-inner js-file-line" > value;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6272"
    class
        = "blob-num js-line-number"
        data - line - number = "6272" > < /td>
            < td
        id = "LC6272"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L6273"
class
= "blob-num js-line-number"
data - line - number = "6273" > < /td>
    < td
id = "LC6273"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6274"
class
= "blob-num js-line-number"
data - line - number = "6274" > < /td>
    < td
id = "LC6274"
class
= "blob-code blob-code-inner js-file-line" > function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6275"
class
    = "blob-num js-line-number"
    data - line - number = "6275" > < /td>
        < td
    id = "LC6275"
class
    = "blob-code blob-code-inner js-file-line" >
    var i, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L6276"
class
    = "blob-num js-line-number"
    data - line - number = "6276" > < /td>
        < td
    id = "LC6276"
class
    = "blob-code blob-code-inner js-file-line" > val < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6277"
class
    = "blob-num js-line-number"
    data - line - number = "6277" > < /td>
        < td
    id = "LC6277"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6278"
class
    = "blob-num js-line-number"
    data - line - number = "6278" > < /td>
        < td
    id = "LC6278"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If we already have the right measurement, avoid augmentation</span></td>
        < /tr>
        < tr >
        < td
    id = "L6279"
class
    = "blob-num js-line-number"
    data - line - number = "6279" > < /td>
        < td
    id = "LC6279"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( extra <span class="pl-k">===</s
    pan > (isBorderBox < span
class
    = "pl-k" > ?
<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > border < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" >
:<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > content < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6280"
class
    = "blob-num js-line-number"
    data - line - number = "6280" > < /td>
        < td
    id = "LC6280"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">4</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6281"
class
    = "blob-num js-line-number"
    data - line - number = "6281" > < /td>
        < td
    id = "LC6281"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6282"
class
    = "blob-num js-line-number"
    data - line - number = "6282" > < /td>
        < td
    id = "LC6282"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Otherwise initialize for horizontal or vertical properties</span></td>
        < /tr>
        < tr >
        < td
    id = "L6283"
class
    = "blob-num js-line-number"
    data - line - number = "6283" > < /td>
        < td
    id = "LC6283"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6284"
class
= "blob-num js-line-number"
data - line - number = "6284" > < /td>
    < td
id = "LC6284"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> name <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>width<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L6285"
class
= "blob-num js-line-number"
data - line - number = "6285" > < /td>
    < td
id = "LC6285"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6286"
class
= "blob-num js-line-number"
data - line - number = "6286" > < /td>
    < td
id = "LC6286"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6287"
class
= "blob-num js-line-number"
data - line - number = "6287" > < /td>
    < td
id = "LC6287"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > < span
class
= "pl-c1" > 4 < /span>; i <span class="pl-k">+=</s
pan > < span
class
= "pl-c1" > 2 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6288"
class
= "blob-num js-line-number"
data - line - number = "6288" > < /td>
    < td
id = "LC6288"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6289"
class
= "blob-num js-line-number"
data - line - number = "6289" > < /td>
    < td
id = "LC6289"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Both box models exclude margin, so add it if we want it</span></td>
    < /tr>
    < tr >
    < td
id = "L6290"
class
= "blob-num js-line-number"
data - line - number = "6290" > < /td>
    < td
id = "LC6290"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( extra <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>margin<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6291"
class
= "blob-num js-line-number"
data - line - number = "6291" > < /td>
    < td
id = "LC6291"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" > +=
<
/span> jQuery<span class="pl-k">.</s
pan > css(elem, extra < span
class
= "pl-k" > + < /span> cssExpand[ i ], <span class="pl-c1">true</s
pan >, styles
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6292"
class
= "blob-num js-line-number"
data - line - number = "6292" > < /td>
    < td
id = "LC6292"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6293"
class
= "blob-num js-line-number"
data - line - number = "6293" > < /td>
    < td
id = "LC6293"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6294"
class
= "blob-num js-line-number"
data - line - number = "6294" > < /td>
    < td
id = "LC6294"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( isBorderBox ) {</
td >
< /tr>
< tr >
< td
id = "L6295"
class
= "blob-num js-line-number"
data - line - number = "6295" > < /td>
    < td
id = "LC6295"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6296"
class
= "blob-num js-line-number"
data - line - number = "6296" > < /td>
    < td
id = "LC6296"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> border-box includes padding, so remove it if we want content</span></td>
    < /tr>
    < tr >
    < td
id = "L6297"
class
= "blob-num js-line-number"
data - line - number = "6297" > < /td>
    < td
id = "LC6297"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( extra <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>content<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6298"
class
= "blob-num js-line-number"
data - line - number = "6298" > < /td>
    < td
id = "LC6298"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" > -=
<
/span> jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>padding<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > cssExpand[i],
<
span
class
= "pl-c1" > true < /span>, styles );</
td >
< /tr>
< tr >
< td
id = "L6299"
class
= "blob-num js-line-number"
data - line - number = "6299" > < /td>
    < td
id = "LC6299"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6300"
class
= "blob-num js-line-number"
data - line - number = "6300" > < /td>
    < td
id = "LC6300"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6301"
class
= "blob-num js-line-number"
data - line - number = "6301" > < /td>
    < td
id = "LC6301"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> At this point, extra isn&#39;t border nor margin, so remove border</span></td>
    < /tr>
    < tr >
    < td
id = "L6302"
class
= "blob-num js-line-number"
data - line - number = "6302" > < /td>
    < td
id = "LC6302"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( extra <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > margin < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6303"
class
    = "blob-num js-line-number"
    data - line - number = "6303" > < /td>
        < td
    id = "LC6303"
class
    = "blob-code blob-code-inner js-file-line" > val < span
class
    = "pl-k" > -=
<
    /span> jQuery<span class="pl-k">.</s
    pan > css(elem, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>border<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > cssExpand[i] < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > Width < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    span
class
    = "pl-c1" > true < /span>, styles );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6304"
class
    = "blob-num js-line-number"
    data - line - number = "6304" > < /td>
        < td
    id = "LC6304"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6305"
class
= "blob-num js-line-number"
data - line - number = "6305" > < /td>
    < td
id = "LC6305"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6306"
class
= "blob-num js-line-number"
data - line - number = "6306" > < /td>
    < td
id = "LC6306"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6307"
class
= "blob-num js-line-number"
data - line - number = "6307" > < /td>
    < td
id = "LC6307"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> At this point, extra isn&#39;t content, so add padding</span></td>
    < /tr>
    < tr >
    < td
id = "L6308"
class
= "blob-num js-line-number"
data - line - number = "6308" > < /td>
    < td
id = "LC6308"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" > +=
<
/span> jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>padding<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > cssExpand[i],
<
span
class
= "pl-c1" > true < /span>, styles );</
td >
< /tr>
< tr >
< td
id = "L6309"
class
= "blob-num js-line-number"
data - line - number = "6309" > < /td>
    < td
id = "LC6309"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6310"
class
= "blob-num js-line-number"
data - line - number = "6310" > < /td>
    < td
id = "LC6310"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> At this point, extra isn&#39;t content nor padding, so add border</span></td>
    < /tr>
    < tr >
    < td
id = "L6311"
class
= "blob-num js-line-number"
data - line - number = "6311" > < /td>
    < td
id = "LC6311"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( extra <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > padding < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6312"
class
    = "blob-num js-line-number"
    data - line - number = "6312" > < /td>
        < td
    id = "LC6312"
class
    = "blob-code blob-code-inner js-file-line" > val < span
class
    = "pl-k" > +=
<
    /span> jQuery<span class="pl-k">.</s
    pan > css(elem, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>border<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > cssExpand[i] < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > Width < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    span
class
    = "pl-c1" > true < /span>, styles );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6313"
class
    = "blob-num js-line-number"
    data - line - number = "6313" > < /td>
        < td
    id = "LC6313"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6314"
class
= "blob-num js-line-number"
data - line - number = "6314" > < /td>
    < td
id = "LC6314"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6315"
class
= "blob-num js-line-number"
data - line - number = "6315" > < /td>
    < td
id = "LC6315"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6316"
class
= "blob-num js-line-number"
data - line - number = "6316" > < /td>
    < td
id = "LC6316"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6317"
class
= "blob-num js-line-number"
data - line - number = "6317" > < /td>
    < td
id = "LC6317"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> val;</
td >
< /tr>
< tr >
< td
id = "L6318"
class
= "blob-num js-line-number"
data - line - number = "6318" > < /td>
    < td
id = "LC6318"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6319"
class
= "blob-num js-line-number"
data - line - number = "6319" > < /td>
    < td
id = "LC6319"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6320"
class
= "blob-num js-line-number"
data - line - number = "6320" > < /td>
    < td
id = "LC6320"
class
= "blob-code blob-code-inner js-file-line" > function getWidthOrHeight(elem, name, extra) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6321"
    class
        = "blob-num js-line-number"
        data - line - number = "6321" > < /td>
            < td
        id = "LC6321"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6322"
    class
        = "blob-num js-line-number"
        data - line - number = "6322" > < /td>
            < td
        id = "LC6322"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Start with offset property, which is equivalent to the border-box value</span></td>
            < /tr>
            < tr >
            < td
        id = "L6323"
    class
        = "blob-num js-line-number"
        data - line - number = "6323" > < /td>
            < td
        id = "LC6323"
    class
        = "blob-code blob-code-inner js-file-line" >
        var val, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6324"
    class
        = "blob-num js-line-number"
        data - line - number = "6324" > < /td>
            < td
        id = "LC6324"
    class
        = "blob-code blob-code-inner js-file-line" > valueIsBorderBox < span
    class
        = "pl-k" >= < /span> <span class="pl-c1">true</s
        pan >,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6325"
    class
        = "blob-num js-line-number"
        data - line - number = "6325" > < /td>
            < td
        id = "LC6325"
    class
        = "blob-code blob-code-inner js-file-line" > styles < span
    class
        = "pl-k" >= < /span> getStyles( elem ),</
        td >
        < /tr>
        < tr >
        < td
        id = "L6326"
    class
        = "blob-num js-line-number"
        data - line - number = "6326" > < /td>
            < td
        id = "LC6326"
    class
        = "blob-code blob-code-inner js-file-line" > isBorderBox < span
    class
        = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
        pan > css(elem, < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>boxSizing<span class="pl-pds">&quot;</s
        pan > < /span>, <span class="pl-c1">false</s
        pan >, styles
    ) <
        span
    class
        = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > border - box < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6327"
    class
        = "blob-num js-line-number"
        data - line - number = "6327" > < /td>
            < td
        id = "LC6327"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L6328"
    class
        = "blob-num js-line-number"
        data - line - number = "6328" > < /td>
            < td
        id = "LC6328"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Support: IE &lt;=11 only</span></td>
            < /tr>
            < tr >
            < td
        id = "L6329"
    class
        = "blob-num js-line-number"
        data - line - number = "6329" > < /td>
            < td
        id = "LC6329"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Running getBoundingClientRect on a disconnected node</span></td>
            < /tr>
            < tr >
            < td
        id = "L6330"
    class
        = "blob-num js-line-number"
        data - line - number = "6330" > < /td>
            < td
        id = "LC6330"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> in IE throws an error.</span></td>
            < /tr>
            < tr >
            < td
        id = "L6331"
    class
        = "blob-num js-line-number"
        data - line - number = "6331" > < /td>
            < td
        id = "LC6331"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( elem<span class="pl-k">.</s
        pan > getClientRects() < span
    class
        = "pl-k" >
    .<
        /span>length ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6332"
    class
        = "blob-num js-line-number"
        data - line - number = "6332" > < /td>
            < td
        id = "LC6332"
    class
        = "blob-code blob-code-inner js-file-line" > val < span
    class
        = "pl-k" >= < /span> elem<span class="pl-k">.</s
        pan > getBoundingClientRect()[name];
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6333"
    class
        = "blob-num js-line-number"
        data - line - number = "6333" > < /td>
            < td
        id = "LC6333"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L6334"
class
= "blob-num js-line-number"
data - line - number = "6334" > < /td>
    < td
id = "LC6334"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6335"
class
= "blob-num js-line-number"
data - line - number = "6335" > < /td>
    < td
id = "LC6335"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Some non-html elements return undefined for offsetWidth, so check for null/undefined</span></td>
    < /tr>
    < tr >
    < td
id = "L6336"
class
= "blob-num js-line-number"
data - line - number = "6336" > < /td>
    < td
id = "LC6336"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285</span></td>
    < /tr>
    < tr >
    < td
id = "L6337"
class
= "blob-num js-line-number"
data - line - number = "6337" > < /td>
    < td
id = "LC6337"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668</span></td>
    < /tr>
    < tr >
    < td
id = "L6338"
class
= "blob-num js-line-number"
data - line - number = "6338" > < /td>
    < td
id = "LC6338"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( val <span class="pl-k">&lt;=</s
pan > < span
class
= "pl-c1" > 0 < /span> <span class="pl-k">||</s
pan > val < span
class
= "pl-k" >= =
<
/span> <span class="pl-c1">null</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6339"
class
    = "blob-num js-line-number"
    data - line - number = "6339" > < /td>
        < td
    id = "LC6339"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6340"
class
    = "blob-num js-line-number"
    data - line - number = "6340" > < /td>
        < td
    id = "LC6340"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Fall back to computed then uncomputed css if necessary</span></td>
        < /tr>
        < tr >
        < td
    id = "L6341"
class
    = "blob-num js-line-number"
    data - line - number = "6341" > < /td>
        < td
    id = "LC6341"
class
    = "blob-code blob-code-inner js-file-line" > val < span
class
    = "pl-k" >= < /span> curCSS( elem, name, styles );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6342"
class
    = "blob-num js-line-number"
    data - line - number = "6342" > < /td>
        < td
    id = "LC6342"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( val <span class="pl-k">&lt;</s
    pan > < span
class
    = "pl-c1" > 0 < /span> <span class="pl-k">||</s
    pan > val < span
class
    = "pl-k" >= =
<
    /span> <span class="pl-c1">null</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6343"
class
    = "blob-num js-line-number"
    data - line - number = "6343" > < /td>
        < td
    id = "LC6343"
class
    = "blob-code blob-code-inner js-file-line" > val < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > style[name];
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6344"
class
    = "blob-num js-line-number"
    data - line - number = "6344" > < /td>
        < td
    id = "LC6344"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6345"
class
= "blob-num js-line-number"
data - line - number = "6345" > < /td>
    < td
id = "LC6345"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6346"
class
= "blob-num js-line-number"
data - line - number = "6346" > < /td>
    < td
id = "LC6346"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Computed unit is not pixels. Stop here and return.</span></td>
    < /tr>
    < tr >
    < td
id = "L6347"
class
= "blob-num js-line-number"
data - line - number = "6347" > < /td>
    < td
id = "LC6347"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( rnumnonpx<span class="pl-k">.</s
pan > test(val)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6348"
class
    = "blob-num js-line-number"
    data - line - number = "6348" > < /td>
        < td
    id = "LC6348"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> val;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6349"
class
    = "blob-num js-line-number"
    data - line - number = "6349" > < /td>
        < td
    id = "LC6349"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6350"
class
= "blob-num js-line-number"
data - line - number = "6350" > < /td>
    < td
id = "LC6350"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6351"
class
= "blob-num js-line-number"
data - line - number = "6351" > < /td>
    < td
id = "LC6351"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check for style in case a browser which returns unreliable values</span></td>
    < /tr>
    < tr >
    < td
id = "L6352"
class
= "blob-num js-line-number"
data - line - number = "6352" > < /td>
    < td
id = "LC6352"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> for getComputedStyle silently falls back to the reliable elem.style</span></td>
    < /tr>
    < tr >
    < td
id = "L6353"
class
= "blob-num js-line-number"
data - line - number = "6353" > < /td>
    < td
id = "LC6353"
class
= "blob-code blob-code-inner js-file-line" > valueIsBorderBox < span
class
= "pl-k" >= < /span> isBorderBox <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6354"
class
= "blob-num js-line-number"
data - line - number = "6354" > < /td>
    < td
id = "LC6354"
class
= "blob-code blob-code-inner js-file-line" > (support < span
class
= "pl-k" >
.<
/span>boxSizingReliable() <span class="pl-k">||</s
pan > val < span
class
= "pl-k" >= == < /span> elem<span class="pl-k">.</s
pan > style[name]
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6355"
class
= "blob-num js-line-number"
data - line - number = "6355" > < /td>
    < td
id = "LC6355"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6356"
class
= "blob-num js-line-number"
data - line - number = "6356" > < /td>
    < td
id = "LC6356"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Normalize &quot;&quot;, auto, and prepare for extra</span></td>
    < /tr>
    < tr >
    < td
id = "L6357"
class
= "blob-num js-line-number"
data - line - number = "6357" > < /td>
    < td
id = "LC6357"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >= < /span> parseFloat( val ) <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L6358"
class
= "blob-num js-line-number"
data - line - number = "6358" > < /td>
    < td
id = "LC6358"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6359"
class
= "blob-num js-line-number"
data - line - number = "6359" > < /td>
    < td
id = "LC6359"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6360"
class
= "blob-num js-line-number"
data - line - number = "6360" > < /td>
    < td
id = "LC6360"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use the active box-sizing model to add/subtract irrelevant styles</span></td>
    < /tr>
    < tr >
    < td
id = "L6361"
class
= "blob-num js-line-number"
data - line - number = "6361" > < /td>
    < td
id = "LC6361"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ( val <span class="pl-k">+</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6362"
class
= "blob-num js-line-number"
data - line - number = "6362" > < /td>
    < td
id = "LC6362"
class
= "blob-code blob-code-inner js-file-line" > augmentWidthOrHeight( < /td>
    < /tr>
    < tr >
    < td
id = "L6363"
class
= "blob-num js-line-number"
data - line - number = "6363" > < /td>
    < td
id = "LC6363"
class
= "blob-code blob-code-inner js-file-line" > elem,
<
/td>
< /tr>
< tr >
< td
id = "L6364"
class
= "blob-num js-line-number"
data - line - number = "6364" > < /td>
    < td
id = "LC6364"
class
= "blob-code blob-code-inner js-file-line" > name,
<
/td>
< /tr>
< tr >
< td
id = "L6365"
class
= "blob-num js-line-number"
data - line - number = "6365" > < /td>
    < td
id = "LC6365"
class
= "blob-code blob-code-inner js-file-line" > extra < span
class
= "pl-k" > || < /span> ( isBorderBox <span class="pl-k">?</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>border<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>content<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L6366"
class
= "blob-num js-line-number"
data - line - number = "6366" > < /td>
    < td
id = "LC6366"
class
= "blob-code blob-code-inner js-file-line" > valueIsBorderBox,
<
/td>
< /tr>
< tr >
< td
id = "L6367"
class
= "blob-num js-line-number"
data - line - number = "6367" > < /td>
    < td
id = "LC6367"
class
= "blob-code blob-code-inner js-file-line" > styles < /td>
    < /tr>
    < tr >
    < td
id = "L6368"
class
= "blob-num js-line-number"
data - line - number = "6368" > < /td>
    < td
id = "LC6368"
class
= "blob-code blob-code-inner js-file-line" >
)<
/td>
< /tr>
< tr >
< td
id = "L6369"
class
= "blob-num js-line-number"
data - line - number = "6369" > < /td>
    < td
id = "LC6369"
class
= "blob-code blob-code-inner js-file-line" >
) <
span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > px < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6370"
class
= "blob-num js-line-number"
data - line - number = "6370" > < /td>
    < td
id = "LC6370"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6371"
class
= "blob-num js-line-number"
data - line - number = "6371" > < /td>
    < td
id = "LC6371"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6372"
class
= "blob-num js-line-number"
data - line - number = "6372" > < /td>
    < td
id = "LC6372"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L6373"
class
= "blob-num js-line-number"
data - line - number = "6373" > < /td>
    < td
id = "LC6373"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6374"
class
= "blob-num js-line-number"
data - line - number = "6374" > < /td>
    < td
id = "LC6374"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add in style property hooks for overriding the default</span></td>
    < /tr>
    < tr >
    < td
id = "L6375"
class
= "blob-num js-line-number"
data - line - number = "6375" > < /td>
    < td
id = "LC6375"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> behavior of getting and setting a style property</span></td>
    < /tr>
    < tr >
    < td
id = "L6376"
class
= "blob-num js-line-number"
data - line - number = "6376" > < /td>
    < td
id = "LC6376"
class
= "blob-code blob-code-inner js-file-line" > cssHooks < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6377"
class
= "blob-num js-line-number"
data - line - number = "6377" > < /td>
    < td
id = "LC6377"
class
= "blob-code blob-code-inner js-file-line" > opacity < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6378"
class
= "blob-num js-line-number"
data - line - number = "6378" > < /td>
    < td
id = "LC6378"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> function( elem, computed ) {</
td >
< /tr>
< tr >
< td
id = "L6379"
class
= "blob-num js-line-number"
data - line - number = "6379" > < /td>
    < td
id = "LC6379"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( computed ) {</
td >
< /tr>
< tr >
< td
id = "L6380"
class
= "blob-num js-line-number"
data - line - number = "6380" > < /td>
    < td
id = "LC6380"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6381"
class
= "blob-num js-line-number"
data - line - number = "6381" > < /td>
    < td
id = "LC6381"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> We should always get a number back from opacity</span></td>
    < /tr>
    < tr >
    < td
id = "L6382"
class
= "blob-num js-line-number"
data - line - number = "6382" > < /td>
    < td
id = "LC6382"
class
= "blob-code blob-code-inner js-file-line" >
var ret
<
span
class
= "pl-k" >= < /span> curCSS( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > opacity < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6383"
class
= "blob-num js-line-number"
data - line - number = "6383" > < /td>
    < td
id = "LC6383"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>1<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > ret;
<
/td>
< /tr>
< tr >
< td
id = "L6384"
class
= "blob-num js-line-number"
data - line - number = "6384" > < /td>
    < td
id = "LC6384"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6385"
class
= "blob-num js-line-number"
data - line - number = "6385" > < /td>
    < td
id = "LC6385"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6386"
class
= "blob-num js-line-number"
data - line - number = "6386" > < /td>
    < td
id = "LC6386"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6387"
class
= "blob-num js-line-number"
data - line - number = "6387" > < /td>
    < td
id = "LC6387"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6388"
class
= "blob-num js-line-number"
data - line - number = "6388" > < /td>
    < td
id = "LC6388"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6389"
class
= "blob-num js-line-number"
data - line - number = "6389" > < /td>
    < td
id = "LC6389"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t automatically add &quot;px&quot; to these possibly-unitless properties</span></td>
    < /tr>
    < tr >
    < td
id = "L6390"
class
= "blob-num js-line-number"
data - line - number = "6390" > < /td>
    < td
id = "LC6390"
class
= "blob-code blob-code-inner js-file-line" > cssNumber < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6391"
class
= "blob-num js-line-number"
data - line - number = "6391" > < /td>
    < td
id = "LC6391"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>animationIterationCount<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6392"
class
= "blob-num js-line-number"
data - line - number = "6392" > < /td>
    < td
id = "LC6392"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>columnCount<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6393"
class
= "blob-num js-line-number"
data - line - number = "6393" > < /td>
    < td
id = "LC6393"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fillOpacity<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6394"
class
= "blob-num js-line-number"
data - line - number = "6394" > < /td>
    < td
id = "LC6394"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>flexGrow<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6395"
class
= "blob-num js-line-number"
data - line - number = "6395" > < /td>
    < td
id = "LC6395"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>flexShrink<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6396"
class
= "blob-num js-line-number"
data - line - number = "6396" > < /td>
    < td
id = "LC6396"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fontWeight<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6397"
class
= "blob-num js-line-number"
data - line - number = "6397" > < /td>
    < td
id = "LC6397"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>lineHeight<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6398"
class
= "blob-num js-line-number"
data - line - number = "6398" > < /td>
    < td
id = "LC6398"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>opacity<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6399"
class
= "blob-num js-line-number"
data - line - number = "6399" > < /td>
    < td
id = "LC6399"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>order<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6400"
class
= "blob-num js-line-number"
data - line - number = "6400" > < /td>
    < td
id = "LC6400"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>orphans<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6401"
class
= "blob-num js-line-number"
data - line - number = "6401" > < /td>
    < td
id = "LC6401"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>widows<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6402"
class
= "blob-num js-line-number"
data - line - number = "6402" > < /td>
    < td
id = "LC6402"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>zIndex<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L6403"
class
= "blob-num js-line-number"
data - line - number = "6403" > < /td>
    < td
id = "LC6403"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>zoom<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span></
td >
< /tr>
< tr >
< td
id = "L6404"
class
= "blob-num js-line-number"
data - line - number = "6404" > < /td>
    < td
id = "LC6404"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6405"
class
= "blob-num js-line-number"
data - line - number = "6405" > < /td>
    < td
id = "LC6405"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6406"
class
= "blob-num js-line-number"
data - line - number = "6406" > < /td>
    < td
id = "LC6406"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add in properties whose names you wish to fix before</span></td>
    < /tr>
    < tr >
    < td
id = "L6407"
class
= "blob-num js-line-number"
data - line - number = "6407" > < /td>
    < td
id = "LC6407"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> setting or getting the value</span></td>
    < /tr>
    < tr >
    < td
id = "L6408"
class
= "blob-num js-line-number"
data - line - number = "6408" > < /td>
    < td
id = "LC6408"
class
= "blob-code blob-code-inner js-file-line" > cssProps < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6409"
class
= "blob-num js-line-number"
data - line - number = "6409" > < /td>
    < td
id = "LC6409"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>float<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>cssFloat<span class="pl-pds">&quot;</s
pan > < /span></
td >
< /tr>
< tr >
< td
id = "L6410"
class
= "blob-num js-line-number"
data - line - number = "6410" > < /td>
    < td
id = "LC6410"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6411"
class
= "blob-num js-line-number"
data - line - number = "6411" > < /td>
    < td
id = "LC6411"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6412"
class
= "blob-num js-line-number"
data - line - number = "6412" > < /td>
    < td
id = "LC6412"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get and set the style property on a DOM Node</span></td>
    < /tr>
    < tr >
    < td
id = "L6413"
class
= "blob-num js-line-number"
data - line - number = "6413" > < /td>
    < td
id = "LC6413"
class
= "blob-code blob-code-inner js-file-line" > style < span
class
= "pl-k" >
:<
/span> function( elem, name, value, extra ) {</
td >
< /tr>
< tr >
< td
id = "L6414"
class
= "blob-num js-line-number"
data - line - number = "6414" > < /td>
    < td
id = "LC6414"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6415"
class
= "blob-num js-line-number"
data - line - number = "6415" > < /td>
    < td
id = "LC6415"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t set styles on text and comment nodes</span></td>
    < /tr>
    < tr >
    < td
id = "L6416"
class
= "blob-num js-line-number"
data - line - number = "6416" > < /td>
    < td
id = "LC6416"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > elem < span
class
= "pl-k" > || < /span> elem<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">3</s
pan > < span
class
= "pl-k" > || < /span> elem<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">8</s
pan > < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > elem < span
class
= "pl-k" >
.<
/span>style ) {</
td >
< /tr>
< tr >
< td
id = "L6417"
class
= "blob-num js-line-number"
data - line - number = "6417" > < /td>
    < td
id = "LC6417"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L6418"
class
= "blob-num js-line-number"
data - line - number = "6418" > < /td>
    < td
id = "LC6418"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6419"
class
= "blob-num js-line-number"
data - line - number = "6419" > < /td>
    < td
id = "LC6419"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6420"
class
= "blob-num js-line-number"
data - line - number = "6420" > < /td>
    < td
id = "LC6420"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure that we&#39;re working with the right name</span></td>
    < /tr>
    < tr >
    < td
id = "L6421"
class
= "blob-num js-line-number"
data - line - number = "6421" > < /td>
    < td
id = "LC6421"
class
= "blob-code blob-code-inner js-file-line" >
var ret, type, hooks, <
/td>
< /tr>
< tr >
< td
id = "L6422"
class
= "blob-num js-line-number"
data - line - number = "6422" > < /td>
    < td
id = "LC6422"
class
= "blob-code blob-code-inner js-file-line" > origName < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > camelCase(name),
<
/td>
< /tr>
< tr >
< td
id = "L6423"
class
= "blob-num js-line-number"
data - line - number = "6423" > < /td>
    < td
id = "LC6423"
class
= "blob-code blob-code-inner js-file-line" > style < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > style;
<
/td>
< /tr>
< tr >
< td
id = "L6424"
class
= "blob-num js-line-number"
data - line - number = "6424" > < /td>
    < td
id = "LC6424"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6425"
class
= "blob-num js-line-number"
data - line - number = "6425" > < /td>
    < td
id = "LC6425"
class
= "blob-code blob-code-inner js-file-line" > name < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > cssProps[origName] < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L6426"
class
= "blob-num js-line-number"
data - line - number = "6426" > < /td>
    < td
id = "LC6426"
class
= "blob-code blob-code-inner js-file-line" > (jQuery < span
class
= "pl-k" >
.<
/span>cssProps[ origName ] <span class="pl-k">=</s
pan > vendorPropName(origName) < span
class
= "pl-k" > || < /span> origName );</
td >
< /tr>
< tr >
< td
id = "L6427"
class
= "blob-num js-line-number"
data - line - number = "6427" > < /td>
    < td
id = "LC6427"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6428"
class
= "blob-num js-line-number"
data - line - number = "6428" > < /td>
    < td
id = "LC6428"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Gets hook for the prefixed version, then unprefixed version</span></td>
    < /tr>
    < tr >
    < td
id = "L6429"
class
= "blob-num js-line-number"
data - line - number = "6429" > < /td>
    < td
id = "LC6429"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > cssHooks[name] < span
class
= "pl-k" > || < /span> jQuery<span class="pl-k">.</s
pan > cssHooks[origName];
<
/td>
< /tr>
< tr >
< td
id = "L6430"
class
= "blob-num js-line-number"
data - line - number = "6430" > < /td>
    < td
id = "LC6430"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6431"
class
= "blob-num js-line-number"
data - line - number = "6431" > < /td>
    < td
id = "LC6431"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check if we&#39;re setting a value</span></td>
    < /tr>
    < tr >
    < td
id = "L6432"
class
= "blob-num js-line-number"
data - line - number = "6432" > < /td>
    < td
id = "LC6432"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( value <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined ) {</
td >
< /tr>
< tr >
< td
id = "L6433"
class
= "blob-num js-line-number"
data - line - number = "6433" > < /td>
    < td
id = "LC6433"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >= < /span> typeof value;</
td >
< /tr>
< tr >
< td
id = "L6434"
class
= "blob-num js-line-number"
data - line - number = "6434" > < /td>
    < td
id = "LC6434"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6435"
class
= "blob-num js-line-number"
data - line - number = "6435" > < /td>
    < td
id = "LC6435"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert &quot;+=&quot; or &quot;-=&quot; to relative numbers (#7345)</span></td>
    < /tr>
    < tr >
    < td
id = "L6436"
class
= "blob-num js-line-number"
data - line - number = "6436" > < /td>
    < td
id = "LC6436"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > (ret < span
class
= "pl-k" >= < /span> rcssNum<span class="pl-k">.</s
pan > exec(value)
) <
span
class
= "pl-k" > &amp;&amp; < /span> ret[ <span class="pl-c1">1</span> ] ) {</
td >
< /tr>
< tr >
< td
id = "L6437"
class
= "blob-num js-line-number"
data - line - number = "6437" > < /td>
    < td
id = "LC6437"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >= < /span> adjustCSS( elem, name, ret );</
td >
< /tr>
< tr >
< td
id = "L6438"
class
= "blob-num js-line-number"
data - line - number = "6438" > < /td>
    < td
id = "LC6438"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6439"
class
= "blob-num js-line-number"
data - line - number = "6439" > < /td>
    < td
id = "LC6439"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fixes bug #9237</span></td>
    < /tr>
    < tr >
    < td
id = "L6440"
class
= "blob-num js-line-number"
data - line - number = "6440" > < /td>
    < td
id = "LC6440"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > number < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6441"
class
= "blob-num js-line-number"
data - line - number = "6441" > < /td>
    < td
id = "LC6441"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6442"
class
= "blob-num js-line-number"
data - line - number = "6442" > < /td>
    < td
id = "LC6442"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6443"
class
= "blob-num js-line-number"
data - line - number = "6443" > < /td>
    < td
id = "LC6443"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure that null and NaN values aren&#39;t set (#7116)</span></td>
    < /tr>
    < tr >
    < td
id = "L6444"
class
= "blob-num js-line-number"
data - line - number = "6444" > < /td>
    < td
id = "LC6444"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( value <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">||</s
pan > value < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > value
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6445"
class
    = "blob-num js-line-number"
    data - line - number = "6445" > < /td>
        < td
    id = "LC6445"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6446"
class
    = "blob-num js-line-number"
    data - line - number = "6446" > < /td>
        < td
    id = "LC6446"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6447"
class
= "blob-num js-line-number"
data - line - number = "6447" > < /td>
    < td
id = "LC6447"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6448"
class
= "blob-num js-line-number"
data - line - number = "6448" > < /td>
    < td
id = "LC6448"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If a number was passed in, add the unit (except for certain CSS properties)</span></td>
    < /tr>
    < tr >
    < td
id = "L6449"
class
= "blob-num js-line-number"
data - line - number = "6449" > < /td>
    < td
id = "LC6449"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>number<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6450"
class
= "blob-num js-line-number"
data - line - number = "6450" > < /td>
    < td
id = "LC6450"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" > +=
<
/span> ret <span class="pl-k">&amp;&amp;</s
pan > ret[ < span
class
= "pl-c1" > 3 < /span> ] <span class="pl-k">||</s
pan > (jQuery < span
class
= "pl-k" >
.<
/span>cssNumber[ origName ] <span class="pl-k">?</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>px<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L6451"
class
= "blob-num js-line-number"
data - line - number = "6451" > < /td>
    < td
id = "LC6451"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6452"
class
= "blob-num js-line-number"
data - line - number = "6452" > < /td>
    < td
id = "LC6452"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6453"
class
= "blob-num js-line-number"
data - line - number = "6453" > < /td>
    < td
id = "LC6453"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> background-* props affect original clone&#39;s values</span></td>
    < /tr>
    < tr >
    < td
id = "L6454"
class
= "blob-num js-line-number"
data - line - number = "6454" > < /td>
    < td
id = "LC6454"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>clearCloneStyle <span class="pl-k">&amp;&amp;</s
pan > value < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> name<span class="pl-k">.</s
pan > indexOf( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>background<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 0 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6455"
class
= "blob-num js-line-number"
data - line - number = "6455" > < /td>
    < td
id = "LC6455"
class
= "blob-code blob-code-inner js-file-line" > style[name] < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > inherit < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6456"
class
= "blob-num js-line-number"
data - line - number = "6456" > < /td>
    < td
id = "LC6456"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6457"
class
= "blob-num js-line-number"
data - line - number = "6457" > < /td>
    < td
id = "LC6457"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6458"
class
= "blob-num js-line-number"
data - line - number = "6458" > < /td>
    < td
id = "LC6458"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If a hook was provided, use that value, otherwise just set the specified value</span></td>
    < /tr>
    < tr >
    < td
id = "L6459"
class
= "blob-num js-line-number"
data - line - number = "6459" > < /td>
    < td
id = "LC6459"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > hooks < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>set<span class="pl-pds">&quot;</s
pan > < /span> in hooks ) <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6460"
class
= "blob-num js-line-number"
data - line - number = "6460" > < /td>
    < td
id = "LC6460"
class
= "blob-code blob-code-inner js-file-line" > (value < span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > set(elem, value, extra)
) <
span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6461"
class
    = "blob-num js-line-number"
    data - line - number = "6461" > < /td>
        < td
    id = "LC6461"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6462"
class
    = "blob-num js-line-number"
    data - line - number = "6462" > < /td>
        < td
    id = "LC6462"
class
    = "blob-code blob-code-inner js-file-line" > style[name] < span
class
    = "pl-k" >= < /span> value;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6463"
class
    = "blob-num js-line-number"
    data - line - number = "6463" > < /td>
        < td
    id = "LC6463"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6464"
class
= "blob-num js-line-number"
data - line - number = "6464" > < /td>
    < td
id = "LC6464"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6465"
class
= "blob-num js-line-number"
data - line - number = "6465" > < /td>
    < td
id = "LC6465"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6466"
class
= "blob-num js-line-number"
data - line - number = "6466" > < /td>
    < td
id = "LC6466"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6467"
class
= "blob-num js-line-number"
data - line - number = "6467" > < /td>
    < td
id = "LC6467"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If a hook was provided get the non-computed value from there</span></td>
    < /tr>
    < tr >
    < td
id = "L6468"
class
= "blob-num js-line-number"
data - line - number = "6468" > < /td>
    < td
id = "LC6468"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>get<span class="pl-pds">&quot;</s
pan > < /span> in hooks <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6469"
class
= "blob-num js-line-number"
data - line - number = "6469" > < /td>
    < td
id = "LC6469"
class
= "blob-code blob-code-inner js-file-line" > (ret < span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > get(elem, < span
class
= "pl-c1" > false < /span>, extra ) ) <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined ) {</
td >
< /tr>
< tr >
< td
id = "L6470"
class
= "blob-num js-line-number"
data - line - number = "6470" > < /td>
    < td
id = "LC6470"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6471"
class
= "blob-num js-line-number"
data - line - number = "6471" > < /td>
    < td
id = "LC6471"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L6472"
class
= "blob-num js-line-number"
data - line - number = "6472" > < /td>
    < td
id = "LC6472"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6473"
class
= "blob-num js-line-number"
data - line - number = "6473" > < /td>
    < td
id = "LC6473"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6474"
class
= "blob-num js-line-number"
data - line - number = "6474" > < /td>
    < td
id = "LC6474"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise just get the value from the style object</span></td>
    < /tr>
    < tr >
    < td
id = "L6475"
class
= "blob-num js-line-number"
data - line - number = "6475" > < /td>
    < td
id = "LC6475"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> style[ name ];</
td >
< /tr>
< tr >
< td
id = "L6476"
class
= "blob-num js-line-number"
data - line - number = "6476" > < /td>
    < td
id = "LC6476"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6477"
class
= "blob-num js-line-number"
data - line - number = "6477" > < /td>
    < td
id = "LC6477"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6478"
class
= "blob-num js-line-number"
data - line - number = "6478" > < /td>
    < td
id = "LC6478"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6479"
class
= "blob-num js-line-number"
data - line - number = "6479" > < /td>
    < td
id = "LC6479"
class
= "blob-code blob-code-inner js-file-line" > css < span
class
= "pl-k" >
:<
/span> function( elem, name, extra, styles ) {</
td >
< /tr>
< tr >
< td
id = "L6480"
class
= "blob-num js-line-number"
data - line - number = "6480" > < /td>
    < td
id = "LC6480"
class
= "blob-code blob-code-inner js-file-line" >
var val, num, hooks, <
/td>
< /tr>
< tr >
< td
id = "L6481"
class
= "blob-num js-line-number"
data - line - number = "6481" > < /td>
    < td
id = "LC6481"
class
= "blob-code blob-code-inner js-file-line" > origName < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > camelCase(name);
<
/td>
< /tr>
< tr >
< td
id = "L6482"
class
= "blob-num js-line-number"
data - line - number = "6482" > < /td>
    < td
id = "LC6482"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6483"
class
= "blob-num js-line-number"
data - line - number = "6483" > < /td>
    < td
id = "LC6483"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure that we&#39;re working with the right name</span></td>
    < /tr>
    < tr >
    < td
id = "L6484"
class
= "blob-num js-line-number"
data - line - number = "6484" > < /td>
    < td
id = "LC6484"
class
= "blob-code blob-code-inner js-file-line" > name < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > cssProps[origName] < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L6485"
class
= "blob-num js-line-number"
data - line - number = "6485" > < /td>
    < td
id = "LC6485"
class
= "blob-code blob-code-inner js-file-line" > (jQuery < span
class
= "pl-k" >
.<
/span>cssProps[ origName ] <span class="pl-k">=</s
pan > vendorPropName(origName) < span
class
= "pl-k" > || < /span> origName );</
td >
< /tr>
< tr >
< td
id = "L6486"
class
= "blob-num js-line-number"
data - line - number = "6486" > < /td>
    < td
id = "LC6486"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6487"
class
= "blob-num js-line-number"
data - line - number = "6487" > < /td>
    < td
id = "LC6487"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Try prefixed name followed by the unprefixed name</span></td>
    < /tr>
    < tr >
    < td
id = "L6488"
class
= "blob-num js-line-number"
data - line - number = "6488" > < /td>
    < td
id = "LC6488"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > cssHooks[name] < span
class
= "pl-k" > || < /span> jQuery<span class="pl-k">.</s
pan > cssHooks[origName];
<
/td>
< /tr>
< tr >
< td
id = "L6489"
class
= "blob-num js-line-number"
data - line - number = "6489" > < /td>
    < td
id = "LC6489"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6490"
class
= "blob-num js-line-number"
data - line - number = "6490" > < /td>
    < td
id = "LC6490"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If a hook was provided get the computed value from there</span></td>
    < /tr>
    < tr >
    < td
id = "L6491"
class
= "blob-num js-line-number"
data - line - number = "6491" > < /td>
    < td
id = "LC6491"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>get<span class="pl-pds">&quot;</s
pan > < /span> in hooks ) {</
td >
< /tr>
< tr >
< td
id = "L6492"
class
= "blob-num js-line-number"
data - line - number = "6492" > < /td>
    < td
id = "LC6492"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > get(elem, < span
class
= "pl-c1" > true < /span>, extra );</
td >
< /tr>
< tr >
< td
id = "L6493"
class
= "blob-num js-line-number"
data - line - number = "6493" > < /td>
    < td
id = "LC6493"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6494"
class
= "blob-num js-line-number"
data - line - number = "6494" > < /td>
    < td
id = "LC6494"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6495"
class
= "blob-num js-line-number"
data - line - number = "6495" > < /td>
    < td
id = "LC6495"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise, if a way to get the computed value exists, use that</span></td>
    < /tr>
    < tr >
    < td
id = "L6496"
class
= "blob-num js-line-number"
data - line - number = "6496" > < /td>
    < td
id = "LC6496"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( val <span class="pl-k">===</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6497"
class
    = "blob-num js-line-number"
    data - line - number = "6497" > < /td>
        < td
    id = "LC6497"
class
    = "blob-code blob-code-inner js-file-line" > val < span
class
    = "pl-k" >= < /span> curCSS( elem, name, styles );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6498"
class
    = "blob-num js-line-number"
    data - line - number = "6498" > < /td>
        < td
    id = "LC6498"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6499"
class
= "blob-num js-line-number"
data - line - number = "6499" > < /td>
    < td
id = "LC6499"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6500"
class
= "blob-num js-line-number"
data - line - number = "6500" > < /td>
    < td
id = "LC6500"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert &quot;normal&quot; to computed value</span></td>
    < /tr>
    < tr >
    < td
id = "L6501"
class
= "blob-num js-line-number"
data - line - number = "6501" > < /td>
    < td
id = "LC6501"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( val <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>normal<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > name in cssNormalTransform
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6502"
class
    = "blob-num js-line-number"
    data - line - number = "6502" > < /td>
        < td
    id = "LC6502"
class
    = "blob-code blob-code-inner js-file-line" > val < span
class
    = "pl-k" >= < /span> cssNormalTransform[ name ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6503"
class
    = "blob-num js-line-number"
    data - line - number = "6503" > < /td>
        < td
    id = "LC6503"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6504"
class
= "blob-num js-line-number"
data - line - number = "6504" > < /td>
    < td
id = "LC6504"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6505"
class
= "blob-num js-line-number"
data - line - number = "6505" > < /td>
    < td
id = "LC6505"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make numeric if forced or a qualifier was provided and val looks numeric</span></td>
    < /tr>
    < tr >
    < td
id = "L6506"
class
= "blob-num js-line-number"
data - line - number = "6506" > < /td>
    < td
id = "LC6506"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( extra <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">||</s
pan > extra
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6507"
class
    = "blob-num js-line-number"
    data - line - number = "6507" > < /td>
        < td
    id = "LC6507"
class
    = "blob-code blob-code-inner js-file-line" > num < span
class
    = "pl-k" >= < /span> parseFloat( val );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6508"
class
    = "blob-num js-line-number"
    data - line - number = "6508" > < /td>
        < td
    id = "LC6508"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> extra <span class="pl-k">===</s
    pan > < span
class
    = "pl-c1" > true < /span> <span class="pl-k">||</s
    pan > isFinite(num) < span
class
    = "pl-k" > ?
<
    /span> num <span class="pl-k">||</s
    pan > < span
class
    = "pl-c1" > 0 < /span> <span class="pl-k">:</s
    pan > val;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6509"
class
    = "blob-num js-line-number"
    data - line - number = "6509" > < /td>
        < td
    id = "LC6509"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6510"
class
= "blob-num js-line-number"
data - line - number = "6510" > < /td>
    < td
id = "LC6510"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> val;</
td >
< /tr>
< tr >
< td
id = "L6511"
class
= "blob-num js-line-number"
data - line - number = "6511" > < /td>
    < td
id = "LC6511"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6512"
class
= "blob-num js-line-number"
data - line - number = "6512" > < /td>
    < td
id = "LC6512"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6513"
class
= "blob-num js-line-number"
data - line - number = "6513" > < /td>
    < td
id = "LC6513"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6514"
class
= "blob-num js-line-number"
data - line - number = "6514" > < /td>
    < td
id = "LC6514"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( [ <span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span> ], function( i, name ) {</
td >
< /tr>
< tr >
< td
id = "L6515"
class
= "blob-num js-line-number"
data - line - number = "6515" > < /td>
    < td
id = "LC6515"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>cssHooks[ name ] <span class="pl-k">=</s
pan > { < /td>
< /tr>
< tr >
< td
id = "L6516"
class
= "blob-num js-line-number"
data - line - number = "6516" > < /td>
    < td
id = "LC6516"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> function( elem, computed, extra ) {</
td >
< /tr>
< tr >
< td
id = "L6517"
class
= "blob-num js-line-number"
data - line - number = "6517" > < /td>
    < td
id = "LC6517"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( computed ) {</
td >
< /tr>
< tr >
< td
id = "L6518"
class
= "blob-num js-line-number"
data - line - number = "6518" > < /td>
    < td
id = "LC6518"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6519"
class
= "blob-num js-line-number"
data - line - number = "6519" > < /td>
    < td
id = "LC6519"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Certain elements can have dimension info if we invisibly show them</span></td>
    < /tr>
    < tr >
    < td
id = "L6520"
class
= "blob-num js-line-number"
data - line - number = "6520" > < /td>
    < td
id = "LC6520"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> but it must have a current display style that would benefit</span></td>
    < /tr>
    < tr >
    < td
id = "L6521"
class
= "blob-num js-line-number"
data - line - number = "6521" > < /td>
    < td
id = "LC6521"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> rdisplayswap<span class="pl-k">.</s
pan > test(jQuery < span
class
= "pl-k" >
.<
/span>css( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > display < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) ) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L6522"
class
= "blob-num js-line-number"
data - line - number = "6522" > < /td>
    < td
id = "LC6522"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6523"
class
= "blob-num js-line-number"
data - line - number = "6523" > < /td>
    < td
id = "LC6523"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Safari 8+</span></td>
    < /tr>
    < tr >
    < td
id = "L6524"
class
= "blob-num js-line-number"
data - line - number = "6524" > < /td>
    < td
id = "LC6524"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Table columns in Safari have non-zero offsetWidth &amp; zero</span></td>
    < /tr>
    < tr >
    < td
id = "L6525"
class
= "blob-num js-line-number"
data - line - number = "6525" > < /td>
    < td
id = "LC6525"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> getBoundingClientRect().width unless display is changed.</span></td>
    < /tr>
    < tr >
    < td
id = "L6526"
class
= "blob-num js-line-number"
data - line - number = "6526" > < /td>
    < td
id = "LC6526"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L6527"
class
= "blob-num js-line-number"
data - line - number = "6527" > < /td>
    < td
id = "LC6527"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Running getBoundingClientRect on a disconnected node</span></td>
    < /tr>
    < tr >
    < td
id = "L6528"
class
= "blob-num js-line-number"
data - line - number = "6528" > < /td>
    < td
id = "LC6528"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> in IE throws an error.</span></td>
    < /tr>
    < tr >
    < td
id = "L6529"
class
= "blob-num js-line-number"
data - line - number = "6529" > < /td>
    < td
id = "LC6529"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-k" > ! < /span>elem<span class="pl-k">.</s
pan > getClientRects() < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>elem<span class="pl-k">.</s
pan > getBoundingClientRect() < span
class
= "pl-k" >
.<
/span>width ) <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6530"
class
= "blob-num js-line-number"
data - line - number = "6530" > < /td>
    < td
id = "LC6530"
class
= "blob-code blob-code-inner js-file-line" > swap(elem, cssShow, function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6531"
class
    = "blob-num js-line-number"
    data - line - number = "6531" > < /td>
        < td
    id = "LC6531"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> getWidthOrHeight( elem, name, extra );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6532"
class
    = "blob-num js-line-number"
    data - line - number = "6532" > < /td>
        < td
    id = "LC6532"
class
    = "blob-code blob-code-inner js-file-line" >
}) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L6533"
class
= "blob-num js-line-number"
data - line - number = "6533" > < /td>
    < td
id = "LC6533"
class
= "blob-code blob-code-inner js-file-line" > getWidthOrHeight(elem, name, extra);
<
/td>
< /tr>
< tr >
< td
id = "L6534"
class
= "blob-num js-line-number"
data - line - number = "6534" > < /td>
    < td
id = "LC6534"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6535"
class
= "blob-num js-line-number"
data - line - number = "6535" > < /td>
    < td
id = "LC6535"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6536"
class
= "blob-num js-line-number"
data - line - number = "6536" > < /td>
    < td
id = "LC6536"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6537"
class
= "blob-num js-line-number"
data - line - number = "6537" > < /td>
    < td
id = "LC6537"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( elem, value, extra ) {</
td >
< /tr>
< tr >
< td
id = "L6538"
class
= "blob-num js-line-number"
data - line - number = "6538" > < /td>
    < td
id = "LC6538"
class
= "blob-code blob-code-inner js-file-line" >
var matches, <
/td>
< /tr>
< tr >
< td
id = "L6539"
class
= "blob-num js-line-number"
data - line - number = "6539" > < /td>
    < td
id = "LC6539"
class
= "blob-code blob-code-inner js-file-line" > styles < span
class
= "pl-k" >= < /span> extra <span class="pl-k">&amp;&amp;</s
pan > getStyles(elem),
<
/td>
< /tr>
< tr >
< td
id = "L6540"
class
= "blob-num js-line-number"
data - line - number = "6540" > < /td>
    < td
id = "LC6540"
class
= "blob-code blob-code-inner js-file-line" > subtract < span
class
= "pl-k" >= < /span> extra <span class="pl-k">&amp;&amp;</s
pan > augmentWidthOrHeight( < /td>
< /tr>
< tr >
< td
id = "L6541"
class
= "blob-num js-line-number"
data - line - number = "6541" > < /td>
    < td
id = "LC6541"
class
= "blob-code blob-code-inner js-file-line" > elem,
<
/td>
< /tr>
< tr >
< td
id = "L6542"
class
= "blob-num js-line-number"
data - line - number = "6542" > < /td>
    < td
id = "LC6542"
class
= "blob-code blob-code-inner js-file-line" > name,
<
/td>
< /tr>
< tr >
< td
id = "L6543"
class
= "blob-num js-line-number"
data - line - number = "6543" > < /td>
    < td
id = "LC6543"
class
= "blob-code blob-code-inner js-file-line" > extra,
<
/td>
< /tr>
< tr >
< td
id = "L6544"
class
= "blob-num js-line-number"
data - line - number = "6544" > < /td>
    < td
id = "LC6544"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>css( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > boxSizing < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-c1" > false < /span>, styles ) <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>border-box<span class="pl-pds">&quot;</s
pan > < /span>,</
td >
< /tr>
< tr >
< td
id = "L6545"
class
= "blob-num js-line-number"
data - line - number = "6545" > < /td>
    < td
id = "LC6545"
class
= "blob-code blob-code-inner js-file-line" > styles < /td>
    < /tr>
    < tr >
    < td
id = "L6546"
class
= "blob-num js-line-number"
data - line - number = "6546" > < /td>
    < td
id = "LC6546"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6547"
class
= "blob-num js-line-number"
data - line - number = "6547" > < /td>
    < td
id = "LC6547"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6548"
class
= "blob-num js-line-number"
data - line - number = "6548" > < /td>
    < td
id = "LC6548"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert to pixels if value adjustment is needed</span></td>
    < /tr>
    < tr >
    < td
id = "L6549"
class
= "blob-num js-line-number"
data - line - number = "6549" > < /td>
    < td
id = "LC6549"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( subtract <span class="pl-k">&amp;&amp;</s
pan > (matches < span
class
= "pl-k" >= < /span> rcssNum<span class="pl-k">.</s
pan > exec(value)
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L6550"
class
= "blob-num js-line-number"
data - line - number = "6550" > < /td>
    < td
id = "LC6550"
class
= "blob-code blob-code-inner js-file-line" > (matches[ < span
class
= "pl-c1" > 3 < /span> ] <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>px<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > px < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6551"
class
    = "blob-num js-line-number"
    data - line - number = "6551" > < /td>
        < td
    id = "LC6551"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6552"
class
    = "blob-num js-line-number"
    data - line - number = "6552" > < /td>
        < td
    id = "LC6552"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>style[ name ] <span class="pl-k">=</s
    pan > value;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6553"
class
    = "blob-num js-line-number"
    data - line - number = "6553" > < /td>
        < td
    id = "LC6553"
class
    = "blob-code blob-code-inner js-file-line" > value < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > css(elem, name);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6554"
class
    = "blob-num js-line-number"
    data - line - number = "6554" > < /td>
        < td
    id = "LC6554"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6555"
class
= "blob-num js-line-number"
data - line - number = "6555" > < /td>
    < td
id = "LC6555"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6556"
class
= "blob-num js-line-number"
data - line - number = "6556" > < /td>
    < td
id = "LC6556"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> setPositiveNumber( elem, value, subtract );</
td >
< /tr>
< tr >
< td
id = "L6557"
class
= "blob-num js-line-number"
data - line - number = "6557" > < /td>
    < td
id = "LC6557"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6558"
class
= "blob-num js-line-number"
data - line - number = "6558" > < /td>
    < td
id = "LC6558"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L6559"
class
= "blob-num js-line-number"
data - line - number = "6559" > < /td>
    < td
id = "LC6559"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6560"
class
= "blob-num js-line-number"
data - line - number = "6560" > < /td>
    < td
id = "LC6560"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6561"
class
= "blob-num js-line-number"
data - line - number = "6561" > < /td>
    < td
id = "LC6561"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>cssHooks<span class="pl-k">.</s
pan > marginLeft < span
class
= "pl-k" >= < /span> addGetHookIf( support<span class="pl-k">.</s
pan > reliableMarginLeft,
<
/td>
< /tr>
< tr >
< td
id = "L6562"
class
= "blob-num js-line-number"
data - line - number = "6562" > < /td>
    < td
id = "LC6562"
class
= "blob-code blob-code-inner js-file-line" > function (elem, computed) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6563"
class
    = "blob-num js-line-number"
    data - line - number = "6563" > < /td>
        < td
    id = "LC6563"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( computed ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6564"
class
    = "blob-num js-line-number"
    data - line - number = "6564" > < /td>
        < td
    id = "LC6564"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> ( parseFloat( curCSS( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > marginLeft < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
) <
span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L6565"
class
= "blob-num js-line-number"
data - line - number = "6565" > < /td>
    < td
id = "LC6565"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>getBoundingClientRect()<span class="pl-k">.</s
pan > left < span
class
= "pl-k" > - < /span></
td >
< /tr>
< tr >
< td
id = "L6566"
class
= "blob-num js-line-number"
data - line - number = "6566" > < /td>
    < td
id = "LC6566"
class
= "blob-code blob-code-inner js-file-line" > swap(elem, {marginLeft < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">0</s
pan >
},

function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6567"
class
    = "blob-num js-line-number"
    data - line - number = "6567" > < /td>
        < td
    id = "LC6567"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem<span class="pl-k">.</s
    pan > getBoundingClientRect() < span
class
    = "pl-k" >
.<
    /span>left;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6568"
class
    = "blob-num js-line-number"
    data - line - number = "6568" > < /td>
        < td
    id = "LC6568"
class
    = "blob-code blob-code-inner js-file-line" >
}

)<
/td>
< /tr>
< tr >
< td
id = "L6569"
class
= "blob-num js-line-number"
data - line - number = "6569" > < /td>
    < td
id = "LC6569"
class
= "blob-code blob-code-inner js-file-line" >
) <
span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > px < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6570"
class
= "blob-num js-line-number"
data - line - number = "6570" > < /td>
    < td
id = "LC6570"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6571"
class
= "blob-num js-line-number"
data - line - number = "6571" > < /td>
    < td
id = "LC6571"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6572"
class
= "blob-num js-line-number"
data - line - number = "6572" > < /td>
    < td
id = "LC6572"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6573"
class
= "blob-num js-line-number"
data - line - number = "6573" > < /td>
    < td
id = "LC6573"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6574"
class
= "blob-num js-line-number"
data - line - number = "6574" > < /td>
    < td
id = "LC6574"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> These hooks are used by animate to expand properties</span></td>
    < /tr>
    < tr >
    < td
id = "L6575"
class
= "blob-num js-line-number"
data - line - number = "6575" > < /td>
    < td
id = "LC6575"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( {</
td >
< /tr>
< tr >
< td
id = "L6576"
class
= "blob-num js-line-number"
data - line - number = "6576" > < /td>
    < td
id = "LC6576"
class
= "blob-code blob-code-inner js-file-line" > margin < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L6577"
class
= "blob-num js-line-number"
data - line - number = "6577" > < /td>
    < td
id = "LC6577"
class
= "blob-code blob-code-inner js-file-line" > padding < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L6578"
class
= "blob-num js-line-number"
data - line - number = "6578" > < /td>
    < td
id = "LC6578"
class
= "blob-code blob-code-inner js-file-line" > border < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > Width < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L6579"
class
= "blob-num js-line-number"
data - line - number = "6579" > < /td>
    < td
id = "LC6579"
class
= "blob-code blob-code-inner js-file-line" >
},

function (prefix, suffix) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6580"
class
    = "blob-num js-line-number"
    data - line - number = "6580" > < /td>
        < td
    id = "LC6580"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>cssHooks[ prefix <span class="pl-k">+</span> suffix ] <span class="pl-k">=</s
    pan > { < /td>
    < /tr>
    < tr >
    < td
    id = "L6581"
class
    = "blob-num js-line-number"
    data - line - number = "6581" > < /td>
        < td
    id = "LC6581"
class
    = "blob-code blob-code-inner js-file-line" > expand < span
class
    = "pl-k" >
:<
    /span> function( value ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6582"
class
    = "blob-num js-line-number"
    data - line - number = "6582" > < /td>
        < td
    id = "LC6582"
class
    = "blob-code blob-code-inner js-file-line" >
    var i
<
    span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6583"
class
    = "blob-num js-line-number"
    data - line - number = "6583" > < /td>
        < td
    id = "LC6583"
class
    = "blob-code blob-code-inner js-file-line" > expanded < span
class
    = "pl-k" >= < /span> {},</
    td >
    < /tr>
    < tr >
    < td
    id = "L6584"
class
    = "blob-num js-line-number"
    data - line - number = "6584" > < /td>
        < td
    id = "LC6584"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6585"
class
    = "blob-num js-line-number"
    data - line - number = "6585" > < /td>
        < td
    id = "LC6585"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Assumes a single number if not a string</span></td>
        < /tr>
        < tr >
        < td
    id = "L6586"
class
    = "blob-num js-line-number"
    data - line - number = "6586" > < /td>
        < td
    id = "LC6586"
class
    = "blob-code blob-code-inner js-file-line" > parts < span
class
    = "pl-k" >= < /span> typeof value <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>string<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">?</s
    pan > value < span
class
    = "pl-k" >
.<
    /span>split( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)

<
span
class
= "pl-k" >
:<
/span> [ value ];</
td >
< /tr>
< tr >
< td
id = "L6587"
class
= "blob-num js-line-number"
data - line - number = "6587" > < /td>
    < td
id = "LC6587"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6588"
class
= "blob-num js-line-number"
data - line - number = "6588" > < /td>
    < td
id = "LC6588"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > < span
class
= "pl-c1" > 4 < /span>; i<span class="pl-k">++</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6589"
class
    = "blob-num js-line-number"
    data - line - number = "6589" > < /td>
        < td
    id = "LC6589"
class
    = "blob-code blob-code-inner js-file-line" > expanded[prefix < span
class
    = "pl-k" > + < /span> cssExpand[ i ] <span class="pl-k">+</s
    pan > suffix
] <
    span
class
    = "pl-k" >= < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L6590"
class
    = "blob-num js-line-number"
    data - line - number = "6590" > < /td>
        < td
    id = "LC6590"
class
    = "blob-code blob-code-inner js-file-line" > parts[i] < span
class
    = "pl-k" > || < /span> parts[ i <span class="pl-k">-</span> <span class="pl-c1">2</span> ] <span class="pl-k">||</s
    pan > parts[ < span
class
    = "pl-c1" > 0 < /span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6591"
class
    = "blob-num js-line-number"
    data - line - number = "6591" > < /td>
        < td
    id = "LC6591"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6592"
class
= "blob-num js-line-number"
data - line - number = "6592" > < /td>
    < td
id = "LC6592"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6593"
class
= "blob-num js-line-number"
data - line - number = "6593" > < /td>
    < td
id = "LC6593"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> expanded;</
td >
< /tr>
< tr >
< td
id = "L6594"
class
= "blob-num js-line-number"
data - line - number = "6594" > < /td>
    < td
id = "LC6594"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6595"
class
= "blob-num js-line-number"
data - line - number = "6595" > < /td>
    < td
id = "LC6595"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L6596"
class
= "blob-num js-line-number"
data - line - number = "6596" > < /td>
    < td
id = "LC6596"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6597"
class
= "blob-num js-line-number"
data - line - number = "6597" > < /td>
    < td
id = "LC6597"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > rmargin < span
class
= "pl-k" >
.<
/span>test( prefix ) ) {</
td >
< /tr>
< tr >
< td
id = "L6598"
class
= "blob-num js-line-number"
data - line - number = "6598" > < /td>
    < td
id = "LC6598"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>cssHooks[ prefix <span class="pl-k">+</span> suffix ]<span class="pl-k">.</s
pan > set < span
class
= "pl-k" >= < /span> setPositiveNumber;</
td >
< /tr>
< tr >
< td
id = "L6599"
class
= "blob-num js-line-number"
data - line - number = "6599" > < /td>
    < td
id = "LC6599"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6600"
class
= "blob-num js-line-number"
data - line - number = "6600" > < /td>
    < td
id = "LC6600"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6601"
class
= "blob-num js-line-number"
data - line - number = "6601" > < /td>
    < td
id = "LC6601"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6602"
class
= "blob-num js-line-number"
data - line - number = "6602" > < /td>
    < td
id = "LC6602"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L6603"
class
= "blob-num js-line-number"
data - line - number = "6603" > < /td>
    < td
id = "LC6603"
class
= "blob-code blob-code-inner js-file-line" > css < span
class
= "pl-k" >
:<
/span> function( name, value ) {</
td >
< /tr>
< tr >
< td
id = "L6604"
class
= "blob-num js-line-number"
data - line - number = "6604" > < /td>
    < td
id = "LC6604"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> access( <span class="pl-c1">this</s
pan >, function (elem, name, value) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6605"
class
    = "blob-num js-line-number"
    data - line - number = "6605" > < /td>
        < td
    id = "LC6605"
class
    = "blob-code blob-code-inner js-file-line" >
    var styles, len, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L6606"
class
    = "blob-num js-line-number"
    data - line - number = "6606" > < /td>
        < td
    id = "LC6606"
class
    = "blob-code blob-code-inner js-file-line" > map < span
class
    = "pl-k" >= < /span> {},</
    td >
    < /tr>
    < tr >
    < td
    id = "L6607"
class
    = "blob-num js-line-number"
    data - line - number = "6607" > < /td>
        < td
    id = "LC6607"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6608"
class
    = "blob-num js-line-number"
    data - line - number = "6608" > < /td>
        < td
    id = "LC6608"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6609"
class
    = "blob-num js-line-number"
    data - line - number = "6609" > < /td>
        < td
    id = "LC6609"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > isArray(name)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6610"
class
    = "blob-num js-line-number"
    data - line - number = "6610" > < /td>
        < td
    id = "LC6610"
class
    = "blob-code blob-code-inner js-file-line" > styles < span
class
    = "pl-k" >= < /span> getStyles( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6611"
class
    = "blob-num js-line-number"
    data - line - number = "6611" > < /td>
        < td
    id = "LC6611"
class
    = "blob-code blob-code-inner js-file-line" > len < span
class
    = "pl-k" >= < /span> name<span class="pl-k">.</s
    pan > length;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6612"
class
    = "blob-num js-line-number"
    data - line - number = "6612" > < /td>
        < td
    id = "LC6612"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6613"
class
    = "blob-num js-line-number"
    data - line - number = "6613" > < /td>
        < td
    id = "LC6613"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( ; i <span class="pl-k">&lt;</s
    pan > len;
    i < span
class
    = "pl-k" > ++ < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6614"
class
    = "blob-num js-line-number"
    data - line - number = "6614" > < /td>
        < td
    id = "LC6614"
class
    = "blob-code blob-code-inner js-file-line" > map[name[i]] < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > css(elem, name[i], < span
class
    = "pl-c1" > false < /span>, styles );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6615"
class
    = "blob-num js-line-number"
    data - line - number = "6615" > < /td>
        < td
    id = "LC6615"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6616"
class
= "blob-num js-line-number"
data - line - number = "6616" > < /td>
    < td
id = "LC6616"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6617"
class
= "blob-num js-line-number"
data - line - number = "6617" > < /td>
    < td
id = "LC6617"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> map;</
td >
< /tr>
< tr >
< td
id = "L6618"
class
= "blob-num js-line-number"
data - line - number = "6618" > < /td>
    < td
id = "LC6618"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6619"
class
= "blob-num js-line-number"
data - line - number = "6619" > < /td>
    < td
id = "LC6619"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6620"
class
= "blob-num js-line-number"
data - line - number = "6620" > < /td>
    < td
id = "LC6620"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> value <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6621"
class
= "blob-num js-line-number"
data - line - number = "6621" > < /td>
    < td
id = "LC6621"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>style( elem, name, value ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6622"
class
= "blob-num js-line-number"
data - line - number = "6622" > < /td>
    < td
id = "LC6622"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>css( elem, name );</
td >
< /tr>
< tr >
< td
id = "L6623"
class
= "blob-num js-line-number"
data - line - number = "6623" > < /td>
    < td
id = "LC6623"
class
= "blob-code blob-code-inner js-file-line" >
},
name, value, arguments < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">&gt;</s
pan > < span
class
= "pl-c1" > 1 < /span> );</
td >
< /tr>
< tr >
< td
id = "L6624"
class
= "blob-num js-line-number"
data - line - number = "6624" > < /td>
    < td
id = "LC6624"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6625"
class
= "blob-num js-line-number"
data - line - number = "6625" > < /td>
    < td
id = "LC6625"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6626"
class
= "blob-num js-line-number"
data - line - number = "6626" > < /td>
    < td
id = "LC6626"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6627"
class
= "blob-num js-line-number"
data - line - number = "6627" > < /td>
    < td
id = "LC6627"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6628"
class
= "blob-num js-line-number"
data - line - number = "6628" > < /td>
    < td
id = "LC6628"
class
= "blob-code blob-code-inner js-file-line" > function Tween(elem, options, prop, end, easing) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6629"
    class
        = "blob-num js-line-number"
        data - line - number = "6629" > < /td>
            < td
        id = "LC6629"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-k">new</s
        pan > < span
    class
        = "pl-smi" > Tween < /span>.prototype.init( elem, options, prop, end, easing );</
        td >
        < /tr>
        < tr >
        < td
        id = "L6630"
    class
        = "blob-num js-line-number"
        data - line - number = "6630" > < /td>
            < td
        id = "LC6630"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L6631"
class
= "blob-num js-line-number"
data - line - number = "6631" > < /td>
    < td
id = "LC6631"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > jQuery < span
class
= "pl-k" >
.<
/span>Tween</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-smi">Tween</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6632"
class
= "blob-num js-line-number"
data - line - number = "6632" > < /td>
    < td
id = "LC6632"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6633"
class
= "blob-num js-line-number"
data - line - number = "6633" > < /td>
    < td
id = "LC6633"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Tween < /span><span class="pl-k">.</s
pan > prototype < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L6634"
class
= "blob-num js-line-number"
data - line - number = "6634" > < /td>
    < td
id = "LC6634"
class
= "blob-code blob-code-inner js-file-line" > constructor < span
class
= "pl-k" >
:<
/span> <span class="pl-smi">Tween</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L6635"
class
= "blob-num js-line-number"
data - line - number = "6635" > < /td>
    < td
id = "LC6635"
class
= "blob-code blob-code-inner js-file-line" > init < span
class
= "pl-k" >
:<
/span> function( elem, options, prop, end, easing, unit ) {</
td >
< /tr>
< tr >
< td
id = "L6636"
class
= "blob-num js-line-number"
data - line - number = "6636" > < /td>
    < td
id = "LC6636"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > elem < span
class
= "pl-k" >= < /span> elem;</
td >
< /tr>
< tr >
< td
id = "L6637"
class
= "blob-num js-line-number"
data - line - number = "6637" > < /td>
    < td
id = "LC6637"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > prop < span
class
= "pl-k" >= < /span> prop;</
td >
< /tr>
< tr >
< td
id = "L6638"
class
= "blob-num js-line-number"
data - line - number = "6638" > < /td>
    < td
id = "LC6638"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > easing < span
class
= "pl-k" >= < /span> easing <span class="pl-k">||</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>easing<span class="pl-k">.</s
pan > _default;
<
/td>
< /tr>
< tr >
< td
id = "L6639"
class
= "blob-num js-line-number"
data - line - number = "6639" > < /td>
    < td
id = "LC6639"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > options < span
class
= "pl-k" >= < /span> options;</
td >
< /tr>
< tr >
< td
id = "L6640"
class
= "blob-num js-line-number"
data - line - number = "6640" > < /td>
    < td
id = "LC6640"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > start < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>now <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > cur();
<
/td>
< /tr>
< tr >
< td
id = "L6641"
class
= "blob-num js-line-number"
data - line - number = "6641" > < /td>
    < td
id = "LC6641"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > end < span
class
= "pl-k" >= < /span> end;</
td >
< /tr>
< tr >
< td
id = "L6642"
class
= "blob-num js-line-number"
data - line - number = "6642" > < /td>
    < td
id = "LC6642"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > unit < span
class
= "pl-k" >= < /span> unit <span class="pl-k">||</s
pan > (jQuery < span
class
= "pl-k" >
.<
/span>cssNumber[ prop ] <span class="pl-k">?</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>px<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L6643"
class
= "blob-num js-line-number"
data - line - number = "6643" > < /td>
    < td
id = "LC6643"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6644"
class
= "blob-num js-line-number"
data - line - number = "6644" > < /td>
    < td
id = "LC6644"
class
= "blob-code blob-code-inner js-file-line" > cur < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L6645"
class
= "blob-num js-line-number"
data - line - number = "6645" > < /td>
    < td
id = "LC6645"
class
= "blob-code blob-code-inner js-file-line" >
var hooks
<
span
class
= "pl-k" >= < /span> <span class="pl-smi">Tween</s
pan > < span
class
= "pl-k" >
.<
/span>propHooks[ <span class="pl-c1">this</span><span class="pl-k">.</span>prop ];</
td >
< /tr>
< tr >
< td
id = "L6646"
class
= "blob-num js-line-number"
data - line - number = "6646" > < /td>
    < td
id = "LC6646"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6647"
class
= "blob-num js-line-number"
data - line - number = "6647" > < /td>
    < td
id = "LC6647"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> hooks <span class="pl-k">&amp;&amp;</s
pan > hooks < span
class
= "pl-k" >
.<
/span>get <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6648"
class
= "blob-num js-line-number"
data - line - number = "6648" > < /td>
    < td
id = "LC6648"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >
.<
/span>get( <span class="pl-c1">this</s
pan >
) <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L6649"
class
= "blob-num js-line-number"
data - line - number = "6649" > < /td>
    < td
id = "LC6649"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Tween < /span><span class="pl-k">.</s
pan > propHooks < span
class
= "pl-k" >
.<
/span>_default<span class="pl-k">.</s
pan > get( < span
class
= "pl-c1" > this < /span> );</
td >
< /tr>
< tr >
< td
id = "L6650"
class
= "blob-num js-line-number"
data - line - number = "6650" > < /td>
    < td
id = "LC6650"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6651"
class
= "blob-num js-line-number"
data - line - number = "6651" > < /td>
    < td
id = "LC6651"
class
= "blob-code blob-code-inner js-file-line" > run < span
class
= "pl-k" >
:<
/span> function( percent ) {</
td >
< /tr>
< tr >
< td
id = "L6652"
class
= "blob-num js-line-number"
data - line - number = "6652" > < /td>
    < td
id = "LC6652"
class
= "blob-code blob-code-inner js-file-line" >
var eased, <
/td>
< /tr>
< tr >
< td
id = "L6653"
class
= "blob-num js-line-number"
data - line - number = "6653" > < /td>
    < td
id = "LC6653"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> <span class="pl-smi">Tween</s
pan > < span
class
= "pl-k" >
.<
/span>propHooks[ <span class="pl-c1">this</span><span class="pl-k">.</span>prop ];</
td >
< /tr>
< tr >
< td
id = "L6654"
class
= "blob-num js-line-number"
data - line - number = "6654" > < /td>
    < td
id = "LC6654"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6655"
class
= "blob-num js-line-number"
data - line - number = "6655" > < /td>
    < td
id = "LC6655"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>options<span class="pl-k">.</s
pan > duration
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6656"
class
    = "blob-num js-line-number"
    data - line - number = "6656" > < /td>
        < td
    id = "LC6656"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > pos < span
class
    = "pl-k" >= < /span> eased <span class="pl-k">=</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>easing[ <span class="pl-c1">this</span><span class="pl-k">.</span>easing ](</
    td >
    < /tr>
    < tr >
    < td
    id = "L6657"
class
    = "blob-num js-line-number"
    data - line - number = "6657" > < /td>
        < td
    id = "LC6657"
class
    = "blob-code blob-code-inner js-file-line" > percent,
<
    span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > options < span
class
    = "pl-k" >
.<
    /span>duration <span class="pl-k">*</s
    pan > percent,
<
    span
class
    = "pl-c1" > 0 < /span>, <span class="pl-c1">1</s
    pan >,
<
    span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > options < span
class
    = "pl-k" >
.<
    /span>duration</
    td >
    < /tr>
    < tr >
    < td
    id = "L6658"
class
    = "blob-num js-line-number"
    data - line - number = "6658" > < /td>
        < td
    id = "LC6658"
class
    = "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6659"
class
= "blob-num js-line-number"
data - line - number = "6659" > < /td>
    < td
id = "LC6659"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6660"
class
= "blob-num js-line-number"
data - line - number = "6660" > < /td>
    < td
id = "LC6660"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > pos < span
class
= "pl-k" >= < /span> eased <span class="pl-k">=</s
pan > percent;
<
/td>
< /tr>
< tr >
< td
id = "L6661"
class
= "blob-num js-line-number"
data - line - number = "6661" > < /td>
    < td
id = "LC6661"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6662"
class
= "blob-num js-line-number"
data - line - number = "6662" > < /td>
    < td
id = "LC6662"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > now < span
class
= "pl-k" >= < /span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>end <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > start
) <
span
class
= "pl-k" > * < /span> eased <span class="pl-k">+</s
pan > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > start;
<
/td>
< /tr>
< tr >
< td
id = "L6663"
class
= "blob-num js-line-number"
data - line - number = "6663" > < /td>
    < td
id = "LC6663"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6664"
class
= "blob-num js-line-number"
data - line - number = "6664" > < /td>
    < td
id = "LC6664"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>options<span class="pl-k">.</s
pan > step
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6665"
class
    = "blob-num js-line-number"
    data - line - number = "6665" > < /td>
        < td
    id = "LC6665"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > options < span
class
    = "pl-k" >
.<
    /span>step<span class="pl-k">.</s
    pan > call( < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > elem,
<
    span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > now,
<
    span
class
    = "pl-c1" > this < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6666"
class
    = "blob-num js-line-number"
    data - line - number = "6666" > < /td>
        < td
    id = "LC6666"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6667"
class
= "blob-num js-line-number"
data - line - number = "6667" > < /td>
    < td
id = "LC6667"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6668"
class
= "blob-num js-line-number"
data - line - number = "6668" > < /td>
    < td
id = "LC6668"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > hooks < span
class
= "pl-k" >
.<
/span>set ) {</
td >
< /tr>
< tr >
< td
id = "L6669"
class
= "blob-num js-line-number"
data - line - number = "6669" > < /td>
    < td
id = "LC6669"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >
.<
/span>set( <span class="pl-c1">this</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6670"
class
= "blob-num js-line-number"
data - line - number = "6670" > < /td>
    < td
id = "LC6670"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6671"
class
= "blob-num js-line-number"
data - line - number = "6671" > < /td>
    < td
id = "LC6671"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Tween < /span><span class="pl-k">.</s
pan > propHooks < span
class
= "pl-k" >
.<
/span>_default<span class="pl-k">.</s
pan > set( < span
class
= "pl-c1" > this < /span> );</
td >
< /tr>
< tr >
< td
id = "L6672"
class
= "blob-num js-line-number"
data - line - number = "6672" > < /td>
    < td
id = "LC6672"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6673"
class
= "blob-num js-line-number"
data - line - number = "6673" > < /td>
    < td
id = "LC6673"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6674"
class
= "blob-num js-line-number"
data - line - number = "6674" > < /td>
    < td
id = "LC6674"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6675"
class
= "blob-num js-line-number"
data - line - number = "6675" > < /td>
    < td
id = "LC6675"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L6676"
class
= "blob-num js-line-number"
data - line - number = "6676" > < /td>
    < td
id = "LC6676"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6677"
class
= "blob-num js-line-number"
data - line - number = "6677" > < /td>
    < td
id = "LC6677"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Tween < /span><span class="pl-k">.</s
pan > prototype < span
class
= "pl-k" >
.<
/span>init<span class="pl-k">.</s
pan > prototype < span
class
= "pl-k" >= < /span> <span class="pl-smi">Tween</s
pan > < span
class
= "pl-k" >
.<
/span>prototype;</
td >
< /tr>
< tr >
< td
id = "L6678"
class
= "blob-num js-line-number"
data - line - number = "6678" > < /td>
    < td
id = "LC6678"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6679"
class
= "blob-num js-line-number"
data - line - number = "6679" > < /td>
    < td
id = "LC6679"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Tween < /span><span class="pl-k">.</s
pan > propHooks < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L6680"
class
= "blob-num js-line-number"
data - line - number = "6680" > < /td>
    < td
id = "LC6680"
class
= "blob-code blob-code-inner js-file-line" > _default < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6681"
class
= "blob-num js-line-number"
data - line - number = "6681" > < /td>
    < td
id = "LC6681"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> function( tween ) {</
td >
< /tr>
< tr >
< td
id = "L6682"
class
= "blob-num js-line-number"
data - line - number = "6682" > < /td>
    < td
id = "LC6682"
class
= "blob-code blob-code-inner js-file-line" >
var result;
<
/td>
< /tr>
< tr >
< td
id = "L6683"
class
= "blob-num js-line-number"
data - line - number = "6683" > < /td>
    < td
id = "LC6683"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6684"
class
= "blob-num js-line-number"
data - line - number = "6684" > < /td>
    < td
id = "LC6684"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use a property on the element directly when it is not a DOM element,</span></td>
    < /tr>
    < tr >
    < td
id = "L6685"
class
= "blob-num js-line-number"
data - line - number = "6685" > < /td>
    < td
id = "LC6685"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> or when there is no matching style property that exists.</span></td>
    < /tr>
    < tr >
    < td
id = "L6686"
class
= "blob-num js-line-number"
data - line - number = "6686" > < /td>
    < td
id = "LC6686"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( tween<span class="pl-k">.</s
pan > elem < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L6687"
class
= "blob-num js-line-number"
data - line - number = "6687" > < /td>
    < td
id = "LC6687"
class
= "blob-code blob-code-inner js-file-line" > tween < span
class
= "pl-k" >
.<
/span>elem[ tween<span class="pl-k">.</span>prop ] <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">&amp;&amp;</s
pan > tween < span
class
= "pl-k" >
.<
/span>elem<span class="pl-k">.</s
pan > style[tween < span
class
= "pl-k" >
.<
/span>prop ] <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6688"
class
= "blob-num js-line-number"
data - line - number = "6688" > < /td>
    < td
id = "LC6688"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> tween<span class="pl-k">.</s
pan > elem[tween < span
class
= "pl-k" >
.<
/span>prop ];</
td >
< /tr>
< tr >
< td
id = "L6689"
class
= "blob-num js-line-number"
data - line - number = "6689" > < /td>
    < td
id = "LC6689"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6690"
class
= "blob-num js-line-number"
data - line - number = "6690" > < /td>
    < td
id = "LC6690"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6691"
class
= "blob-num js-line-number"
data - line - number = "6691" > < /td>
    < td
id = "LC6691"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Passing an empty string as a 3rd parameter to .css will automatically</span></td>
    < /tr>
    < tr >
    < td
id = "L6692"
class
= "blob-num js-line-number"
data - line - number = "6692" > < /td>
    < td
id = "LC6692"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> attempt a parseFloat and fallback to a string if the parse fails.</span></td>
    < /tr>
    < tr >
    < td
id = "L6693"
class
= "blob-num js-line-number"
data - line - number = "6693" > < /td>
    < td
id = "LC6693"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Simple values such as &quot;10px&quot; are parsed to Float;</span></td>
    < /tr>
    < tr >
    < td
id = "L6694"
class
= "blob-num js-line-number"
data - line - number = "6694" > < /td>
    < td
id = "LC6694"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> complex values such as &quot;rotate(1rad)&quot; are returned as-is.</span></td>
    < /tr>
    < tr >
    < td
id = "L6695"
class
= "blob-num js-line-number"
data - line - number = "6695" > < /td>
    < td
id = "LC6695"
class
= "blob-code blob-code-inner js-file-line" > result < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > css(tween < span
class
= "pl-k" >
.<
/span>elem, tween<span class="pl-k">.</s
pan > prop,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L6696"
class
= "blob-num js-line-number"
data - line - number = "6696" > < /td>
    < td
id = "LC6696"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6697"
class
= "blob-num js-line-number"
data - line - number = "6697" > < /td>
    < td
id = "LC6697"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Empty strings, null, undefined and &quot;auto&quot; are converted to 0.</span></td>
    < /tr>
    < tr >
    < td
id = "L6698"
class
= "blob-num js-line-number"
data - line - number = "6698" > < /td>
    < td
id = "LC6698"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">!</s
pan > result < span
class
= "pl-k" > || < /span> result <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>auto<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > 0 < /span> <span class="pl-k">:</s
pan > result;
<
/td>
< /tr>
< tr >
< td
id = "L6699"
class
= "blob-num js-line-number"
data - line - number = "6699" > < /td>
    < td
id = "LC6699"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6700"
class
= "blob-num js-line-number"
data - line - number = "6700" > < /td>
    < td
id = "LC6700"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( tween ) {</
td >
< /tr>
< tr >
< td
id = "L6701"
class
= "blob-num js-line-number"
data - line - number = "6701" > < /td>
    < td
id = "LC6701"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6702"
class
= "blob-num js-line-number"
data - line - number = "6702" > < /td>
    < td
id = "LC6702"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use step hook for back compat.</span></td>
    < /tr>
    < tr >
    < td
id = "L6703"
class
= "blob-num js-line-number"
data - line - number = "6703" > < /td>
    < td
id = "LC6703"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use cssHook if its there.</span></td>
    < /tr>
    < tr >
    < td
id = "L6704"
class
= "blob-num js-line-number"
data - line - number = "6704" > < /td>
    < td
id = "LC6704"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use .style if available and use plain properties where available.</span></td>
    < /tr>
    < tr >
    < td
id = "L6705"
class
= "blob-num js-line-number"
data - line - number = "6705" > < /td>
    < td
id = "LC6705"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > fx < span
class
= "pl-k" >
.<
/span>step[ tween<span class="pl-k">.</span>prop ] ) {</
td >
< /tr>
< tr >
< td
id = "L6706"
class
= "blob-num js-line-number"
data - line - number = "6706" > < /td>
    < td
id = "LC6706"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > step[tween < span
class
= "pl-k" >
.<
/span>prop ]( tween );</
td >
< /tr>
< tr >
< td
id = "L6707"
class
= "blob-num js-line-number"
data - line - number = "6707" > < /td>
    < td
id = "LC6707"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (tween < span
class
= "pl-k" >
.<
/span>elem<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L6708"
class
= "blob-num js-line-number"
data - line - number = "6708" > < /td>
    < td
id = "LC6708"
class
= "blob-code blob-code-inner js-file-line" > (tween < span
class
= "pl-k" >
.<
/span>elem<span class="pl-k">.</s
pan > style[jQuery < span
class
= "pl-k" >
.<
/span>cssProps[ tween<span class="pl-k">.</span>prop ] ] <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L6709"
class
= "blob-num js-line-number"
data - line - number = "6709" > < /td>
    < td
id = "LC6709"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>cssHooks[ tween<span class="pl-k">.</span>prop ] ) ) {</
td >
< /tr>
< tr >
< td
id = "L6710"
class
= "blob-num js-line-number"
data - line - number = "6710" > < /td>
    < td
id = "LC6710"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>style( tween<span class="pl-k">.</s
pan > elem, tween < span
class
= "pl-k" >
.<
/span>prop, tween<span class="pl-k">.</s
pan > now < span
class
= "pl-k" > + < /span> tween<span class="pl-k">.</s
pan > unit
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6711"
class
= "blob-num js-line-number"
data - line - number = "6711" > < /td>
    < td
id = "LC6711"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6712"
class
= "blob-num js-line-number"
data - line - number = "6712" > < /td>
    < td
id = "LC6712"
class
= "blob-code blob-code-inner js-file-line" > tween < span
class
= "pl-k" >
.<
/span>elem[ tween<span class="pl-k">.</span>prop ] <span class="pl-k">=</s
pan > tween < span
class
= "pl-k" >
.<
/span>now;</
td >
< /tr>
< tr >
< td
id = "L6713"
class
= "blob-num js-line-number"
data - line - number = "6713" > < /td>
    < td
id = "LC6713"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6714"
class
= "blob-num js-line-number"
data - line - number = "6714" > < /td>
    < td
id = "LC6714"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6715"
class
= "blob-num js-line-number"
data - line - number = "6715" > < /td>
    < td
id = "LC6715"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6716"
class
= "blob-num js-line-number"
data - line - number = "6716" > < /td>
    < td
id = "LC6716"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L6717"
class
= "blob-num js-line-number"
data - line - number = "6717" > < /td>
    < td
id = "LC6717"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6718"
class
= "blob-num js-line-number"
data - line - number = "6718" > < /td>
    < td
id = "LC6718"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L6719"
class
= "blob-num js-line-number"
data - line - number = "6719" > < /td>
    < td
id = "LC6719"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Panic based approach to setting things on disconnected nodes</span></td>
    < /tr>
    < tr >
    < td
id = "L6720"
class
= "blob-num js-line-number"
data - line - number = "6720" > < /td>
    < td
id = "LC6720"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Tween < /span><span class="pl-k">.</s
pan > propHooks < span
class
= "pl-k" >
.<
/span>scrollTop <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Tween < /span><span class="pl-k">.</s
pan > propHooks < span
class
= "pl-k" >
.<
/span>scrollLeft <span class="pl-k">=</s
pan > { < /td>
< /tr>
< tr >
< td
id = "L6721"
class
= "blob-num js-line-number"
data - line - number = "6721" > < /td>
    < td
id = "LC6721"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( tween ) {</
td >
< /tr>
< tr >
< td
id = "L6722"
class
= "blob-num js-line-number"
data - line - number = "6722" > < /td>
    < td
id = "LC6722"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( tween<span class="pl-k">.</s
pan > elem < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">&amp;&amp;</s
pan > tween < span
class
= "pl-k" >
.<
/span>elem<span class="pl-k">.</s
pan > parentNode
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6723"
class
    = "blob-num js-line-number"
    data - line - number = "6723" > < /td>
        < td
    id = "LC6723"
class
    = "blob-code blob-code-inner js-file-line" > tween < span
class
    = "pl-k" >
.<
    /span>elem[ tween<span class="pl-k">.</span>prop ] <span class="pl-k">=</s
    pan > tween < span
class
    = "pl-k" >
.<
    /span>now;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6724"
class
    = "blob-num js-line-number"
    data - line - number = "6724" > < /td>
        < td
    id = "LC6724"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6725"
class
= "blob-num js-line-number"
data - line - number = "6725" > < /td>
    < td
id = "LC6725"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6726"
class
= "blob-num js-line-number"
data - line - number = "6726" > < /td>
    < td
id = "LC6726"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L6727"
class
= "blob-num js-line-number"
data - line - number = "6727" > < /td>
    < td
id = "LC6727"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6728"
class
= "blob-num js-line-number"
data - line - number = "6728" > < /td>
    < td
id = "LC6728"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>easing <span class="pl-k">=</s
pan > { < /td>
< /tr>
< tr >
< td
id = "L6729"
class
= "blob-num js-line-number"
data - line - number = "6729" > < /td>
    < td
id = "LC6729"
class
= "blob-code blob-code-inner js-file-line" > linear < span
class
= "pl-k" >
:<
/span> function( p ) {</
td >
< /tr>
< tr >
< td
id = "L6730"
class
= "blob-num js-line-number"
data - line - number = "6730" > < /td>
    < td
id = "LC6730"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> p;</
td >
< /tr>
< tr >
< td
id = "L6731"
class
= "blob-num js-line-number"
data - line - number = "6731" > < /td>
    < td
id = "LC6731"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6732"
class
= "blob-num js-line-number"
data - line - number = "6732" > < /td>
    < td
id = "LC6732"
class
= "blob-code blob-code-inner js-file-line" > swing < span
class
= "pl-k" >
:<
/span> function( p ) {</
td >
< /tr>
< tr >
< td
id = "L6733"
class
= "blob-num js-line-number"
data - line - number = "6733" > < /td>
    < td
id = "LC6733"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">0.5</s
pan > < span
class
= "pl-k" > - < /span> <span class="pl-smi">Math</s
pan > < span
class
= "pl-k" >
.<
/span>cos( p <span class="pl-k">*</s
pan > < span
class
= "pl-smi" > Math < /span><span class="pl-c1"><span class="pl-k">.</s
pan > PI < /span> ) <span class="pl-k">/ < /span> <span class="pl-c1">2</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6734"
class
= "blob-num js-line-number"
data - line - number = "6734" > < /td>
    < td
id = "LC6734"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L6735"
class
= "blob-num js-line-number"
data - line - number = "6735" > < /td>
    < td
id = "LC6735"
class
= "blob-code blob-code-inner js-file-line" > _default < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > swing < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L6736"
class
= "blob-num js-line-number"
data - line - number = "6736" > < /td>
    < td
id = "LC6736"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L6737"
class
= "blob-num js-line-number"
data - line - number = "6737" > < /td>
    < td
id = "LC6737"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6738"
class
= "blob-num js-line-number"
data - line - number = "6738" > < /td>
    < td
id = "LC6738"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx <span class="pl-k">=</s
pan > < span
class
= "pl-smi" > Tween < /span><span class="pl-k">.</s
pan > prototype < span
class
= "pl-k" >
.<
/span>init;</
td >
< /tr>
< tr >
< td
id = "L6739"
class
= "blob-num js-line-number"
data - line - number = "6739" > < /td>
    < td
id = "LC6739"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6740"
class
= "blob-num js-line-number"
data - line - number = "6740" > < /td>
    < td
id = "LC6740"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Back compat &lt;1.8 extension point</span></td>
    < /tr>
    < tr >
    < td
id = "L6741"
class
= "blob-num js-line-number"
data - line - number = "6741" > < /td>
    < td
id = "LC6741"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > step < span
class
= "pl-k" >= < /span> {};</
td >
< /tr>
< tr >
< td
id = "L6742"
class
= "blob-num js-line-number"
data - line - number = "6742" > < /td>
    < td
id = "LC6742"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6743"
class
= "blob-num js-line-number"
data - line - number = "6743" > < /td>
    < td
id = "LC6743"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6744"
class
= "blob-num js-line-number"
data - line - number = "6744" > < /td>
    < td
id = "LC6744"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6745"
class
= "blob-num js-line-number"
data - line - number = "6745" > < /td>
    < td
id = "LC6745"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6746"
class
= "blob-num js-line-number"
data - line - number = "6746" > < /td>
    < td
id = "LC6746"
class
= "blob-code blob-code-inner js-file-line" >
var <
/td>
< /tr>
< tr >
< td
id = "L6747"
class
= "blob-num js-line-number"
data - line - number = "6747" > < /td>
    < td
id = "LC6747"
class
= "blob-code blob-code-inner js-file-line" > fxNow, timerId,
<
/td>
< /tr>
< tr >
< td
id = "L6748"
class
= "blob-num js-line-number"
data - line - number = "6748" > < /td>
    < td
id = "LC6748"
class
= "blob-code blob-code-inner js-file-line" > rfxtypes < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>toggle<span class="pl-k">|</s
pan > show < span
class
= "pl-k" > | < /span>hide)$<span class="pl-k">/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L6749"
class
= "blob-num js-line-number"
data - line - number = "6749" > < /td>
    < td
id = "LC6749"
class
= "blob-code blob-code-inner js-file-line" > rrun < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>queueHooks$<span class="pl-k">/ < /span>;</
td >
< /tr>
< tr >
< td
id = "L6750"
class
= "blob-num js-line-number"
data - line - number = "6750" > < /td>
    < td
id = "LC6750"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6751"
class
= "blob-num js-line-number"
data - line - number = "6751" > < /td>
    < td
id = "LC6751"
class
= "blob-code blob-code-inner js-file-line" > function raf() {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6752"
    class
        = "blob-num js-line-number"
        data - line - number = "6752" > < /td>
            < td
        id = "LC6752"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( timerId ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6753"
    class
        = "blob-num js-line-number"
        data - line - number = "6753" > < /td>
            < td
        id = "LC6753"
    class
        = "blob-code blob-code-inner js-file-line" > window < span
    class
        = "pl-k" >
    .<
        /span>requestAnimationFrame( raf );</
        td >
        < /tr>
        < tr >
        < td
        id = "L6754"
    class
        = "blob-num js-line-number"
        data - line - number = "6754" > < /td>
            < td
        id = "LC6754"
    class
        = "blob-code blob-code-inner js-file-line" > jQuery < span
    class
        = "pl-k" >
    .<
        /span>fx<span class="pl-k">.</s
        pan > tick();
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6755"
    class
        = "blob-num js-line-number"
        data - line - number = "6755" > < /td>
            < td
        id = "LC6755"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L6756"
class
= "blob-num js-line-number"
data - line - number = "6756" > < /td>
    < td
id = "LC6756"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6757"
class
= "blob-num js-line-number"
data - line - number = "6757" > < /td>
    < td
id = "LC6757"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6758"
class
= "blob-num js-line-number"
data - line - number = "6758" > < /td>
    < td
id = "LC6758"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Animations created synchronously will run synchronously</span></td>
    < /tr>
    < tr >
    < td
id = "L6759"
class
= "blob-num js-line-number"
data - line - number = "6759" > < /td>
    < td
id = "LC6759"
class
= "blob-code blob-code-inner js-file-line" > function createFxNow() {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6760"
class
    = "blob-num js-line-number"
    data - line - number = "6760" > < /td>
        < td
    id = "LC6760"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>setTimeout( function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6761"
class
    = "blob-num js-line-number"
    data - line - number = "6761" > < /td>
        < td
    id = "LC6761"
class
    = "blob-code blob-code-inner js-file-line" > fxNow < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6762"
class
    = "blob-num js-line-number"
    data - line - number = "6762" > < /td>
        < td
    id = "LC6762"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6763"
class
= "blob-num js-line-number"
data - line - number = "6763" > < /td>
    < td
id = "LC6763"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ( fxNow <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>now() );</
td >
< /tr>
< tr >
< td
id = "L6764"
class
= "blob-num js-line-number"
data - line - number = "6764" > < /td>
    < td
id = "LC6764"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6765"
class
= "blob-num js-line-number"
data - line - number = "6765" > < /td>
    < td
id = "LC6765"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6766"
class
= "blob-num js-line-number"
data - line - number = "6766" > < /td>
    < td
id = "LC6766"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Generate parameters to create a standard animation</span></td>
    < /tr>
    < tr >
    < td
id = "L6767"
class
= "blob-num js-line-number"
data - line - number = "6767" > < /td>
    < td
id = "LC6767"
class
= "blob-code blob-code-inner js-file-line" > function genFx(type, includeWidth) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6768"
class
    = "blob-num js-line-number"
    data - line - number = "6768" > < /td>
        < td
    id = "LC6768"
class
    = "blob-code blob-code-inner js-file-line" >
    var which, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L6769"
class
    = "blob-num js-line-number"
    data - line - number = "6769" > < /td>
        < td
    id = "LC6769"
class
    = "blob-code blob-code-inner js-file-line" > i < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6770"
class
    = "blob-num js-line-number"
    data - line - number = "6770" > < /td>
        < td
    id = "LC6770"
class
    = "blob-code blob-code-inner js-file-line" > attrs < span
class
    = "pl-k" >= < /span> { height<span class="pl-k">:</s
    pan > type
};
<
/td>
< /tr>
< tr >
< td
id = "L6771"
class
= "blob-num js-line-number"
data - line - number = "6771" > < /td>
    < td
id = "LC6771"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6772"
class
= "blob-num js-line-number"
data - line - number = "6772" > < /td>
    < td
id = "LC6772"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If we include width, step value is 1 to do all cssExpand values,</span></td>
    < /tr>
    < tr >
    < td
id = "L6773"
class
= "blob-num js-line-number"
data - line - number = "6773" > < /td>
    < td
id = "LC6773"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> otherwise step value is 2 to skip over Left and Right</span></td>
    < /tr>
    < tr >
    < td
id = "L6774"
class
= "blob-num js-line-number"
data - line - number = "6774" > < /td>
    < td
id = "LC6774"
class
= "blob-code blob-code-inner js-file-line" > includeWidth < span
class
= "pl-k" >= < /span> includeWidth <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L6775"
class
= "blob-num js-line-number"
data - line - number = "6775" > < /td>
    < td
id = "LC6775"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > < span
class
= "pl-c1" > 4 < /span>; i <span class="pl-k">+=</s
pan > < span
class
= "pl-c1" > 2 < /span> <span class="pl-k">-</s
pan > includeWidth
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6776"
class
    = "blob-num js-line-number"
    data - line - number = "6776" > < /td>
        < td
    id = "LC6776"
class
    = "blob-code blob-code-inner js-file-line" > which < span
class
    = "pl-k" >= < /span> cssExpand[ i ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6777"
class
    = "blob-num js-line-number"
    data - line - number = "6777" > < /td>
        < td
    id = "LC6777"
class
    = "blob-code blob-code-inner js-file-line" > attrs[ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>margin<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > which
] <
    span
class
    = "pl-k" >= < /span> attrs[ <span class="pl-s"><span class="pl-pds">&quot;</span>padding<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> which ] <span class="pl-k">=</s
    pan > type;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6778"
class
    = "blob-num js-line-number"
    data - line - number = "6778" > < /td>
        < td
    id = "LC6778"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6779"
class
= "blob-num js-line-number"
data - line - number = "6779" > < /td>
    < td
id = "LC6779"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6780"
class
= "blob-num js-line-number"
data - line - number = "6780" > < /td>
    < td
id = "LC6780"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( includeWidth ) {</
td >
< /tr>
< tr >
< td
id = "L6781"
class
= "blob-num js-line-number"
data - line - number = "6781" > < /td>
    < td
id = "LC6781"
class
= "blob-code blob-code-inner js-file-line" > attrs < span
class
= "pl-k" >
.<
/span>opacity <span class="pl-k">=</s
pan > attrs < span
class
= "pl-k" >
.<
/span>width <span class="pl-k">=</s
pan > type;
<
/td>
< /tr>
< tr >
< td
id = "L6782"
class
= "blob-num js-line-number"
data - line - number = "6782" > < /td>
    < td
id = "LC6782"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6783"
class
= "blob-num js-line-number"
data - line - number = "6783" > < /td>
    < td
id = "LC6783"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6784"
class
= "blob-num js-line-number"
data - line - number = "6784" > < /td>
    < td
id = "LC6784"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> attrs;</
td >
< /tr>
< tr >
< td
id = "L6785"
class
= "blob-num js-line-number"
data - line - number = "6785" > < /td>
    < td
id = "LC6785"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6786"
class
= "blob-num js-line-number"
data - line - number = "6786" > < /td>
    < td
id = "LC6786"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6787"
class
= "blob-num js-line-number"
data - line - number = "6787" > < /td>
    < td
id = "LC6787"
class
= "blob-code blob-code-inner js-file-line" > function createTween(value, prop, animation) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6788"
class
    = "blob-num js-line-number"
    data - line - number = "6788" > < /td>
        < td
    id = "LC6788"
class
    = "blob-code blob-code-inner js-file-line" >
    var tween, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L6789"
class
    = "blob-num js-line-number"
    data - line - number = "6789" > < /td>
        < td
    id = "LC6789"
class
    = "blob-code blob-code-inner js-file-line" > collection < span
class
    = "pl-k" >= < /span> ( <span class="pl-smi">Animation</s
    pan > < span
class
    = "pl-k" >
.<
    /span>tweeners[ prop ] <span class="pl-k">||</s
    pan > []
) < span
class
= "pl-k" >
.<
/span>concat( <span class="pl-smi">Animation</s
pan > < span
class
= "pl-k" >
.<
/span>tweeners[ <span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span> ] ),</
td >
< /tr>
< tr >
< td
id = "L6790"
class
= "blob-num js-line-number"
data - line - number = "6790" > < /td>
    < td
id = "LC6790"
class
= "blob-code blob-code-inner js-file-line" > index < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L6791"
class
= "blob-num js-line-number"
data - line - number = "6791" > < /td>
    < td
id = "LC6791"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >= < /span> collection<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L6792"
class
= "blob-num js-line-number"
data - line - number = "6792" > < /td>
    < td
id = "LC6792"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; index <span class="pl-k">&lt;</s
pan > length;
index < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6793"
class
= "blob-num js-line-number"
data - line - number = "6793" > < /td>
    < td
id = "LC6793"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ( tween <span class="pl-k">=</s
pan > collection[index] < span
class
= "pl-k" >
.<
/span>call( animation, prop, value ) ) ) {</
td >
< /tr>
< tr >
< td
id = "L6794"
class
= "blob-num js-line-number"
data - line - number = "6794" > < /td>
    < td
id = "LC6794"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6795"
class
= "blob-num js-line-number"
data - line - number = "6795" > < /td>
    < td
id = "LC6795"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> We&#39;re done with this property</span></td>
    < /tr>
    < tr >
    < td
id = "L6796"
class
= "blob-num js-line-number"
data - line - number = "6796" > < /td>
    < td
id = "LC6796"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> tween;</
td >
< /tr>
< tr >
< td
id = "L6797"
class
= "blob-num js-line-number"
data - line - number = "6797" > < /td>
    < td
id = "LC6797"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6798"
class
= "blob-num js-line-number"
data - line - number = "6798" > < /td>
    < td
id = "LC6798"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6799"
class
= "blob-num js-line-number"
data - line - number = "6799" > < /td>
    < td
id = "LC6799"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6800"
class
= "blob-num js-line-number"
data - line - number = "6800" > < /td>
    < td
id = "LC6800"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6801"
class
= "blob-num js-line-number"
data - line - number = "6801" > < /td>
    < td
id = "LC6801"
class
= "blob-code blob-code-inner js-file-line" > function defaultPrefilter(elem, props, opts) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6802"
class
    = "blob-num js-line-number"
    data - line - number = "6802" > < /td>
        < td
    id = "LC6802"
class
    = "blob-code blob-code-inner js-file-line" >
    var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L6803"
class
    = "blob-num js-line-number"
    data - line - number = "6803" > < /td>
        < td
    id = "LC6803"
class
    = "blob-code blob-code-inner js-file-line" > isBox < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > width < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > in props < span
class
    = "pl-k" > || < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > height < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > in props,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6804"
class
    = "blob-num js-line-number"
    data - line - number = "6804" > < /td>
        < td
    id = "LC6804"
class
    = "blob-code blob-code-inner js-file-line" > anim < span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6805"
class
    = "blob-num js-line-number"
    data - line - number = "6805" > < /td>
        < td
    id = "LC6805"
class
    = "blob-code blob-code-inner js-file-line" > orig < span
class
    = "pl-k" >= < /span> {},</
    td >
    < /tr>
    < tr >
    < td
    id = "L6806"
class
    = "blob-num js-line-number"
    data - line - number = "6806" > < /td>
        < td
    id = "LC6806"
class
    = "blob-code blob-code-inner js-file-line" > style < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > style,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6807"
class
    = "blob-num js-line-number"
    data - line - number = "6807" > < /td>
        < td
    id = "LC6807"
class
    = "blob-code blob-code-inner js-file-line" > hidden < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" > &amp;&amp; < /span> isHiddenWithinTree( elem ),</
    td >
    < /tr>
    < tr >
    < td
    id = "L6808"
class
    = "blob-num js-line-number"
    data - line - number = "6808" > < /td>
        < td
    id = "LC6808"
class
    = "blob-code blob-code-inner js-file-line" > dataShow < span
class
    = "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
    pan > get(elem, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>fxshow<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6809"
class
    = "blob-num js-line-number"
    data - line - number = "6809" > < /td>
        < td
    id = "LC6809"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6810"
class
    = "blob-num js-line-number"
    data - line - number = "6810" > < /td>
        < td
    id = "LC6810"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Queue-skipping animations hijack the fx hooks</span></td>
        < /tr>
        < tr >
        < td
    id = "L6811"
class
    = "blob-num js-line-number"
    data - line - number = "6811" > < /td>
        < td
    id = "LC6811"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > opts < span
class
    = "pl-k" >
.<
    /span>queue ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6812"
class
    = "blob-num js-line-number"
    data - line - number = "6812" > < /td>
        < td
    id = "LC6812"
class
    = "blob-code blob-code-inner js-file-line" > hooks < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > _queueHooks(elem, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>fx<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L6813"
class
    = "blob-num js-line-number"
    data - line - number = "6813" > < /td>
        < td
    id = "LC6813"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( hooks<span class="pl-k">.</s
    pan > unqueued < span
class
    = "pl-k" >= =
<
    /span> <span class="pl-c1">null</s
    pan >
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L6814"
    class
        = "blob-num js-line-number"
        data - line - number = "6814" > < /td>
            < td
        id = "LC6814"
    class
        = "blob-code blob-code-inner js-file-line" > hooks < span
    class
        = "pl-k" >
    .<
        /span>unqueued <span class="pl-k">=</s
        pan > < span
    class
        = "pl-c1" > 0 < /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L6815"
    class
        = "blob-num js-line-number"
        data - line - number = "6815" > < /td>
            < td
        id = "LC6815"
    class
        = "blob-code blob-code-inner js-file-line" > oldfire < span
    class
        = "pl-k" >= < /span> hooks<span class="pl-k">.</s
        pan > empty < span
    class
        = "pl-k" >
    .<
        /span>fire;</
        td >
        < /tr>
        < tr >
        < td
        id = "L6816"
    class
        = "blob-num js-line-number"
        data - line - number = "6816" > < /td>
            < td
        id = "LC6816"
    class
        = "blob-code blob-code-inner js-file-line" > hooks < span
    class
        = "pl-k" >
    .<
        /span>empty<span class="pl-k">.</s
        pan > fire < span
    class
        = "pl-k" >= < /span> function() {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6817"
    class
        = "blob-num js-line-number"
        data - line - number = "6817" > < /td>
            < td
        id = "LC6817"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( <span class="pl-k">!</s
        pan > hooks < span
    class
        = "pl-k" >
    .<
        /span>unqueued ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L6818"
    class
        = "blob-num js-line-number"
        data - line - number = "6818" > < /td>
            < td
        id = "LC6818"
    class
        = "blob-code blob-code-inner js-file-line" > oldfire();
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L6819"
    class
        = "blob-num js-line-number"
        data - line - number = "6819" > < /td>
            < td
        id = "LC6819"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6820"
class
    = "blob-num js-line-number"
    data - line - number = "6820" > < /td>
        < td
    id = "LC6820"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L6821"
class
= "blob-num js-line-number"
data - line - number = "6821" > < /td>
    < td
id = "LC6821"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6822"
class
= "blob-num js-line-number"
data - line - number = "6822" > < /td>
    < td
id = "LC6822"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >
.<
/span>unqueued<span class="pl-k">++</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6823"
class
= "blob-num js-line-number"
data - line - number = "6823" > < /td>
    < td
id = "LC6823"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6824"
class
= "blob-num js-line-number"
data - line - number = "6824" > < /td>
    < td
id = "LC6824"
class
= "blob-code blob-code-inner js-file-line" > anim < span
class
= "pl-k" >
.<
/span>always( function() {</
td >
< /tr>
< tr >
< td
id = "L6825"
class
= "blob-num js-line-number"
data - line - number = "6825" > < /td>
    < td
id = "LC6825"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6826"
class
= "blob-num js-line-number"
data - line - number = "6826" > < /td>
    < td
id = "LC6826"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Ensure the complete handler is called before this completes</span></td>
    < /tr>
    < tr >
    < td
id = "L6827"
class
= "blob-num js-line-number"
data - line - number = "6827" > < /td>
    < td
id = "LC6827"
class
= "blob-code blob-code-inner js-file-line" > anim < span
class
= "pl-k" >
.<
/span>always( function() {</
td >
< /tr>
< tr >
< td
id = "L6828"
class
= "blob-num js-line-number"
data - line - number = "6828" > < /td>
    < td
id = "LC6828"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >
.<
/span>unqueued<span class="pl-k">--</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6829"
class
= "blob-num js-line-number"
data - line - number = "6829" > < /td>
    < td
id = "LC6829"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>queue( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > fx < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)<
span
class
= "pl-k" >
.<
/span>length ) {</
td >
< /tr>
< tr >
< td
id = "L6830"
class
= "blob-num js-line-number"
data - line - number = "6830" > < /td>
    < td
id = "LC6830"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >
.<
/span>empty<span class="pl-k">.</s
pan > fire();
<
/td>
< /tr>
< tr >
< td
id = "L6831"
class
= "blob-num js-line-number"
data - line - number = "6831" > < /td>
    < td
id = "LC6831"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6832"
class
= "blob-num js-line-number"
data - line - number = "6832" > < /td>
    < td
id = "LC6832"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6833"
class
= "blob-num js-line-number"
data - line - number = "6833" > < /td>
    < td
id = "LC6833"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6834"
class
= "blob-num js-line-number"
data - line - number = "6834" > < /td>
    < td
id = "LC6834"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6835"
class
= "blob-num js-line-number"
data - line - number = "6835" > < /td>
    < td
id = "LC6835"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6836"
class
= "blob-num js-line-number"
data - line - number = "6836" > < /td>
    < td
id = "LC6836"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Detect show/hide animations</span></td>
    < /tr>
    < tr >
    < td
id = "L6837"
class
= "blob-num js-line-number"
data - line - number = "6837" > < /td>
    < td
id = "LC6837"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( prop in props ) {</
td >
< /tr>
< tr >
< td
id = "L6838"
class
= "blob-num js-line-number"
data - line - number = "6838" > < /td>
    < td
id = "LC6838"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >= < /span> props[ prop ];</
td >
< /tr>
< tr >
< td
id = "L6839"
class
= "blob-num js-line-number"
data - line - number = "6839" > < /td>
    < td
id = "LC6839"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( rfxtypes<span class="pl-k">.</s
pan > test(value)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6840"
class
    = "blob-num js-line-number"
    data - line - number = "6840" > < /td>
        < td
    id = "LC6840"
class
    = "blob-code blob-code-inner js-file-line" > delete props[prop];
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6841"
class
    = "blob-num js-line-number"
    data - line - number = "6841" > < /td>
        < td
    id = "LC6841"
class
    = "blob-code blob-code-inner js-file-line" > toggle < span
class
    = "pl-k" >= < /span> toggle <span class="pl-k">||</s
    pan > value < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > toggle < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6842"
class
    = "blob-num js-line-number"
    data - line - number = "6842" > < /td>
        < td
    id = "LC6842"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( value <span class="pl-k">===</s
    pan > (hidden < span
class
    = "pl-k" > ?
<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > hide < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" >
:<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > show < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6843"
class
    = "blob-num js-line-number"
    data - line - number = "6843" > < /td>
        < td
    id = "LC6843"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6844"
class
    = "blob-num js-line-number"
    data - line - number = "6844" > < /td>
        < td
    id = "LC6844"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Pretend to be hidden if this is a &quot;show&quot; and</span></td>
        < /tr>
        < tr >
        < td
    id = "L6845"
class
    = "blob-num js-line-number"
    data - line - number = "6845" > < /td>
        < td
    id = "LC6845"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> there is still data from a stopped show/hide</span></td>
        < /tr>
        < tr >
        < td
    id = "L6846"
class
    = "blob-num js-line-number"
    data - line - number = "6846" > < /td>
        < td
    id = "LC6846"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( value <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>show<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > dataShow < span
class
    = "pl-k" > &amp;&amp; < /span> dataShow[ prop ] <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> undefined ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6847"
class
    = "blob-num js-line-number"
    data - line - number = "6847" > < /td>
        < td
    id = "LC6847"
class
    = "blob-code blob-code-inner js-file-line" > hidden < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6848"
class
    = "blob-num js-line-number"
    data - line - number = "6848" > < /td>
        < td
    id = "LC6848"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6849"
class
    = "blob-num js-line-number"
    data - line - number = "6849" > < /td>
        < td
    id = "LC6849"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Ignore all other no-op show/hide data</span></td>
        < /tr>
        < tr >
        < td
    id = "L6850"
class
    = "blob-num js-line-number"
    data - line - number = "6850" > < /td>
        < td
    id = "LC6850"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6851"
class
= "blob-num js-line-number"
data - line - number = "6851" > < /td>
    < td
id = "LC6851"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
continue
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L6852"
class
= "blob-num js-line-number"
data - line - number = "6852" > < /td>
    < td
id = "LC6852"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6853"
class
= "blob-num js-line-number"
data - line - number = "6853" > < /td>
    < td
id = "LC6853"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6854"
class
= "blob-num js-line-number"
data - line - number = "6854" > < /td>
    < td
id = "LC6854"
class
= "blob-code blob-code-inner js-file-line" > orig[prop] < span
class
= "pl-k" >= < /span> dataShow <span class="pl-k">&amp;&amp;</s
pan > dataShow[prop] < span
class
= "pl-k" > || < /span> jQuery<span class="pl-k">.</s
pan > style(elem, prop);
<
/td>
< /tr>
< tr >
< td
id = "L6855"
class
= "blob-num js-line-number"
data - line - number = "6855" > < /td>
    < td
id = "LC6855"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6856"
class
= "blob-num js-line-number"
data - line - number = "6856" > < /td>
    < td
id = "LC6856"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6857"
class
= "blob-num js-line-number"
data - line - number = "6857" > < /td>
    < td
id = "LC6857"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6858"
class
= "blob-num js-line-number"
data - line - number = "6858" > < /td>
    < td
id = "LC6858"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Bail out if this is a no-op like .hide().hide()</span></td>
    < /tr>
    < tr >
    < td
id = "L6859"
class
= "blob-num js-line-number"
data - line - number = "6859" > < /td>
    < td
id = "LC6859"
class
= "blob-code blob-code-inner js-file-line" > propTween < span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>isEmptyObject( props );</
td >
< /tr>
< tr >
< td
id = "L6860"
class
= "blob-num js-line-number"
data - line - number = "6860" > < /td>
    < td
id = "LC6860"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > propTween < span
class
= "pl-k" > &amp;&amp; < /span> jQuery<span class="pl-k">.</s
pan > isEmptyObject(orig)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6861"
class
    = "blob-num js-line-number"
    data - line - number = "6861" > < /td>
        < td
    id = "LC6861"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6862"
class
    = "blob-num js-line-number"
    data - line - number = "6862" > < /td>
        < td
    id = "LC6862"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6863"
class
= "blob-num js-line-number"
data - line - number = "6863" > < /td>
    < td
id = "LC6863"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6864"
class
= "blob-num js-line-number"
data - line - number = "6864" > < /td>
    < td
id = "LC6864"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Restrict &quot;overflow&quot; and &quot;display&quot; styles during box animations</span></td>
    < /tr>
    < tr >
    < td
id = "L6865"
class
= "blob-num js-line-number"
data - line - number = "6865" > < /td>
    < td
id = "LC6865"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( isBox <span class="pl-k">&amp;&amp;</s
pan > elem < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 1 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6866"
class
= "blob-num js-line-number"
data - line - number = "6866" > < /td>
    < td
id = "LC6866"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6867"
class
= "blob-num js-line-number"
data - line - number = "6867" > < /td>
    < td
id = "LC6867"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 - 11, Edge 12 - 13</span></td>
    < /tr>
    < tr >
    < td
id = "L6868"
class
= "blob-num js-line-number"
data - line - number = "6868" > < /td>
    < td
id = "LC6868"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Record all 3 overflow attributes because IE does not infer the shorthand</span></td>
    < /tr>
    < tr >
    < td
id = "L6869"
class
= "blob-num js-line-number"
data - line - number = "6869" > < /td>
    < td
id = "LC6869"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> from identically-valued overflowX and overflowY</span></td>
    < /tr>
    < tr >
    < td
id = "L6870"
class
= "blob-num js-line-number"
data - line - number = "6870" > < /td>
    < td
id = "LC6870"
class
= "blob-code blob-code-inner js-file-line" > opts < span
class
= "pl-k" >
.<
/span>overflow <span class="pl-k">=</s
pan > [style < span class = "pl-k" >. < /span>overflow, style<span class="pl-k">.</s
pan > overflowX, style < span
class
= "pl-k" >
.<
/span>overflowY ];</
td >
< /tr>
< tr >
< td
id = "L6871"
class
= "blob-num js-line-number"
data - line - number = "6871" > < /td>
    < td
id = "LC6871"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6872"
class
= "blob-num js-line-number"
data - line - number = "6872" > < /td>
    < td
id = "LC6872"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Identify a display type, preferring old show/hide data over the CSS cascade</span></td>
    < /tr>
    < tr >
    < td
id = "L6873"
class
= "blob-num js-line-number"
data - line - number = "6873" > < /td>
    < td
id = "LC6873"
class
= "blob-code blob-code-inner js-file-line" > restoreDisplay < span
class
= "pl-k" >= < /span> dataShow <span class="pl-k">&amp;&amp;</s
pan > dataShow < span
class
= "pl-k" >
.<
/span>display;</
td >
< /tr>
< tr >
< td
id = "L6874"
class
= "blob-num js-line-number"
data - line - number = "6874" > < /td>
    < td
id = "LC6874"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( restoreDisplay <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6875"
class
= "blob-num js-line-number"
data - line - number = "6875" > < /td>
    < td
id = "LC6875"
class
= "blob-code blob-code-inner js-file-line" > restoreDisplay < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > get(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>display<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L6876"
class
= "blob-num js-line-number"
data - line - number = "6876" > < /td>
    < td
id = "LC6876"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6877"
class
= "blob-num js-line-number"
data - line - number = "6877" > < /td>
    < td
id = "LC6877"
class
= "blob-code blob-code-inner js-file-line" > display < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>display<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L6878"
class
= "blob-num js-line-number"
data - line - number = "6878" > < /td>
    < td
id = "LC6878"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( display <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>none<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6879"
class
= "blob-num js-line-number"
data - line - number = "6879" > < /td>
    < td
id = "LC6879"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( restoreDisplay ) {</
td >
< /tr>
< tr >
< td
id = "L6880"
class
= "blob-num js-line-number"
data - line - number = "6880" > < /td>
    < td
id = "LC6880"
class
= "blob-code blob-code-inner js-file-line" > display < span
class
= "pl-k" >= < /span> restoreDisplay;</
td >
< /tr>
< tr >
< td
id = "L6881"
class
= "blob-num js-line-number"
data - line - number = "6881" > < /td>
    < td
id = "LC6881"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6882"
class
= "blob-num js-line-number"
data - line - number = "6882" > < /td>
    < td
id = "LC6882"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6883"
class
= "blob-num js-line-number"
data - line - number = "6883" > < /td>
    < td
id = "LC6883"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get nonempty value(s) by temporarily forcing visibility</span></td>
    < /tr>
    < tr >
    < td
id = "L6884"
class
= "blob-num js-line-number"
data - line - number = "6884" > < /td>
    < td
id = "LC6884"
class
= "blob-code blob-code-inner js-file-line" > showHide([elem], < span
class
= "pl-c1" > true < /span> );</
td >
< /tr>
< tr >
< td
id = "L6885"
class
= "blob-num js-line-number"
data - line - number = "6885" > < /td>
    < td
id = "LC6885"
class
= "blob-code blob-code-inner js-file-line" > restoreDisplay < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > style < span
class
= "pl-k" >
.<
/span>display <span class="pl-k">||</s
pan > restoreDisplay;
<
/td>
< /tr>
< tr >
< td
id = "L6886"
class
= "blob-num js-line-number"
data - line - number = "6886" > < /td>
    < td
id = "LC6886"
class
= "blob-code blob-code-inner js-file-line" > display < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>display<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L6887"
class
= "blob-num js-line-number"
data - line - number = "6887" > < /td>
    < td
id = "LC6887"
class
= "blob-code blob-code-inner js-file-line" > showHide([elem]);
<
/td>
< /tr>
< tr >
< td
id = "L6888"
class
= "blob-num js-line-number"
data - line - number = "6888" > < /td>
    < td
id = "LC6888"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6889"
class
= "blob-num js-line-number"
data - line - number = "6889" > < /td>
    < td
id = "LC6889"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6890"
class
= "blob-num js-line-number"
data - line - number = "6890" > < /td>
    < td
id = "LC6890"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6891"
class
= "blob-num js-line-number"
data - line - number = "6891" > < /td>
    < td
id = "LC6891"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Animate inline elements as inline-block</span></td>
    < /tr>
    < tr >
    < td
id = "L6892"
class
= "blob-num js-line-number"
data - line - number = "6892" > < /td>
    < td
id = "LC6892"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( display <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>inline<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">||</s
pan > display < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > inline - block < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span> restoreDisplay <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6893"
class
= "blob-num js-line-number"
data - line - number = "6893" > < /td>
    < td
id = "LC6893"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>float<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>none<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6894"
class
= "blob-num js-line-number"
data - line - number = "6894" > < /td>
    < td
id = "LC6894"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6895"
class
= "blob-num js-line-number"
data - line - number = "6895" > < /td>
    < td
id = "LC6895"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Restore the original display value at the end of pure show/hide animations</span></td>
    < /tr>
    < tr >
    < td
id = "L6896"
class
= "blob-num js-line-number"
data - line - number = "6896" > < /td>
    < td
id = "LC6896"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > propTween
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6897"
class
    = "blob-num js-line-number"
    data - line - number = "6897" > < /td>
        < td
    id = "LC6897"
class
    = "blob-code blob-code-inner js-file-line" > anim < span
class
    = "pl-k" >
.<
    /span>done( function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6898"
class
    = "blob-num js-line-number"
    data - line - number = "6898" > < /td>
        < td
    id = "LC6898"
class
    = "blob-code blob-code-inner js-file-line" > style < span
class
    = "pl-k" >
.<
    /span>display <span class="pl-k">=</s
    pan > restoreDisplay;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6899"
class
    = "blob-num js-line-number"
    data - line - number = "6899" > < /td>
        < td
    id = "LC6899"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6900"
class
= "blob-num js-line-number"
data - line - number = "6900" > < /td>
    < td
id = "LC6900"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( restoreDisplay <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L6901"
class
= "blob-num js-line-number"
data - line - number = "6901" > < /td>
    < td
id = "LC6901"
class
= "blob-code blob-code-inner js-file-line" > display < span
class
= "pl-k" >= < /span> style<span class="pl-k">.</s
pan > display;
<
/td>
< /tr>
< tr >
< td
id = "L6902"
class
= "blob-num js-line-number"
data - line - number = "6902" > < /td>
    < td
id = "LC6902"
class
= "blob-code blob-code-inner js-file-line" > restoreDisplay < span
class
= "pl-k" >= < /span> display <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>none<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > display;
<
/td>
< /tr>
< tr >
< td
id = "L6903"
class
= "blob-num js-line-number"
data - line - number = "6903" > < /td>
    < td
id = "LC6903"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6904"
class
= "blob-num js-line-number"
data - line - number = "6904" > < /td>
    < td
id = "LC6904"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6905"
class
= "blob-num js-line-number"
data - line - number = "6905" > < /td>
    < td
id = "LC6905"
class
= "blob-code blob-code-inner js-file-line" > style < span
class
= "pl-k" >
.<
/span>display <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>inline-block<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L6906"
class
= "blob-num js-line-number"
data - line - number = "6906" > < /td>
    < td
id = "LC6906"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6907"
class
= "blob-num js-line-number"
data - line - number = "6907" > < /td>
    < td
id = "LC6907"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6908"
class
= "blob-num js-line-number"
data - line - number = "6908" > < /td>
    < td
id = "LC6908"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6909"
class
= "blob-num js-line-number"
data - line - number = "6909" > < /td>
    < td
id = "LC6909"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6910"
class
= "blob-num js-line-number"
data - line - number = "6910" > < /td>
    < td
id = "LC6910"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( opts<span class="pl-k">.</s
pan > overflow
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6911"
class
    = "blob-num js-line-number"
    data - line - number = "6911" > < /td>
        < td
    id = "LC6911"
class
    = "blob-code blob-code-inner js-file-line" > style < span
class
    = "pl-k" >
.<
    /span>overflow <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>hidden<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6912"
class
    = "blob-num js-line-number"
    data - line - number = "6912" > < /td>
        < td
    id = "LC6912"
class
    = "blob-code blob-code-inner js-file-line" > anim < span
class
    = "pl-k" >
.<
    /span>always( function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6913"
class
    = "blob-num js-line-number"
    data - line - number = "6913" > < /td>
        < td
    id = "LC6913"
class
    = "blob-code blob-code-inner js-file-line" > style < span
class
    = "pl-k" >
.<
    /span>overflow <span class="pl-k">=</s
    pan > opts < span
class
    = "pl-k" >
.<
    /span>overflow[ <span class="pl-c1">0</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6914"
class
    = "blob-num js-line-number"
    data - line - number = "6914" > < /td>
        < td
    id = "LC6914"
class
    = "blob-code blob-code-inner js-file-line" > style < span
class
    = "pl-k" >
.<
    /span>overflowX <span class="pl-k">=</s
    pan > opts < span
class
    = "pl-k" >
.<
    /span>overflow[ <span class="pl-c1">1</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6915"
class
    = "blob-num js-line-number"
    data - line - number = "6915" > < /td>
        < td
    id = "LC6915"
class
    = "blob-code blob-code-inner js-file-line" > style < span
class
    = "pl-k" >
.<
    /span>overflowY <span class="pl-k">=</s
    pan > opts < span
class
    = "pl-k" >
.<
    /span>overflow[ <span class="pl-c1">2</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6916"
class
    = "blob-num js-line-number"
    data - line - number = "6916" > < /td>
        < td
    id = "LC6916"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6917"
class
= "blob-num js-line-number"
data - line - number = "6917" > < /td>
    < td
id = "LC6917"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6918"
class
= "blob-num js-line-number"
data - line - number = "6918" > < /td>
    < td
id = "LC6918"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6919"
class
= "blob-num js-line-number"
data - line - number = "6919" > < /td>
    < td
id = "LC6919"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Implement show/hide animations</span></td>
    < /tr>
    < tr >
    < td
id = "L6920"
class
= "blob-num js-line-number"
data - line - number = "6920" > < /td>
    < td
id = "LC6920"
class
= "blob-code blob-code-inner js-file-line" > propTween < span
class
= "pl-k" >= < /span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L6921"
class
= "blob-num js-line-number"
data - line - number = "6921" > < /td>
    < td
id = "LC6921"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( prop in orig ) {</
td >
< /tr>
< tr >
< td
id = "L6922"
class
= "blob-num js-line-number"
data - line - number = "6922" > < /td>
    < td
id = "LC6922"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6923"
class
= "blob-num js-line-number"
data - line - number = "6923" > < /td>
    < td
id = "LC6923"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> General show/hide setup for this element animation</span></td>
    < /tr>
    < tr >
    < td
id = "L6924"
class
= "blob-num js-line-number"
data - line - number = "6924" > < /td>
    < td
id = "LC6924"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > propTween
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6925"
class
    = "blob-num js-line-number"
    data - line - number = "6925" > < /td>
        < td
    id = "LC6925"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( dataShow ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6926"
class
    = "blob-num js-line-number"
    data - line - number = "6926" > < /td>
        < td
    id = "LC6926"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > hidden < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > in dataShow
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6927"
class
    = "blob-num js-line-number"
    data - line - number = "6927" > < /td>
        < td
    id = "LC6927"
class
    = "blob-code blob-code-inner js-file-line" > hidden < span
class
    = "pl-k" >= < /span> dataShow<span class="pl-k">.</s
    pan > hidden;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6928"
class
    = "blob-num js-line-number"
    data - line - number = "6928" > < /td>
        < td
    id = "LC6928"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6929"
class
= "blob-num js-line-number"
data - line - number = "6929" > < /td>
    < td
id = "LC6929"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L6930"
class
= "blob-num js-line-number"
data - line - number = "6930" > < /td>
    < td
id = "LC6930"
class
= "blob-code blob-code-inner js-file-line" > dataShow < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > access(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fxshow<span class="pl-pds">&quot;</s
pan > < /span>, { display<span class="pl-k">:</s
pan > restoreDisplay
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6931"
class
= "blob-num js-line-number"
data - line - number = "6931" > < /td>
    < td
id = "LC6931"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6932"
class
= "blob-num js-line-number"
data - line - number = "6932" > < /td>
    < td
id = "LC6932"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6933"
class
= "blob-num js-line-number"
data - line - number = "6933" > < /td>
    < td
id = "LC6933"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Store hidden/visible for toggle so `.stop().toggle()` &quot;reverses&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L6934"
class
= "blob-num js-line-number"
data - line - number = "6934" > < /td>
    < td
id = "LC6934"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( toggle ) {</
td >
< /tr>
< tr >
< td
id = "L6935"
class
= "blob-num js-line-number"
data - line - number = "6935" > < /td>
    < td
id = "LC6935"
class
= "blob-code blob-code-inner js-file-line" > dataShow < span
class
= "pl-k" >
.<
/span>hidden <span class="pl-k">=</s
pan > < span
class
= "pl-k" > ! < /span>hidden;</
td >
< /tr>
< tr >
< td
id = "L6936"
class
= "blob-num js-line-number"
data - line - number = "6936" > < /td>
    < td
id = "LC6936"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6937"
class
= "blob-num js-line-number"
data - line - number = "6937" > < /td>
    < td
id = "LC6937"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6938"
class
= "blob-num js-line-number"
data - line - number = "6938" > < /td>
    < td
id = "LC6938"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Show elements before animating them</span></td>
    < /tr>
    < tr >
    < td
id = "L6939"
class
= "blob-num js-line-number"
data - line - number = "6939" > < /td>
    < td
id = "LC6939"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hidden ) {</
td >
< /tr>
< tr >
< td
id = "L6940"
class
= "blob-num js-line-number"
data - line - number = "6940" > < /td>
    < td
id = "LC6940"
class
= "blob-code blob-code-inner js-file-line" > showHide([elem], < span
class
= "pl-c1" > true < /span> );</
td >
< /tr>
< tr >
< td
id = "L6941"
class
= "blob-num js-line-number"
data - line - number = "6941" > < /td>
    < td
id = "LC6941"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6942"
class
= "blob-num js-line-number"
data - line - number = "6942" > < /td>
    < td
id = "LC6942"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6943"
class
= "blob-num js-line-number"
data - line - number = "6943" > < /td>
    < td
id = "LC6943"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> eslint-disable no-loop-func <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L6944"
class
= "blob-num js-line-number"
data - line - number = "6944" > < /td>
    < td
id = "LC6944"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6945"
class
= "blob-num js-line-number"
data - line - number = "6945" > < /td>
    < td
id = "LC6945"
class
= "blob-code blob-code-inner js-file-line" > anim < span
class
= "pl-k" >
.<
/span>done( function() {</
td >
< /tr>
< tr >
< td
id = "L6946"
class
= "blob-num js-line-number"
data - line - number = "6946" > < /td>
    < td
id = "LC6946"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6947"
class
= "blob-num js-line-number"
data - line - number = "6947" > < /td>
    < td
id = "LC6947"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> eslint-enable no-loop-func <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L6948"
class
= "blob-num js-line-number"
data - line - number = "6948" > < /td>
    < td
id = "LC6948"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6949"
class
= "blob-num js-line-number"
data - line - number = "6949" > < /td>
    < td
id = "LC6949"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The final step of a &quot;hide&quot; animation is actually hiding the element</span></td>
    < /tr>
    < tr >
    < td
id = "L6950"
class
= "blob-num js-line-number"
data - line - number = "6950" > < /td>
    < td
id = "LC6950"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > hidden
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6951"
class
    = "blob-num js-line-number"
    data - line - number = "6951" > < /td>
        < td
    id = "LC6951"
class
    = "blob-code blob-code-inner js-file-line" > showHide([elem]);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6952"
class
    = "blob-num js-line-number"
    data - line - number = "6952" > < /td>
        < td
    id = "LC6952"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6953"
class
= "blob-num js-line-number"
data - line - number = "6953" > < /td>
    < td
id = "LC6953"
class
= "blob-code blob-code-inner js-file-line" > dataPriv < span
class
= "pl-k" >
.<
/span>remove( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > fxshow < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6954"
class
= "blob-num js-line-number"
data - line - number = "6954" > < /td>
    < td
id = "LC6954"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( prop in orig ) {</
td >
< /tr>
< tr >
< td
id = "L6955"
class
= "blob-num js-line-number"
data - line - number = "6955" > < /td>
    < td
id = "LC6955"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>style( elem, prop, orig[ prop ] );</
td >
< /tr>
< tr >
< td
id = "L6956"
class
= "blob-num js-line-number"
data - line - number = "6956" > < /td>
    < td
id = "LC6956"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6957"
class
= "blob-num js-line-number"
data - line - number = "6957" > < /td>
    < td
id = "LC6957"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L6958"
class
= "blob-num js-line-number"
data - line - number = "6958" > < /td>
    < td
id = "LC6958"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6959"
class
= "blob-num js-line-number"
data - line - number = "6959" > < /td>
    < td
id = "LC6959"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6960"
class
= "blob-num js-line-number"
data - line - number = "6960" > < /td>
    < td
id = "LC6960"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Per-property setup</span></td>
    < /tr>
    < tr >
    < td
id = "L6961"
class
= "blob-num js-line-number"
data - line - number = "6961" > < /td>
    < td
id = "LC6961"
class
= "blob-code blob-code-inner js-file-line" > propTween < span
class
= "pl-k" >= < /span> createTween( hidden <span class="pl-k">?</s
pan > dataShow[prop] < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">0</s
pan >, prop, anim
)
;
<
/td>
< /tr>
< tr >
< td
id = "L6962"
class
= "blob-num js-line-number"
data - line - number = "6962" > < /td>
    < td
id = "LC6962"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > (prop in dataShow)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6963"
class
    = "blob-num js-line-number"
    data - line - number = "6963" > < /td>
        < td
    id = "LC6963"
class
    = "blob-code blob-code-inner js-file-line" > dataShow[prop] < span
class
    = "pl-k" >= < /span> propTween<span class="pl-k">.</s
    pan > start;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6964"
class
    = "blob-num js-line-number"
    data - line - number = "6964" > < /td>
        < td
    id = "LC6964"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( hidden ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6965"
class
    = "blob-num js-line-number"
    data - line - number = "6965" > < /td>
        < td
    id = "LC6965"
class
    = "blob-code blob-code-inner js-file-line" > propTween < span
class
    = "pl-k" >
.<
    /span>end <span class="pl-k">=</s
    pan > propTween < span
class
    = "pl-k" >
.<
    /span>start;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6966"
class
    = "blob-num js-line-number"
    data - line - number = "6966" > < /td>
        < td
    id = "LC6966"
class
    = "blob-code blob-code-inner js-file-line" > propTween < span
class
    = "pl-k" >
.<
    /span>start <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > 0 < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L6967"
class
    = "blob-num js-line-number"
    data - line - number = "6967" > < /td>
        < td
    id = "LC6967"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6968"
class
= "blob-num js-line-number"
data - line - number = "6968" > < /td>
    < td
id = "LC6968"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6969"
class
= "blob-num js-line-number"
data - line - number = "6969" > < /td>
    < td
id = "LC6969"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6970"
class
= "blob-num js-line-number"
data - line - number = "6970" > < /td>
    < td
id = "LC6970"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6971"
class
= "blob-num js-line-number"
data - line - number = "6971" > < /td>
    < td
id = "LC6971"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6972"
class
= "blob-num js-line-number"
data - line - number = "6972" > < /td>
    < td
id = "LC6972"
class
= "blob-code blob-code-inner js-file-line" > function propFilter(props, specialEasing) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6973"
class
    = "blob-num js-line-number"
    data - line - number = "6973" > < /td>
        < td
    id = "LC6973"
class
    = "blob-code blob-code-inner js-file-line" >
    var index, name, easing, value, hooks;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6974"
class
    = "blob-num js-line-number"
    data - line - number = "6974" > < /td>
        < td
    id = "LC6974"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L6975"
class
    = "blob-num js-line-number"
    data - line - number = "6975" > < /td>
        < td
    id = "LC6975"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> camelCase, specialEasing and expand cssHook pass</span></td>
        < /tr>
        < tr >
        < td
    id = "L6976"
class
    = "blob-num js-line-number"
    data - line - number = "6976" > < /td>
        < td
    id = "LC6976"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( index in props ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L6977"
class
    = "blob-num js-line-number"
    data - line - number = "6977" > < /td>
        < td
    id = "LC6977"
class
    = "blob-code blob-code-inner js-file-line" > name < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > camelCase(index);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6978"
class
    = "blob-num js-line-number"
    data - line - number = "6978" > < /td>
        < td
    id = "LC6978"
class
    = "blob-code blob-code-inner js-file-line" > easing < span
class
    = "pl-k" >= < /span> specialEasing[ name ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6979"
class
    = "blob-num js-line-number"
    data - line - number = "6979" > < /td>
        < td
    id = "LC6979"
class
    = "blob-code blob-code-inner js-file-line" > value < span
class
    = "pl-k" >= < /span> props[ index ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6980"
class
    = "blob-num js-line-number"
    data - line - number = "6980" > < /td>
        < td
    id = "LC6980"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > isArray(value)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6981"
class
    = "blob-num js-line-number"
    data - line - number = "6981" > < /td>
        < td
    id = "LC6981"
class
    = "blob-code blob-code-inner js-file-line" > easing < span
class
    = "pl-k" >= < /span> value[ <span class="pl-c1">1</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6982"
class
    = "blob-num js-line-number"
    data - line - number = "6982" > < /td>
        < td
    id = "LC6982"
class
    = "blob-code blob-code-inner js-file-line" > value < span
class
    = "pl-k" >= < /span> props[ index ] <span class="pl-k">=</s
    pan > value[ < span
class
    = "pl-c1" > 0 < /span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L6983"
class
    = "blob-num js-line-number"
    data - line - number = "6983" > < /td>
        < td
    id = "LC6983"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L6984"
class
= "blob-num js-line-number"
data - line - number = "6984" > < /td>
    < td
id = "LC6984"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6985"
class
= "blob-num js-line-number"
data - line - number = "6985" > < /td>
    < td
id = "LC6985"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( index <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> name ) {</
td >
< /tr>
< tr >
< td
id = "L6986"
class
= "blob-num js-line-number"
data - line - number = "6986" > < /td>
    < td
id = "LC6986"
class
= "blob-code blob-code-inner js-file-line" > props[name] < span
class
= "pl-k" >= < /span> value;</
td >
< /tr>
< tr >
< td
id = "L6987"
class
= "blob-num js-line-number"
data - line - number = "6987" > < /td>
    < td
id = "LC6987"
class
= "blob-code blob-code-inner js-file-line" > delete props[index];
<
/td>
< /tr>
< tr >
< td
id = "L6988"
class
= "blob-num js-line-number"
data - line - number = "6988" > < /td>
    < td
id = "LC6988"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L6989"
class
= "blob-num js-line-number"
data - line - number = "6989" > < /td>
    < td
id = "LC6989"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6990"
class
= "blob-num js-line-number"
data - line - number = "6990" > < /td>
    < td
id = "LC6990"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > cssHooks[name];
<
/td>
< /tr>
< tr >
< td
id = "L6991"
class
= "blob-num js-line-number"
data - line - number = "6991" > < /td>
    < td
id = "LC6991"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>expand<span class="pl-pds">&quot;</s
pan > < /span> in hooks ) {</
td >
< /tr>
< tr >
< td
id = "L6992"
class
= "blob-num js-line-number"
data - line - number = "6992" > < /td>
    < td
id = "LC6992"
class
= "blob-code blob-code-inner js-file-line" > value < span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > expand(value);
<
/td>
< /tr>
< tr >
< td
id = "L6993"
class
= "blob-num js-line-number"
data - line - number = "6993" > < /td>
    < td
id = "LC6993"
class
= "blob-code blob-code-inner js-file-line" > delete props[name];
<
/td>
< /tr>
< tr >
< td
id = "L6994"
class
= "blob-num js-line-number"
data - line - number = "6994" > < /td>
    < td
id = "LC6994"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L6995"
class
= "blob-num js-line-number"
data - line - number = "6995" > < /td>
    < td
id = "LC6995"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Not quite $.extend, this won&#39;t overwrite existing keys.</span></td>
    < /tr>
    < tr >
    < td
id = "L6996"
class
= "blob-num js-line-number"
data - line - number = "6996" > < /td>
    < td
id = "LC6996"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Reusing &#39;index&#39; because we have the correct &quot;name&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L6997"
class
= "blob-num js-line-number"
data - line - number = "6997" > < /td>
    < td
id = "LC6997"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( index in value ) {</
td >
< /tr>
< tr >
< td
id = "L6998"
class
= "blob-num js-line-number"
data - line - number = "6998" > < /td>
    < td
id = "LC6998"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > (index in props)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L6999"
class
    = "blob-num js-line-number"
    data - line - number = "6999" > < /td>
        < td
    id = "LC6999"
class
    = "blob-code blob-code-inner js-file-line" > props[index] < span
class
    = "pl-k" >= < /span> value[ index ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L7000"
class
    = "blob-num js-line-number"
    data - line - number = "7000" > < /td>
        < td
    id = "LC7000"
class
    = "blob-code blob-code-inner js-file-line" > specialEasing[index] < span
class
    = "pl-k" >= < /span> easing;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7001"
class
    = "blob-num js-line-number"
    data - line - number = "7001" > < /td>
        < td
    id = "LC7001"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7002"
class
= "blob-num js-line-number"
data - line - number = "7002" > < /td>
    < td
id = "LC7002"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7003"
class
= "blob-num js-line-number"
data - line - number = "7003" > < /td>
    < td
id = "LC7003"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7004"
class
= "blob-num js-line-number"
data - line - number = "7004" > < /td>
    < td
id = "LC7004"
class
= "blob-code blob-code-inner js-file-line" > specialEasing[name] < span
class
= "pl-k" >= < /span> easing;</
td >
< /tr>
< tr >
< td
id = "L7005"
class
= "blob-num js-line-number"
data - line - number = "7005" > < /td>
    < td
id = "LC7005"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7006"
class
= "blob-num js-line-number"
data - line - number = "7006" > < /td>
    < td
id = "LC7006"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7007"
class
= "blob-num js-line-number"
data - line - number = "7007" > < /td>
    < td
id = "LC7007"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7008"
class
= "blob-num js-line-number"
data - line - number = "7008" > < /td>
    < td
id = "LC7008"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7009"
class
= "blob-num js-line-number"
data - line - number = "7009" > < /td>
    < td
id = "LC7009"
class
= "blob-code blob-code-inner js-file-line" > function Animation(elem, properties, options) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L7010"
    class
        = "blob-num js-line-number"
        data - line - number = "7010" > < /td>
            < td
        id = "LC7010"
    class
        = "blob-code blob-code-inner js-file-line" >
        var result, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L7011"
    class
        = "blob-num js-line-number"
        data - line - number = "7011" > < /td>
            < td
        id = "LC7011"
    class
        = "blob-code blob-code-inner js-file-line" > stopped,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L7012"
    class
        = "blob-num js-line-number"
        data - line - number = "7012" > < /td>
            < td
        id = "LC7012"
    class
        = "blob-code blob-code-inner js-file-line" > index < span
    class
        = "pl-k" >= < /span> <span class="pl-c1">0</s
        pan >,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L7013"
    class
        = "blob-num js-line-number"
        data - line - number = "7013" > < /td>
            < td
        id = "LC7013"
    class
        = "blob-code blob-code-inner js-file-line" > length < span
    class
        = "pl-k" >= < /span> <span class="pl-smi">Animation</s
        pan > < span
    class
        = "pl-k" >
    .<
        /span>prefilters<span class="pl-k">.</s
        pan > length,
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L7014"
    class
        = "blob-num js-line-number"
        data - line - number = "7014" > < /td>
            < td
        id = "LC7014"
    class
        = "blob-code blob-code-inner js-file-line" > deferred < span
    class
        = "pl-k" >= < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
        pan > Deferred < /span>()<span class="pl-k">.</s
        pan > always(function () {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L7015"
        class
            = "blob-num js-line-number"
            data - line - number = "7015" > < /td>
                < td
            id = "LC7015"
        class
            = "blob-code blob-code-inner js-file-line" >
                < /td>
                < /tr>
                < tr >
                < td
            id = "L7016"
        class
            = "blob-num js-line-number"
            data - line - number = "7016" > < /td>
                < td
            id = "LC7016"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-c" > < span
        class
            = "pl-c" >//</span> Don&#39;t match elem in the :animated selector</span></td>
                < /tr>
                < tr >
                < td
            id = "L7017"
        class
            = "blob-num js-line-number"
            data - line - number = "7017" > < /td>
                < td
            id = "LC7017"
        class
            = "blob-code blob-code-inner js-file-line" > delete tick < span
        class
            = "pl-k" >
        .<
            /span>elem;</
            td >
            < /tr>
            < tr >
            < td
            id = "L7018"
        class
            = "blob-num js-line-number"
            data - line - number = "7018" > < /td>
                < td
            id = "LC7018"
        class
            = "blob-code blob-code-inner js-file-line" >
        }),
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L7019"
    class
        = "blob-num js-line-number"
        data - line - number = "7019" > < /td>
            < td
        id = "LC7019"
    class
        = "blob-code blob-code-inner js-file-line" > tick < span
    class
        = "pl-k" >= < /span> function() {</
        td >
        < /tr>
        < tr >
        < td
        id = "L7020"
    class
        = "blob-num js-line-number"
        data - line - number = "7020" > < /td>
            < td
        id = "LC7020"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( stopped ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L7021"
    class
        = "blob-num js-line-number"
        data - line - number = "7021" > < /td>
            < td
        id = "LC7021"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-c1">false</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L7022"
    class
        = "blob-num js-line-number"
        data - line - number = "7022" > < /td>
            < td
        id = "LC7022"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L7023"
class
= "blob-num js-line-number"
data - line - number = "7023" > < /td>
    < td
id = "LC7023"
class
= "blob-code blob-code-inner js-file-line" >
var currentTime
<
span
class
= "pl-k" >= < /span> fxNow <span class="pl-k">||</s
pan > createFxNow(),
<
/td>
< /tr>
< tr >
< td
id = "L7024"
class
= "blob-num js-line-number"
data - line - number = "7024" > < /td>
    < td
id = "LC7024"
class
= "blob-code blob-code-inner js-file-line" > remaining < span
class
= "pl-k" >= < /span> <span class="pl-smi">Math</s
pan > < span
class
= "pl-k" >
.<
/span>max( <span class="pl-c1">0</s
pan >, animation < span
class
= "pl-k" >
.<
/span>startTime <span class="pl-k">+</s
pan > animation < span
class
= "pl-k" >
.<
/span>duration <span class="pl-k">-</s
pan > currentTime
),<
/td>
< /tr>
< tr >
< td
id = "L7025"
class
= "blob-num js-line-number"
data - line - number = "7025" > < /td>
    < td
id = "LC7025"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7026"
class
= "blob-num js-line-number"
data - line - number = "7026" > < /td>
    < td
id = "LC7026"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Android 2.3 only</span></td>
    < /tr>
    < tr >
    < td
id = "L7027"
class
= "blob-num js-line-number"
data - line - number = "7027" > < /td>
    < td
id = "LC7027"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Archaic crash bug won&#39;t allow us to use `1 - ( 0.5 || 0 )` (#12497)</span></td>
    < /tr>
    < tr >
    < td
id = "L7028"
class
= "blob-num js-line-number"
data - line - number = "7028" > < /td>
    < td
id = "LC7028"
class
= "blob-code blob-code-inner js-file-line" > temp < span
class
= "pl-k" >= < /span> remaining <span class="pl-k">/ < /span> animation<span class="pl-k">.</s
pan > duration < span
class
= "pl-k" > || < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7029"
class
= "blob-num js-line-number"
data - line - number = "7029" > < /td>
    < td
id = "LC7029"
class
= "blob-code blob-code-inner js-file-line" > percent < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > - < /span> temp,</
td >
< /tr>
< tr >
< td
id = "L7030"
class
= "blob-num js-line-number"
data - line - number = "7030" > < /td>
    < td
id = "LC7030"
class
= "blob-code blob-code-inner js-file-line" > index < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7031"
class
= "blob-num js-line-number"
data - line - number = "7031" > < /td>
    < td
id = "LC7031"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >= < /span> animation<span class="pl-k">.</s
pan > tweens < span
class
= "pl-k" >
.<
/span>length;</
td >
< /tr>
< tr >
< td
id = "L7032"
class
= "blob-num js-line-number"
data - line - number = "7032" > < /td>
    < td
id = "LC7032"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7033"
class
= "blob-num js-line-number"
data - line - number = "7033" > < /td>
    < td
id = "LC7033"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; index <span class="pl-k">&lt;</s
pan > length;
index < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7034"
class
= "blob-num js-line-number"
data - line - number = "7034" > < /td>
    < td
id = "LC7034"
class
= "blob-code blob-code-inner js-file-line" > animation < span
class
= "pl-k" >
.<
/span>tweens[ index ]<span class="pl-k">.</s
pan > run(percent);
<
/td>
< /tr>
< tr >
< td
id = "L7035"
class
= "blob-num js-line-number"
data - line - number = "7035" > < /td>
    < td
id = "LC7035"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7036"
class
= "blob-num js-line-number"
data - line - number = "7036" > < /td>
    < td
id = "LC7036"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7037"
class
= "blob-num js-line-number"
data - line - number = "7037" > < /td>
    < td
id = "LC7037"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>notifyWith( elem, [ animation, percent, remaining ] );</
td >
< /tr>
< tr >
< td
id = "L7038"
class
= "blob-num js-line-number"
data - line - number = "7038" > < /td>
    < td
id = "LC7038"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7039"
class
= "blob-num js-line-number"
data - line - number = "7039" > < /td>
    < td
id = "LC7039"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( percent <span class="pl-k">&lt;</s
pan > < span
class
= "pl-c1" > 1 < /span> <span class="pl-k">&amp;&amp;</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7040"
class
    = "blob-num js-line-number"
    data - line - number = "7040" > < /td>
        < td
    id = "LC7040"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> remaining;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7041"
class
    = "blob-num js-line-number"
    data - line - number = "7041" > < /td>
        < td
    id = "LC7041"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7042"
class
= "blob-num js-line-number"
data - line - number = "7042" > < /td>
    < td
id = "LC7042"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>resolveWith( elem, [ animation ] );</
td >
< /tr>
< tr >
< td
id = "L7043"
class
= "blob-num js-line-number"
data - line - number = "7043" > < /td>
    < td
id = "LC7043"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7044"
class
= "blob-num js-line-number"
data - line - number = "7044" > < /td>
    < td
id = "LC7044"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7045"
class
= "blob-num js-line-number"
data - line - number = "7045" > < /td>
    < td
id = "LC7045"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7046"
class
= "blob-num js-line-number"
data - line - number = "7046" > < /td>
    < td
id = "LC7046"
class
= "blob-code blob-code-inner js-file-line" > animation < span
class
= "pl-k" >= < /span> deferred<span class="pl-k">.</s
pan > promise({ < /td>
    < /tr>
    < tr >
    < td
id = "L7047"
class
= "blob-num js-line-number"
data - line - number = "7047" > < /td>
    < td
id = "LC7047"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
:<
/span> elem,</
td >
< /tr>
< tr >
< td
id = "L7048"
class
= "blob-num js-line-number"
data - line - number = "7048" > < /td>
    < td
id = "LC7048"
class
= "blob-code blob-code-inner js-file-line" > props < span
class
= "pl-k" >
:<
/span> jQuery<span class="pl-k">.</s
pan > extend({}, properties),
<
/td>
< /tr>
< tr >
< td
id = "L7049"
class
= "blob-num js-line-number"
data - line - number = "7049" > < /td>
    < td
id = "LC7049"
class
= "blob-code blob-code-inner js-file-line" > opts < span
class
= "pl-k" >
:<
/span> jQuery<span class="pl-k">.</s
pan > extend( < span
class
= "pl-c1" > true < /span>, {</
td >
< /tr>
< tr >
< td
id = "L7050"
class
= "blob-num js-line-number"
data - line - number = "7050" > < /td>
    < td
id = "LC7050"
class
= "blob-code blob-code-inner js-file-line" > specialEasing < span
class
= "pl-k" >
:<
/span> {},</
td >
< /tr>
< tr >
< td
id = "L7051"
class
= "blob-num js-line-number"
data - line - number = "7051" > < /td>
    < td
id = "LC7051"
class
= "blob-code blob-code-inner js-file-line" > easing < span
class
= "pl-k" >
:<
/span> jQuery<span class="pl-k">.</s
pan > easing < span
class
= "pl-k" >
.<
/span>_default</
td >
< /tr>
< tr >
< td
id = "L7052"
class
= "blob-num js-line-number"
data - line - number = "7052" > < /td>
    < td
id = "LC7052"
class
= "blob-code blob-code-inner js-file-line" >
},
options
),<
/td>
< /tr>
< tr >
< td
id = "L7053"
class
= "blob-num js-line-number"
data - line - number = "7053" > < /td>
    < td
id = "LC7053"
class
= "blob-code blob-code-inner js-file-line" > originalProperties < span
class
= "pl-k" >
:<
/span> properties,</
td >
< /tr>
< tr >
< td
id = "L7054"
class
= "blob-num js-line-number"
data - line - number = "7054" > < /td>
    < td
id = "LC7054"
class
= "blob-code blob-code-inner js-file-line" > originalOptions < span
class
= "pl-k" >
:<
/span> options,</
td >
< /tr>
< tr >
< td
id = "L7055"
class
= "blob-num js-line-number"
data - line - number = "7055" > < /td>
    < td
id = "LC7055"
class
= "blob-code blob-code-inner js-file-line" > startTime < span
class
= "pl-k" >
:<
/span> fxNow <span class="pl-k">||</s
pan > createFxNow(),
<
/td>
< /tr>
< tr >
< td
id = "L7056"
class
= "blob-num js-line-number"
data - line - number = "7056" > < /td>
    < td
id = "LC7056"
class
= "blob-code blob-code-inner js-file-line" > duration < span
class
= "pl-k" >
:<
/span> options<span class="pl-k">.</s
pan > duration,
<
/td>
< /tr>
< tr >
< td
id = "L7057"
class
= "blob-num js-line-number"
data - line - number = "7057" > < /td>
    < td
id = "LC7057"
class
= "blob-code blob-code-inner js-file-line" > tweens < span
class
= "pl-k" >
:<
/span> [],</
td >
< /tr>
< tr >
< td
id = "L7058"
class
= "blob-num js-line-number"
data - line - number = "7058" > < /td>
    < td
id = "LC7058"
class
= "blob-code blob-code-inner js-file-line" > createTween < span
class
= "pl-k" >
:<
/span> function( prop, end ) {</
td >
< /tr>
< tr >
< td
id = "L7059"
class
= "blob-num js-line-number"
data - line - number = "7059" > < /td>
    < td
id = "LC7059"
class
= "blob-code blob-code-inner js-file-line" >
var tween
<
span
class
= "pl-k" >= < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Tween < /span>( elem, animation<span class="pl-k">.</s
pan > opts, prop, end,
<
/td>
< /tr>
< tr >
< td
id = "L7060"
class
= "blob-num js-line-number"
data - line - number = "7060" > < /td>
    < td
id = "LC7060"
class
= "blob-code blob-code-inner js-file-line" > animation < span
class
= "pl-k" >
.<
/span>opts<span class="pl-k">.</s
pan > specialEasing[prop] < span
class
= "pl-k" > || < /span> animation<span class="pl-k">.</s
pan > opts < span
class
= "pl-k" >
.<
/span>easing );</
td >
< /tr>
< tr >
< td
id = "L7061"
class
= "blob-num js-line-number"
data - line - number = "7061" > < /td>
    < td
id = "LC7061"
class
= "blob-code blob-code-inner js-file-line" > animation < span
class
= "pl-k" >
.<
/span>tweens<span class="pl-k">.</s
pan > push(tween);
<
/td>
< /tr>
< tr >
< td
id = "L7062"
class
= "blob-num js-line-number"
data - line - number = "7062" > < /td>
    < td
id = "LC7062"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> tween;</
td >
< /tr>
< tr >
< td
id = "L7063"
class
= "blob-num js-line-number"
data - line - number = "7063" > < /td>
    < td
id = "LC7063"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7064"
class
= "blob-num js-line-number"
data - line - number = "7064" > < /td>
    < td
id = "LC7064"
class
= "blob-code blob-code-inner js-file-line" > stop < span
class
= "pl-k" >
:<
/span> function( gotoEnd ) {</
td >
< /tr>
< tr >
< td
id = "L7065"
class
= "blob-num js-line-number"
data - line - number = "7065" > < /td>
    < td
id = "LC7065"
class
= "blob-code blob-code-inner js-file-line" >
var index
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7066"
class
= "blob-num js-line-number"
data - line - number = "7066" > < /td>
    < td
id = "LC7066"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7067"
class
= "blob-num js-line-number"
data - line - number = "7067" > < /td>
    < td
id = "LC7067"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If we are going to the end, we want to run all the tweens</span></td>
    < /tr>
    < tr >
    < td
id = "L7068"
class
= "blob-num js-line-number"
data - line - number = "7068" > < /td>
    < td
id = "LC7068"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> otherwise we skip this part</span></td>
    < /tr>
    < tr >
    < td
id = "L7069"
class
= "blob-num js-line-number"
data - line - number = "7069" > < /td>
    < td
id = "LC7069"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >= < /span> gotoEnd <span class="pl-k">?</s
pan > animation < span
class
= "pl-k" >
.<
/span>tweens<span class="pl-k">.</s
pan > length < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7070"
class
= "blob-num js-line-number"
data - line - number = "7070" > < /td>
    < td
id = "LC7070"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( stopped ) {</
td >
< /tr>
< tr >
< td
id = "L7071"
class
= "blob-num js-line-number"
data - line - number = "7071" > < /td>
    < td
id = "LC7071"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7072"
class
= "blob-num js-line-number"
data - line - number = "7072" > < /td>
    < td
id = "LC7072"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7073"
class
= "blob-num js-line-number"
data - line - number = "7073" > < /td>
    < td
id = "LC7073"
class
= "blob-code blob-code-inner js-file-line" > stopped < span
class
= "pl-k" >= < /span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7074"
class
= "blob-num js-line-number"
data - line - number = "7074" > < /td>
    < td
id = "LC7074"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; index <span class="pl-k">&lt;</s
pan > length;
index < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7075"
class
= "blob-num js-line-number"
data - line - number = "7075" > < /td>
    < td
id = "LC7075"
class
= "blob-code blob-code-inner js-file-line" > animation < span
class
= "pl-k" >
.<
/span>tweens[ index ]<span class="pl-k">.</s
pan > run( < span
class
= "pl-c1" > 1 < /span> );</
td >
< /tr>
< tr >
< td
id = "L7076"
class
= "blob-num js-line-number"
data - line - number = "7076" > < /td>
    < td
id = "LC7076"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7077"
class
= "blob-num js-line-number"
data - line - number = "7077" > < /td>
    < td
id = "LC7077"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7078"
class
= "blob-num js-line-number"
data - line - number = "7078" > < /td>
    < td
id = "LC7078"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Resolve when we played the last frame; otherwise, reject</span></td>
    < /tr>
    < tr >
    < td
id = "L7079"
class
= "blob-num js-line-number"
data - line - number = "7079" > < /td>
    < td
id = "LC7079"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( gotoEnd ) {</
td >
< /tr>
< tr >
< td
id = "L7080"
class
= "blob-num js-line-number"
data - line - number = "7080" > < /td>
    < td
id = "LC7080"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>notifyWith( elem, [ animation, <span class="pl-c1">1</span>, <span class="pl-c1">0</span> ] );</
td >
< /tr>
< tr >
< td
id = "L7081"
class
= "blob-num js-line-number"
data - line - number = "7081" > < /td>
    < td
id = "LC7081"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>resolveWith( elem, [ animation, gotoEnd ] );</
td >
< /tr>
< tr >
< td
id = "L7082"
class
= "blob-num js-line-number"
data - line - number = "7082" > < /td>
    < td
id = "LC7082"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7083"
class
= "blob-num js-line-number"
data - line - number = "7083" > < /td>
    < td
id = "LC7083"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>rejectWith( elem, [ animation, gotoEnd ] );</
td >
< /tr>
< tr >
< td
id = "L7084"
class
= "blob-num js-line-number"
data - line - number = "7084" > < /td>
    < td
id = "LC7084"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7085"
class
= "blob-num js-line-number"
data - line - number = "7085" > < /td>
    < td
id = "LC7085"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7086"
class
= "blob-num js-line-number"
data - line - number = "7086" > < /td>
    < td
id = "LC7086"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7087"
class
= "blob-num js-line-number"
data - line - number = "7087" > < /td>
    < td
id = "LC7087"
class
= "blob-code blob-code-inner js-file-line" >
} ),<
/td>
< /tr>
< tr >
< td
id = "L7088"
class
= "blob-num js-line-number"
data - line - number = "7088" > < /td>
    < td
id = "LC7088"
class
= "blob-code blob-code-inner js-file-line" > props < span
class
= "pl-k" >= < /span> animation<span class="pl-k">.</s
pan > props;
<
/td>
< /tr>
< tr >
< td
id = "L7089"
class
= "blob-num js-line-number"
data - line - number = "7089" > < /td>
    < td
id = "LC7089"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7090"
class
= "blob-num js-line-number"
data - line - number = "7090" > < /td>
    < td
id = "LC7090"
class
= "blob-code blob-code-inner js-file-line" > propFilter(props, animation < span
class
= "pl-k" >
.<
/span>opts<span class="pl-k">.</s
pan > specialEasing
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7091"
class
= "blob-num js-line-number"
data - line - number = "7091" > < /td>
    < td
id = "LC7091"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7092"
class
= "blob-num js-line-number"
data - line - number = "7092" > < /td>
    < td
id = "LC7092"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; index <span class="pl-k">&lt;</s
pan > length;
index < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7093"
class
= "blob-num js-line-number"
data - line - number = "7093" > < /td>
    < td
id = "LC7093"
class
= "blob-code blob-code-inner js-file-line" > result < span
class
= "pl-k" >= < /span> <span class="pl-smi">Animation</s
pan > < span
class
= "pl-k" >
.<
/span>prefilters[ index ]<span class="pl-k">.</s
pan > call(animation, elem, props, animation < span
class
= "pl-k" >
.<
/span>opts );</
td >
< /tr>
< tr >
< td
id = "L7094"
class
= "blob-num js-line-number"
data - line - number = "7094" > < /td>
    < td
id = "LC7094"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( result ) {</
td >
< /tr>
< tr >
< td
id = "L7095"
class
= "blob-num js-line-number"
data - line - number = "7095" > < /td>
    < td
id = "LC7095"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(result < span
class
= "pl-k" >
.<
/span>stop ) ) {</
td >
< /tr>
< tr >
< td
id = "L7096"
class
= "blob-num js-line-number"
data - line - number = "7096" > < /td>
    < td
id = "LC7096"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>_queueHooks( animation<span class="pl-k">.</s
pan > elem, animation < span
class
= "pl-k" >
.<
/span>opts<span class="pl-k">.</s
pan > queue
)<
span
class
= "pl-k" >
.<
/span>stop <span class="pl-k">=</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7097"
class
= "blob-num js-line-number"
data - line - number = "7097" > < /td>
    < td
id = "LC7097"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>proxy( result<span class="pl-k">.</s
pan > stop, result
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7098"
class
= "blob-num js-line-number"
data - line - number = "7098" > < /td>
    < td
id = "LC7098"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7099"
class
= "blob-num js-line-number"
data - line - number = "7099" > < /td>
    < td
id = "LC7099"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> result;</
td >
< /tr>
< tr >
< td
id = "L7100"
class
= "blob-num js-line-number"
data - line - number = "7100" > < /td>
    < td
id = "LC7100"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7101"
class
= "blob-num js-line-number"
data - line - number = "7101" > < /td>
    < td
id = "LC7101"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7102"
class
= "blob-num js-line-number"
data - line - number = "7102" > < /td>
    < td
id = "LC7102"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7103"
class
= "blob-num js-line-number"
data - line - number = "7103" > < /td>
    < td
id = "LC7103"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>map( props, createTween, animation );</
td >
< /tr>
< tr >
< td
id = "L7104"
class
= "blob-num js-line-number"
data - line - number = "7104" > < /td>
    < td
id = "LC7104"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7105"
class
= "blob-num js-line-number"
data - line - number = "7105" > < /td>
    < td
id = "LC7105"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(animation < span
class
= "pl-k" >
.<
/span>opts<span class="pl-k">.</s
pan > start
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7106"
class
    = "blob-num js-line-number"
    data - line - number = "7106" > < /td>
        < td
    id = "LC7106"
class
    = "blob-code blob-code-inner js-file-line" > animation < span
class
    = "pl-k" >
.<
    /span>opts<span class="pl-k">.</s
    pan > start < span
class
    = "pl-k" >
.<
    /span>call( elem, animation );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7107"
class
    = "blob-num js-line-number"
    data - line - number = "7107" > < /td>
        < td
    id = "LC7107"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7108"
class
= "blob-num js-line-number"
data - line - number = "7108" > < /td>
    < td
id = "LC7108"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7109"
class
= "blob-num js-line-number"
data - line - number = "7109" > < /td>
    < td
id = "LC7109"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > timer( < /td>
< /tr>
< tr >
< td
id = "L7110"
class
= "blob-num js-line-number"
data - line - number = "7110" > < /td>
    < td
id = "LC7110"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( tick, {</
td >
< /tr>
< tr >
< td
id = "L7111"
class
= "blob-num js-line-number"
data - line - number = "7111" > < /td>
    < td
id = "LC7111"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
:<
/span> elem,</
td >
< /tr>
< tr >
< td
id = "L7112"
class
= "blob-num js-line-number"
data - line - number = "7112" > < /td>
    < td
id = "LC7112"
class
= "blob-code blob-code-inner js-file-line" > anim < span
class
= "pl-k" >
:<
/span> animation,</
td >
< /tr>
< tr >
< td
id = "L7113"
class
= "blob-num js-line-number"
data - line - number = "7113" > < /td>
    < td
id = "LC7113"
class
= "blob-code blob-code-inner js-file-line" > queue < span
class
= "pl-k" >
:<
/span> animation<span class="pl-k">.</s
pan > opts < span
class
= "pl-k" >
.<
/span>queue</
td >
< /tr>
< tr >
< td
id = "L7114"
class
= "blob-num js-line-number"
data - line - number = "7114" > < /td>
    < td
id = "LC7114"
class
= "blob-code blob-code-inner js-file-line" >
} )<
/td>
< /tr>
< tr >
< td
id = "L7115"
class
= "blob-num js-line-number"
data - line - number = "7115" > < /td>
    < td
id = "LC7115"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7116"
class
= "blob-num js-line-number"
data - line - number = "7116" > < /td>
    < td
id = "LC7116"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7117"
class
= "blob-num js-line-number"
data - line - number = "7117" > < /td>
    < td
id = "LC7117"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> attach callbacks from options</span></td>
    < /tr>
    < tr >
    < td
id = "L7118"
class
= "blob-num js-line-number"
data - line - number = "7118" > < /td>
    < td
id = "LC7118"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> animation<span class="pl-k">.</s
pan > progress(animation < span
class
= "pl-k" >
.<
/span>opts<span class="pl-k">.</s
pan > progress
)<
/td>
< /tr>
< tr >
< td
id = "L7119"
class
= "blob-num js-line-number"
data - line - number = "7119" > < /td>
    < td
id = "LC7119"
class
= "blob-code blob-code-inner js-file-line" >
.
done(animation < span
class
= "pl-k" >
.<
/span>opts<span class="pl-k">.</s
pan > done, animation < span
class
= "pl-k" >
.<
/span>opts<span class="pl-k">.</s
pan > complete
)<
/td>
< /tr>
< tr >
< td
id = "L7120"
class
= "blob-num js-line-number"
data - line - number = "7120" > < /td>
    < td
id = "LC7120"
class
= "blob-code blob-code-inner js-file-line" >
.
fail(animation < span
class
= "pl-k" >
.<
/span>opts<span class="pl-k">.</s
pan > fail
)<
/td>
< /tr>
< tr >
< td
id = "L7121"
class
= "blob-num js-line-number"
data - line - number = "7121" > < /td>
    < td
id = "LC7121"
class
= "blob-code blob-code-inner js-file-line" >
.
always(animation < span
class
= "pl-k" >
.<
/span>opts<span class="pl-k">.</s
pan > always
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7122"
class
= "blob-num js-line-number"
data - line - number = "7122" > < /td>
    < td
id = "LC7122"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7123"
class
= "blob-num js-line-number"
data - line - number = "7123" > < /td>
    < td
id = "LC7123"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7124"
class
= "blob-num js-line-number"
data - line - number = "7124" > < /td>
    < td
id = "LC7124"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > jQuery < span
class
= "pl-k" >
.<
/span>Animation</s
pan > < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > extend( < span
class
= "pl-smi" > Animation < /span>, {</
td >
< /tr>
< tr >
< td
id = "L7125"
class
= "blob-num js-line-number"
data - line - number = "7125" > < /td>
    < td
id = "LC7125"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7126"
class
= "blob-num js-line-number"
data - line - number = "7126" > < /td>
    < td
id = "LC7126"
class
= "blob-code blob-code-inner js-file-line" > tweeners < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7127"
class
= "blob-num js-line-number"
data - line - number = "7127" > < /td>
    < td
id = "LC7127"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > [function (prop, value) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7128"
class
    = "blob-num js-line-number"
    data - line - number = "7128" > < /td>
        < td
    id = "LC7128"
class
    = "blob-code blob-code-inner js-file-line" >
    var tween
<
    span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>createTween( prop, value );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7129"
class
    = "blob-num js-line-number"
    data - line - number = "7129" > < /td>
        < td
    id = "LC7129"
class
    = "blob-code blob-code-inner js-file-line" > adjustCSS(tween < span
class
    = "pl-k" >
.<
    /span>elem, prop, rcssNum<span class="pl-k">.</s
    pan > exec(value), tween
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7130"
class
    = "blob-num js-line-number"
    data - line - number = "7130" > < /td>
        < td
    id = "LC7130"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> tween;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7131"
class
    = "blob-num js-line-number"
    data - line - number = "7131" > < /td>
        < td
    id = "LC7131"
class
    = "blob-code blob-code-inner js-file-line" >
}] < /td>
< /tr>
< tr >
< td
id = "L7132"
class
= "blob-num js-line-number"
data - line - number = "7132" > < /td>
    < td
id = "LC7132"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7133"
class
= "blob-num js-line-number"
data - line - number = "7133" > < /td>
    < td
id = "LC7133"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7134"
class
= "blob-num js-line-number"
data - line - number = "7134" > < /td>
    < td
id = "LC7134"
class
= "blob-code blob-code-inner js-file-line" > tweener < span
class
= "pl-k" >
:<
/span> function( props, callback ) {</
td >
< /tr>
< tr >
< td
id = "L7135"
class
= "blob-num js-line-number"
data - line - number = "7135" > < /td>
    < td
id = "LC7135"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(props)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7136"
class
    = "blob-num js-line-number"
    data - line - number = "7136" > < /td>
        < td
    id = "LC7136"
class
    = "blob-code blob-code-inner js-file-line" > callback < span
class
    = "pl-k" >= < /span> props;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7137"
class
    = "blob-num js-line-number"
    data - line - number = "7137" > < /td>
        < td
    id = "LC7137"
class
    = "blob-code blob-code-inner js-file-line" > props < span
class
    = "pl-k" >= < /span> [ <span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L7138"
class
    = "blob-num js-line-number"
    data - line - number = "7138" > < /td>
        < td
    id = "LC7138"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7139"
class
= "blob-num js-line-number"
data - line - number = "7139" > < /td>
    < td
id = "LC7139"
class
= "blob-code blob-code-inner js-file-line" > props < span
class
= "pl-k" >= < /span> props<span class="pl-k">.</s
pan > match(rnothtmlwhite);
<
/td>
< /tr>
< tr >
< td
id = "L7140"
class
= "blob-num js-line-number"
data - line - number = "7140" > < /td>
    < td
id = "LC7140"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7141"
class
= "blob-num js-line-number"
data - line - number = "7141" > < /td>
    < td
id = "LC7141"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7142"
class
= "blob-num js-line-number"
data - line - number = "7142" > < /td>
    < td
id = "LC7142"
class
= "blob-code blob-code-inner js-file-line" >
var prop, <
/td>
< /tr>
< tr >
< td
id = "L7143"
class
= "blob-num js-line-number"
data - line - number = "7143" > < /td>
    < td
id = "LC7143"
class
= "blob-code blob-code-inner js-file-line" > index < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7144"
class
= "blob-num js-line-number"
data - line - number = "7144" > < /td>
    < td
id = "LC7144"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >= < /span> props<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L7145"
class
= "blob-num js-line-number"
data - line - number = "7145" > < /td>
    < td
id = "LC7145"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7146"
class
= "blob-num js-line-number"
data - line - number = "7146" > < /td>
    < td
id = "LC7146"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; index <span class="pl-k">&lt;</s
pan > length;
index < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7147"
class
= "blob-num js-line-number"
data - line - number = "7147" > < /td>
    < td
id = "LC7147"
class
= "blob-code blob-code-inner js-file-line" > prop < span
class
= "pl-k" >= < /span> props[ index ];</
td >
< /tr>
< tr >
< td
id = "L7148"
class
= "blob-num js-line-number"
data - line - number = "7148" > < /td>
    < td
id = "LC7148"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Animation < /span><span class="pl-k">.</s
pan > tweeners[prop] < span
class
= "pl-k" >= < /span> <span class="pl-smi">Animation</s
pan > < span
class
= "pl-k" >
.<
/span>tweeners[ prop ] <span class="pl-k">||</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L7149"
class
= "blob-num js-line-number"
data - line - number = "7149" > < /td>
    < td
id = "LC7149"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Animation < /span><span class="pl-k">.</s
pan > tweeners[prop] < span
class
= "pl-k" >
.<
/span>unshift( callback );</
td >
< /tr>
< tr >
< td
id = "L7150"
class
= "blob-num js-line-number"
data - line - number = "7150" > < /td>
    < td
id = "LC7150"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7151"
class
= "blob-num js-line-number"
data - line - number = "7151" > < /td>
    < td
id = "LC7151"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7152"
class
= "blob-num js-line-number"
data - line - number = "7152" > < /td>
    < td
id = "LC7152"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7153"
class
= "blob-num js-line-number"
data - line - number = "7153" > < /td>
    < td
id = "LC7153"
class
= "blob-code blob-code-inner js-file-line" > prefilters < span
class
= "pl-k" >
:<
/span> [ defaultPrefilter ],</
td >
< /tr>
< tr >
< td
id = "L7154"
class
= "blob-num js-line-number"
data - line - number = "7154" > < /td>
    < td
id = "LC7154"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7155"
class
= "blob-num js-line-number"
data - line - number = "7155" > < /td>
    < td
id = "LC7155"
class
= "blob-code blob-code-inner js-file-line" > prefilter < span
class
= "pl-k" >
:<
/span> function( callback, prepend ) {</
td >
< /tr>
< tr >
< td
id = "L7156"
class
= "blob-num js-line-number"
data - line - number = "7156" > < /td>
    < td
id = "LC7156"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( prepend ) {</
td >
< /tr>
< tr >
< td
id = "L7157"
class
= "blob-num js-line-number"
data - line - number = "7157" > < /td>
    < td
id = "LC7157"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Animation < /span><span class="pl-k">.</s
pan > prefilters < span
class
= "pl-k" >
.<
/span>unshift( callback );</
td >
< /tr>
< tr >
< td
id = "L7158"
class
= "blob-num js-line-number"
data - line - number = "7158" > < /td>
    < td
id = "LC7158"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7159"
class
= "blob-num js-line-number"
data - line - number = "7159" > < /td>
    < td
id = "LC7159"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-smi" > Animation < /span><span class="pl-k">.</s
pan > prefilters < span
class
= "pl-k" >
.<
/span>push( callback );</
td >
< /tr>
< tr >
< td
id = "L7160"
class
= "blob-num js-line-number"
data - line - number = "7160" > < /td>
    < td
id = "LC7160"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7161"
class
= "blob-num js-line-number"
data - line - number = "7161" > < /td>
    < td
id = "LC7161"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7162"
class
= "blob-num js-line-number"
data - line - number = "7162" > < /td>
    < td
id = "LC7162"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7163"
class
= "blob-num js-line-number"
data - line - number = "7163" > < /td>
    < td
id = "LC7163"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7164"
class
= "blob-num js-line-number"
data - line - number = "7164" > < /td>
    < td
id = "LC7164"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>speed <span class="pl-k">=</s
pan > function (speed, easing, fn) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7165"
class
    = "blob-num js-line-number"
    data - line - number = "7165" > < /td>
        < td
    id = "LC7165"
class
    = "blob-code blob-code-inner js-file-line" >
    var opt
<
    span
class
    = "pl-k" >= < /span> speed <span class="pl-k">&amp;&amp;</s
    pan > typeof speed < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > object < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > ?
<
    /span> jQuery<span class="pl-k">.</s
    pan > extend({}, speed) < span
class
    = "pl-k" >
:<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7166"
class
    = "blob-num js-line-number"
    data - line - number = "7166" > < /td>
        < td
    id = "LC7166"
class
    = "blob-code blob-code-inner js-file-line" > complete < span
class
    = "pl-k" >
:<
    /span> fn <span class="pl-k">||</s
    pan > < span
class
    = "pl-k" > ! < /span>fn <span class="pl-k">&amp;&amp;</s
    pan > easing < span
class
    = "pl-k" > || < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L7167"
class
    = "blob-num js-line-number"
    data - line - number = "7167" > < /td>
        < td
    id = "LC7167"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>isFunction( speed ) <span class="pl-k">&amp;&amp;</s
    pan > speed,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7168"
class
    = "blob-num js-line-number"
    data - line - number = "7168" > < /td>
        < td
    id = "LC7168"
class
    = "blob-code blob-code-inner js-file-line" > duration < span
class
    = "pl-k" >
:<
    /span> speed,</
    td >
    < /tr>
    < tr >
    < td
    id = "L7169"
class
    = "blob-num js-line-number"
    data - line - number = "7169" > < /td>
        < td
    id = "LC7169"
class
    = "blob-code blob-code-inner js-file-line" > easing < span
class
    = "pl-k" >
:<
    /span> fn <span class="pl-k">&amp;&amp;</s
    pan > easing < span
class
    = "pl-k" > || < /span> easing <span class="pl-k">&amp;&amp;</s
    pan > < span
class
    = "pl-k" > ! < /span>jQuery<span class="pl-k">.</s
    pan > isFunction(easing) < span
class
    = "pl-k" > &amp;&amp; < /span> easing</
    td >
    < /tr>
    < tr >
    < td
    id = "L7170"
class
    = "blob-num js-line-number"
    data - line - number = "7170" > < /td>
        < td
    id = "LC7170"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L7171"
class
= "blob-num js-line-number"
data - line - number = "7171" > < /td>
    < td
id = "LC7171"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7172"
class
= "blob-num js-line-number"
data - line - number = "7172" > < /td>
    < td
id = "LC7172"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Go to the end state if fx are off or if document is hidden</span></td>
    < /tr>
    < tr >
    < td
id = "L7173"
class
= "blob-num js-line-number"
data - line - number = "7173" > < /td>
    < td
id = "LC7173"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > fx < span
class
= "pl-k" >
.<
/span>off <span class="pl-k">||</s
pan > document < span
class
= "pl-k" >
.<
/span>hidden ) {</
td >
< /tr>
< tr >
< td
id = "L7174"
class
= "blob-num js-line-number"
data - line - number = "7174" > < /td>
    < td
id = "LC7174"
class
= "blob-code blob-code-inner js-file-line" > opt < span
class
= "pl-k" >
.<
/span>duration <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L7175"
class
= "blob-num js-line-number"
data - line - number = "7175" > < /td>
    < td
id = "LC7175"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7176"
class
= "blob-num js-line-number"
data - line - number = "7176" > < /td>
    < td
id = "LC7176"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7177"
class
= "blob-num js-line-number"
data - line - number = "7177" > < /td>
    < td
id = "LC7177"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof opt<span class="pl-k">.</s
pan > duration < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>number<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7178"
class
= "blob-num js-line-number"
data - line - number = "7178" > < /td>
    < td
id = "LC7178"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( opt<span class="pl-k">.</s
pan > duration in jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > speeds
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7179"
class
    = "blob-num js-line-number"
    data - line - number = "7179" > < /td>
        < td
    id = "LC7179"
class
    = "blob-code blob-code-inner js-file-line" > opt < span
class
    = "pl-k" >
.<
    /span>duration <span class="pl-k">=</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>fx<span class="pl-k">.</s
    pan > speeds[opt < span
class
    = "pl-k" >
.<
    /span>duration ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L7180"
class
    = "blob-num js-line-number"
    data - line - number = "7180" > < /td>
        < td
    id = "LC7180"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7181"
class
    = "blob-num js-line-number"
    data - line - number = "7181" > < /td>
        < td
    id = "LC7181"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7182"
class
= "blob-num js-line-number"
data - line - number = "7182" > < /td>
    < td
id = "LC7182"
class
= "blob-code blob-code-inner js-file-line" > opt < span
class
= "pl-k" >
.<
/span>duration <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > speeds < span
class
= "pl-k" >
.<
/span>_default;</
td >
< /tr>
< tr >
< td
id = "L7183"
class
= "blob-num js-line-number"
data - line - number = "7183" > < /td>
    < td
id = "LC7183"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7184"
class
= "blob-num js-line-number"
data - line - number = "7184" > < /td>
    < td
id = "LC7184"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7185"
class
= "blob-num js-line-number"
data - line - number = "7185" > < /td>
    < td
id = "LC7185"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7186"
class
= "blob-num js-line-number"
data - line - number = "7186" > < /td>
    < td
id = "LC7186"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7187"
class
= "blob-num js-line-number"
data - line - number = "7187" > < /td>
    < td
id = "LC7187"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Normalize opt.queue - true/undefined/null -&gt; &quot;fx&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L7188"
class
= "blob-num js-line-number"
data - line - number = "7188" > < /td>
    < td
id = "LC7188"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( opt<span class="pl-k">.</s
pan > queue < span
class
= "pl-k" >= =
<
/span> <span class="pl-c1">null</s
pan > < span
class
= "pl-k" > || < /span> opt<span class="pl-k">.</s
pan > queue < span
class
= "pl-k" >= == < /span> <span class="pl-c1">true</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7189"
class
    = "blob-num js-line-number"
    data - line - number = "7189" > < /td>
        < td
    id = "LC7189"
class
    = "blob-code blob-code-inner js-file-line" > opt < span
class
    = "pl-k" >
.<
    /span>queue <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>fx<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7190"
class
    = "blob-num js-line-number"
    data - line - number = "7190" > < /td>
        < td
    id = "LC7190"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7191"
class
= "blob-num js-line-number"
data - line - number = "7191" > < /td>
    < td
id = "LC7191"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7192"
class
= "blob-num js-line-number"
data - line - number = "7192" > < /td>
    < td
id = "LC7192"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Queueing</span></td>
    < /tr>
    < tr >
    < td
id = "L7193"
class
= "blob-num js-line-number"
data - line - number = "7193" > < /td>
    < td
id = "LC7193"
class
= "blob-code blob-code-inner js-file-line" > opt < span
class
= "pl-k" >
.<
/span>old <span class="pl-k">=</s
pan > opt < span
class
= "pl-k" >
.<
/span>complete;</
td >
< /tr>
< tr >
< td
id = "L7194"
class
= "blob-num js-line-number"
data - line - number = "7194" > < /td>
    < td
id = "LC7194"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7195"
class
= "blob-num js-line-number"
data - line - number = "7195" > < /td>
    < td
id = "LC7195"
class
= "blob-code blob-code-inner js-file-line" > opt < span
class
= "pl-k" >
.<
/span>complete <span class="pl-k">=</s
pan > function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7196"
class
    = "blob-num js-line-number"
    data - line - number = "7196" > < /td>
        < td
    id = "LC7196"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > isFunction(opt < span
class
    = "pl-k" >
.<
    /span>old ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7197"
class
    = "blob-num js-line-number"
    data - line - number = "7197" > < /td>
        < td
    id = "LC7197"
class
    = "blob-code blob-code-inner js-file-line" > opt < span
class
    = "pl-k" >
.<
    /span>old<span class="pl-k">.</s
    pan > call( < span
class
    = "pl-c1" > this < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7198"
class
    = "blob-num js-line-number"
    data - line - number = "7198" > < /td>
        < td
    id = "LC7198"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L7199"
class
= "blob-num js-line-number"
data - line - number = "7199" > < /td>
    < td
id = "LC7199"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7200"
class
= "blob-num js-line-number"
data - line - number = "7200" > < /td>
    < td
id = "LC7200"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( opt<span class="pl-k">.</s
pan > queue
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7201"
class
    = "blob-num js-line-number"
    data - line - number = "7201" > < /td>
        < td
    id = "LC7201"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>dequeue( <span class="pl-c1">this</s
    pan >, opt < span
class
    = "pl-k" >
.<
    /span>queue );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7202"
class
    = "blob-num js-line-number"
    data - line - number = "7202" > < /td>
        < td
    id = "LC7202"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7203"
class
= "blob-num js-line-number"
data - line - number = "7203" > < /td>
    < td
id = "LC7203"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7204"
class
= "blob-num js-line-number"
data - line - number = "7204" > < /td>
    < td
id = "LC7204"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7205"
class
= "blob-num js-line-number"
data - line - number = "7205" > < /td>
    < td
id = "LC7205"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> opt;</
td >
< /tr>
< tr >
< td
id = "L7206"
class
= "blob-num js-line-number"
data - line - number = "7206" > < /td>
    < td
id = "LC7206"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7207"
class
= "blob-num js-line-number"
data - line - number = "7207" > < /td>
    < td
id = "LC7207"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7208"
class
= "blob-num js-line-number"
data - line - number = "7208" > < /td>
    < td
id = "LC7208"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L7209"
class
= "blob-num js-line-number"
data - line - number = "7209" > < /td>
    < td
id = "LC7209"
class
= "blob-code blob-code-inner js-file-line" > fadeTo < span
class
= "pl-k" >
:<
/span> function( speed, to, easing, callback ) {</
td >
< /tr>
< tr >
< td
id = "L7210"
class
= "blob-num js-line-number"
data - line - number = "7210" > < /td>
    < td
id = "LC7210"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7211"
class
= "blob-num js-line-number"
data - line - number = "7211" > < /td>
    < td
id = "LC7211"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Show any hidden elements after setting opacity to 0</span></td>
    < /tr>
    < tr >
    < td
id = "L7212"
class
= "blob-num js-line-number"
data - line - number = "7212" > < /td>
    < td
id = "LC7212"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>filter( isHiddenWithinTree )<span class="pl-k">.</s
pan > css( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>opacity<span class="pl-pds">&quot;</s
pan > < /span>, <span class="pl-c1">0</s
pan >
)<
span
class
= "pl-k" >
.<
/span>show()</
td >
< /tr>
< tr >
< td
id = "L7213"
class
= "blob-num js-line-number"
data - line - number = "7213" > < /td>
    < td
id = "LC7213"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7214"
class
= "blob-num js-line-number"
data - line - number = "7214" > < /td>
    < td
id = "LC7214"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Animate to the value specified</span></td>
    < /tr>
    < tr >
    < td
id = "L7215"
class
= "blob-num js-line-number"
data - line - number = "7215" > < /td>
    < td
id = "LC7215"
class
= "blob-code blob-code-inner js-file-line" >
.
end() < span
class
= "pl-k" >
.<
/span>animate( { opacity<span class="pl-k">:</s
pan > to
},
speed, easing, callback
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7216"
class
= "blob-num js-line-number"
data - line - number = "7216" > < /td>
    < td
id = "LC7216"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7217"
class
= "blob-num js-line-number"
data - line - number = "7217" > < /td>
    < td
id = "LC7217"
class
= "blob-code blob-code-inner js-file-line" > animate < span
class
= "pl-k" >
:<
/span> function( prop, speed, easing, callback ) {</
td >
< /tr>
< tr >
< td
id = "L7218"
class
= "blob-num js-line-number"
data - line - number = "7218" > < /td>
    < td
id = "LC7218"
class
= "blob-code blob-code-inner js-file-line" >
var empty
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > isEmptyObject(prop),
<
/td>
< /tr>
< tr >
< td
id = "L7219"
class
= "blob-num js-line-number"
data - line - number = "7219" > < /td>
    < td
id = "LC7219"
class
= "blob-code blob-code-inner js-file-line" > optall < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > speed(speed, easing, callback),
<
/td>
< /tr>
< tr >
< td
id = "L7220"
class
= "blob-num js-line-number"
data - line - number = "7220" > < /td>
    < td
id = "LC7220"
class
= "blob-code blob-code-inner js-file-line" > doAnimation < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L7221"
class
= "blob-num js-line-number"
data - line - number = "7221" > < /td>
    < td
id = "LC7221"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7222"
class
= "blob-num js-line-number"
data - line - number = "7222" > < /td>
    < td
id = "LC7222"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Operate on a copy of prop so per-property easing won&#39;t be lost</span></td>
    < /tr>
    < tr >
    < td
id = "L7223"
class
= "blob-num js-line-number"
data - line - number = "7223" > < /td>
    < td
id = "LC7223"
class
= "blob-code blob-code-inner js-file-line" >
var anim
<
span
class
= "pl-k" >= < /span> Animation( <span class="pl-c1">this</s
pan >, jQuery < span
class
= "pl-k" >
.<
/span>extend( {}, prop ), optall );</
td >
< /tr>
< tr >
< td
id = "L7224"
class
= "blob-num js-line-number"
data - line - number = "7224" > < /td>
    < td
id = "LC7224"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7225"
class
= "blob-num js-line-number"
data - line - number = "7225" > < /td>
    < td
id = "LC7225"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Empty animations, or finishing resolves immediately</span></td>
    < /tr>
    < tr >
    < td
id = "L7226"
class
= "blob-num js-line-number"
data - line - number = "7226" > < /td>
    < td
id = "LC7226"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( empty <span class="pl-k">||</s
pan > dataPriv < span
class
= "pl-k" >
.<
/span>get( <span class="pl-c1">this</s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>finish<span class="pl-pds">&quot;</s
pan > < /span> ) ) {</
td >
< /tr>
< tr >
< td
id = "L7227"
class
= "blob-num js-line-number"
data - line - number = "7227" > < /td>
    < td
id = "LC7227"
class
= "blob-code blob-code-inner js-file-line" > anim < span
class
= "pl-k" >
.<
/span>stop( <span class="pl-c1">true</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7228"
class
= "blob-num js-line-number"
data - line - number = "7228" > < /td>
    < td
id = "LC7228"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7229"
class
= "blob-num js-line-number"
data - line - number = "7229" > < /td>
    < td
id = "LC7229"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7230"
class
= "blob-num js-line-number"
data - line - number = "7230" > < /td>
    < td
id = "LC7230"
class
= "blob-code blob-code-inner js-file-line" > doAnimation < span
class
= "pl-k" >
.<
/span>finish <span class="pl-k">=</s
pan > doAnimation;
<
/td>
< /tr>
< tr >
< td
id = "L7231"
class
= "blob-num js-line-number"
data - line - number = "7231" > < /td>
    < td
id = "LC7231"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7232"
class
= "blob-num js-line-number"
data - line - number = "7232" > < /td>
    < td
id = "LC7232"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> empty <span class="pl-k">||</s
pan > optall < span
class
= "pl-k" >
.<
/span>queue <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7233"
class
= "blob-num js-line-number"
data - line - number = "7233" > < /td>
    < td
id = "LC7233"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > each(doAnimation) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L7234"
class
= "blob-num js-line-number"
data - line - number = "7234" > < /td>
    < td
id = "LC7234"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > queue(optall < span
class
= "pl-k" >
.<
/span>queue, doAnimation );</
td >
< /tr>
< tr >
< td
id = "L7235"
class
= "blob-num js-line-number"
data - line - number = "7235" > < /td>
    < td
id = "LC7235"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7236"
class
= "blob-num js-line-number"
data - line - number = "7236" > < /td>
    < td
id = "LC7236"
class
= "blob-code blob-code-inner js-file-line" > stop < span
class
= "pl-k" >
:<
/span> function( type, clearQueue, gotoEnd ) {</
td >
< /tr>
< tr >
< td
id = "L7237"
class
= "blob-num js-line-number"
data - line - number = "7237" > < /td>
    < td
id = "LC7237"
class
= "blob-code blob-code-inner js-file-line" >
var stopQueue
<
span
class
= "pl-k" >= < /span> function( hooks ) {</
td >
< /tr>
< tr >
< td
id = "L7238"
class
= "blob-num js-line-number"
data - line - number = "7238" > < /td>
    < td
id = "LC7238"
class
= "blob-code blob-code-inner js-file-line" >
var stop
<
span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > stop;
<
/td>
< /tr>
< tr >
< td
id = "L7239"
class
= "blob-num js-line-number"
data - line - number = "7239" > < /td>
    < td
id = "LC7239"
class
= "blob-code blob-code-inner js-file-line" > delete hooks < span
class
= "pl-k" >
.<
/span>stop;</
td >
< /tr>
< tr >
< td
id = "L7240"
class
= "blob-num js-line-number"
data - line - number = "7240" > < /td>
    < td
id = "LC7240"
class
= "blob-code blob-code-inner js-file-line" > stop(gotoEnd);
<
/td>
< /tr>
< tr >
< td
id = "L7241"
class
= "blob-num js-line-number"
data - line - number = "7241" > < /td>
    < td
id = "LC7241"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7242"
class
= "blob-num js-line-number"
data - line - number = "7242" > < /td>
    < td
id = "LC7242"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7243"
class
= "blob-num js-line-number"
data - line - number = "7243" > < /td>
    < td
id = "LC7243"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof type <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7244"
class
    = "blob-num js-line-number"
    data - line - number = "7244" > < /td>
        < td
    id = "LC7244"
class
    = "blob-code blob-code-inner js-file-line" > gotoEnd < span
class
    = "pl-k" >= < /span> clearQueue;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7245"
class
    = "blob-num js-line-number"
    data - line - number = "7245" > < /td>
        < td
    id = "LC7245"
class
    = "blob-code blob-code-inner js-file-line" > clearQueue < span
class
    = "pl-k" >= < /span> type;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7246"
class
    = "blob-num js-line-number"
    data - line - number = "7246" > < /td>
        < td
    id = "LC7246"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7247"
class
    = "blob-num js-line-number"
    data - line - number = "7247" > < /td>
        < td
    id = "LC7247"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7248"
class
= "blob-num js-line-number"
data - line - number = "7248" > < /td>
    < td
id = "LC7248"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( clearQueue <span class="pl-k">&amp;&amp;</s
pan > type < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-c1" > false < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7249"
class
= "blob-num js-line-number"
data - line - number = "7249" > < /td>
    < td
id = "LC7249"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > queue(type < span
class
= "pl-k" > || < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > fx < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, []
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7250"
class
= "blob-num js-line-number"
data - line - number = "7250" > < /td>
    < td
id = "LC7250"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7251"
class
= "blob-num js-line-number"
data - line - number = "7251" > < /td>
    < td
id = "LC7251"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7252"
class
= "blob-num js-line-number"
data - line - number = "7252" > < /td>
    < td
id = "LC7252"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L7253"
class
= "blob-num js-line-number"
data - line - number = "7253" > < /td>
    < td
id = "LC7253"
class
= "blob-code blob-code-inner js-file-line" >
var dequeue
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7254"
class
= "blob-num js-line-number"
data - line - number = "7254" > < /td>
    < td
id = "LC7254"
class
= "blob-code blob-code-inner js-file-line" > index < span
class
= "pl-k" >= < /span> type <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">&amp;&amp;</s
pan > type < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > queueHooks < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7255"
class
= "blob-num js-line-number"
data - line - number = "7255" > < /td>
    < td
id = "LC7255"
class
= "blob-code blob-code-inner js-file-line" > timers < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > timers,
<
/td>
< /tr>
< tr >
< td
id = "L7256"
class
= "blob-num js-line-number"
data - line - number = "7256" > < /td>
    < td
id = "LC7256"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > get( < span
class
= "pl-c1" > this < /span> );</
td >
< /tr>
< tr >
< td
id = "L7257"
class
= "blob-num js-line-number"
data - line - number = "7257" > < /td>
    < td
id = "LC7257"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7258"
class
= "blob-num js-line-number"
data - line - number = "7258" > < /td>
    < td
id = "LC7258"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( index ) {</
td >
< /tr>
< tr >
< td
id = "L7259"
class
= "blob-num js-line-number"
data - line - number = "7259" > < /td>
    < td
id = "LC7259"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( data[ index ] <span class="pl-k">&amp;&amp;</s
pan > data[index] < span
class
= "pl-k" >
.<
/span>stop ) {</
td >
< /tr>
< tr >
< td
id = "L7260"
class
= "blob-num js-line-number"
data - line - number = "7260" > < /td>
    < td
id = "LC7260"
class
= "blob-code blob-code-inner js-file-line" > stopQueue(data[index]);
<
/td>
< /tr>
< tr >
< td
id = "L7261"
class
= "blob-num js-line-number"
data - line - number = "7261" > < /td>
    < td
id = "LC7261"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7262"
class
= "blob-num js-line-number"
data - line - number = "7262" > < /td>
    < td
id = "LC7262"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7263"
class
= "blob-num js-line-number"
data - line - number = "7263" > < /td>
    < td
id = "LC7263"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( index in data ) {</
td >
< /tr>
< tr >
< td
id = "L7264"
class
= "blob-num js-line-number"
data - line - number = "7264" > < /td>
    < td
id = "LC7264"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( data[ index ] <span class="pl-k">&amp;&amp;</s
pan > data[index] < span
class
= "pl-k" >
.<
/span>stop <span class="pl-k">&amp;&amp;</s
pan > rrun < span
class
= "pl-k" >
.<
/span>test( index ) ) {</
td >
< /tr>
< tr >
< td
id = "L7265"
class
= "blob-num js-line-number"
data - line - number = "7265" > < /td>
    < td
id = "LC7265"
class
= "blob-code blob-code-inner js-file-line" > stopQueue(data[index]);
<
/td>
< /tr>
< tr >
< td
id = "L7266"
class
= "blob-num js-line-number"
data - line - number = "7266" > < /td>
    < td
id = "LC7266"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7267"
class
= "blob-num js-line-number"
data - line - number = "7267" > < /td>
    < td
id = "LC7267"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7268"
class
= "blob-num js-line-number"
data - line - number = "7268" > < /td>
    < td
id = "LC7268"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7269"
class
= "blob-num js-line-number"
data - line - number = "7269" > < /td>
    < td
id = "LC7269"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7270"
class
= "blob-num js-line-number"
data - line - number = "7270" > < /td>
    < td
id = "LC7270"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( index <span class="pl-k">=</s
pan > timers < span
class
= "pl-k" >
.<
/span>length; index<span class="pl-k">--</s
pan >;
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7271"
class
    = "blob-num js-line-number"
    data - line - number = "7271" > < /td>
        < td
    id = "LC7271"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( timers[ index ]<span class="pl-k">.</s
    pan > elem < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L7272"
class
    = "blob-num js-line-number"
    data - line - number = "7272" > < /td>
        < td
    id = "LC7272"
class
    = "blob-code blob-code-inner js-file-line" > (type < span
class
    = "pl-k" >= =
<
    /span> <span class="pl-c1">null</s
    pan > < span
class
    = "pl-k" > || < /span> timers[ index ]<span class="pl-k">.</s
    pan > queue < span
class
    = "pl-k" >= == < /span> type ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7273"
class
    = "blob-num js-line-number"
    data - line - number = "7273" > < /td>
        < td
    id = "LC7273"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7274"
class
    = "blob-num js-line-number"
    data - line - number = "7274" > < /td>
        < td
    id = "LC7274"
class
    = "blob-code blob-code-inner js-file-line" > timers[index] < span
class
    = "pl-k" >
.<
    /span>anim<span class="pl-k">.</s
    pan > stop(gotoEnd);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7275"
class
    = "blob-num js-line-number"
    data - line - number = "7275" > < /td>
        < td
    id = "LC7275"
class
    = "blob-code blob-code-inner js-file-line" > dequeue < span
class
    = "pl-k" >= < /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7276"
class
    = "blob-num js-line-number"
    data - line - number = "7276" > < /td>
        < td
    id = "LC7276"
class
    = "blob-code blob-code-inner js-file-line" > timers < span
class
    = "pl-k" >
.<
    /span>splice( index, <span class="pl-c1">1</s
    pan >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7277"
class
    = "blob-num js-line-number"
    data - line - number = "7277" > < /td>
        < td
    id = "LC7277"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7278"
class
= "blob-num js-line-number"
data - line - number = "7278" > < /td>
    < td
id = "LC7278"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7279"
class
= "blob-num js-line-number"
data - line - number = "7279" > < /td>
    < td
id = "LC7279"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7280"
class
= "blob-num js-line-number"
data - line - number = "7280" > < /td>
    < td
id = "LC7280"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Start the next in the queue if the last step wasn&#39;t forced.</span></td>
    < /tr>
    < tr >
    < td
id = "L7281"
class
= "blob-num js-line-number"
data - line - number = "7281" > < /td>
    < td
id = "LC7281"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Timers currently will call their complete callbacks, which</span></td>
    < /tr>
    < tr >
    < td
id = "L7282"
class
= "blob-num js-line-number"
data - line - number = "7282" > < /td>
    < td
id = "LC7282"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> will dequeue but only if they were gotoEnd.</span></td>
    < /tr>
    < tr >
    < td
id = "L7283"
class
= "blob-num js-line-number"
data - line - number = "7283" > < /td>
    < td
id = "LC7283"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( dequeue <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>gotoEnd ) {</
td >
< /tr>
< tr >
< td
id = "L7284"
class
= "blob-num js-line-number"
data - line - number = "7284" > < /td>
    < td
id = "LC7284"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>dequeue( <span class="pl-c1">this</s
pan >, type
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7285"
class
= "blob-num js-line-number"
data - line - number = "7285" > < /td>
    < td
id = "LC7285"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7286"
class
= "blob-num js-line-number"
data - line - number = "7286" > < /td>
    < td
id = "LC7286"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7287"
class
= "blob-num js-line-number"
data - line - number = "7287" > < /td>
    < td
id = "LC7287"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7288"
class
= "blob-num js-line-number"
data - line - number = "7288" > < /td>
    < td
id = "LC7288"
class
= "blob-code blob-code-inner js-file-line" > finish < span
class
= "pl-k" >
:<
/span> function( type ) {</
td >
< /tr>
< tr >
< td
id = "L7289"
class
= "blob-num js-line-number"
data - line - number = "7289" > < /td>
    < td
id = "LC7289"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( type <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">false</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7290"
class
    = "blob-num js-line-number"
    data - line - number = "7290" > < /td>
        < td
    id = "LC7290"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >= < /span> type <span class="pl-k">||</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>fx<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7291"
class
    = "blob-num js-line-number"
    data - line - number = "7291" > < /td>
        < td
    id = "LC7291"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7292"
class
= "blob-num js-line-number"
data - line - number = "7292" > < /td>
    < td
id = "LC7292"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L7293"
class
= "blob-num js-line-number"
data - line - number = "7293" > < /td>
    < td
id = "LC7293"
class
= "blob-code blob-code-inner js-file-line" >
var index, <
/td>
< /tr>
< tr >
< td
id = "L7294"
class
= "blob-num js-line-number"
data - line - number = "7294" > < /td>
    < td
id = "LC7294"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > get( < span
class
= "pl-c1" > this < /span> ),</
td >
< /tr>
< tr >
< td
id = "L7295"
class
= "blob-num js-line-number"
data - line - number = "7295" > < /td>
    < td
id = "LC7295"
class
= "blob-code blob-code-inner js-file-line" > queue < span
class
= "pl-k" >= < /span> data[ type <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>queue<span class="pl-pds">&quot;</span></span> ],</
td >
< /tr>
< tr >
< td
id = "L7296"
class
= "blob-num js-line-number"
data - line - number = "7296" > < /td>
    < td
id = "LC7296"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> data[ type <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>queueHooks<span class="pl-pds">&quot;</span></span> ],</
td >
< /tr>
< tr >
< td
id = "L7297"
class
= "blob-num js-line-number"
data - line - number = "7297" > < /td>
    < td
id = "LC7297"
class
= "blob-code blob-code-inner js-file-line" > timers < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > timers,
<
/td>
< /tr>
< tr >
< td
id = "L7298"
class
= "blob-num js-line-number"
data - line - number = "7298" > < /td>
    < td
id = "LC7298"
class
= "blob-code blob-code-inner js-file-line" > length < span
class
= "pl-k" >= < /span> queue <span class="pl-k">?</s
pan > queue < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">:</s
pan > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L7299"
class
= "blob-num js-line-number"
data - line - number = "7299" > < /td>
    < td
id = "LC7299"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7300"
class
= "blob-num js-line-number"
data - line - number = "7300" > < /td>
    < td
id = "LC7300"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Enable finishing flag on private data</span></td>
    < /tr>
    < tr >
    < td
id = "L7301"
class
= "blob-num js-line-number"
data - line - number = "7301" > < /td>
    < td
id = "LC7301"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >
.<
/span>finish <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > true < /span>;</
td >
< /tr>
< tr >
< td
id = "L7302"
class
= "blob-num js-line-number"
data - line - number = "7302" > < /td>
    < td
id = "LC7302"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7303"
class
= "blob-num js-line-number"
data - line - number = "7303" > < /td>
    < td
id = "LC7303"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Empty the queue first</span></td>
    < /tr>
    < tr >
    < td
id = "L7304"
class
= "blob-num js-line-number"
data - line - number = "7304" > < /td>
    < td
id = "LC7304"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>queue( <span class="pl-c1">this</s
pan >, type, []
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7305"
class
= "blob-num js-line-number"
data - line - number = "7305" > < /td>
    < td
id = "LC7305"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7306"
class
= "blob-num js-line-number"
data - line - number = "7306" > < /td>
    < td
id = "LC7306"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > hooks < span
class
= "pl-k" >
.<
/span>stop ) {</
td >
< /tr>
< tr >
< td
id = "L7307"
class
= "blob-num js-line-number"
data - line - number = "7307" > < /td>
    < td
id = "LC7307"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >
.<
/span>stop<span class="pl-k">.</s
pan > call( < span
class
= "pl-c1" > this < /span>, <span class="pl-c1">true</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7308"
class
= "blob-num js-line-number"
data - line - number = "7308" > < /td>
    < td
id = "LC7308"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7309"
class
= "blob-num js-line-number"
data - line - number = "7309" > < /td>
    < td
id = "LC7309"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7310"
class
= "blob-num js-line-number"
data - line - number = "7310" > < /td>
    < td
id = "LC7310"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Look for any active animations, and finish them</span></td>
    < /tr>
    < tr >
    < td
id = "L7311"
class
= "blob-num js-line-number"
data - line - number = "7311" > < /td>
    < td
id = "LC7311"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( index <span class="pl-k">=</s
pan > timers < span
class
= "pl-k" >
.<
/span>length; index<span class="pl-k">--</s
pan >;
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7312"
class
    = "blob-num js-line-number"
    data - line - number = "7312" > < /td>
        < td
    id = "LC7312"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( timers[ index ]<span class="pl-k">.</s
    pan > elem < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> timers[ index ]<span class="pl-k">.</s
    pan > queue < span
class
    = "pl-k" >= == < /span> type ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7313"
class
    = "blob-num js-line-number"
    data - line - number = "7313" > < /td>
        < td
    id = "LC7313"
class
    = "blob-code blob-code-inner js-file-line" > timers[index] < span
class
    = "pl-k" >
.<
    /span>anim<span class="pl-k">.</s
    pan > stop( < span
class
    = "pl-c1" > true < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7314"
class
    = "blob-num js-line-number"
    data - line - number = "7314" > < /td>
        < td
    id = "LC7314"
class
    = "blob-code blob-code-inner js-file-line" > timers < span
class
    = "pl-k" >
.<
    /span>splice( index, <span class="pl-c1">1</s
    pan >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7315"
class
    = "blob-num js-line-number"
    data - line - number = "7315" > < /td>
        < td
    id = "LC7315"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7316"
class
= "blob-num js-line-number"
data - line - number = "7316" > < /td>
    < td
id = "LC7316"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7317"
class
= "blob-num js-line-number"
data - line - number = "7317" > < /td>
    < td
id = "LC7317"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7318"
class
= "blob-num js-line-number"
data - line - number = "7318" > < /td>
    < td
id = "LC7318"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Look for any animations in the old queue and finish them</span></td>
    < /tr>
    < tr >
    < td
id = "L7319"
class
= "blob-num js-line-number"
data - line - number = "7319" > < /td>
    < td
id = "LC7319"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( index <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 0 < /span>; index <span class="pl-k">&lt;</s
pan > length;
index < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7320"
class
= "blob-num js-line-number"
data - line - number = "7320" > < /td>
    < td
id = "LC7320"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( queue[ index ] <span class="pl-k">&amp;&amp;</s
pan > queue[index] < span
class
= "pl-k" >
.<
/span>finish ) {</
td >
< /tr>
< tr >
< td
id = "L7321"
class
= "blob-num js-line-number"
data - line - number = "7321" > < /td>
    < td
id = "LC7321"
class
= "blob-code blob-code-inner js-file-line" > queue[index] < span
class
= "pl-k" >
.<
/span>finish<span class="pl-k">.</s
pan > call( < span
class
= "pl-c1" > this < /span> );</
td >
< /tr>
< tr >
< td
id = "L7322"
class
= "blob-num js-line-number"
data - line - number = "7322" > < /td>
    < td
id = "LC7322"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7323"
class
= "blob-num js-line-number"
data - line - number = "7323" > < /td>
    < td
id = "LC7323"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7324"
class
= "blob-num js-line-number"
data - line - number = "7324" > < /td>
    < td
id = "LC7324"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7325"
class
= "blob-num js-line-number"
data - line - number = "7325" > < /td>
    < td
id = "LC7325"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Turn off finishing flag</span></td>
    < /tr>
    < tr >
    < td
id = "L7326"
class
= "blob-num js-line-number"
data - line - number = "7326" > < /td>
    < td
id = "LC7326"
class
= "blob-code blob-code-inner js-file-line" > delete data < span
class
= "pl-k" >
.<
/span>finish;</
td >
< /tr>
< tr >
< td
id = "L7327"
class
= "blob-num js-line-number"
data - line - number = "7327" > < /td>
    < td
id = "LC7327"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7328"
class
= "blob-num js-line-number"
data - line - number = "7328" > < /td>
    < td
id = "LC7328"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7329"
class
= "blob-num js-line-number"
data - line - number = "7329" > < /td>
    < td
id = "LC7329"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7330"
class
= "blob-num js-line-number"
data - line - number = "7330" > < /td>
    < td
id = "LC7330"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7331"
class
= "blob-num js-line-number"
data - line - number = "7331" > < /td>
    < td
id = "LC7331"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( [ <span class="pl-s"><span class="pl-pds">&quot;</span>toggle<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>show<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>hide<span class="pl-pds">&quot;</span></span> ], function( i, name ) {</
td >
< /tr>
< tr >
< td
id = "L7332"
class
= "blob-num js-line-number"
data - line - number = "7332" > < /td>
    < td
id = "LC7332"
class
= "blob-code blob-code-inner js-file-line" >
var cssFn
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > fn[name];
<
/td>
< /tr>
< tr >
< td
id = "L7333"
class
= "blob-num js-line-number"
data - line - number = "7333" > < /td>
    < td
id = "LC7333"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn[ name ] <span class="pl-k">=</s
pan > function (speed, easing, callback) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7334"
class
    = "blob-num js-line-number"
    data - line - number = "7334" > < /td>
        < td
    id = "LC7334"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> speed <span class="pl-k">==</s
    pan > < span
class
    = "pl-c1" > null < /span> <span class="pl-k">||</s
    pan > typeof speed < span
class
    = "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > boolean < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L7335"
class
    = "blob-num js-line-number"
    data - line - number = "7335" > < /td>
        < td
    id = "LC7335"
class
    = "blob-code blob-code-inner js-file-line" > cssFn < span
class
    = "pl-k" >
.<
    /span>apply( <span class="pl-c1">this</s
    pan >, arguments
) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L7336"
class
= "blob-num js-line-number"
data - line - number = "7336" > < /td>
    < td
id = "LC7336"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > animate(genFx(name, < span
class
= "pl-c1" > true < /span> ), speed, easing, callback );</
td >
< /tr>
< tr >
< td
id = "L7337"
class
= "blob-num js-line-number"
data - line - number = "7337" > < /td>
    < td
id = "LC7337"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7338"
class
= "blob-num js-line-number"
data - line - number = "7338" > < /td>
    < td
id = "LC7338"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7339"
class
= "blob-num js-line-number"
data - line - number = "7339" > < /td>
    < td
id = "LC7339"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7340"
class
= "blob-num js-line-number"
data - line - number = "7340" > < /td>
    < td
id = "LC7340"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Generate shortcuts for custom animations</span></td>
    < /tr>
    < tr >
    < td
id = "L7341"
class
= "blob-num js-line-number"
data - line - number = "7341" > < /td>
    < td
id = "LC7341"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( {</
td >
< /tr>
< tr >
< td
id = "L7342"
class
= "blob-num js-line-number"
data - line - number = "7342" > < /td>
    < td
id = "LC7342"
class
= "blob-code blob-code-inner js-file-line" > slideDown < span
class
= "pl-k" >
:<
/span> genFx( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > show < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L7343"
class
= "blob-num js-line-number"
data - line - number = "7343" > < /td>
    < td
id = "LC7343"
class
= "blob-code blob-code-inner js-file-line" > slideUp < span
class
= "pl-k" >
:<
/span> genFx( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > hide < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L7344"
class
= "blob-num js-line-number"
data - line - number = "7344" > < /td>
    < td
id = "LC7344"
class
= "blob-code blob-code-inner js-file-line" > slideToggle < span
class
= "pl-k" >
:<
/span> genFx( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > toggle < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L7345"
class
= "blob-num js-line-number"
data - line - number = "7345" > < /td>
    < td
id = "LC7345"
class
= "blob-code blob-code-inner js-file-line" > fadeIn < span
class
= "pl-k" >
:<
/span> { opacity<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>show<span class="pl-pds">&quot;</s
pan > < /span> },</
td >
< /tr>
< tr >
< td
id = "L7346"
class
= "blob-num js-line-number"
data - line - number = "7346" > < /td>
    < td
id = "LC7346"
class
= "blob-code blob-code-inner js-file-line" > fadeOut < span
class
= "pl-k" >
:<
/span> { opacity<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>hide<span class="pl-pds">&quot;</s
pan > < /span> },</
td >
< /tr>
< tr >
< td
id = "L7347"
class
= "blob-num js-line-number"
data - line - number = "7347" > < /td>
    < td
id = "LC7347"
class
= "blob-code blob-code-inner js-file-line" > fadeToggle < span
class
= "pl-k" >
:<
/span> { opacity<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>toggle<span class="pl-pds">&quot;</s
pan > < /span> }</
td >
< /tr>
< tr >
< td
id = "L7348"
class
= "blob-num js-line-number"
data - line - number = "7348" > < /td>
    < td
id = "LC7348"
class
= "blob-code blob-code-inner js-file-line" >
},

function (name, props) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7349"
class
    = "blob-num js-line-number"
    data - line - number = "7349" > < /td>
        < td
    id = "LC7349"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>fn[ name ] <span class="pl-k">=</s
    pan > function (speed, easing, callback) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L7350"
    class
        = "blob-num js-line-number"
        data - line - number = "7350" > < /td>
            < td
        id = "LC7350"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-c1">this</s
        pan > < span
    class
        = "pl-k" >
    .<
        /span>animate( props, speed, easing, callback );</
        td >
        < /tr>
        < tr >
        < td
        id = "L7351"
    class
        = "blob-num js-line-number"
        data - line - number = "7351" > < /td>
            < td
        id = "LC7351"
    class
        = "blob-code blob-code-inner js-file-line" >
    };
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7352"
class
    = "blob-num js-line-number"
    data - line - number = "7352" > < /td>
        < td
    id = "LC7352"
class
    = "blob-code blob-code-inner js-file-line" >
}

)
;
<
/td>
< /tr>
< tr >
< td
id = "L7353"
class
= "blob-num js-line-number"
data - line - number = "7353" > < /td>
    < td
id = "LC7353"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7354"
class
= "blob-num js-line-number"
data - line - number = "7354" > < /td>
    < td
id = "LC7354"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>timers <span class="pl-k">=</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L7355"
class
= "blob-num js-line-number"
data - line - number = "7355" > < /td>
    < td
id = "LC7355"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > tick < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L7356"
class
= "blob-num js-line-number"
data - line - number = "7356" > < /td>
    < td
id = "LC7356"
class
= "blob-code blob-code-inner js-file-line" >
var timer, <
/td>
< /tr>
< tr >
< td
id = "L7357"
class
= "blob-num js-line-number"
data - line - number = "7357" > < /td>
    < td
id = "LC7357"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7358"
class
= "blob-num js-line-number"
data - line - number = "7358" > < /td>
    < td
id = "LC7358"
class
= "blob-code blob-code-inner js-file-line" > timers < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > timers;
<
/td>
< /tr>
< tr >
< td
id = "L7359"
class
= "blob-num js-line-number"
data - line - number = "7359" > < /td>
    < td
id = "LC7359"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7360"
class
= "blob-num js-line-number"
data - line - number = "7360" > < /td>
    < td
id = "LC7360"
class
= "blob-code blob-code-inner js-file-line" > fxNow < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > now();
<
/td>
< /tr>
< tr >
< td
id = "L7361"
class
= "blob-num js-line-number"
data - line - number = "7361" > < /td>
    < td
id = "LC7361"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7362"
class
= "blob-num js-line-number"
data - line - number = "7362" > < /td>
    < td
id = "LC7362"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > timers < span
class
= "pl-k" >
.<
/span>length; i<span class="pl-k">++</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7363"
class
    = "blob-num js-line-number"
    data - line - number = "7363" > < /td>
        < td
    id = "LC7363"
class
    = "blob-code blob-code-inner js-file-line" > timer < span
class
    = "pl-k" >= < /span> timers[ i ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L7364"
class
    = "blob-num js-line-number"
    data - line - number = "7364" > < /td>
        < td
    id = "LC7364"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7365"
class
    = "blob-num js-line-number"
    data - line - number = "7365" > < /td>
        < td
    id = "LC7365"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Checks the timer has not already been removed</span></td>
        < /tr>
        < tr >
        < td
    id = "L7366"
class
    = "blob-num js-line-number"
    data - line - number = "7366" > < /td>
        < td
    id = "LC7366"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > timer() < span
class
    = "pl-k" > &amp;&amp; < /span> timers[ i ] <span class="pl-k">===</s
    pan > timer
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7367"
class
    = "blob-num js-line-number"
    data - line - number = "7367" > < /td>
        < td
    id = "LC7367"
class
    = "blob-code blob-code-inner js-file-line" > timers < span
class
    = "pl-k" >
.<
    /span>splice( i<span class="pl-k">--</s
    pan >,
<
    span
class
    = "pl-c1" > 1 < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7368"
class
    = "blob-num js-line-number"
    data - line - number = "7368" > < /td>
        < td
    id = "LC7368"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7369"
class
= "blob-num js-line-number"
data - line - number = "7369" > < /td>
    < td
id = "LC7369"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7370"
class
= "blob-num js-line-number"
data - line - number = "7370" > < /td>
    < td
id = "LC7370"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7371"
class
= "blob-num js-line-number"
data - line - number = "7371" > < /td>
    < td
id = "LC7371"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > timers < span
class
= "pl-k" >
.<
/span>length ) {</
td >
< /tr>
< tr >
< td
id = "L7372"
class
= "blob-num js-line-number"
data - line - number = "7372" > < /td>
    < td
id = "LC7372"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > stop();
<
/td>
< /tr>
< tr >
< td
id = "L7373"
class
= "blob-num js-line-number"
data - line - number = "7373" > < /td>
    < td
id = "LC7373"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7374"
class
= "blob-num js-line-number"
data - line - number = "7374" > < /td>
    < td
id = "LC7374"
class
= "blob-code blob-code-inner js-file-line" > fxNow < span
class
= "pl-k" >= < /span> undefined;</
td >
< /tr>
< tr >
< td
id = "L7375"
class
= "blob-num js-line-number"
data - line - number = "7375" > < /td>
    < td
id = "LC7375"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7376"
class
= "blob-num js-line-number"
data - line - number = "7376" > < /td>
    < td
id = "LC7376"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7377"
class
= "blob-num js-line-number"
data - line - number = "7377" > < /td>
    < td
id = "LC7377"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > timer < span
class
= "pl-k" >= < /span> function( timer ) {</
td >
< /tr>
< tr >
< td
id = "L7378"
class
= "blob-num js-line-number"
data - line - number = "7378" > < /td>
    < td
id = "LC7378"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>timers<span class="pl-k">.</s
pan > push(timer);
<
/td>
< /tr>
< tr >
< td
id = "L7379"
class
= "blob-num js-line-number"
data - line - number = "7379" > < /td>
    < td
id = "LC7379"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( timer() ) {</
td >
< /tr>
< tr >
< td
id = "L7380"
class
= "blob-num js-line-number"
data - line - number = "7380" > < /td>
    < td
id = "LC7380"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > start();
<
/td>
< /tr>
< tr >
< td
id = "L7381"
class
= "blob-num js-line-number"
data - line - number = "7381" > < /td>
    < td
id = "LC7381"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7382"
class
= "blob-num js-line-number"
data - line - number = "7382" > < /td>
    < td
id = "LC7382"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>timers<span class="pl-k">.</s
pan > pop();
<
/td>
< /tr>
< tr >
< td
id = "L7383"
class
= "blob-num js-line-number"
data - line - number = "7383" > < /td>
    < td
id = "LC7383"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7384"
class
= "blob-num js-line-number"
data - line - number = "7384" > < /td>
    < td
id = "LC7384"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7385"
class
= "blob-num js-line-number"
data - line - number = "7385" > < /td>
    < td
id = "LC7385"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7386"
class
= "blob-num js-line-number"
data - line - number = "7386" > < /td>
    < td
id = "LC7386"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > interval < span
class
= "pl-k" >= < /span> <span class="pl-c1">13</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7387"
class
= "blob-num js-line-number"
data - line - number = "7387" > < /td>
    < td
id = "LC7387"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > start < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L7388"
class
= "blob-num js-line-number"
data - line - number = "7388" > < /td>
    < td
id = "LC7388"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > timerId
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7389"
class
    = "blob-num js-line-number"
    data - line - number = "7389" > < /td>
        < td
    id = "LC7389"
class
    = "blob-code blob-code-inner js-file-line" > timerId < span
class
    = "pl-k" >= < /span> window<span class="pl-k">.</s
    pan > requestAnimationFrame < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L7390"
class
    = "blob-num js-line-number"
    data - line - number = "7390" > < /td>
        < td
    id = "LC7390"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>requestAnimationFrame( raf ) <span class="pl-k">:</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L7391"
class
    = "blob-num js-line-number"
    data - line - number = "7391" > < /td>
        < td
    id = "LC7391"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>setInterval( jQuery<span class="pl-k">.</s
    pan > fx < span
class
    = "pl-k" >
.<
    /span>tick, jQuery<span class="pl-k">.</s
    pan > fx < span
class
    = "pl-k" >
.<
    /span>interval );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7392"
class
    = "blob-num js-line-number"
    data - line - number = "7392" > < /td>
        < td
    id = "LC7392"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7393"
class
= "blob-num js-line-number"
data - line - number = "7393" > < /td>
    < td
id = "LC7393"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7394"
class
= "blob-num js-line-number"
data - line - number = "7394" > < /td>
    < td
id = "LC7394"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7395"
class
= "blob-num js-line-number"
data - line - number = "7395" > < /td>
    < td
id = "LC7395"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > stop < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L7396"
class
= "blob-num js-line-number"
data - line - number = "7396" > < /td>
    < td
id = "LC7396"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( window<span class="pl-k">.</s
pan > cancelAnimationFrame
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7397"
class
    = "blob-num js-line-number"
    data - line - number = "7397" > < /td>
        < td
    id = "LC7397"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>cancelAnimationFrame( timerId );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7398"
class
    = "blob-num js-line-number"
    data - line - number = "7398" > < /td>
        < td
    id = "LC7398"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7399"
class
= "blob-num js-line-number"
data - line - number = "7399" > < /td>
    < td
id = "LC7399"
class
= "blob-code blob-code-inner js-file-line" > window < span
class
= "pl-k" >
.<
/span>clearInterval( timerId );</
td >
< /tr>
< tr >
< td
id = "L7400"
class
= "blob-num js-line-number"
data - line - number = "7400" > < /td>
    < td
id = "LC7400"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7401"
class
= "blob-num js-line-number"
data - line - number = "7401" > < /td>
    < td
id = "LC7401"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7402"
class
= "blob-num js-line-number"
data - line - number = "7402" > < /td>
    < td
id = "LC7402"
class
= "blob-code blob-code-inner js-file-line" > timerId < span
class
= "pl-k" >= < /span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7403"
class
= "blob-num js-line-number"
data - line - number = "7403" > < /td>
    < td
id = "LC7403"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7404"
class
= "blob-num js-line-number"
data - line - number = "7404" > < /td>
    < td
id = "LC7404"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7405"
class
= "blob-num js-line-number"
data - line - number = "7405" > < /td>
    < td
id = "LC7405"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fx<span class="pl-k">.</s
pan > speeds < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L7406"
class
= "blob-num js-line-number"
data - line - number = "7406" > < /td>
    < td
id = "LC7406"
class
= "blob-code blob-code-inner js-file-line" > slow < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">600</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7407"
class
= "blob-num js-line-number"
data - line - number = "7407" > < /td>
    < td
id = "LC7407"
class
= "blob-code blob-code-inner js-file-line" > fast < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">200</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7408"
class
= "blob-num js-line-number"
data - line - number = "7408" > < /td>
    < td
id = "LC7408"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7409"
class
= "blob-num js-line-number"
data - line - number = "7409" > < /td>
    < td
id = "LC7409"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Default speed</span></td>
    < /tr>
    < tr >
    < td
id = "L7410"
class
= "blob-num js-line-number"
data - line - number = "7410" > < /td>
    < td
id = "LC7410"
class
= "blob-code blob-code-inner js-file-line" > _default < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">400</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7411"
class
= "blob-num js-line-number"
data - line - number = "7411" > < /td>
    < td
id = "LC7411"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7412"
class
= "blob-num js-line-number"
data - line - number = "7412" > < /td>
    < td
id = "LC7412"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7413"
class
= "blob-num js-line-number"
data - line - number = "7413" > < /td>
    < td
id = "LC7413"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7414"
class
= "blob-num js-line-number"
data - line - number = "7414" > < /td>
    < td
id = "LC7414"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Based off of the plugin by Clint Helfers, with permission.</span></td>
    < /tr>
    < tr >
    < td
id = "L7415"
class
= "blob-num js-line-number"
data - line - number = "7415" > < /td>
    < td
id = "LC7415"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/</span></td>
    < /tr>
    < tr >
    < td
id = "L7416"
class
= "blob-num js-line-number"
data - line - number = "7416" > < /td>
    < td
id = "LC7416"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > delay < span
class
= "pl-k" >= < /span> function( time, type ) {</
td >
< /tr>
< tr >
< td
id = "L7417"
class
= "blob-num js-line-number"
data - line - number = "7417" > < /td>
    < td
id = "LC7417"
class
= "blob-code blob-code-inner js-file-line" > time < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > fx < span
class
= "pl-k" > ?
<
/span> jQuery<span class="pl-k">.</s
pan > fx < span
class
= "pl-k" >
.<
/span>speeds[ time ] <span class="pl-k">||</s
pan > time < span
class
= "pl-k" >
:<
/span> time;</
td >
< /tr>
< tr >
< td
id = "L7418"
class
= "blob-num js-line-number"
data - line - number = "7418" > < /td>
    < td
id = "LC7418"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >= < /span> type <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fx<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L7419"
class
= "blob-num js-line-number"
data - line - number = "7419" > < /td>
    < td
id = "LC7419"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7420"
class
= "blob-num js-line-number"
data - line - number = "7420" > < /td>
    < td
id = "LC7420"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>queue( type, function( next, hooks ) {</
td >
< /tr>
< tr >
< td
id = "L7421"
class
= "blob-num js-line-number"
data - line - number = "7421" > < /td>
    < td
id = "LC7421"
class
= "blob-code blob-code-inner js-file-line" >
var timeout
<
span
class
= "pl-k" >= < /span> window<span class="pl-k">.</s
pan > setTimeout(next, time);
<
/td>
< /tr>
< tr >
< td
id = "L7422"
class
= "blob-num js-line-number"
data - line - number = "7422" > < /td>
    < td
id = "LC7422"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >
.<
/span>stop <span class="pl-k">=</s
pan > function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7423"
class
    = "blob-num js-line-number"
    data - line - number = "7423" > < /td>
        < td
    id = "LC7423"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>clearTimeout( timeout );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7424"
class
    = "blob-num js-line-number"
    data - line - number = "7424" > < /td>
        < td
    id = "LC7424"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L7425"
class
= "blob-num js-line-number"
data - line - number = "7425" > < /td>
    < td
id = "LC7425"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7426"
class
= "blob-num js-line-number"
data - line - number = "7426" > < /td>
    < td
id = "LC7426"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7427"
class
= "blob-num js-line-number"
data - line - number = "7427" > < /td>
    < td
id = "LC7427"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7428"
class
= "blob-num js-line-number"
data - line - number = "7428" > < /td>
    < td
id = "LC7428"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7429"
class
= "blob-num js-line-number"
data - line - number = "7429" > < /td>
    < td
id = "LC7429"
class
= "blob-code blob-code-inner js-file-line" > (function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7430"
class
    = "blob-num js-line-number"
    data - line - number = "7430" > < /td>
        < td
    id = "LC7430"
class
    = "blob-code blob-code-inner js-file-line" >
    var input
<
    span
class
    = "pl-k" >= < /span> document<span class="pl-k">.</s
    pan > createElement( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>input<span class="pl-pds">&quot;</s
    pan > < /span> ),</
    td >
    < /tr>
    < tr >
    < td
    id = "L7431"
class
    = "blob-num js-line-number"
    data - line - number = "7431" > < /td>
        < td
    id = "LC7431"
class
    = "blob-code blob-code-inner js-file-line" > select < span
class
    = "pl-k" >= < /span> document<span class="pl-k">.</s
    pan > createElement( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>select<span class="pl-pds">&quot;</s
    pan > < /span> ),</
    td >
    < /tr>
    < tr >
    < td
    id = "L7432"
class
    = "blob-num js-line-number"
    data - line - number = "7432" > < /td>
        < td
    id = "LC7432"
class
    = "blob-code blob-code-inner js-file-line" > opt < span
class
    = "pl-k" >= < /span> select<span class="pl-k">.</s
    pan > appendChild(document < span
class
    = "pl-k" >
.<
    /span>createElement( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > option < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) )
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7433"
class
    = "blob-num js-line-number"
    data - line - number = "7433" > < /td>
        < td
    id = "LC7433"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7434"
class
    = "blob-num js-line-number"
    data - line - number = "7434" > < /td>
        < td
    id = "LC7434"
class
    = "blob-code blob-code-inner js-file-line" > input < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>checkbox<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7435"
class
    = "blob-num js-line-number"
    data - line - number = "7435" > < /td>
        < td
    id = "LC7435"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7436"
class
    = "blob-num js-line-number"
    data - line - number = "7436" > < /td>
        < td
    id = "LC7436"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: Android &lt;=4.3 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L7437"
class
    = "blob-num js-line-number"
    data - line - number = "7437" > < /td>
        < td
    id = "LC7437"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Default value for a checkbox should be &quot;on&quot;</span></td>
        < /tr>
        < tr >
        < td
    id = "L7438"
class
    = "blob-num js-line-number"
    data - line - number = "7438" > < /td>
        < td
    id = "LC7438"
class
    = "blob-code blob-code-inner js-file-line" > support < span
class
    = "pl-k" >
.<
    /span>checkOn <span class="pl-k">=</s
    pan > input < span
class
    = "pl-k" >
.<
    /span>value <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7439"
class
    = "blob-num js-line-number"
    data - line - number = "7439" > < /td>
        < td
    id = "LC7439"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7440"
class
    = "blob-num js-line-number"
    data - line - number = "7440" > < /td>
        < td
    id = "LC7440"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE &lt;=11 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L7441"
class
    = "blob-num js-line-number"
    data - line - number = "7441" > < /td>
        < td
    id = "LC7441"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Must access selectedIndex to make default options select</span></td>
        < /tr>
        < tr >
        < td
    id = "L7442"
class
    = "blob-num js-line-number"
    data - line - number = "7442" > < /td>
        < td
    id = "LC7442"
class
    = "blob-code blob-code-inner js-file-line" > support < span
class
    = "pl-k" >
.<
    /span>optSelected <span class="pl-k">=</s
    pan > opt < span
class
    = "pl-k" >
.<
    /span>selected;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7443"
class
    = "blob-num js-line-number"
    data - line - number = "7443" > < /td>
        < td
    id = "LC7443"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7444"
class
    = "blob-num js-line-number"
    data - line - number = "7444" > < /td>
        < td
    id = "LC7444"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE &lt;=11 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L7445"
class
    = "blob-num js-line-number"
    data - line - number = "7445" > < /td>
        < td
    id = "LC7445"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> An input loses its value after becoming a radio</span></td>
        < /tr>
        < tr >
        < td
    id = "L7446"
class
    = "blob-num js-line-number"
    data - line - number = "7446" > < /td>
        < td
    id = "LC7446"
class
    = "blob-code blob-code-inner js-file-line" > input < span
class
    = "pl-k" >= < /span> document<span class="pl-k">.</s
    pan > createElement( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>input<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7447"
class
    = "blob-num js-line-number"
    data - line - number = "7447" > < /td>
        < td
    id = "LC7447"
class
    = "blob-code blob-code-inner js-file-line" > input < span
class
    = "pl-k" >
.<
    /span>value <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>t<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7448"
class
    = "blob-num js-line-number"
    data - line - number = "7448" > < /td>
        < td
    id = "LC7448"
class
    = "blob-code blob-code-inner js-file-line" > input < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>radio<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7449"
class
    = "blob-num js-line-number"
    data - line - number = "7449" > < /td>
        < td
    id = "LC7449"
class
    = "blob-code blob-code-inner js-file-line" > support < span
class
    = "pl-k" >
.<
    /span>radioValue <span class="pl-k">=</s
    pan > input < span
class
    = "pl-k" >
.<
    /span>value <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>t<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7450"
class
    = "blob-num js-line-number"
    data - line - number = "7450" > < /td>
        < td
    id = "LC7450"
class
    = "blob-code blob-code-inner js-file-line" >
})();
<
/td>
< /tr>
< tr >
< td
id = "L7451"
class
= "blob-num js-line-number"
data - line - number = "7451" > < /td>
    < td
id = "LC7451"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7452"
class
= "blob-num js-line-number"
data - line - number = "7452" > < /td>
    < td
id = "LC7452"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7453"
class
= "blob-num js-line-number"
data - line - number = "7453" > < /td>
    < td
id = "LC7453"
class
= "blob-code blob-code-inner js-file-line" >
var boolHook, <
/td>
< /tr>
< tr >
< td
id = "L7454"
class
= "blob-num js-line-number"
data - line - number = "7454" > < /td>
    < td
id = "LC7454"
class
= "blob-code blob-code-inner js-file-line" > attrHandle < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > expr < span
class
= "pl-k" >
.<
/span>attrHandle;</
td >
< /tr>
< tr >
< td
id = "L7455"
class
= "blob-num js-line-number"
data - line - number = "7455" > < /td>
    < td
id = "LC7455"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7456"
class
= "blob-num js-line-number"
data - line - number = "7456" > < /td>
    < td
id = "LC7456"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L7457"
class
= "blob-num js-line-number"
data - line - number = "7457" > < /td>
    < td
id = "LC7457"
class
= "blob-code blob-code-inner js-file-line" > attr < span
class
= "pl-k" >
:<
/span> function( name, value ) {</
td >
< /tr>
< tr >
< td
id = "L7458"
class
= "blob-num js-line-number"
data - line - number = "7458" > < /td>
    < td
id = "LC7458"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> access( <span class="pl-c1">this</s
pan >, jQuery < span
class
= "pl-k" >
.<
/span>attr, name, value, arguments<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">1</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7459"
class
= "blob-num js-line-number"
data - line - number = "7459" > < /td>
    < td
id = "LC7459"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7460"
class
= "blob-num js-line-number"
data - line - number = "7460" > < /td>
    < td
id = "LC7460"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7461"
class
= "blob-num js-line-number"
data - line - number = "7461" > < /td>
    < td
id = "LC7461"
class
= "blob-code blob-code-inner js-file-line" > removeAttr < span
class
= "pl-k" >
:<
/span> function( name ) {</
td >
< /tr>
< tr >
< td
id = "L7462"
class
= "blob-num js-line-number"
data - line - number = "7462" > < /td>
    < td
id = "LC7462"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L7463"
class
= "blob-num js-line-number"
data - line - number = "7463" > < /td>
    < td
id = "LC7463"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>removeAttr( <span class="pl-c1">this</s
pan >, name
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7464"
class
= "blob-num js-line-number"
data - line - number = "7464" > < /td>
    < td
id = "LC7464"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7465"
class
= "blob-num js-line-number"
data - line - number = "7465" > < /td>
    < td
id = "LC7465"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7466"
class
= "blob-num js-line-number"
data - line - number = "7466" > < /td>
    < td
id = "LC7466"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7467"
class
= "blob-num js-line-number"
data - line - number = "7467" > < /td>
    < td
id = "LC7467"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7468"
class
= "blob-num js-line-number"
data - line - number = "7468" > < /td>
    < td
id = "LC7468"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L7469"
class
= "blob-num js-line-number"
data - line - number = "7469" > < /td>
    < td
id = "LC7469"
class
= "blob-code blob-code-inner js-file-line" > attr < span
class
= "pl-k" >
:<
/span> function( elem, name, value ) {</
td >
< /tr>
< tr >
< td
id = "L7470"
class
= "blob-num js-line-number"
data - line - number = "7470" > < /td>
    < td
id = "LC7470"
class
= "blob-code blob-code-inner js-file-line" >
var ret, hooks, <
/td>
< /tr>
< tr >
< td
id = "L7471"
class
= "blob-num js-line-number"
data - line - number = "7471" > < /td>
    < td
id = "LC7471"
class
= "blob-code blob-code-inner js-file-line" > nType < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > nodeType;
<
/td>
< /tr>
< tr >
< td
id = "L7472"
class
= "blob-num js-line-number"
data - line - number = "7472" > < /td>
    < td
id = "LC7472"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7473"
class
= "blob-num js-line-number"
data - line - number = "7473" > < /td>
    < td
id = "LC7473"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t get/set attributes on text, comment and attribute nodes</span></td>
    < /tr>
    < tr >
    < td
id = "L7474"
class
= "blob-num js-line-number"
data - line - number = "7474" > < /td>
    < td
id = "LC7474"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( nType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 3 < /span> <span class="pl-k">||</s
pan > nType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">8</s
pan > < span
class
= "pl-k" > || < /span> nType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 2 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7475"
class
= "blob-num js-line-number"
data - line - number = "7475" > < /td>
    < td
id = "LC7475"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L7476"
class
= "blob-num js-line-number"
data - line - number = "7476" > < /td>
    < td
id = "LC7476"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7477"
class
= "blob-num js-line-number"
data - line - number = "7477" > < /td>
    < td
id = "LC7477"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7478"
class
= "blob-num js-line-number"
data - line - number = "7478" > < /td>
    < td
id = "LC7478"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fallback to prop when attributes are not supported</span></td>
    < /tr>
    < tr >
    < td
id = "L7479"
class
= "blob-num js-line-number"
data - line - number = "7479" > < /td>
    < td
id = "LC7479"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof elem<span class="pl-k">.</s
pan > getAttribute < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > undefined < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7480"
class
    = "blob-num js-line-number"
    data - line - number = "7480" > < /td>
        < td
    id = "LC7480"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> jQuery<span class="pl-k">.</s
    pan > prop(elem, name, value);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7481"
class
    = "blob-num js-line-number"
    data - line - number = "7481" > < /td>
        < td
    id = "LC7481"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7482"
class
= "blob-num js-line-number"
data - line - number = "7482" > < /td>
    < td
id = "LC7482"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7483"
class
= "blob-num js-line-number"
data - line - number = "7483" > < /td>
    < td
id = "LC7483"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Attribute hooks are determined by the lowercase version</span></td>
    < /tr>
    < tr >
    < td
id = "L7484"
class
= "blob-num js-line-number"
data - line - number = "7484" > < /td>
    < td
id = "LC7484"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Grab necessary hook if one is defined</span></td>
    < /tr>
    < tr >
    < td
id = "L7485"
class
= "blob-num js-line-number"
data - line - number = "7485" > < /td>
    < td
id = "LC7485"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( nType <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>isXMLDoc( elem ) ) {</
td >
< /tr>
< tr >
< td
id = "L7486"
class
= "blob-num js-line-number"
data - line - number = "7486" > < /td>
    < td
id = "LC7486"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > attrHooks[name < span
class
= "pl-k" >
.<
/span>toLowerCase() ] <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7487"
class
= "blob-num js-line-number"
data - line - number = "7487" > < /td>
    < td
id = "LC7487"
class
= "blob-code blob-code-inner js-file-line" > (jQuery < span
class
= "pl-k" >
.<
/span>expr<span class="pl-k">.</s
pan > match < span
class
= "pl-k" >
.<
/span>bool<span class="pl-k">.</s
pan > test(name) < span
class
= "pl-k" > ?
<
/span> boolHook <span class="pl-k">:</s
pan > undefined
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7488"
class
= "blob-num js-line-number"
data - line - number = "7488" > < /td>
    < td
id = "LC7488"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7489"
class
= "blob-num js-line-number"
data - line - number = "7489" > < /td>
    < td
id = "LC7489"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7490"
class
= "blob-num js-line-number"
data - line - number = "7490" > < /td>
    < td
id = "LC7490"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( value <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined ) {</
td >
< /tr>
< tr >
< td
id = "L7491"
class
= "blob-num js-line-number"
data - line - number = "7491" > < /td>
    < td
id = "LC7491"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( value <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7492"
class
= "blob-num js-line-number"
data - line - number = "7492" > < /td>
    < td
id = "LC7492"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>removeAttr( elem, name );</
td >
< /tr>
< tr >
< td
id = "L7493"
class
= "blob-num js-line-number"
data - line - number = "7493" > < /td>
    < td
id = "LC7493"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L7494"
class
= "blob-num js-line-number"
data - line - number = "7494" > < /td>
    < td
id = "LC7494"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7495"
class
= "blob-num js-line-number"
data - line - number = "7495" > < /td>
    < td
id = "LC7495"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7496"
class
= "blob-num js-line-number"
data - line - number = "7496" > < /td>
    < td
id = "LC7496"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>set<span class="pl-pds">&quot;</s
pan > < /span> in hooks <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7497"
class
= "blob-num js-line-number"
data - line - number = "7497" > < /td>
    < td
id = "LC7497"
class
= "blob-code blob-code-inner js-file-line" > (ret < span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > set(elem, value, name)
) <
span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7498"
class
    = "blob-num js-line-number"
    data - line - number = "7498" > < /td>
        < td
    id = "LC7498"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> ret;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7499"
class
    = "blob-num js-line-number"
    data - line - number = "7499" > < /td>
        < td
    id = "LC7499"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7500"
class
= "blob-num js-line-number"
data - line - number = "7500" > < /td>
    < td
id = "LC7500"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7501"
class
= "blob-num js-line-number"
data - line - number = "7501" > < /td>
    < td
id = "LC7501"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>setAttribute( name, value <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L7502"
class
= "blob-num js-line-number"
data - line - number = "7502" > < /td>
    < td
id = "LC7502"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> value;</
td >
< /tr>
< tr >
< td
id = "L7503"
class
= "blob-num js-line-number"
data - line - number = "7503" > < /td>
    < td
id = "LC7503"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7504"
class
= "blob-num js-line-number"
data - line - number = "7504" > < /td>
    < td
id = "LC7504"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7505"
class
= "blob-num js-line-number"
data - line - number = "7505" > < /td>
    < td
id = "LC7505"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>get<span class="pl-pds">&quot;</s
pan > < /span> in hooks <span class="pl-k">&amp;&amp;</s
pan > (ret < span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > get(elem, name)
) <
span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7506"
class
= "blob-num js-line-number"
data - line - number = "7506" > < /td>
    < td
id = "LC7506"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L7507"
class
= "blob-num js-line-number"
data - line - number = "7507" > < /td>
    < td
id = "LC7507"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7508"
class
= "blob-num js-line-number"
data - line - number = "7508" > < /td>
    < td
id = "LC7508"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7509"
class
= "blob-num js-line-number"
data - line - number = "7509" > < /td>
    < td
id = "LC7509"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > find < span
class
= "pl-k" >
.<
/span>attr( elem, name );</
td >
< /tr>
< tr >
< td
id = "L7510"
class
= "blob-num js-line-number"
data - line - number = "7510" > < /td>
    < td
id = "LC7510"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7511"
class
= "blob-num js-line-number"
data - line - number = "7511" > < /td>
    < td
id = "LC7511"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Non-existent attributes return null, we normalize to undefined</span></td>
    < /tr>
    < tr >
    < td
id = "L7512"
class
= "blob-num js-line-number"
data - line - number = "7512" > < /td>
    < td
id = "LC7512"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > undefined < span
class
= "pl-k" >
:<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L7513"
class
= "blob-num js-line-number"
data - line - number = "7513" > < /td>
    < td
id = "LC7513"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7514"
class
= "blob-num js-line-number"
data - line - number = "7514" > < /td>
    < td
id = "LC7514"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7515"
class
= "blob-num js-line-number"
data - line - number = "7515" > < /td>
    < td
id = "LC7515"
class
= "blob-code blob-code-inner js-file-line" > attrHooks < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7516"
class
= "blob-num js-line-number"
data - line - number = "7516" > < /td>
    < td
id = "LC7516"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7517"
class
= "blob-num js-line-number"
data - line - number = "7517" > < /td>
    < td
id = "LC7517"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( elem, value ) {</
td >
< /tr>
< tr >
< td
id = "L7518"
class
= "blob-num js-line-number"
data - line - number = "7518" > < /td>
    < td
id = "LC7518"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>radioValue <span class="pl-k">&amp;&amp;</s
pan > value < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > radio < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L7519"
class
= "blob-num js-line-number"
data - line - number = "7519" > < /td>
    < td
id = "LC7519"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>nodeName( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > input < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7520"
class
    = "blob-num js-line-number"
    data - line - number = "7520" > < /td>
        < td
    id = "LC7520"
class
    = "blob-code blob-code-inner js-file-line" >
    var val
<
    span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > value;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7521"
class
    = "blob-num js-line-number"
    data - line - number = "7521" > < /td>
        < td
    id = "LC7521"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>setAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > type < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >, value
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7522"
class
= "blob-num js-line-number"
data - line - number = "7522" > < /td>
    < td
id = "LC7522"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( val ) {</
td >
< /tr>
< tr >
< td
id = "L7523"
class
= "blob-num js-line-number"
data - line - number = "7523" > < /td>
    < td
id = "LC7523"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>value <span class="pl-k">=</s
pan > val;
<
/td>
< /tr>
< tr >
< td
id = "L7524"
class
= "blob-num js-line-number"
data - line - number = "7524" > < /td>
    < td
id = "LC7524"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7525"
class
= "blob-num js-line-number"
data - line - number = "7525" > < /td>
    < td
id = "LC7525"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> value;</
td >
< /tr>
< tr >
< td
id = "L7526"
class
= "blob-num js-line-number"
data - line - number = "7526" > < /td>
    < td
id = "LC7526"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7527"
class
= "blob-num js-line-number"
data - line - number = "7527" > < /td>
    < td
id = "LC7527"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7528"
class
= "blob-num js-line-number"
data - line - number = "7528" > < /td>
    < td
id = "LC7528"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7529"
class
= "blob-num js-line-number"
data - line - number = "7529" > < /td>
    < td
id = "LC7529"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7530"
class
= "blob-num js-line-number"
data - line - number = "7530" > < /td>
    < td
id = "LC7530"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7531"
class
= "blob-num js-line-number"
data - line - number = "7531" > < /td>
    < td
id = "LC7531"
class
= "blob-code blob-code-inner js-file-line" > removeAttr < span
class
= "pl-k" >
:<
/span> function( elem, value ) {</
td >
< /tr>
< tr >
< td
id = "L7532"
class
= "blob-num js-line-number"
data - line - number = "7532" > < /td>
    < td
id = "LC7532"
class
= "blob-code blob-code-inner js-file-line" >
var name, <
/td>
< /tr>
< tr >
< td
id = "L7533"
class
= "blob-num js-line-number"
data - line - number = "7533" > < /td>
    < td
id = "LC7533"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7534"
class
= "blob-num js-line-number"
data - line - number = "7534" > < /td>
    < td
id = "LC7534"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7535"
class
= "blob-num js-line-number"
data - line - number = "7535" > < /td>
    < td
id = "LC7535"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Attribute names can contain non-HTML whitespace characters</span></td>
    < /tr>
    < tr >
    < td
id = "L7536"
class
= "blob-num js-line-number"
data - line - number = "7536" > < /td>
    < td
id = "LC7536"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://html.spec.whatwg.org/multipage/syntax.html#attributes-2</span></td>
    < /tr>
    < tr >
    < td
id = "L7537"
class
= "blob-num js-line-number"
data - line - number = "7537" > < /td>
    < td
id = "LC7537"
class
= "blob-code blob-code-inner js-file-line" > attrNames < span
class
= "pl-k" >= < /span> value <span class="pl-k">&amp;&amp;</s
pan > value < span
class
= "pl-k" >
.<
/span>match( rnothtmlwhite );</
td >
< /tr>
< tr >
< td
id = "L7538"
class
= "blob-num js-line-number"
data - line - number = "7538" > < /td>
    < td
id = "LC7538"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7539"
class
= "blob-num js-line-number"
data - line - number = "7539" > < /td>
    < td
id = "LC7539"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( attrNames <span class="pl-k">&amp;&amp;</s
pan > elem < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 1 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7540"
class
= "blob-num js-line-number"
data - line - number = "7540" > < /td>
    < td
id = "LC7540"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ( name <span class="pl-k">=</s
pan > attrNames[i < span
class
= "pl-k" > ++ < /span> ] ) ) {</
td >
< /tr>
< tr >
< td
id = "L7541"
class
= "blob-num js-line-number"
data - line - number = "7541" > < /td>
    < td
id = "LC7541"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>removeAttribute( name );</
td >
< /tr>
< tr >
< td
id = "L7542"
class
= "blob-num js-line-number"
data - line - number = "7542" > < /td>
    < td
id = "LC7542"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7543"
class
= "blob-num js-line-number"
data - line - number = "7543" > < /td>
    < td
id = "LC7543"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7544"
class
= "blob-num js-line-number"
data - line - number = "7544" > < /td>
    < td
id = "LC7544"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7545"
class
= "blob-num js-line-number"
data - line - number = "7545" > < /td>
    < td
id = "LC7545"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7546"
class
= "blob-num js-line-number"
data - line - number = "7546" > < /td>
    < td
id = "LC7546"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7547"
class
= "blob-num js-line-number"
data - line - number = "7547" > < /td>
    < td
id = "LC7547"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Hooks for boolean attributes</span></td>
    < /tr>
    < tr >
    < td
id = "L7548"
class
= "blob-num js-line-number"
data - line - number = "7548" > < /td>
    < td
id = "LC7548"
class
= "blob-code blob-code-inner js-file-line" > boolHook < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L7549"
class
= "blob-num js-line-number"
data - line - number = "7549" > < /td>
    < td
id = "LC7549"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( elem, value, name ) {</
td >
< /tr>
< tr >
< td
id = "L7550"
class
= "blob-num js-line-number"
data - line - number = "7550" > < /td>
    < td
id = "LC7550"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( value <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7551"
class
= "blob-num js-line-number"
data - line - number = "7551" > < /td>
    < td
id = "LC7551"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7552"
class
= "blob-num js-line-number"
data - line - number = "7552" > < /td>
    < td
id = "LC7552"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove boolean attributes when set to false</span></td>
    < /tr>
    < tr >
    < td
id = "L7553"
class
= "blob-num js-line-number"
data - line - number = "7553" > < /td>
    < td
id = "LC7553"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>removeAttr( elem, name );</
td >
< /tr>
< tr >
< td
id = "L7554"
class
= "blob-num js-line-number"
data - line - number = "7554" > < /td>
    < td
id = "LC7554"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7555"
class
= "blob-num js-line-number"
data - line - number = "7555" > < /td>
    < td
id = "LC7555"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>setAttribute( name, name );</
td >
< /tr>
< tr >
< td
id = "L7556"
class
= "blob-num js-line-number"
data - line - number = "7556" > < /td>
    < td
id = "LC7556"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7557"
class
= "blob-num js-line-number"
data - line - number = "7557" > < /td>
    < td
id = "LC7557"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> name;</
td >
< /tr>
< tr >
< td
id = "L7558"
class
= "blob-num js-line-number"
data - line - number = "7558" > < /td>
    < td
id = "LC7558"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7559"
class
= "blob-num js-line-number"
data - line - number = "7559" > < /td>
    < td
id = "LC7559"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7560"
class
= "blob-num js-line-number"
data - line - number = "7560" > < /td>
    < td
id = "LC7560"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7561"
class
= "blob-num js-line-number"
data - line - number = "7561" > < /td>
    < td
id = "LC7561"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( jQuery<span class="pl-k">.</s
pan > expr < span
class
= "pl-k" >
.<
/span>match<span class="pl-k">.</s
pan > bool < span
class
= "pl-k" >
.<
/span>source<span class="pl-k">.</s
pan > match( < span
class
= "pl-k" > / < /span>\w<span class="pl-k">+/ < /span>g ), function( i, name ) {</
td >
< /tr>
< tr >
< td
id = "L7562"
class
= "blob-num js-line-number"
data - line - number = "7562" > < /td>
    < td
id = "LC7562"
class
= "blob-code blob-code-inner js-file-line" >
var getter
<
span
class
= "pl-k" >= < /span> attrHandle[ name ] <span class="pl-k">||</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>find<span class="pl-k">.</s
pan > attr;
<
/td>
< /tr>
< tr >
< td
id = "L7563"
class
= "blob-num js-line-number"
data - line - number = "7563" > < /td>
    < td
id = "LC7563"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7564"
class
= "blob-num js-line-number"
data - line - number = "7564" > < /td>
    < td
id = "LC7564"
class
= "blob-code blob-code-inner js-file-line" > attrHandle[name] < span
class
= "pl-k" >= < /span> function( elem, name, isXML ) {</
td >
< /tr>
< tr >
< td
id = "L7565"
class
= "blob-num js-line-number"
data - line - number = "7565" > < /td>
    < td
id = "LC7565"
class
= "blob-code blob-code-inner js-file-line" >
var ret, handle, <
/td>
< /tr>
< tr >
< td
id = "L7566"
class
= "blob-num js-line-number"
data - line - number = "7566" > < /td>
    < td
id = "LC7566"
class
= "blob-code blob-code-inner js-file-line" > lowercaseName < span
class
= "pl-k" >= < /span> name<span class="pl-k">.</s
pan > toLowerCase();
<
/td>
< /tr>
< tr >
< td
id = "L7567"
class
= "blob-num js-line-number"
data - line - number = "7567" > < /td>
    < td
id = "LC7567"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7568"
class
= "blob-num js-line-number"
data - line - number = "7568" > < /td>
    < td
id = "LC7568"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > isXML
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7569"
class
    = "blob-num js-line-number"
    data - line - number = "7569" > < /td>
        < td
    id = "LC7569"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7570"
class
    = "blob-num js-line-number"
    data - line - number = "7570" > < /td>
        < td
    id = "LC7570"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Avoid an infinite loop by temporarily removing this function from the getter</span></td>
        < /tr>
        < tr >
        < td
    id = "L7571"
class
    = "blob-num js-line-number"
    data - line - number = "7571" > < /td>
        < td
    id = "LC7571"
class
    = "blob-code blob-code-inner js-file-line" > handle < span
class
    = "pl-k" >= < /span> attrHandle[ lowercaseName ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L7572"
class
    = "blob-num js-line-number"
    data - line - number = "7572" > < /td>
        < td
    id = "LC7572"
class
    = "blob-code blob-code-inner js-file-line" > attrHandle[lowercaseName] < span
class
    = "pl-k" >= < /span> ret;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7573"
class
    = "blob-num js-line-number"
    data - line - number = "7573" > < /td>
        < td
    id = "LC7573"
class
    = "blob-code blob-code-inner js-file-line" > ret < span
class
    = "pl-k" >= < /span> getter( elem, name, isXML ) <span class="pl-k">!=</s
    pan > < span
class
    = "pl-c1" > null < /span> <span class="pl-k">?</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L7574"
class
    = "blob-num js-line-number"
    data - line - number = "7574" > < /td>
        < td
    id = "LC7574"
class
    = "blob-code blob-code-inner js-file-line" > lowercaseName < span
class
    = "pl-k" >
:<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L7575"
class
    = "blob-num js-line-number"
    data - line - number = "7575" > < /td>
        < td
    id = "LC7575"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > null < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7576"
class
    = "blob-num js-line-number"
    data - line - number = "7576" > < /td>
        < td
    id = "LC7576"
class
    = "blob-code blob-code-inner js-file-line" > attrHandle[lowercaseName] < span
class
    = "pl-k" >= < /span> handle;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7577"
class
    = "blob-num js-line-number"
    data - line - number = "7577" > < /td>
        < td
    id = "LC7577"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7578"
class
= "blob-num js-line-number"
data - line - number = "7578" > < /td>
    < td
id = "LC7578"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L7579"
class
= "blob-num js-line-number"
data - line - number = "7579" > < /td>
    < td
id = "LC7579"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7580"
class
= "blob-num js-line-number"
data - line - number = "7580" > < /td>
    < td
id = "LC7580"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7581"
class
= "blob-num js-line-number"
data - line - number = "7581" > < /td>
    < td
id = "LC7581"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7582"
class
= "blob-num js-line-number"
data - line - number = "7582" > < /td>
    < td
id = "LC7582"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7583"
class
= "blob-num js-line-number"
data - line - number = "7583" > < /td>
    < td
id = "LC7583"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7584"
class
= "blob-num js-line-number"
data - line - number = "7584" > < /td>
    < td
id = "LC7584"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7585"
class
= "blob-num js-line-number"
data - line - number = "7585" > < /td>
    < td
id = "LC7585"
class
= "blob-code blob-code-inner js-file-line" >
var rfocusable
<
span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>input<span class="pl-k">|</s
pan > select < span
class
= "pl-k" > | < /span>textarea<span class="pl-k">|</s
pan > button
)
$ < span
class
= "pl-k" > / < /span>i,</
td >
< /tr>
< tr >
< td
id = "L7586"
class
= "blob-num js-line-number"
data - line - number = "7586" > < /td>
    < td
id = "LC7586"
class
= "blob-code blob-code-inner js-file-line" > rclickable < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>a<span class="pl-k">|</s
pan > area
)
$ < span
class
= "pl-k" > / < /span>i;</
td >
< /tr>
< tr >
< td
id = "L7587"
class
= "blob-num js-line-number"
data - line - number = "7587" > < /td>
    < td
id = "LC7587"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7588"
class
= "blob-num js-line-number"
data - line - number = "7588" > < /td>
    < td
id = "LC7588"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L7589"
class
= "blob-num js-line-number"
data - line - number = "7589" > < /td>
    < td
id = "LC7589"
class
= "blob-code blob-code-inner js-file-line" > prop < span
class
= "pl-k" >
:<
/span> function( name, value ) {</
td >
< /tr>
< tr >
< td
id = "L7590"
class
= "blob-num js-line-number"
data - line - number = "7590" > < /td>
    < td
id = "LC7590"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> access( <span class="pl-c1">this</s
pan >, jQuery < span
class
= "pl-k" >
.<
/span>prop, name, value, arguments<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">1</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7591"
class
= "blob-num js-line-number"
data - line - number = "7591" > < /td>
    < td
id = "LC7591"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7592"
class
= "blob-num js-line-number"
data - line - number = "7592" > < /td>
    < td
id = "LC7592"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7593"
class
= "blob-num js-line-number"
data - line - number = "7593" > < /td>
    < td
id = "LC7593"
class
= "blob-code blob-code-inner js-file-line" > removeProp < span
class
= "pl-k" >
:<
/span> function( name ) {</
td >
< /tr>
< tr >
< td
id = "L7594"
class
= "blob-num js-line-number"
data - line - number = "7594" > < /td>
    < td
id = "LC7594"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L7595"
class
= "blob-num js-line-number"
data - line - number = "7595" > < /td>
    < td
id = "LC7595"
class
= "blob-code blob-code-inner js-file-line" > delete < span
class
= "pl-c1" > this < /span>[ jQuery<span class="pl-k">.</span>propFix[ name ] <span class="pl-k">||</s
pan > name
]
;
<
/td>
< /tr>
< tr >
< td
id = "L7596"
class
= "blob-num js-line-number"
data - line - number = "7596" > < /td>
    < td
id = "LC7596"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7597"
class
= "blob-num js-line-number"
data - line - number = "7597" > < /td>
    < td
id = "LC7597"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7598"
class
= "blob-num js-line-number"
data - line - number = "7598" > < /td>
    < td
id = "LC7598"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7599"
class
= "blob-num js-line-number"
data - line - number = "7599" > < /td>
    < td
id = "LC7599"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7600"
class
= "blob-num js-line-number"
data - line - number = "7600" > < /td>
    < td
id = "LC7600"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L7601"
class
= "blob-num js-line-number"
data - line - number = "7601" > < /td>
    < td
id = "LC7601"
class
= "blob-code blob-code-inner js-file-line" > prop < span
class
= "pl-k" >
:<
/span> function( elem, name, value ) {</
td >
< /tr>
< tr >
< td
id = "L7602"
class
= "blob-num js-line-number"
data - line - number = "7602" > < /td>
    < td
id = "LC7602"
class
= "blob-code blob-code-inner js-file-line" >
var ret, hooks, <
/td>
< /tr>
< tr >
< td
id = "L7603"
class
= "blob-num js-line-number"
data - line - number = "7603" > < /td>
    < td
id = "LC7603"
class
= "blob-code blob-code-inner js-file-line" > nType < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > nodeType;
<
/td>
< /tr>
< tr >
< td
id = "L7604"
class
= "blob-num js-line-number"
data - line - number = "7604" > < /td>
    < td
id = "LC7604"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7605"
class
= "blob-num js-line-number"
data - line - number = "7605" > < /td>
    < td
id = "LC7605"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t get/set properties on text, comment and attribute nodes</span></td>
    < /tr>
    < tr >
    < td
id = "L7606"
class
= "blob-num js-line-number"
data - line - number = "7606" > < /td>
    < td
id = "LC7606"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( nType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 3 < /span> <span class="pl-k">||</s
pan > nType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">8</s
pan > < span
class
= "pl-k" > || < /span> nType <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 2 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7607"
class
= "blob-num js-line-number"
data - line - number = "7607" > < /td>
    < td
id = "LC7607"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L7608"
class
= "blob-num js-line-number"
data - line - number = "7608" > < /td>
    < td
id = "LC7608"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7609"
class
= "blob-num js-line-number"
data - line - number = "7609" > < /td>
    < td
id = "LC7609"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7610"
class
= "blob-num js-line-number"
data - line - number = "7610" > < /td>
    < td
id = "LC7610"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( nType <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>isXMLDoc( elem ) ) {</
td >
< /tr>
< tr >
< td
id = "L7611"
class
= "blob-num js-line-number"
data - line - number = "7611" > < /td>
    < td
id = "LC7611"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7612"
class
= "blob-num js-line-number"
data - line - number = "7612" > < /td>
    < td
id = "LC7612"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fix name and attach hooks</span></td>
    < /tr>
    < tr >
    < td
id = "L7613"
class
= "blob-num js-line-number"
data - line - number = "7613" > < /td>
    < td
id = "LC7613"
class
= "blob-code blob-code-inner js-file-line" > name < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > propFix[name] < span
class
= "pl-k" > || < /span> name;</
td >
< /tr>
< tr >
< td
id = "L7614"
class
= "blob-num js-line-number"
data - line - number = "7614" > < /td>
    < td
id = "LC7614"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > propHooks[name];
<
/td>
< /tr>
< tr >
< td
id = "L7615"
class
= "blob-num js-line-number"
data - line - number = "7615" > < /td>
    < td
id = "LC7615"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7616"
class
= "blob-num js-line-number"
data - line - number = "7616" > < /td>
    < td
id = "LC7616"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7617"
class
= "blob-num js-line-number"
data - line - number = "7617" > < /td>
    < td
id = "LC7617"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( value <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined ) {</
td >
< /tr>
< tr >
< td
id = "L7618"
class
= "blob-num js-line-number"
data - line - number = "7618" > < /td>
    < td
id = "LC7618"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>set<span class="pl-pds">&quot;</s
pan > < /span> in hooks <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7619"
class
= "blob-num js-line-number"
data - line - number = "7619" > < /td>
    < td
id = "LC7619"
class
= "blob-code blob-code-inner js-file-line" > (ret < span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > set(elem, value, name)
) <
span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7620"
class
    = "blob-num js-line-number"
    data - line - number = "7620" > < /td>
        < td
    id = "LC7620"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> ret;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7621"
class
    = "blob-num js-line-number"
    data - line - number = "7621" > < /td>
        < td
    id = "LC7621"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7622"
class
= "blob-num js-line-number"
data - line - number = "7622" > < /td>
    < td
id = "LC7622"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7623"
class
= "blob-num js-line-number"
data - line - number = "7623" > < /td>
    < td
id = "LC7623"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ( elem[ name ] <span class="pl-k">=</s
pan > value
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7624"
class
= "blob-num js-line-number"
data - line - number = "7624" > < /td>
    < td
id = "LC7624"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7625"
class
= "blob-num js-line-number"
data - line - number = "7625" > < /td>
    < td
id = "LC7625"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7626"
class
= "blob-num js-line-number"
data - line - number = "7626" > < /td>
    < td
id = "LC7626"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>get<span class="pl-pds">&quot;</s
pan > < /span> in hooks <span class="pl-k">&amp;&amp;</s
pan > (ret < span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > get(elem, name)
) <
span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7627"
class
= "blob-num js-line-number"
data - line - number = "7627" > < /td>
    < td
id = "LC7627"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret;</
td >
< /tr>
< tr >
< td
id = "L7628"
class
= "blob-num js-line-number"
data - line - number = "7628" > < /td>
    < td
id = "LC7628"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7629"
class
= "blob-num js-line-number"
data - line - number = "7629" > < /td>
    < td
id = "LC7629"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7630"
class
= "blob-num js-line-number"
data - line - number = "7630" > < /td>
    < td
id = "LC7630"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem[ name ];</
td >
< /tr>
< tr >
< td
id = "L7631"
class
= "blob-num js-line-number"
data - line - number = "7631" > < /td>
    < td
id = "LC7631"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7632"
class
= "blob-num js-line-number"
data - line - number = "7632" > < /td>
    < td
id = "LC7632"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7633"
class
= "blob-num js-line-number"
data - line - number = "7633" > < /td>
    < td
id = "LC7633"
class
= "blob-code blob-code-inner js-file-line" > propHooks < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7634"
class
= "blob-num js-line-number"
data - line - number = "7634" > < /td>
    < td
id = "LC7634"
class
= "blob-code blob-code-inner js-file-line" > tabIndex < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7635"
class
= "blob-num js-line-number"
data - line - number = "7635" > < /td>
    < td
id = "LC7635"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L7636"
class
= "blob-num js-line-number"
data - line - number = "7636" > < /td>
    < td
id = "LC7636"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7637"
class
= "blob-num js-line-number"
data - line - number = "7637" > < /td>
    < td
id = "LC7637"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 - 11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L7638"
class
= "blob-num js-line-number"
data - line - number = "7638" > < /td>
    < td
id = "LC7638"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> elem.tabIndex doesn&#39;t always return the</span></td>
    < /tr>
    < tr >
    < td
id = "L7639"
class
= "blob-num js-line-number"
data - line - number = "7639" > < /td>
    < td
id = "LC7639"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> correct value when it hasn&#39;t been explicitly set</span></td>
    < /tr>
    < tr >
    < td
id = "L7640"
class
= "blob-num js-line-number"
data - line - number = "7640" > < /td>
    < td
id = "LC7640"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/</span></td>
    < /tr>
    < tr >
    < td
id = "L7641"
class
= "blob-num js-line-number"
data - line - number = "7641" > < /td>
    < td
id = "LC7641"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use proper attribute retrieval(#12072)</span></td>
    < /tr>
    < tr >
    < td
id = "L7642"
class
= "blob-num js-line-number"
data - line - number = "7642" > < /td>
    < td
id = "LC7642"
class
= "blob-code blob-code-inner js-file-line" >
var tabindex
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > find < span
class
= "pl-k" >
.<
/span>attr( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > tabindex < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7643"
class
= "blob-num js-line-number"
data - line - number = "7643" > < /td>
    < td
id = "LC7643"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7644"
class
= "blob-num js-line-number"
data - line - number = "7644" > < /td>
    < td
id = "LC7644"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( tabindex ) {</
td >
< /tr>
< tr >
< td
id = "L7645"
class
= "blob-num js-line-number"
data - line - number = "7645" > < /td>
    < td
id = "LC7645"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> parseInt( tabindex, <span class="pl-c1">10</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7646"
class
= "blob-num js-line-number"
data - line - number = "7646" > < /td>
    < td
id = "LC7646"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7647"
class
= "blob-num js-line-number"
data - line - number = "7647" > < /td>
    < td
id = "LC7647"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7648"
class
= "blob-num js-line-number"
data - line - number = "7648" > < /td>
    < td
id = "LC7648"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> (</
td >
< /tr>
< tr >
< td
id = "L7649"
class
= "blob-num js-line-number"
data - line - number = "7649" > < /td>
    < td
id = "LC7649"
class
= "blob-code blob-code-inner js-file-line" > rfocusable < span
class
= "pl-k" >
.<
/span>test( elem<span class="pl-k">.</s
pan > nodeName
) <
span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L7650"
class
= "blob-num js-line-number"
data - line - number = "7650" > < /td>
    < td
id = "LC7650"
class
= "blob-code blob-code-inner js-file-line" > rclickable < span
class
= "pl-k" >
.<
/span>test( elem<span class="pl-k">.</s
pan > nodeName
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L7651"
class
= "blob-num js-line-number"
data - line - number = "7651" > < /td>
    < td
id = "LC7651"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>href</
td >
< /tr>
< tr >
< td
id = "L7652"
class
= "blob-num js-line-number"
data - line - number = "7652" > < /td>
    < td
id = "LC7652"
class
= "blob-code blob-code-inner js-file-line" >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7653"
class
    = "blob-num js-line-number"
    data - line - number = "7653" > < /td>
        < td
    id = "LC7653"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7654"
class
    = "blob-num js-line-number"
    data - line - number = "7654" > < /td>
        < td
    id = "LC7654"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7655"
class
= "blob-num js-line-number"
data - line - number = "7655" > < /td>
    < td
id = "LC7655"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7656"
class
= "blob-num js-line-number"
data - line - number = "7656" > < /td>
    < td
id = "LC7656"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span>;</
td >
< /tr>
< tr >
< td
id = "L7657"
class
= "blob-num js-line-number"
data - line - number = "7657" > < /td>
    < td
id = "LC7657"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7658"
class
= "blob-num js-line-number"
data - line - number = "7658" > < /td>
    < td
id = "LC7658"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7659"
class
= "blob-num js-line-number"
data - line - number = "7659" > < /td>
    < td
id = "LC7659"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7660"
class
= "blob-num js-line-number"
data - line - number = "7660" > < /td>
    < td
id = "LC7660"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7661"
class
= "blob-num js-line-number"
data - line - number = "7661" > < /td>
    < td
id = "LC7661"
class
= "blob-code blob-code-inner js-file-line" > propFix < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7662"
class
= "blob-num js-line-number"
data - line - number = "7662" > < /td>
    < td
id = "LC7662"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>for<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>htmlFor<span class="pl-pds">&quot;</s
pan > < /span>,</
td >
< /tr>
< tr >
< td
id = "L7663"
class
= "blob-num js-line-number"
data - line - number = "7663" > < /td>
    < td
id = "LC7663"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>class<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>className<span class="pl-pds">&quot;</s
pan > < /span></
td >
< /tr>
< tr >
< td
id = "L7664"
class
= "blob-num js-line-number"
data - line - number = "7664" > < /td>
    < td
id = "LC7664"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7665"
class
= "blob-num js-line-number"
data - line - number = "7665" > < /td>
    < td
id = "LC7665"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7666"
class
= "blob-num js-line-number"
data - line - number = "7666" > < /td>
    < td
id = "LC7666"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7667"
class
= "blob-num js-line-number"
data - line - number = "7667" > < /td>
    < td
id = "LC7667"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L7668"
class
= "blob-num js-line-number"
data - line - number = "7668" > < /td>
    < td
id = "LC7668"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Accessing the selectedIndex property</span></td>
    < /tr>
    < tr >
    < td
id = "L7669"
class
= "blob-num js-line-number"
data - line - number = "7669" > < /td>
    < td
id = "LC7669"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> forces the browser to respect setting selected</span></td>
    < /tr>
    < tr >
    < td
id = "L7670"
class
= "blob-num js-line-number"
data - line - number = "7670" > < /td>
    < td
id = "LC7670"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> on the option</span></td>
    < /tr>
    < tr >
    < td
id = "L7671"
class
= "blob-num js-line-number"
data - line - number = "7671" > < /td>
    < td
id = "LC7671"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The getter ensures a default option is selected</span></td>
    < /tr>
    < tr >
    < td
id = "L7672"
class
= "blob-num js-line-number"
data - line - number = "7672" > < /td>
    < td
id = "LC7672"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> when in an optgroup</span></td>
    < /tr>
    < tr >
    < td
id = "L7673"
class
= "blob-num js-line-number"
data - line - number = "7673" > < /td>
    < td
id = "LC7673"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> eslint rule &quot;no-unused-expressions&quot; is disabled for this code</span></td>
    < /tr>
    < tr >
    < td
id = "L7674"
class
= "blob-num js-line-number"
data - line - number = "7674" > < /td>
    < td
id = "LC7674"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> since it considers such accessions noop</span></td>
    < /tr>
    < tr >
    < td
id = "L7675"
class
= "blob-num js-line-number"
data - line - number = "7675" > < /td>
    < td
id = "LC7675"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>optSelected ) {</
td >
< /tr>
< tr >
< td
id = "L7676"
class
= "blob-num js-line-number"
data - line - number = "7676" > < /td>
    < td
id = "LC7676"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>propHooks<span class="pl-k">.</s
pan > selected < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L7677"
class
= "blob-num js-line-number"
data - line - number = "7677" > < /td>
    < td
id = "LC7677"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L7678"
class
= "blob-num js-line-number"
data - line - number = "7678" > < /td>
    < td
id = "LC7678"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7679"
class
= "blob-num js-line-number"
data - line - number = "7679" > < /td>
    < td
id = "LC7679"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> eslint no-unused-expressions: &quot;off&quot; <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L7680"
class
= "blob-num js-line-number"
data - line - number = "7680" > < /td>
    < td
id = "LC7680"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7681"
class
= "blob-num js-line-number"
data - line - number = "7681" > < /td>
    < td
id = "LC7681"
class
= "blob-code blob-code-inner js-file-line" >
var parent
<
span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > parentNode;
<
/td>
< /tr>
< tr >
< td
id = "L7682"
class
= "blob-num js-line-number"
data - line - number = "7682" > < /td>
    < td
id = "LC7682"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( parent <span class="pl-k">&amp;&amp;</s
pan > parent < span
class
= "pl-k" >
.<
/span>parentNode ) {</
td >
< /tr>
< tr >
< td
id = "L7683"
class
= "blob-num js-line-number"
data - line - number = "7683" > < /td>
    < td
id = "LC7683"
class
= "blob-code blob-code-inner js-file-line" > parent < span
class
= "pl-k" >
.<
/span>parentNode<span class="pl-k">.</s
pan > selectedIndex;
<
/td>
< /tr>
< tr >
< td
id = "L7684"
class
= "blob-num js-line-number"
data - line - number = "7684" > < /td>
    < td
id = "LC7684"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7685"
class
= "blob-num js-line-number"
data - line - number = "7685" > < /td>
    < td
id = "LC7685"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7686"
class
= "blob-num js-line-number"
data - line - number = "7686" > < /td>
    < td
id = "LC7686"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7687"
class
= "blob-num js-line-number"
data - line - number = "7687" > < /td>
    < td
id = "LC7687"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L7688"
class
= "blob-num js-line-number"
data - line - number = "7688" > < /td>
    < td
id = "LC7688"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7689"
class
= "blob-num js-line-number"
data - line - number = "7689" > < /td>
    < td
id = "LC7689"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> eslint no-unused-expressions: &quot;off&quot; <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L7690"
class
= "blob-num js-line-number"
data - line - number = "7690" > < /td>
    < td
id = "LC7690"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7691"
class
= "blob-num js-line-number"
data - line - number = "7691" > < /td>
    < td
id = "LC7691"
class
= "blob-code blob-code-inner js-file-line" >
var parent
<
span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > parentNode;
<
/td>
< /tr>
< tr >
< td
id = "L7692"
class
= "blob-num js-line-number"
data - line - number = "7692" > < /td>
    < td
id = "LC7692"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( parent ) {</
td >
< /tr>
< tr >
< td
id = "L7693"
class
= "blob-num js-line-number"
data - line - number = "7693" > < /td>
    < td
id = "LC7693"
class
= "blob-code blob-code-inner js-file-line" > parent < span
class
= "pl-k" >
.<
/span>selectedIndex;</
td >
< /tr>
< tr >
< td
id = "L7694"
class
= "blob-num js-line-number"
data - line - number = "7694" > < /td>
    < td
id = "LC7694"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7695"
class
= "blob-num js-line-number"
data - line - number = "7695" > < /td>
    < td
id = "LC7695"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( parent<span class="pl-k">.</s
pan > parentNode
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7696"
class
    = "blob-num js-line-number"
    data - line - number = "7696" > < /td>
        < td
    id = "LC7696"
class
    = "blob-code blob-code-inner js-file-line" > parent < span
class
    = "pl-k" >
.<
    /span>parentNode<span class="pl-k">.</s
    pan > selectedIndex;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7697"
class
    = "blob-num js-line-number"
    data - line - number = "7697" > < /td>
        < td
    id = "LC7697"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7698"
class
= "blob-num js-line-number"
data - line - number = "7698" > < /td>
    < td
id = "LC7698"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7699"
class
= "blob-num js-line-number"
data - line - number = "7699" > < /td>
    < td
id = "LC7699"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7700"
class
= "blob-num js-line-number"
data - line - number = "7700" > < /td>
    < td
id = "LC7700"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L7701"
class
= "blob-num js-line-number"
data - line - number = "7701" > < /td>
    < td
id = "LC7701"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7702"
class
= "blob-num js-line-number"
data - line - number = "7702" > < /td>
    < td
id = "LC7702"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7703"
class
= "blob-num js-line-number"
data - line - number = "7703" > < /td>
    < td
id = "LC7703"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( [</td>
      </tr>
      <tr>
        <td id="L7704" class="blob-num js-line-number" data-line-number="7704"></td>
        <td id="LC7704" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>tabIndex<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7705" class="blob-num js-line-number" data-line-number="7705"></td>
        <td id="LC7705" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>readOnly<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7706" class="blob-num js-line-number" data-line-number="7706"></td>
        <td id="LC7706" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>maxLength<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7707" class="blob-num js-line-number" data-line-number="7707"></td>
        <td id="LC7707" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>cellSpacing<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7708" class="blob-num js-line-number" data-line-number="7708"></td>
        <td id="LC7708" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>cellPadding<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7709" class="blob-num js-line-number" data-line-number="7709"></td>
        <td id="LC7709" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>rowSpan<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7710" class="blob-num js-line-number" data-line-number="7710"></td>
        <td id="LC7710" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>colSpan<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7711" class="blob-num js-line-number" data-line-number="7711"></td>
        <td id="LC7711" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>useMap<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7712" class="blob-num js-line-number" data-line-number="7712"></td>
        <td id="LC7712" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>frameBorder<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7713" class="blob-num js-line-number" data-line-number="7713"></td>
        <td id="LC7713" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>contentEditable<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L7714" class="blob-num js-line-number" data-line-number="7714"></td>
        <td id="LC7714" class="blob-code blob-code-inner js-file-line">    ], function() {</
td >
< /tr>
< tr >
< td
id = "L7715"
class
= "blob-num js-line-number"
data - line - number = "7715" > < /td>
    < td
id = "LC7715"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>propFix[ <span class="pl-c1">this</span><span class="pl-k">.</span>toLowerCase() ] <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > this < /span>;</
td >
< /tr>
< tr >
< td
id = "L7716"
class
= "blob-num js-line-number"
data - line - number = "7716" > < /td>
    < td
id = "LC7716"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7717"
class
= "blob-num js-line-number"
data - line - number = "7717" > < /td>
    < td
id = "LC7717"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7718"
class
= "blob-num js-line-number"
data - line - number = "7718" > < /td>
    < td
id = "LC7718"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7719"
class
= "blob-num js-line-number"
data - line - number = "7719" > < /td>
    < td
id = "LC7719"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7720"
class
= "blob-num js-line-number"
data - line - number = "7720" > < /td>
    < td
id = "LC7720"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7721"
class
= "blob-num js-line-number"
data - line - number = "7721" > < /td>
    < td
id = "LC7721"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Strip and collapse whitespace according to HTML spec</span></td>
    < /tr>
    < tr >
    < td
id = "L7722"
class
= "blob-num js-line-number"
data - line - number = "7722" > < /td>
    < td
id = "LC7722"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace</span></td>
    < /tr>
    < tr >
    < td
id = "L7723"
class
= "blob-num js-line-number"
data - line - number = "7723" > < /td>
    < td
id = "LC7723"
class
= "blob-code blob-code-inner js-file-line" > function stripAndCollapse(value) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L7724"
    class
        = "blob-num js-line-number"
        data - line - number = "7724" > < /td>
            < td
        id = "LC7724"
    class
        = "blob-code blob-code-inner js-file-line" >
        var tokens
    <
        span
    class
        = "pl-k" >= < /span> value<span class="pl-k">.</s
        pan > match(rnothtmlwhite) < span
    class
        = "pl-k" > || < /span> [];</
        td >
        < /tr>
        < tr >
        < td
        id = "L7725"
    class
        = "blob-num js-line-number"
        data - line - number = "7725" > < /td>
            < td
        id = "LC7725"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> tokens<span class="pl-k">.</s
        pan > join( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span> <span class="pl-pds">&quot;</s
        pan > < /span> );</
        td >
        < /tr>
        < tr >
        < td
        id = "L7726"
    class
        = "blob-num js-line-number"
        data - line - number = "7726" > < /td>
            < td
        id = "LC7726"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L7727"
class
= "blob-num js-line-number"
data - line - number = "7727" > < /td>
    < td
id = "LC7727"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7728"
class
= "blob-num js-line-number"
data - line - number = "7728" > < /td>
    < td
id = "LC7728"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7729"
class
= "blob-num js-line-number"
data - line - number = "7729" > < /td>
    < td
id = "LC7729"
class
= "blob-code blob-code-inner js-file-line" > function getClass(elem) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L7730"
    class
        = "blob-num js-line-number"
        data - line - number = "7730" > < /td>
            < td
        id = "LC7730"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> elem<span class="pl-k">.</s
        pan > getAttribute < span
    class
        = "pl-k" > &amp;&amp; < /span> elem<span class="pl-k">.</s
        pan > getAttribute( < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>class<span class="pl-pds">&quot;</s
        pan > < /span> ) <span class="pl-k">||</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span><span class="pl-pds">&quot;</s
        pan > < /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L7731"
    class
        = "blob-num js-line-number"
        data - line - number = "7731" > < /td>
            < td
        id = "LC7731"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L7732"
class
= "blob-num js-line-number"
data - line - number = "7732" > < /td>
    < td
id = "LC7732"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7733"
class
= "blob-num js-line-number"
data - line - number = "7733" > < /td>
    < td
id = "LC7733"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L7734"
class
= "blob-num js-line-number"
data - line - number = "7734" > < /td>
    < td
id = "LC7734"
class
= "blob-code blob-code-inner js-file-line" > addClass < span
class
= "pl-k" >
:<
/span> function( value ) {</
td >
< /tr>
< tr >
< td
id = "L7735"
class
= "blob-num js-line-number"
data - line - number = "7735" > < /td>
    < td
id = "LC7735"
class
= "blob-code blob-code-inner js-file-line" >
var classes, elem, cur, curValue, clazz, j, finalValue, <
/td>
< /tr>
< tr >
< td
id = "L7736"
class
= "blob-num js-line-number"
data - line - number = "7736" > < /td>
    < td
id = "LC7736"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7737"
class
= "blob-num js-line-number"
data - line - number = "7737" > < /td>
    < td
id = "LC7737"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7738"
class
= "blob-num js-line-number"
data - line - number = "7738" > < /td>
    < td
id = "LC7738"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(value)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7739"
class
    = "blob-num js-line-number"
    data - line - number = "7739" > < /td>
        < td
    id = "LC7739"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>each( function( j ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7740"
class
    = "blob-num js-line-number"
    data - line - number = "7740" > < /td>
        < td
    id = "LC7740"
class
    = "blob-code blob-code-inner js-file-line" > jQuery( < span
class
    = "pl-c1" > this < /span> )<span class="pl-k">.</s
    pan > addClass(value < span
class
    = "pl-k" >
.<
    /span>call( <span class="pl-c1">this</s
    pan >, j, getClass( < span
class
    = "pl-c1" > this < /span> ) ) );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7741"
class
    = "blob-num js-line-number"
    data - line - number = "7741" > < /td>
        < td
    id = "LC7741"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7742"
class
= "blob-num js-line-number"
data - line - number = "7742" > < /td>
    < td
id = "LC7742"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7743"
class
= "blob-num js-line-number"
data - line - number = "7743" > < /td>
    < td
id = "LC7743"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7744"
class
= "blob-num js-line-number"
data - line - number = "7744" > < /td>
    < td
id = "LC7744"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof value <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > value
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7745"
class
    = "blob-num js-line-number"
    data - line - number = "7745" > < /td>
        < td
    id = "LC7745"
class
    = "blob-code blob-code-inner js-file-line" > classes < span
class
    = "pl-k" >= < /span> value<span class="pl-k">.</s
    pan > match(rnothtmlwhite) < span
class
    = "pl-k" > || < /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L7746"
class
    = "blob-num js-line-number"
    data - line - number = "7746" > < /td>
        < td
    id = "LC7746"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7747"
class
    = "blob-num js-line-number"
    data - line - number = "7747" > < /td>
        < td
    id = "LC7747"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( ( elem <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > this < /span>[ i<span class="pl-k">++</span> ] ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7748"
class
    = "blob-num js-line-number"
    data - line - number = "7748" > < /td>
        < td
    id = "LC7748"
class
    = "blob-code blob-code-inner js-file-line" > curValue < span
class
    = "pl-k" >= < /span> getClass( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7749"
class
    = "blob-num js-line-number"
    data - line - number = "7749" > < /td>
        < td
    id = "LC7749"
class
    = "blob-code blob-code-inner js-file-line" > cur < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> ( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> stripAndCollapse( curValue ) <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7750"
class
    = "blob-num js-line-number"
    data - line - number = "7750" > < /td>
        < td
    id = "LC7750"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7751"
class
    = "blob-num js-line-number"
    data - line - number = "7751" > < /td>
        < td
    id = "LC7751"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( cur ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7752"
class
    = "blob-num js-line-number"
    data - line - number = "7752" > < /td>
        < td
    id = "LC7752"
class
    = "blob-code blob-code-inner js-file-line" > j < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7753"
class
    = "blob-num js-line-number"
    data - line - number = "7753" > < /td>
        < td
    id = "LC7753"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( ( clazz <span class="pl-k">=</s
    pan > classes[j < span
class
    = "pl-k" > ++ < /span> ] ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7754"
class
    = "blob-num js-line-number"
    data - line - number = "7754" > < /td>
        < td
    id = "LC7754"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( cur<span class="pl-k">.</s
    pan > indexOf( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > clazz < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) <
    span
class
    = "pl-k" > &lt; < /span> <span class="pl-c1">0</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7755"
class
    = "blob-num js-line-number"
    data - line - number = "7755" > < /td>
        < td
    id = "LC7755"
class
    = "blob-code blob-code-inner js-file-line" > cur < span
class
    = "pl-k" > +=
<
    /span> clazz <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7756"
class
    = "blob-num js-line-number"
    data - line - number = "7756" > < /td>
        < td
    id = "LC7756"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7757"
class
= "blob-num js-line-number"
data - line - number = "7757" > < /td>
    < td
id = "LC7757"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7758"
class
= "blob-num js-line-number"
data - line - number = "7758" > < /td>
    < td
id = "LC7758"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7759"
class
= "blob-num js-line-number"
data - line - number = "7759" > < /td>
    < td
id = "LC7759"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Only assign if different to avoid unneeded rendering.</span></td>
    < /tr>
    < tr >
    < td
id = "L7760"
class
= "blob-num js-line-number"
data - line - number = "7760" > < /td>
    < td
id = "LC7760"
class
= "blob-code blob-code-inner js-file-line" > finalValue < span
class
= "pl-k" >= < /span> stripAndCollapse( cur );</
td >
< /tr>
< tr >
< td
id = "L7761"
class
= "blob-num js-line-number"
data - line - number = "7761" > < /td>
    < td
id = "LC7761"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( curValue <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> finalValue ) {</
td >
< /tr>
< tr >
< td
id = "L7762"
class
= "blob-num js-line-number"
data - line - number = "7762" > < /td>
    < td
id = "LC7762"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>setAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > class<span
class
= "pl-pds" > & quot;
<
/span></s
pan >, finalValue
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7763"
class
= "blob-num js-line-number"
data - line - number = "7763" > < /td>
    < td
id = "LC7763"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7764"
class
= "blob-num js-line-number"
data - line - number = "7764" > < /td>
    < td
id = "LC7764"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7765"
class
= "blob-num js-line-number"
data - line - number = "7765" > < /td>
    < td
id = "LC7765"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7766"
class
= "blob-num js-line-number"
data - line - number = "7766" > < /td>
    < td
id = "LC7766"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7767"
class
= "blob-num js-line-number"
data - line - number = "7767" > < /td>
    < td
id = "LC7767"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7768"
class
= "blob-num js-line-number"
data - line - number = "7768" > < /td>
    < td
id = "LC7768"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7769"
class
= "blob-num js-line-number"
data - line - number = "7769" > < /td>
    < td
id = "LC7769"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7770"
class
= "blob-num js-line-number"
data - line - number = "7770" > < /td>
    < td
id = "LC7770"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7771"
class
= "blob-num js-line-number"
data - line - number = "7771" > < /td>
    < td
id = "LC7771"
class
= "blob-code blob-code-inner js-file-line" > removeClass < span
class
= "pl-k" >
:<
/span> function( value ) {</
td >
< /tr>
< tr >
< td
id = "L7772"
class
= "blob-num js-line-number"
data - line - number = "7772" > < /td>
    < td
id = "LC7772"
class
= "blob-code blob-code-inner js-file-line" >
var classes, elem, cur, curValue, clazz, j, finalValue, <
/td>
< /tr>
< tr >
< td
id = "L7773"
class
= "blob-num js-line-number"
data - line - number = "7773" > < /td>
    < td
id = "LC7773"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7774"
class
= "blob-num js-line-number"
data - line - number = "7774" > < /td>
    < td
id = "LC7774"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7775"
class
= "blob-num js-line-number"
data - line - number = "7775" > < /td>
    < td
id = "LC7775"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(value)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7776"
class
    = "blob-num js-line-number"
    data - line - number = "7776" > < /td>
        < td
    id = "LC7776"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>each( function( j ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7777"
class
    = "blob-num js-line-number"
    data - line - number = "7777" > < /td>
        < td
    id = "LC7777"
class
    = "blob-code blob-code-inner js-file-line" > jQuery( < span
class
    = "pl-c1" > this < /span> )<span class="pl-k">.</s
    pan > removeClass(value < span
class
    = "pl-k" >
.<
    /span>call( <span class="pl-c1">this</s
    pan >, j, getClass( < span
class
    = "pl-c1" > this < /span> ) ) );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7778"
class
    = "blob-num js-line-number"
    data - line - number = "7778" > < /td>
        < td
    id = "LC7778"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7779"
class
= "blob-num js-line-number"
data - line - number = "7779" > < /td>
    < td
id = "LC7779"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7780"
class
= "blob-num js-line-number"
data - line - number = "7780" > < /td>
    < td
id = "LC7780"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7781"
class
= "blob-num js-line-number"
data - line - number = "7781" > < /td>
    < td
id = "LC7781"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > arguments < span
class
= "pl-k" >
.<
/span>length ) {</
td >
< /tr>
< tr >
< td
id = "L7782"
class
= "blob-num js-line-number"
data - line - number = "7782" > < /td>
    < td
id = "LC7782"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>attr( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > class<span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L7783"
class
= "blob-num js-line-number"
data - line - number = "7783" > < /td>
    < td
id = "LC7783"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7784"
class
= "blob-num js-line-number"
data - line - number = "7784" > < /td>
    < td
id = "LC7784"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7785"
class
= "blob-num js-line-number"
data - line - number = "7785" > < /td>
    < td
id = "LC7785"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof value <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > value
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7786"
class
    = "blob-num js-line-number"
    data - line - number = "7786" > < /td>
        < td
    id = "LC7786"
class
    = "blob-code blob-code-inner js-file-line" > classes < span
class
    = "pl-k" >= < /span> value<span class="pl-k">.</s
    pan > match(rnothtmlwhite) < span
class
    = "pl-k" > || < /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L7787"
class
    = "blob-num js-line-number"
    data - line - number = "7787" > < /td>
        < td
    id = "LC7787"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7788"
class
    = "blob-num js-line-number"
    data - line - number = "7788" > < /td>
        < td
    id = "LC7788"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( ( elem <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > this < /span>[ i<span class="pl-k">++</span> ] ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7789"
class
    = "blob-num js-line-number"
    data - line - number = "7789" > < /td>
        < td
    id = "LC7789"
class
    = "blob-code blob-code-inner js-file-line" > curValue < span
class
    = "pl-k" >= < /span> getClass( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7790"
class
    = "blob-num js-line-number"
    data - line - number = "7790" > < /td>
        < td
    id = "LC7790"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7791"
class
    = "blob-num js-line-number"
    data - line - number = "7791" > < /td>
        < td
    id = "LC7791"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> This expression is here for better compressibility (see addClass)</span></td>
        < /tr>
        < tr >
        < td
    id = "L7792"
class
    = "blob-num js-line-number"
    data - line - number = "7792" > < /td>
        < td
    id = "LC7792"
class
    = "blob-code blob-code-inner js-file-line" > cur < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > nodeType < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span> ( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> stripAndCollapse( curValue ) <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7793"
class
    = "blob-num js-line-number"
    data - line - number = "7793" > < /td>
        < td
    id = "LC7793"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7794"
class
    = "blob-num js-line-number"
    data - line - number = "7794" > < /td>
        < td
    id = "LC7794"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( cur ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7795"
class
    = "blob-num js-line-number"
    data - line - number = "7795" > < /td>
        < td
    id = "LC7795"
class
    = "blob-code blob-code-inner js-file-line" > j < span
class
    = "pl-k" >= < /span> <span class="pl-c1">0</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7796"
class
    = "blob-num js-line-number"
    data - line - number = "7796" > < /td>
        < td
    id = "LC7796"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( ( clazz <span class="pl-k">=</s
    pan > classes[j < span
class
    = "pl-k" > ++ < /span> ] ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7797"
class
    = "blob-num js-line-number"
    data - line - number = "7797" > < /td>
        < td
    id = "LC7797"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7798"
class
    = "blob-num js-line-number"
    data - line - number = "7798" > < /td>
        < td
    id = "LC7798"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Remove *all* instances</span></td>
        < /tr>
        < tr >
        < td
    id = "L7799"
class
    = "blob-num js-line-number"
    data - line - number = "7799" > < /td>
        < td
    id = "LC7799"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( cur<span class="pl-k">.</s
    pan > indexOf( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > clazz < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) <
    span
class
    = "pl-k" > &gt; < /span> <span class="pl-k">-</s
    pan > < span
class
    = "pl-c1" > 1 < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7800"
class
    = "blob-num js-line-number"
    data - line - number = "7800" > < /td>
        < td
    id = "LC7800"
class
    = "blob-code blob-code-inner js-file-line" > cur < span
class
    = "pl-k" >= < /span> cur<span class="pl-k">.</s
    pan > replace( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > clazz < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7801"
class
    = "blob-num js-line-number"
    data - line - number = "7801" > < /td>
        < td
    id = "LC7801"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7802"
class
= "blob-num js-line-number"
data - line - number = "7802" > < /td>
    < td
id = "LC7802"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7803"
class
= "blob-num js-line-number"
data - line - number = "7803" > < /td>
    < td
id = "LC7803"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7804"
class
= "blob-num js-line-number"
data - line - number = "7804" > < /td>
    < td
id = "LC7804"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Only assign if different to avoid unneeded rendering.</span></td>
    < /tr>
    < tr >
    < td
id = "L7805"
class
= "blob-num js-line-number"
data - line - number = "7805" > < /td>
    < td
id = "LC7805"
class
= "blob-code blob-code-inner js-file-line" > finalValue < span
class
= "pl-k" >= < /span> stripAndCollapse( cur );</
td >
< /tr>
< tr >
< td
id = "L7806"
class
= "blob-num js-line-number"
data - line - number = "7806" > < /td>
    < td
id = "LC7806"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( curValue <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> finalValue ) {</
td >
< /tr>
< tr >
< td
id = "L7807"
class
= "blob-num js-line-number"
data - line - number = "7807" > < /td>
    < td
id = "LC7807"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>setAttribute( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > class<span
class
= "pl-pds" > & quot;
<
/span></s
pan >, finalValue
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7808"
class
= "blob-num js-line-number"
data - line - number = "7808" > < /td>
    < td
id = "LC7808"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7809"
class
= "blob-num js-line-number"
data - line - number = "7809" > < /td>
    < td
id = "LC7809"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7810"
class
= "blob-num js-line-number"
data - line - number = "7810" > < /td>
    < td
id = "LC7810"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7811"
class
= "blob-num js-line-number"
data - line - number = "7811" > < /td>
    < td
id = "LC7811"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7812"
class
= "blob-num js-line-number"
data - line - number = "7812" > < /td>
    < td
id = "LC7812"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7813"
class
= "blob-num js-line-number"
data - line - number = "7813" > < /td>
    < td
id = "LC7813"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7814"
class
= "blob-num js-line-number"
data - line - number = "7814" > < /td>
    < td
id = "LC7814"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7815"
class
= "blob-num js-line-number"
data - line - number = "7815" > < /td>
    < td
id = "LC7815"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7816"
class
= "blob-num js-line-number"
data - line - number = "7816" > < /td>
    < td
id = "LC7816"
class
= "blob-code blob-code-inner js-file-line" > toggleClass < span
class
= "pl-k" >
:<
/span> function( value, stateVal ) {</
td >
< /tr>
< tr >
< td
id = "L7817"
class
= "blob-num js-line-number"
data - line - number = "7817" > < /td>
    < td
id = "LC7817"
class
= "blob-code blob-code-inner js-file-line" >
var type
<
span
class
= "pl-k" >= < /span> typeof value;</
td >
< /tr>
< tr >
< td
id = "L7818"
class
= "blob-num js-line-number"
data - line - number = "7818" > < /td>
    < td
id = "LC7818"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7819"
class
= "blob-num js-line-number"
data - line - number = "7819" > < /td>
    < td
id = "LC7819"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof stateVal <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>boolean<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > type < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7820"
class
    = "blob-num js-line-number"
    data - line - number = "7820" > < /td>
        < td
    id = "LC7820"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> stateVal <span class="pl-k">?</s
    pan > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > addClass(value) < span
class
    = "pl-k" >
:<
    /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>removeClass( value );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7821"
class
    = "blob-num js-line-number"
    data - line - number = "7821" > < /td>
        < td
    id = "LC7821"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7822"
class
= "blob-num js-line-number"
data - line - number = "7822" > < /td>
    < td
id = "LC7822"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7823"
class
= "blob-num js-line-number"
data - line - number = "7823" > < /td>
    < td
id = "LC7823"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(value)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7824"
class
    = "blob-num js-line-number"
    data - line - number = "7824" > < /td>
        < td
    id = "LC7824"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>each( function( i ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L7825"
class
    = "blob-num js-line-number"
    data - line - number = "7825" > < /td>
        < td
    id = "LC7825"
class
    = "blob-code blob-code-inner js-file-line" > jQuery( < span
class
    = "pl-c1" > this < /span> )<span class="pl-k">.</s
    pan > toggleClass( < /td>
    < /tr>
    < tr >
    < td
    id = "L7826"
class
    = "blob-num js-line-number"
    data - line - number = "7826" > < /td>
        < td
    id = "LC7826"
class
    = "blob-code blob-code-inner js-file-line" > value < span
class
    = "pl-k" >
.<
    /span>call( <span class="pl-c1">this</s
    pan >, i, getClass( < span
class
    = "pl-c1" > this < /span> ), stateVal ),</
    td >
    < /tr>
    < tr >
    < td
    id = "L7827"
class
    = "blob-num js-line-number"
    data - line - number = "7827" > < /td>
        < td
    id = "LC7827"
class
    = "blob-code blob-code-inner js-file-line" > stateVal < /td>
        < /tr>
        < tr >
        < td
    id = "L7828"
class
    = "blob-num js-line-number"
    data - line - number = "7828" > < /td>
        < td
    id = "LC7828"
class
    = "blob-code blob-code-inner js-file-line" >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7829"
class
    = "blob-num js-line-number"
    data - line - number = "7829" > < /td>
        < td
    id = "LC7829"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7830"
class
= "blob-num js-line-number"
data - line - number = "7830" > < /td>
    < td
id = "LC7830"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7831"
class
= "blob-num js-line-number"
data - line - number = "7831" > < /td>
    < td
id = "LC7831"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7832"
class
= "blob-num js-line-number"
data - line - number = "7832" > < /td>
    < td
id = "LC7832"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L7833"
class
= "blob-num js-line-number"
data - line - number = "7833" > < /td>
    < td
id = "LC7833"
class
= "blob-code blob-code-inner js-file-line" >
var className, i, self, classNames;
<
/td>
< /tr>
< tr >
< td
id = "L7834"
class
= "blob-num js-line-number"
data - line - number = "7834" > < /td>
    < td
id = "LC7834"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7835"
class
= "blob-num js-line-number"
data - line - number = "7835" > < /td>
    < td
id = "LC7835"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7836"
class
= "blob-num js-line-number"
data - line - number = "7836" > < /td>
    < td
id = "LC7836"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7837"
class
= "blob-num js-line-number"
data - line - number = "7837" > < /td>
    < td
id = "LC7837"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Toggle individual class names</span></td>
    < /tr>
    < tr >
    < td
id = "L7838"
class
= "blob-num js-line-number"
data - line - number = "7838" > < /td>
    < td
id = "LC7838"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7839"
class
= "blob-num js-line-number"
data - line - number = "7839" > < /td>
    < td
id = "LC7839"
class
= "blob-code blob-code-inner js-file-line" > self < span
class
= "pl-k" >= < /span> jQuery( <span class="pl-c1">this</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7840"
class
= "blob-num js-line-number"
data - line - number = "7840" > < /td>
    < td
id = "LC7840"
class
= "blob-code blob-code-inner js-file-line" > classNames < span
class
= "pl-k" >= < /span> value<span class="pl-k">.</s
pan > match(rnothtmlwhite) < span
class
= "pl-k" > || < /span> [];</
td >
< /tr>
< tr >
< td
id = "L7841"
class
= "blob-num js-line-number"
data - line - number = "7841" > < /td>
    < td
id = "LC7841"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7842"
class
= "blob-num js-line-number"
data - line - number = "7842" > < /td>
    < td
id = "LC7842"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ( className <span class="pl-k">=</s
pan > classNames[i < span
class
= "pl-k" > ++ < /span> ] ) ) {</
td >
< /tr>
< tr >
< td
id = "L7843"
class
= "blob-num js-line-number"
data - line - number = "7843" > < /td>
    < td
id = "LC7843"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7844"
class
= "blob-num js-line-number"
data - line - number = "7844" > < /td>
    < td
id = "LC7844"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check each className given, space separated list</span></td>
    < /tr>
    < tr >
    < td
id = "L7845"
class
= "blob-num js-line-number"
data - line - number = "7845" > < /td>
    < td
id = "LC7845"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( self<span class="pl-k">.</s
pan > hasClass(className)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7846"
class
    = "blob-num js-line-number"
    data - line - number = "7846" > < /td>
        < td
    id = "LC7846"
class
    = "blob-code blob-code-inner js-file-line" > self < span
class
    = "pl-k" >
.<
    /span>removeClass( className );</
    td >
    < /tr>
    < tr >
    < td
    id = "L7847"
class
    = "blob-num js-line-number"
    data - line - number = "7847" > < /td>
        < td
    id = "LC7847"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7848"
class
= "blob-num js-line-number"
data - line - number = "7848" > < /td>
    < td
id = "LC7848"
class
= "blob-code blob-code-inner js-file-line" > self < span
class
= "pl-k" >
.<
/span>addClass( className );</
td >
< /tr>
< tr >
< td
id = "L7849"
class
= "blob-num js-line-number"
data - line - number = "7849" > < /td>
    < td
id = "LC7849"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7850"
class
= "blob-num js-line-number"
data - line - number = "7850" > < /td>
    < td
id = "LC7850"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7851"
class
= "blob-num js-line-number"
data - line - number = "7851" > < /td>
    < td
id = "LC7851"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7852"
class
= "blob-num js-line-number"
data - line - number = "7852" > < /td>
    < td
id = "LC7852"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Toggle whole class name</span></td>
    < /tr>
    < tr >
    < td
id = "L7853"
class
= "blob-num js-line-number"
data - line - number = "7853" > < /td>
    < td
id = "LC7853"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (value < span
class
= "pl-k" >= == < /span> undefined <span class="pl-k">||</s
pan > type < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > boolean < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7854"
class
    = "blob-num js-line-number"
    data - line - number = "7854" > < /td>
        < td
    id = "LC7854"
class
    = "blob-code blob-code-inner js-file-line" > className < span
class
    = "pl-k" >= < /span> getClass( <span class="pl-c1">this</s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7855"
class
= "blob-num js-line-number"
data - line - number = "7855" > < /td>
    < td
id = "LC7855"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( className ) {</
td >
< /tr>
< tr >
< td
id = "L7856"
class
= "blob-num js-line-number"
data - line - number = "7856" > < /td>
    < td
id = "LC7856"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7857"
class
= "blob-num js-line-number"
data - line - number = "7857" > < /td>
    < td
id = "LC7857"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Store className if set</span></td>
    < /tr>
    < tr >
    < td
id = "L7858"
class
= "blob-num js-line-number"
data - line - number = "7858" > < /td>
    < td
id = "LC7858"
class
= "blob-code blob-code-inner js-file-line" > dataPriv < span
class
= "pl-k" >
.<
/span>set( <span class="pl-c1">this</s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>__className__<span class="pl-pds">&quot;</s
pan > < /span>, className );</
td >
< /tr>
< tr >
< td
id = "L7859"
class
= "blob-num js-line-number"
data - line - number = "7859" > < /td>
    < td
id = "LC7859"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7860"
class
= "blob-num js-line-number"
data - line - number = "7860" > < /td>
    < td
id = "LC7860"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7861"
class
= "blob-num js-line-number"
data - line - number = "7861" > < /td>
    < td
id = "LC7861"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If the element has a class name or if we&#39;re passed `false`,</span></td>
    < /tr>
    < tr >
    < td
id = "L7862"
class
= "blob-num js-line-number"
data - line - number = "7862" > < /td>
    < td
id = "LC7862"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> then remove the whole classname (if there was one, the above saved it).</span></td>
    < /tr>
    < tr >
    < td
id = "L7863"
class
= "blob-num js-line-number"
data - line - number = "7863" > < /td>
    < td
id = "LC7863"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise bring back whatever was previously saved (if anything),</span></td>
    < /tr>
    < tr >
    < td
id = "L7864"
class
= "blob-num js-line-number"
data - line - number = "7864" > < /td>
    < td
id = "LC7864"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> falling back to the empty string if nothing was stored.</span></td>
    < /tr>
    < tr >
    < td
id = "L7865"
class
= "blob-num js-line-number"
data - line - number = "7865" > < /td>
    < td
id = "LC7865"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>setAttribute ) {</
td >
< /tr>
< tr >
< td
id = "L7866"
class
= "blob-num js-line-number"
data - line - number = "7866" > < /td>
    < td
id = "LC7866"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > setAttribute( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>class<span class="pl-pds">&quot;</s
pan > < /span>,</
td >
< /tr>
< tr >
< td
id = "L7867"
class
= "blob-num js-line-number"
data - line - number = "7867" > < /td>
    < td
id = "LC7867"
class
= "blob-code blob-code-inner js-file-line" > className < span
class
= "pl-k" > || < /span> value <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7868"
class
= "blob-num js-line-number"
data - line - number = "7868" > < /td>
    < td
id = "LC7868"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7869"
class
= "blob-num js-line-number"
data - line - number = "7869" > < /td>
    < td
id = "LC7869"
class
= "blob-code blob-code-inner js-file-line" > dataPriv < span
class
= "pl-k" >
.<
/span>get( <span class="pl-c1">this</s
pan >,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>__className__<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span></
td >
< /tr>
< tr >
< td
id = "L7870"
class
= "blob-num js-line-number"
data - line - number = "7870" > < /td>
    < td
id = "LC7870"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7871"
class
= "blob-num js-line-number"
data - line - number = "7871" > < /td>
    < td
id = "LC7871"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7872"
class
= "blob-num js-line-number"
data - line - number = "7872" > < /td>
    < td
id = "LC7872"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7873"
class
= "blob-num js-line-number"
data - line - number = "7873" > < /td>
    < td
id = "LC7873"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7874"
class
= "blob-num js-line-number"
data - line - number = "7874" > < /td>
    < td
id = "LC7874"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7875"
class
= "blob-num js-line-number"
data - line - number = "7875" > < /td>
    < td
id = "LC7875"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7876"
class
= "blob-num js-line-number"
data - line - number = "7876" > < /td>
    < td
id = "LC7876"
class
= "blob-code blob-code-inner js-file-line" > hasClass < span
class
= "pl-k" >
:<
/span> function( selector ) {</
td >
< /tr>
< tr >
< td
id = "L7877"
class
= "blob-num js-line-number"
data - line - number = "7877" > < /td>
    < td
id = "LC7877"
class
= "blob-code blob-code-inner js-file-line" >
var className, elem, <
/td>
< /tr>
< tr >
< td
id = "L7878"
class
= "blob-num js-line-number"
data - line - number = "7878" > < /td>
    < td
id = "LC7878"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7879"
class
= "blob-num js-line-number"
data - line - number = "7879" > < /td>
    < td
id = "LC7879"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7880"
class
= "blob-num js-line-number"
data - line - number = "7880" > < /td>
    < td
id = "LC7880"
class
= "blob-code blob-code-inner js-file-line" > className < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> selector <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L7881"
class
= "blob-num js-line-number"
data - line - number = "7881" > < /td>
    < td
id = "LC7881"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ( elem <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > this < /span>[ i<span class="pl-k">++</span> ] ) ) {</
td >
< /tr>
< tr >
< td
id = "L7882"
class
= "blob-num js-line-number"
data - line - number = "7882" > < /td>
    < td
id = "LC7882"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L7883"
class
= "blob-num js-line-number"
data - line - number = "7883" > < /td>
    < td
id = "LC7883"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > stripAndCollapse(getClass(elem)) < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)<
span
class
= "pl-k" >
.<
/span>indexOf( className ) <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7884"
class
    = "blob-num js-line-number"
    data - line - number = "7884" > < /td>
        < td
    id = "LC7884"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7885"
class
    = "blob-num js-line-number"
    data - line - number = "7885" > < /td>
        < td
    id = "LC7885"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7886"
class
= "blob-num js-line-number"
data - line - number = "7886" > < /td>
    < td
id = "LC7886"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7887"
class
= "blob-num js-line-number"
data - line - number = "7887" > < /td>
    < td
id = "LC7887"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7888"
class
= "blob-num js-line-number"
data - line - number = "7888" > < /td>
    < td
id = "LC7888"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7889"
class
= "blob-num js-line-number"
data - line - number = "7889" > < /td>
    < td
id = "LC7889"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7890"
class
= "blob-num js-line-number"
data - line - number = "7890" > < /td>
    < td
id = "LC7890"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7891"
class
= "blob-num js-line-number"
data - line - number = "7891" > < /td>
    < td
id = "LC7891"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7892"
class
= "blob-num js-line-number"
data - line - number = "7892" > < /td>
    < td
id = "LC7892"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7893"
class
= "blob-num js-line-number"
data - line - number = "7893" > < /td>
    < td
id = "LC7893"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7894"
class
= "blob-num js-line-number"
data - line - number = "7894" > < /td>
    < td
id = "LC7894"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7895"
class
= "blob-num js-line-number"
data - line - number = "7895" > < /td>
    < td
id = "LC7895"
class
= "blob-code blob-code-inner js-file-line" >
var rreturn
<
span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>\r<span class="pl-k">/ < /span>g;</
td >
< /tr>
< tr >
< td
id = "L7896"
class
= "blob-num js-line-number"
data - line - number = "7896" > < /td>
    < td
id = "LC7896"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7897"
class
= "blob-num js-line-number"
data - line - number = "7897" > < /td>
    < td
id = "LC7897"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L7898"
class
= "blob-num js-line-number"
data - line - number = "7898" > < /td>
    < td
id = "LC7898"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >
:<
/span> function( value ) {</
td >
< /tr>
< tr >
< td
id = "L7899"
class
= "blob-num js-line-number"
data - line - number = "7899" > < /td>
    < td
id = "LC7899"
class
= "blob-code blob-code-inner js-file-line" >
var hooks, ret, isFunction, <
/td>
< /tr>
< tr >
< td
id = "L7900"
class
= "blob-num js-line-number"
data - line - number = "7900" > < /td>
    < td
id = "LC7900"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > [ < span
class
= "pl-c1" > 0 < /span> ];</
td >
< /tr>
< tr >
< td
id = "L7901"
class
= "blob-num js-line-number"
data - line - number = "7901" > < /td>
    < td
id = "LC7901"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7902"
class
= "blob-num js-line-number"
data - line - number = "7902" > < /td>
    < td
id = "LC7902"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > arguments < span
class
= "pl-k" >
.<
/span>length ) {</
td >
< /tr>
< tr >
< td
id = "L7903"
class
= "blob-num js-line-number"
data - line - number = "7903" > < /td>
    < td
id = "LC7903"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem ) {</
td >
< /tr>
< tr >
< td
id = "L7904"
class
= "blob-num js-line-number"
data - line - number = "7904" > < /td>
    < td
id = "LC7904"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > valHooks[elem < span
class
= "pl-k" >
.<
/span>type ] <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7905"
class
= "blob-num js-line-number"
data - line - number = "7905" > < /td>
    < td
id = "LC7905"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>valHooks[ elem<span class="pl-k">.</span>nodeName<span class="pl-k">.</span>toLowerCase() ];</
td >
< /tr>
< tr >
< td
id = "L7906"
class
= "blob-num js-line-number"
data - line - number = "7906" > < /td>
    < td
id = "LC7906"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7907"
class
= "blob-num js-line-number"
data - line - number = "7907" > < /td>
    < td
id = "LC7907"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( hooks <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7908"
class
= "blob-num js-line-number"
data - line - number = "7908" > < /td>
    < td
id = "LC7908"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>get<span class="pl-pds">&quot;</s
pan > < /span> in hooks <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7909"
class
= "blob-num js-line-number"
data - line - number = "7909" > < /td>
    < td
id = "LC7909"
class
= "blob-code blob-code-inner js-file-line" > (ret < span
class
= "pl-k" >= < /span> hooks<span class="pl-k">.</s
pan > get(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>value<span class="pl-pds">&quot;</s
pan > < /span> ) ) <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> undefined</
td >
< /tr>
< tr >
< td
id = "L7910"
class
= "blob-num js-line-number"
data - line - number = "7910" > < /td>
    < td
id = "LC7910"
class
= "blob-code blob-code-inner js-file-line" >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7911"
class
    = "blob-num js-line-number"
    data - line - number = "7911" > < /td>
        < td
    id = "LC7911"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> ret;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7912"
class
    = "blob-num js-line-number"
    data - line - number = "7912" > < /td>
        < td
    id = "LC7912"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7913"
class
= "blob-num js-line-number"
data - line - number = "7913" > < /td>
    < td
id = "LC7913"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7914"
class
= "blob-num js-line-number"
data - line - number = "7914" > < /td>
    < td
id = "LC7914"
class
= "blob-code blob-code-inner js-file-line" > ret < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > value;
<
/td>
< /tr>
< tr >
< td
id = "L7915"
class
= "blob-num js-line-number"
data - line - number = "7915" > < /td>
    < td
id = "LC7915"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7916"
class
= "blob-num js-line-number"
data - line - number = "7916" > < /td>
    < td
id = "LC7916"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle most common string cases</span></td>
    < /tr>
    < tr >
    < td
id = "L7917"
class
= "blob-num js-line-number"
data - line - number = "7917" > < /td>
    < td
id = "LC7917"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof ret <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7918"
class
= "blob-num js-line-number"
data - line - number = "7918" > < /td>
    < td
id = "LC7918"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret<span class="pl-k">.</s
pan > replace(rreturn, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L7919"
class
= "blob-num js-line-number"
data - line - number = "7919" > < /td>
    < td
id = "LC7919"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7920"
class
= "blob-num js-line-number"
data - line - number = "7920" > < /td>
    < td
id = "LC7920"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7921"
class
= "blob-num js-line-number"
data - line - number = "7921" > < /td>
    < td
id = "LC7921"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle cases where value is null/undef or number</span></td>
    < /tr>
    < tr >
    < td
id = "L7922"
class
= "blob-num js-line-number"
data - line - number = "7922" > < /td>
    < td
id = "LC7922"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> ret <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > ret;
<
/td>
< /tr>
< tr >
< td
id = "L7923"
class
= "blob-num js-line-number"
data - line - number = "7923" > < /td>
    < td
id = "LC7923"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7924"
class
= "blob-num js-line-number"
data - line - number = "7924" > < /td>
    < td
id = "LC7924"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7925"
class
= "blob-num js-line-number"
data - line - number = "7925" > < /td>
    < td
id = "LC7925"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L7926"
class
= "blob-num js-line-number"
data - line - number = "7926" > < /td>
    < td
id = "LC7926"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7927"
class
= "blob-num js-line-number"
data - line - number = "7927" > < /td>
    < td
id = "LC7927"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7928"
class
= "blob-num js-line-number"
data - line - number = "7928" > < /td>
    < td
id = "LC7928"
class
= "blob-code blob-code-inner js-file-line" > isFunction < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > isFunction(value);
<
/td>
< /tr>
< tr >
< td
id = "L7929"
class
= "blob-num js-line-number"
data - line - number = "7929" > < /td>
    < td
id = "LC7929"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7930"
class
= "blob-num js-line-number"
data - line - number = "7930" > < /td>
    < td
id = "LC7930"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function( i ) {</
td >
< /tr>
< tr >
< td
id = "L7931"
class
= "blob-num js-line-number"
data - line - number = "7931" > < /td>
    < td
id = "LC7931"
class
= "blob-code blob-code-inner js-file-line" >
var val;
<
/td>
< /tr>
< tr >
< td
id = "L7932"
class
= "blob-num js-line-number"
data - line - number = "7932" > < /td>
    < td
id = "LC7932"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7933"
class
= "blob-num js-line-number"
data - line - number = "7933" > < /td>
    < td
id = "LC7933"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7934"
class
    = "blob-num js-line-number"
    data - line - number = "7934" > < /td>
        < td
    id = "LC7934"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7935"
class
    = "blob-num js-line-number"
    data - line - number = "7935" > < /td>
        < td
    id = "LC7935"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7936"
class
= "blob-num js-line-number"
data - line - number = "7936" > < /td>
    < td
id = "LC7936"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7937"
class
= "blob-num js-line-number"
data - line - number = "7937" > < /td>
    < td
id = "LC7937"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( isFunction ) {</
td >
< /tr>
< tr >
< td
id = "L7938"
class
= "blob-num js-line-number"
data - line - number = "7938" > < /td>
    < td
id = "LC7938"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >= < /span> value<span class="pl-k">.</s
pan > call( < span
class
= "pl-c1" > this < /span>, i, jQuery( <span class="pl-c1">this</s
pan >
)<
span
class
= "pl-k" >
.<
/span>val() );</
td >
< /tr>
< tr >
< td
id = "L7939"
class
= "blob-num js-line-number"
data - line - number = "7939" > < /td>
    < td
id = "LC7939"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7940"
class
= "blob-num js-line-number"
data - line - number = "7940" > < /td>
    < td
id = "LC7940"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >= < /span> value;</
td >
< /tr>
< tr >
< td
id = "L7941"
class
= "blob-num js-line-number"
data - line - number = "7941" > < /td>
    < td
id = "LC7941"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7942"
class
= "blob-num js-line-number"
data - line - number = "7942" > < /td>
    < td
id = "LC7942"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7943"
class
= "blob-num js-line-number"
data - line - number = "7943" > < /td>
    < td
id = "LC7943"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Treat null/undefined as &quot;&quot;; convert numbers to string</span></td>
    < /tr>
    < tr >
    < td
id = "L7944"
class
= "blob-num js-line-number"
data - line - number = "7944" > < /td>
    < td
id = "LC7944"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( val <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7945"
class
= "blob-num js-line-number"
data - line - number = "7945" > < /td>
    < td
id = "LC7945"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7946"
class
= "blob-num js-line-number"
data - line - number = "7946" > < /td>
    < td
id = "LC7946"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7947"
class
= "blob-num js-line-number"
data - line - number = "7947" > < /td>
    < td
id = "LC7947"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (typeof val < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > number < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7948"
class
    = "blob-num js-line-number"
    data - line - number = "7948" > < /td>
        < td
    id = "LC7948"
class
    = "blob-code blob-code-inner js-file-line" > val < span
class
    = "pl-k" > +=
<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7949"
class
    = "blob-num js-line-number"
    data - line - number = "7949" > < /td>
        < td
    id = "LC7949"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L7950"
class
    = "blob-num js-line-number"
    data - line - number = "7950" > < /td>
        < td
    id = "LC7950"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (jQuery < span
class
= "pl-k" >
.<
/span>isArray( val ) ) {</
td >
< /tr>
< tr >
< td
id = "L7951"
class
= "blob-num js-line-number"
data - line - number = "7951" > < /td>
    < td
id = "LC7951"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > map(val, function (value) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7952"
class
    = "blob-num js-line-number"
    data - line - number = "7952" > < /td>
        < td
    id = "LC7952"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> value <span class="pl-k">==</s
    pan > < span
class
    = "pl-c1" > null < /span> <span class="pl-k">?</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span><span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">:</s
    pan > value < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7953"
class
    = "blob-num js-line-number"
    data - line - number = "7953" > < /td>
        < td
    id = "LC7953"
class
    = "blob-code blob-code-inner js-file-line" >
});
<
/td>
< /tr>
< tr >
< td
id = "L7954"
class
= "blob-num js-line-number"
data - line - number = "7954" > < /td>
    < td
id = "LC7954"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7955"
class
= "blob-num js-line-number"
data - line - number = "7955" > < /td>
    < td
id = "LC7955"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7956"
class
= "blob-num js-line-number"
data - line - number = "7956" > < /td>
    < td
id = "LC7956"
class
= "blob-code blob-code-inner js-file-line" > hooks < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > valHooks[ < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > type
] <
span
class
= "pl-k" > || < /span> jQuery<span class="pl-k">.</s
pan > valHooks[ < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > nodeName < span
class
= "pl-k" >
.<
/span>toLowerCase() ];</
td >
< /tr>
< tr >
< td
id = "L7957"
class
= "blob-num js-line-number"
data - line - number = "7957" > < /td>
    < td
id = "LC7957"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7958"
class
= "blob-num js-line-number"
data - line - number = "7958" > < /td>
    < td
id = "LC7958"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If set returns undefined, fall back to normal setting</span></td>
    < /tr>
    < tr >
    < td
id = "L7959"
class
= "blob-num js-line-number"
data - line - number = "7959" > < /td>
    < td
id = "LC7959"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > hooks < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>set<span class="pl-pds">&quot;</s
pan > < /span> in hooks ) <span class="pl-k">||</s
pan > hooks < span
class
= "pl-k" >
.<
/span>set( <span class="pl-c1">this</s
pan >, val,
<
span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>value<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">===</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L7960"
class
    = "blob-num js-line-number"
    data - line - number = "7960" > < /td>
        < td
    id = "LC7960"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > value < span
class
    = "pl-k" >= < /span> val;</
    td >
    < /tr>
    < tr >
    < td
    id = "L7961"
class
    = "blob-num js-line-number"
    data - line - number = "7961" > < /td>
        < td
    id = "LC7961"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L7962"
class
= "blob-num js-line-number"
data - line - number = "7962" > < /td>
    < td
id = "LC7962"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7963"
class
= "blob-num js-line-number"
data - line - number = "7963" > < /td>
    < td
id = "LC7963"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7964"
class
= "blob-num js-line-number"
data - line - number = "7964" > < /td>
    < td
id = "LC7964"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L7965"
class
= "blob-num js-line-number"
data - line - number = "7965" > < /td>
    < td
id = "LC7965"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7966"
class
= "blob-num js-line-number"
data - line - number = "7966" > < /td>
    < td
id = "LC7966"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L7967"
class
= "blob-num js-line-number"
data - line - number = "7967" > < /td>
    < td
id = "LC7967"
class
= "blob-code blob-code-inner js-file-line" > valHooks < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7968"
class
= "blob-num js-line-number"
data - line - number = "7968" > < /td>
    < td
id = "LC7968"
class
= "blob-code blob-code-inner js-file-line" > option < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7969"
class
= "blob-num js-line-number"
data - line - number = "7969" > < /td>
    < td
id = "LC7969"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L7970"
class
= "blob-num js-line-number"
data - line - number = "7970" > < /td>
    < td
id = "LC7970"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7971"
class
= "blob-num js-line-number"
data - line - number = "7971" > < /td>
    < td
id = "LC7971"
class
= "blob-code blob-code-inner js-file-line" >
var val
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > find < span
class
= "pl-k" >
.<
/span>attr( elem, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > value < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L7972"
class
= "blob-num js-line-number"
data - line - number = "7972" > < /td>
    < td
id = "LC7972"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> val <span class="pl-k">!=</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L7973"
class
= "blob-num js-line-number"
data - line - number = "7973" > < /td>
    < td
id = "LC7973"
class
= "blob-code blob-code-inner js-file-line" > val < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L7974"
class
= "blob-num js-line-number"
data - line - number = "7974" > < /td>
    < td
id = "LC7974"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7975"
class
= "blob-num js-line-number"
data - line - number = "7975" > < /td>
    < td
id = "LC7975"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=10 - 11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L7976"
class
= "blob-num js-line-number"
data - line - number = "7976" > < /td>
    < td
id = "LC7976"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> option.text throws exceptions (#14686, #14858)</span></td>
    < /tr>
    < tr >
    < td
id = "L7977"
class
= "blob-num js-line-number"
data - line - number = "7977" > < /td>
    < td
id = "LC7977"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Strip and collapse whitespace</span></td>
    < /tr>
    < tr >
    < td
id = "L7978"
class
= "blob-num js-line-number"
data - line - number = "7978" > < /td>
    < td
id = "LC7978"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://html.spec.whatwg.org/#strip-and-collapse-whitespace</span></td>
    < /tr>
    < tr >
    < td
id = "L7979"
class
= "blob-num js-line-number"
data - line - number = "7979" > < /td>
    < td
id = "LC7979"
class
= "blob-code blob-code-inner js-file-line" > stripAndCollapse(jQuery < span
class
= "pl-k" >
.<
/span>text( elem ) );</
td >
< /tr>
< tr >
< td
id = "L7980"
class
= "blob-num js-line-number"
data - line - number = "7980" > < /td>
    < td
id = "LC7980"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7981"
class
= "blob-num js-line-number"
data - line - number = "7981" > < /td>
    < td
id = "LC7981"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L7982"
class
= "blob-num js-line-number"
data - line - number = "7982" > < /td>
    < td
id = "LC7982"
class
= "blob-code blob-code-inner js-file-line" > select < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7983"
class
= "blob-num js-line-number"
data - line - number = "7983" > < /td>
    < td
id = "LC7983"
class
= "blob-code blob-code-inner js-file-line" > get < span
class
= "pl-k" >
:<
/span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L7984"
class
= "blob-num js-line-number"
data - line - number = "7984" > < /td>
    < td
id = "LC7984"
class
= "blob-code blob-code-inner js-file-line" >
var value, option, i, <
/td>
< /tr>
< tr >
< td
id = "L7985"
class
= "blob-num js-line-number"
data - line - number = "7985" > < /td>
    < td
id = "LC7985"
class
= "blob-code blob-code-inner js-file-line" > options < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > options,
<
/td>
< /tr>
< tr >
< td
id = "L7986"
class
= "blob-num js-line-number"
data - line - number = "7986" > < /td>
    < td
id = "LC7986"
class
= "blob-code blob-code-inner js-file-line" > index < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > selectedIndex,
<
/td>
< /tr>
< tr >
< td
id = "L7987"
class
= "blob-num js-line-number"
data - line - number = "7987" > < /td>
    < td
id = "LC7987"
class
= "blob-code blob-code-inner js-file-line" > one < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > type < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > select - one < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L7988"
class
= "blob-num js-line-number"
data - line - number = "7988" > < /td>
    < td
id = "LC7988"
class
= "blob-code blob-code-inner js-file-line" > values < span
class
= "pl-k" >= < /span> one <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">:</s
pan > [],
<
/td>
< /tr>
< tr >
< td
id = "L7989"
class
= "blob-num js-line-number"
data - line - number = "7989" > < /td>
    < td
id = "LC7989"
class
= "blob-code blob-code-inner js-file-line" > max < span
class
= "pl-k" >= < /span> one <span class="pl-k">?</s
pan > index < span
class
= "pl-k" > + < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" >
:<
/span> options<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L7990"
class
= "blob-num js-line-number"
data - line - number = "7990" > < /td>
    < td
id = "LC7990"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7991"
class
= "blob-num js-line-number"
data - line - number = "7991" > < /td>
    < td
id = "LC7991"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( index <span class="pl-k">&lt;</s
pan > < span
class
= "pl-c1" > 0 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L7992"
class
= "blob-num js-line-number"
data - line - number = "7992" > < /td>
    < td
id = "LC7992"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> max;</
td >
< /tr>
< tr >
< td
id = "L7993"
class
= "blob-num js-line-number"
data - line - number = "7993" > < /td>
    < td
id = "LC7993"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7994"
class
= "blob-num js-line-number"
data - line - number = "7994" > < /td>
    < td
id = "LC7994"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L7995"
class
= "blob-num js-line-number"
data - line - number = "7995" > < /td>
    < td
id = "LC7995"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> one <span class="pl-k">?</s
pan > index < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L7996"
class
= "blob-num js-line-number"
data - line - number = "7996" > < /td>
    < td
id = "LC7996"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L7997"
class
= "blob-num js-line-number"
data - line - number = "7997" > < /td>
    < td
id = "LC7997"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L7998"
class
= "blob-num js-line-number"
data - line - number = "7998" > < /td>
    < td
id = "LC7998"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Loop through all the selected options</span></td>
    < /tr>
    < tr >
    < td
id = "L7999"
class
= "blob-num js-line-number"
data - line - number = "7999" > < /td>
    < td
id = "LC7999"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; i <span class="pl-k">&lt;</s
pan > max;
i < span
class
= "pl-k" > ++ < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L8000"
class
= "blob-num js-line-number"
data - line - number = "8000" > < /td>
    < td
id = "LC8000"
class
= "blob-code blob-code-inner js-file-line" > option < span
class
= "pl-k" >= < /span> options[ i ];</
td >
< /tr>
< tr >
< td
id = "L8001"
class
= "blob-num js-line-number"
data - line - number = "8001" > < /td>
    < td
id = "LC8001"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8002"
class
= "blob-num js-line-number"
data - line - number = "8002" > < /td>
    < td
id = "LC8002"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L8003"
class
= "blob-num js-line-number"
data - line - number = "8003" > < /td>
    < td
id = "LC8003"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> IE8-9 doesn&#39;t update selected after form reset (#2551)</span></td>
    < /tr>
    < tr >
    < td
id = "L8004"
class
= "blob-num js-line-number"
data - line - number = "8004" > < /td>
    < td
id = "LC8004"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ( option<span class="pl-k">.</s
pan > selected < span
class
= "pl-k" > || < /span> i <span class="pl-k">===</s
pan > index
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L8005"
class
= "blob-num js-line-number"
data - line - number = "8005" > < /td>
    < td
id = "LC8005"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8006"
class
= "blob-num js-line-number"
data - line - number = "8006" > < /td>
    < td
id = "LC8006"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t return options that are disabled or in a disabled optgroup</span></td>
    < /tr>
    < tr >
    < td
id = "L8007"
class
= "blob-num js-line-number"
data - line - number = "8007" > < /td>
    < td
id = "LC8007"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>option<span class="pl-k">.</s
pan > disabled < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L8008"
class
= "blob-num js-line-number"
data - line - number = "8008" > < /td>
    < td
id = "LC8008"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-k" > ! < /span>option<span class="pl-k">.</s
pan > parentNode < span
class
= "pl-k" >
.<
/span>disabled <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8009"
class
= "blob-num js-line-number"
data - line - number = "8009" > < /td>
    < td
id = "LC8009"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>jQuery<span class="pl-k">.</s
pan > nodeName(option < span
class
= "pl-k" >
.<
/span>parentNode, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > optgroup < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) ) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8010"
class
    = "blob-num js-line-number"
    data - line - number = "8010" > < /td>
        < td
    id = "LC8010"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8011"
class
    = "blob-num js-line-number"
    data - line - number = "8011" > < /td>
        < td
    id = "LC8011"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Get the specific value for the option</span></td>
        < /tr>
        < tr >
        < td
    id = "L8012"
class
    = "blob-num js-line-number"
    data - line - number = "8012" > < /td>
        < td
    id = "LC8012"
class
    = "blob-code blob-code-inner js-file-line" > value < span
class
    = "pl-k" >= < /span> jQuery( option )<span class="pl-k">.</s
    pan > val();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8013"
class
    = "blob-num js-line-number"
    data - line - number = "8013" > < /td>
        < td
    id = "LC8013"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8014"
class
    = "blob-num js-line-number"
    data - line - number = "8014" > < /td>
        < td
    id = "LC8014"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> We don&#39;t need an array for one selects</span></td>
        < /tr>
        < tr >
        < td
    id = "L8015"
class
    = "blob-num js-line-number"
    data - line - number = "8015" > < /td>
        < td
    id = "LC8015"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( one ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8016"
class
    = "blob-num js-line-number"
    data - line - number = "8016" > < /td>
        < td
    id = "LC8016"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> value;</
    td >
    < /tr>
    < tr >
    < td
    id = "L8017"
class
    = "blob-num js-line-number"
    data - line - number = "8017" > < /td>
        < td
    id = "LC8017"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8018"
class
= "blob-num js-line-number"
data - line - number = "8018" > < /td>
    < td
id = "LC8018"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8019"
class
= "blob-num js-line-number"
data - line - number = "8019" > < /td>
    < td
id = "LC8019"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Multi-Selects return an array</span></td>
    < /tr>
    < tr >
    < td
id = "L8020"
class
= "blob-num js-line-number"
data - line - number = "8020" > < /td>
    < td
id = "LC8020"
class
= "blob-code blob-code-inner js-file-line" > values < span
class
= "pl-k" >
.<
/span>push( value );</
td >
< /tr>
< tr >
< td
id = "L8021"
class
= "blob-num js-line-number"
data - line - number = "8021" > < /td>
    < td
id = "LC8021"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8022"
class
= "blob-num js-line-number"
data - line - number = "8022" > < /td>
    < td
id = "LC8022"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8023"
class
= "blob-num js-line-number"
data - line - number = "8023" > < /td>
    < td
id = "LC8023"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8024"
class
= "blob-num js-line-number"
data - line - number = "8024" > < /td>
    < td
id = "LC8024"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> values;</
td >
< /tr>
< tr >
< td
id = "L8025"
class
= "blob-num js-line-number"
data - line - number = "8025" > < /td>
    < td
id = "LC8025"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8026"
class
= "blob-num js-line-number"
data - line - number = "8026" > < /td>
    < td
id = "LC8026"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8027"
class
= "blob-num js-line-number"
data - line - number = "8027" > < /td>
    < td
id = "LC8027"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( elem, value ) {</
td >
< /tr>
< tr >
< td
id = "L8028"
class
= "blob-num js-line-number"
data - line - number = "8028" > < /td>
    < td
id = "LC8028"
class
= "blob-code blob-code-inner js-file-line" >
var optionSet, option, <
/td>
< /tr>
< tr >
< td
id = "L8029"
class
= "blob-num js-line-number"
data - line - number = "8029" > < /td>
    < td
id = "LC8029"
class
= "blob-code blob-code-inner js-file-line" > options < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > options,
<
/td>
< /tr>
< tr >
< td
id = "L8030"
class
= "blob-num js-line-number"
data - line - number = "8030" > < /td>
    < td
id = "LC8030"
class
= "blob-code blob-code-inner js-file-line" > values < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > makeArray(value),
<
/td>
< /tr>
< tr >
< td
id = "L8031"
class
= "blob-num js-line-number"
data - line - number = "8031" > < /td>
    < td
id = "LC8031"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> options<span class="pl-k">.</s
pan > length;
<
/td>
< /tr>
< tr >
< td
id = "L8032"
class
= "blob-num js-line-number"
data - line - number = "8032" > < /td>
    < td
id = "LC8032"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8033"
class
= "blob-num js-line-number"
data - line - number = "8033" > < /td>
    < td
id = "LC8033"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( i<span class="pl-k">--</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8034"
class
    = "blob-num js-line-number"
    data - line - number = "8034" > < /td>
        < td
    id = "LC8034"
class
    = "blob-code blob-code-inner js-file-line" > option < span
class
    = "pl-k" >= < /span> options[ i ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L8035"
class
    = "blob-num js-line-number"
    data - line - number = "8035" > < /td>
        < td
    id = "LC8035"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8036"
class
    = "blob-num js-line-number"
    data - line - number = "8036" > < /td>
        < td
    id = "LC8036"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >/*</span> eslint-disable no-cond-assign <span class="pl-c">*/ < /span></s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L8037"
class
    = "blob-num js-line-number"
    data - line - number = "8037" > < /td>
        < td
    id = "LC8037"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8038"
class
    = "blob-num js-line-number"
    data - line - number = "8038" > < /td>
        < td
    id = "LC8038"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( option<span class="pl-k">.</s
    pan > selected < span
class
    = "pl-k" >= < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L8039"
class
    = "blob-num js-line-number"
    data - line - number = "8039" > < /td>
        < td
    id = "LC8039"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>inArray( jQuery<span class="pl-k">.</s
    pan > valHooks < span
class
    = "pl-k" >
.<
    /span>option<span class="pl-k">.</s
    pan > get(option), values
)
<
span
class
= "pl-k" > &gt; < /span> <span class="pl-k">-</s
pan > < span
class
= "pl-c1" > 1 < /span></
td >
< /tr>
< tr >
< td
id = "L8040"
class
= "blob-num js-line-number"
data - line - number = "8040" > < /td>
    < td
id = "LC8040"
class
= "blob-code blob-code-inner js-file-line" >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8041"
class
    = "blob-num js-line-number"
    data - line - number = "8041" > < /td>
        < td
    id = "LC8041"
class
    = "blob-code blob-code-inner js-file-line" > optionSet < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8042"
class
    = "blob-num js-line-number"
    data - line - number = "8042" > < /td>
        < td
    id = "LC8042"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8043"
class
= "blob-num js-line-number"
data - line - number = "8043" > < /td>
    < td
id = "LC8043"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8044"
class
= "blob-num js-line-number"
data - line - number = "8044" > < /td>
    < td
id = "LC8044"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> eslint-enable no-cond-assign <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L8045"
class
= "blob-num js-line-number"
data - line - number = "8045" > < /td>
    < td
id = "LC8045"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8046"
class
= "blob-num js-line-number"
data - line - number = "8046" > < /td>
    < td
id = "LC8046"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8047"
class
= "blob-num js-line-number"
data - line - number = "8047" > < /td>
    < td
id = "LC8047"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Force browsers to behave consistently when non-matching value is set</span></td>
    < /tr>
    < tr >
    < td
id = "L8048"
class
= "blob-num js-line-number"
data - line - number = "8048" > < /td>
    < td
id = "LC8048"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > optionSet
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8049"
class
    = "blob-num js-line-number"
    data - line - number = "8049" > < /td>
        < td
    id = "LC8049"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>selectedIndex <span class="pl-k">=</s
    pan > < span
class
    = "pl-k" > - < /span><span class="pl-c1">1</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8050"
class
    = "blob-num js-line-number"
    data - line - number = "8050" > < /td>
        < td
    id = "LC8050"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8051"
class
= "blob-num js-line-number"
data - line - number = "8051" > < /td>
    < td
id = "LC8051"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> values;</
td >
< /tr>
< tr >
< td
id = "L8052"
class
= "blob-num js-line-number"
data - line - number = "8052" > < /td>
    < td
id = "LC8052"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8053"
class
= "blob-num js-line-number"
data - line - number = "8053" > < /td>
    < td
id = "LC8053"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8054"
class
= "blob-num js-line-number"
data - line - number = "8054" > < /td>
    < td
id = "LC8054"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8055"
class
= "blob-num js-line-number"
data - line - number = "8055" > < /td>
    < td
id = "LC8055"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8056"
class
= "blob-num js-line-number"
data - line - number = "8056" > < /td>
    < td
id = "LC8056"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8057"
class
= "blob-num js-line-number"
data - line - number = "8057" > < /td>
    < td
id = "LC8057"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Radios and checkboxes getter/setter</span></td>
    < /tr>
    < tr >
    < td
id = "L8058"
class
= "blob-num js-line-number"
data - line - number = "8058" > < /td>
    < td
id = "LC8058"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( [ <span class="pl-s"><span class="pl-pds">&quot;</span>radio<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>checkbox<span class="pl-pds">&quot;</span></span> ], function() {</
td >
< /tr>
< tr >
< td
id = "L8059"
class
= "blob-num js-line-number"
data - line - number = "8059" > < /td>
    < td
id = "LC8059"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>valHooks[ <span class="pl-c1">this</span> ] <span class="pl-k">=</s
pan > { < /td>
< /tr>
< tr >
< td
id = "L8060"
class
= "blob-num js-line-number"
data - line - number = "8060" > < /td>
    < td
id = "LC8060"
class
= "blob-code blob-code-inner js-file-line" > set < span
class
= "pl-k" >
:<
/span> function( elem, value ) {</
td >
< /tr>
< tr >
< td
id = "L8061"
class
= "blob-num js-line-number"
data - line - number = "8061" > < /td>
    < td
id = "LC8061"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isArray(value)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8062"
class
    = "blob-num js-line-number"
    data - line - number = "8062" > < /td>
        < td
    id = "LC8062"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> ( elem<span class="pl-k">.</s
    pan > checked < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > inArray(jQuery(elem) < span
class
    = "pl-k" >
.<
    /span>val(), value ) <span class="pl-k">&gt;</s
    pan > < span
class
    = "pl-k" > - < /span><span class="pl-c1">1</s
    pan >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8063"
class
    = "blob-num js-line-number"
    data - line - number = "8063" > < /td>
        < td
    id = "LC8063"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8064"
class
= "blob-num js-line-number"
data - line - number = "8064" > < /td>
    < td
id = "LC8064"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8065"
class
= "blob-num js-line-number"
data - line - number = "8065" > < /td>
    < td
id = "LC8065"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8066"
class
= "blob-num js-line-number"
data - line - number = "8066" > < /td>
    < td
id = "LC8066"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>checkOn ) {</
td >
< /tr>
< tr >
< td
id = "L8067"
class
= "blob-num js-line-number"
data - line - number = "8067" > < /td>
    < td
id = "LC8067"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>valHooks[ <span class="pl-c1">this</span> ]<span class="pl-k">.</s
pan > get < span
class
= "pl-k" >= < /span> function( elem ) {</
td >
< /tr>
< tr >
< td
id = "L8068"
class
= "blob-num js-line-number"
data - line - number = "8068" > < /td>
    < td
id = "LC8068"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem<span class="pl-k">.</s
pan > getAttribute( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>value<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>on<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > elem < span
class
= "pl-k" >
.<
/span>value;</
td >
< /tr>
< tr >
< td
id = "L8069"
class
= "blob-num js-line-number"
data - line - number = "8069" > < /td>
    < td
id = "LC8069"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8070"
class
= "blob-num js-line-number"
data - line - number = "8070" > < /td>
    < td
id = "LC8070"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8071"
class
= "blob-num js-line-number"
data - line - number = "8071" > < /td>
    < td
id = "LC8071"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8072"
class
= "blob-num js-line-number"
data - line - number = "8072" > < /td>
    < td
id = "LC8072"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8073"
class
= "blob-num js-line-number"
data - line - number = "8073" > < /td>
    < td
id = "LC8073"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8074"
class
= "blob-num js-line-number"
data - line - number = "8074" > < /td>
    < td
id = "LC8074"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8075"
class
= "blob-num js-line-number"
data - line - number = "8075" > < /td>
    < td
id = "LC8075"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8076"
class
= "blob-num js-line-number"
data - line - number = "8076" > < /td>
    < td
id = "LC8076"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return jQuery for attributes-only inclusion</span></td>
    < /tr>
    < tr >
    < td
id = "L8077"
class
= "blob-num js-line-number"
data - line - number = "8077" > < /td>
    < td
id = "LC8077"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8078"
class
= "blob-num js-line-number"
data - line - number = "8078" > < /td>
    < td
id = "LC8078"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8079"
class
= "blob-num js-line-number"
data - line - number = "8079" > < /td>
    < td
id = "LC8079"
class
= "blob-code blob-code-inner js-file-line" >
var rfocusMorph
<
span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>focusinfocus<span class="pl-k">|</s
pan > focusoutblur
)
$ < span
class
= "pl-k" > / < /span>;</
td >
< /tr>
< tr >
< td
id = "L8080"
class
= "blob-num js-line-number"
data - line - number = "8080" > < /td>
    < td
id = "LC8080"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8081"
class
= "blob-num js-line-number"
data - line - number = "8081" > < /td>
    < td
id = "LC8081"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( jQuery<span class="pl-k">.</s
pan > event, { < /td>
< /tr>
< tr >
< td
id = "L8082"
class
= "blob-num js-line-number"
data - line - number = "8082" > < /td>
    < td
id = "LC8082"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8083"
class
= "blob-num js-line-number"
data - line - number = "8083" > < /td>
    < td
id = "LC8083"
class
= "blob-code blob-code-inner js-file-line" > trigger < span
class
= "pl-k" >
:<
/span> function( event, data, elem, onlyHandlers ) {</
td >
< /tr>
< tr >
< td
id = "L8084"
class
= "blob-num js-line-number"
data - line - number = "8084" > < /td>
    < td
id = "LC8084"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8085"
class
= "blob-num js-line-number"
data - line - number = "8085" > < /td>
    < td
id = "LC8085"
class
= "blob-code blob-code-inner js-file-line" >
var i, cur, tmp, bubbleType, ontype, handle, special, <
/td>
< /tr>
< tr >
< td
id = "L8086"
class
= "blob-num js-line-number"
data - line - number = "8086" > < /td>
    < td
id = "LC8086"
class
= "blob-code blob-code-inner js-file-line" > eventPath < span
class
= "pl-k" >= < /span> [ elem <span class="pl-k">||</span> document ],</
td >
< /tr>
< tr >
< td
id = "L8087"
class
= "blob-num js-line-number"
data - line - number = "8087" > < /td>
    < td
id = "LC8087"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >= < /span> hasOwn<span class="pl-k">.</s
pan > call(event, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>type<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">?</s
pan > event < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">:</s
pan > event,
<
/td>
< /tr>
< tr >
< td
id = "L8088"
class
= "blob-num js-line-number"
data - line - number = "8088" > < /td>
    < td
id = "LC8088"
class
= "blob-code blob-code-inner js-file-line" > namespaces < span
class
= "pl-k" >= < /span> hasOwn<span class="pl-k">.</s
pan > call(event, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>namespace<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">?</s
pan > event < span
class
= "pl-k" >
.<
/span>namespace<span class="pl-k">.</s
pan > split( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>.<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">:</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L8089"
class
= "blob-num js-line-number"
data - line - number = "8089" > < /td>
    < td
id = "LC8089"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8090"
class
= "blob-num js-line-number"
data - line - number = "8090" > < /td>
    < td
id = "LC8090"
class
= "blob-code blob-code-inner js-file-line" > cur < span
class
= "pl-k" >= < /span> tmp <span class="pl-k">=</s
pan > elem < span
class
= "pl-k" >= < /span> elem <span class="pl-k">||</s
pan > document;
<
/td>
< /tr>
< tr >
< td
id = "L8091"
class
= "blob-num js-line-number"
data - line - number = "8091" > < /td>
    < td
id = "LC8091"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8092"
class
= "blob-num js-line-number"
data - line - number = "8092" > < /td>
    < td
id = "LC8092"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t do events on text and comment nodes</span></td>
    < /tr>
    < tr >
    < td
id = "L8093"
class
= "blob-num js-line-number"
data - line - number = "8093" > < /td>
    < td
id = "LC8093"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">3</s
pan > < span
class
= "pl-k" > || < /span> elem<span class="pl-k">.</s
pan > nodeType < span
class
= "pl-k" >= == < /span> <span class="pl-c1">8</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8094"
class
    = "blob-num js-line-number"
    data - line - number = "8094" > < /td>
        < td
    id = "LC8094"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L8095"
class
    = "blob-num js-line-number"
    data - line - number = "8095" > < /td>
        < td
    id = "LC8095"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8096"
class
= "blob-num js-line-number"
data - line - number = "8096" > < /td>
    < td
id = "LC8096"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8097"
class
= "blob-num js-line-number"
data - line - number = "8097" > < /td>
    < td
id = "LC8097"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> focus/blur morphs to focusin/out; ensure we&#39;re not firing them right now</span></td>
    < /tr>
    < tr >
    < td
id = "L8098"
class
= "blob-num js-line-number"
data - line - number = "8098" > < /td>
    < td
id = "LC8098"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( rfocusMorph<span class="pl-k">.</s
pan > test(type < span
class
= "pl-k" > + < /span> jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" >
.<
/span>triggered ) ) {</
td >
< /tr>
< tr >
< td
id = "L8099"
class
= "blob-num js-line-number"
data - line - number = "8099" > < /td>
    < td
id = "LC8099"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L8100"
class
= "blob-num js-line-number"
data - line - number = "8100" > < /td>
    < td
id = "LC8100"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8101"
class
= "blob-num js-line-number"
data - line - number = "8101" > < /td>
    < td
id = "LC8101"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8102"
class
= "blob-num js-line-number"
data - line - number = "8102" > < /td>
    < td
id = "LC8102"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( type<span class="pl-k">.</s
pan > indexOf( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>.<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8103"
class
    = "blob-num js-line-number"
    data - line - number = "8103" > < /td>
        < td
    id = "LC8103"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8104"
class
    = "blob-num js-line-number"
    data - line - number = "8104" > < /td>
        < td
    id = "LC8104"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Namespaced trigger; create a regexp to match event type in handle()</span></td>
        < /tr>
        < tr >
        < td
    id = "L8105"
class
    = "blob-num js-line-number"
    data - line - number = "8105" > < /td>
        < td
    id = "LC8105"
class
    = "blob-code blob-code-inner js-file-line" > namespaces < span
class
    = "pl-k" >= < /span> type<span class="pl-k">.</s
    pan > split( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>.<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8106"
class
    = "blob-num js-line-number"
    data - line - number = "8106" > < /td>
        < td
    id = "LC8106"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >= < /span> namespaces<span class="pl-k">.</s
    pan > shift();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8107"
class
    = "blob-num js-line-number"
    data - line - number = "8107" > < /td>
        < td
    id = "LC8107"
class
    = "blob-code blob-code-inner js-file-line" > namespaces < span
class
    = "pl-k" >
.<
    /span>sort();</
    td >
    < /tr>
    < tr >
    < td
    id = "L8108"
class
    = "blob-num js-line-number"
    data - line - number = "8108" > < /td>
        < td
    id = "LC8108"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8109"
class
= "blob-num js-line-number"
data - line - number = "8109" > < /td>
    < td
id = "LC8109"
class
= "blob-code blob-code-inner js-file-line" > ontype < span
class
= "pl-k" >= < /span> type<span class="pl-k">.</s
pan > indexOf( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>:<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">&lt;</s
pan > < span
class
= "pl-c1" > 0 < /span> <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>on<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > type;
<
/td>
< /tr>
< tr >
< td
id = "L8110"
class
= "blob-num js-line-number"
data - line - number = "8110" > < /td>
    < td
id = "LC8110"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8111"
class
= "blob-num js-line-number"
data - line - number = "8111" > < /td>
    < td
id = "LC8111"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Caller can pass in a jQuery.Event object, Object, or just an event type string</span></td>
    < /tr>
    < tr >
    < td
id = "L8112"
class
= "blob-num js-line-number"
data - line - number = "8112" > < /td>
    < td
id = "LC8112"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >= < /span> event[ jQuery<span class="pl-k">.</span>expando ] <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8113"
class
= "blob-num js-line-number"
data - line - number = "8113" > < /td>
    < td
id = "LC8113"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L8114"
class
= "blob-num js-line-number"
data - line - number = "8114" > < /td>
    < td
id = "LC8114"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > new < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Event < /span>( type, typeof event <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > event
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8115"
class
= "blob-num js-line-number"
data - line - number = "8115" > < /td>
    < td
id = "LC8115"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8116"
class
= "blob-num js-line-number"
data - line - number = "8116" > < /td>
    < td
id = "LC8116"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Trigger bitmask: &amp; 1 for native handlers; &amp; 2 for jQuery (always true)</span></td>
    < /tr>
    < tr >
    < td
id = "L8117"
class
= "blob-num js-line-number"
data - line - number = "8117" > < /td>
    < td
id = "LC8117"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >
.<
/span>isTrigger <span class="pl-k">=</s
pan > onlyHandlers < span
class
= "pl-k" > ?
<
/span> <span class="pl-c1">2</s
pan > < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">3</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L8118"
class
= "blob-num js-line-number"
data - line - number = "8118" > < /td>
    < td
id = "LC8118"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >
.<
/span>namespace <span class="pl-k">=</s
pan > namespaces < span
class
= "pl-k" >
.<
/span>join( <span class="pl-s"><span class="pl-pds">&quot;</s
pan >
.<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8119"
class
= "blob-num js-line-number"
data - line - number = "8119" > < /td>
    < td
id = "LC8119"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >
.<
/span>rnamespace <span class="pl-k">=</s
pan > event < span
class
= "pl-k" >
.<
/span>namespace <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8120"
class
= "blob-num js-line-number"
data - line - number = "8120" > < /td>
    < td
id = "LC8120"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > new < /span> <span class="pl-smi">RegExp</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>(^|<span class="pl-cce">\\</s
pan >
.)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> namespaces<span class="pl-k">.</s
pan > join( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-cce">\\</s
pan >
.
(? :. * < span
class
= "pl-cce" >\\<
/span>.|)<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>(<span class="pl-cce">\\</s
pan >
.|
$
)<
span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L8121"
class
= "blob-num js-line-number"
data - line - number = "8121" > < /td>
    < td
id = "LC8121"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > null < /span>;</
td >
< /tr>
< tr >
< td
id = "L8122"
class
= "blob-num js-line-number"
data - line - number = "8122" > < /td>
    < td
id = "LC8122"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8123"
class
= "blob-num js-line-number"
data - line - number = "8123" > < /td>
    < td
id = "LC8123"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Clean up the event in case it is being reused</span></td>
    < /tr>
    < tr >
    < td
id = "L8124"
class
= "blob-num js-line-number"
data - line - number = "8124" > < /td>
    < td
id = "LC8124"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >
.<
/span>result <span class="pl-k">=</s
pan > undefined;
<
/td>
< /tr>
< tr >
< td
id = "L8125"
class
= "blob-num js-line-number"
data - line - number = "8125" > < /td>
    < td
id = "LC8125"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > event < span
class
= "pl-k" >
.<
/span>target ) {</
td >
< /tr>
< tr >
< td
id = "L8126"
class
= "blob-num js-line-number"
data - line - number = "8126" > < /td>
    < td
id = "LC8126"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >
.<
/span>target <span class="pl-k">=</s
pan > elem;
<
/td>
< /tr>
< tr >
< td
id = "L8127"
class
= "blob-num js-line-number"
data - line - number = "8127" > < /td>
    < td
id = "LC8127"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8128"
class
= "blob-num js-line-number"
data - line - number = "8128" > < /td>
    < td
id = "LC8128"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8129"
class
= "blob-num js-line-number"
data - line - number = "8129" > < /td>
    < td
id = "LC8129"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Clone any incoming data and prepend the event, creating the handler arg list</span></td>
    < /tr>
    < tr >
    < td
id = "L8130"
class
= "blob-num js-line-number"
data - line - number = "8130" > < /td>
    < td
id = "LC8130"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >= < /span> data <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8131"
class
= "blob-num js-line-number"
data - line - number = "8131" > < /td>
    < td
id = "LC8131"
class
= "blob-code blob-code-inner js-file-line" > [event] < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L8132"
class
= "blob-num js-line-number"
data - line - number = "8132" > < /td>
    < td
id = "LC8132"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>makeArray( data, [ event ] );</
td >
< /tr>
< tr >
< td
id = "L8133"
class
= "blob-num js-line-number"
data - line - number = "8133" > < /td>
    < td
id = "LC8133"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8134"
class
= "blob-num js-line-number"
data - line - number = "8134" > < /td>
    < td
id = "LC8134"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Allow special events to draw outside the lines</span></td>
    < /tr>
    < tr >
    < td
id = "L8135"
class
= "blob-num js-line-number"
data - line - number = "8135" > < /td>
    < td
id = "LC8135"
class
= "blob-code blob-code-inner js-file-line" > special < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" >
.<
/span>special[ type ] <span class="pl-k">||</s
pan > {};
<
/td>
< /tr>
< tr >
< td
id = "L8136"
class
= "blob-num js-line-number"
data - line - number = "8136" > < /td>
    < td
id = "LC8136"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > onlyHandlers < span
class
= "pl-k" > &amp;&amp; < /span> special<span class="pl-k">.</s
pan > trigger < span
class
= "pl-k" > &amp;&amp; < /span> special<span class="pl-k">.</s
pan > trigger < span
class
= "pl-k" >
.<
/span>apply( elem, data ) <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L8137"
class
= "blob-num js-line-number"
data - line - number = "8137" > < /td>
    < td
id = "LC8137"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L8138"
class
= "blob-num js-line-number"
data - line - number = "8138" > < /td>
    < td
id = "LC8138"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8139"
class
= "blob-num js-line-number"
data - line - number = "8139" > < /td>
    < td
id = "LC8139"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8140"
class
= "blob-num js-line-number"
data - line - number = "8140" > < /td>
    < td
id = "LC8140"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Determine event propagation path in advance, per W3C events spec (#9951)</span></td>
    < /tr>
    < tr >
    < td
id = "L8141"
class
= "blob-num js-line-number"
data - line - number = "8141" > < /td>
    < td
id = "LC8141"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Bubble up to document, then to window; watch for a global ownerDocument var (#9724)</span></td>
    < /tr>
    < tr >
    < td
id = "L8142"
class
= "blob-num js-line-number"
data - line - number = "8142" > < /td>
    < td
id = "LC8142"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > onlyHandlers < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
pan > special < span
class
= "pl-k" >
.<
/span>noBubble <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>jQuery<span class="pl-k">.</s
pan > isWindow(elem)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8143"
class
    = "blob-num js-line-number"
    data - line - number = "8143" > < /td>
        < td
    id = "LC8143"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8144"
class
    = "blob-num js-line-number"
    data - line - number = "8144" > < /td>
        < td
    id = "LC8144"
class
    = "blob-code blob-code-inner js-file-line" > bubbleType < span
class
    = "pl-k" >= < /span> special<span class="pl-k">.</s
    pan > delegateType < span
class
    = "pl-k" > || < /span> type;</
    td >
    < /tr>
    < tr >
    < td
    id = "L8145"
class
    = "blob-num js-line-number"
    data - line - number = "8145" > < /td>
        < td
    id = "LC8145"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > rfocusMorph < span
class
    = "pl-k" >
.<
    /span>test( bubbleType <span class="pl-k">+</s
    pan > type
)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8146"
class
    = "blob-num js-line-number"
    data - line - number = "8146" > < /td>
        < td
    id = "LC8146"
class
    = "blob-code blob-code-inner js-file-line" > cur < span
class
    = "pl-k" >= < /span> cur<span class="pl-k">.</s
    pan > parentNode;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8147"
class
    = "blob-num js-line-number"
    data - line - number = "8147" > < /td>
        < td
    id = "LC8147"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8148"
class
= "blob-num js-line-number"
data - line - number = "8148" > < /td>
    < td
id = "LC8148"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( ; cur; cur <span class="pl-k">=</s
pan > cur < span
class
= "pl-k" >
.<
/span>parentNode ) {</
td >
< /tr>
< tr >
< td
id = "L8149"
class
= "blob-num js-line-number"
data - line - number = "8149" > < /td>
    < td
id = "LC8149"
class
= "blob-code blob-code-inner js-file-line" > eventPath < span
class
= "pl-k" >
.<
/span>push( cur );</
td >
< /tr>
< tr >
< td
id = "L8150"
class
= "blob-num js-line-number"
data - line - number = "8150" > < /td>
    < td
id = "LC8150"
class
= "blob-code blob-code-inner js-file-line" > tmp < span
class
= "pl-k" >= < /span> cur;</
td >
< /tr>
< tr >
< td
id = "L8151"
class
= "blob-num js-line-number"
data - line - number = "8151" > < /td>
    < td
id = "LC8151"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8152"
class
= "blob-num js-line-number"
data - line - number = "8152" > < /td>
    < td
id = "LC8152"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8153"
class
= "blob-num js-line-number"
data - line - number = "8153" > < /td>
    < td
id = "LC8153"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Only add window if we got to document (e.g., not plain obj or detached DOM)</span></td>
    < /tr>
    < tr >
    < td
id = "L8154"
class
= "blob-num js-line-number"
data - line - number = "8154" > < /td>
    < td
id = "LC8154"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( tmp <span class="pl-k">===</s
pan > (elem < span
class
= "pl-k" >
.<
/span>ownerDocument <span class="pl-k">||</s
pan > document
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8155"
class
    = "blob-num js-line-number"
    data - line - number = "8155" > < /td>
        < td
    id = "LC8155"
class
    = "blob-code blob-code-inner js-file-line" > eventPath < span
class
    = "pl-k" >
.<
    /span>push( tmp<span class="pl-k">.</s
    pan > defaultView < span
class
    = "pl-k" > || < /span> tmp<span class="pl-k">.</s
    pan > parentWindow < span
class
    = "pl-k" > || < /span> window );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8156"
class
    = "blob-num js-line-number"
    data - line - number = "8156" > < /td>
        < td
    id = "LC8156"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8157"
class
= "blob-num js-line-number"
data - line - number = "8157" > < /td>
    < td
id = "LC8157"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8158"
class
= "blob-num js-line-number"
data - line - number = "8158" > < /td>
    < td
id = "LC8158"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8159"
class
= "blob-num js-line-number"
data - line - number = "8159" > < /td>
    < td
id = "LC8159"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fire handlers on the event path</span></td>
    < /tr>
    < tr >
    < td
id = "L8160"
class
= "blob-num js-line-number"
data - line - number = "8160" > < /td>
    < td
id = "LC8160"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L8161"
class
= "blob-num js-line-number"
data - line - number = "8161" > < /td>
    < td
id = "LC8161"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( ( cur <span class="pl-k">=</s
pan > eventPath[i < span
class
= "pl-k" > ++ < /span> ] ) <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>event<span class="pl-k">.</s
pan > isPropagationStopped()
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8162"
class
    = "blob-num js-line-number"
    data - line - number = "8162" > < /td>
        < td
    id = "LC8162"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8163"
class
    = "blob-num js-line-number"
    data - line - number = "8163" > < /td>
        < td
    id = "LC8163"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">=</s
    pan > i < span
class
    = "pl-k" > &gt; < /span> <span class="pl-c1">1</s
    pan > < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L8164"
class
    = "blob-num js-line-number"
    data - line - number = "8164" > < /td>
        < td
    id = "LC8164"
class
    = "blob-code blob-code-inner js-file-line" > bubbleType < span
class
    = "pl-k" >
:<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L8165"
class
    = "blob-num js-line-number"
    data - line - number = "8165" > < /td>
        < td
    id = "LC8165"
class
    = "blob-code blob-code-inner js-file-line" > special < span
class
    = "pl-k" >
.<
    /span>bindType <span class="pl-k">||</s
    pan > type;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8166"
class
    = "blob-num js-line-number"
    data - line - number = "8166" > < /td>
        < td
    id = "LC8166"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8167"
class
    = "blob-num js-line-number"
    data - line - number = "8167" > < /td>
        < td
    id = "LC8167"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> jQuery handler</span></td>
        < /tr>
        < tr >
        < td
    id = "L8168"
class
    = "blob-num js-line-number"
    data - line - number = "8168" > < /td>
        < td
    id = "LC8168"
class
    = "blob-code blob-code-inner js-file-line" > handle < span
class
    = "pl-k" >= < /span> ( dataPriv<span class="pl-k">.</s
    pan > get(cur, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>events<span class="pl-pds">&quot;</s
    pan > < /span> ) <span class="pl-k">||</s
    pan > {}
)
    [event < span class = "pl-k" >. < /span>type ] <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L8169"
class
    = "blob-num js-line-number"
    data - line - number = "8169" > < /td>
        < td
    id = "LC8169"
class
    = "blob-code blob-code-inner js-file-line" > dataPriv < span
class
    = "pl-k" >
.<
    /span>get( cur, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > handle < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8170"
class
= "blob-num js-line-number"
data - line - number = "8170" > < /td>
    < td
id = "LC8170"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( handle ) {</
td >
< /tr>
< tr >
< td
id = "L8171"
class
= "blob-num js-line-number"
data - line - number = "8171" > < /td>
    < td
id = "LC8171"
class
= "blob-code blob-code-inner js-file-line" > handle < span
class
= "pl-k" >
.<
/span>apply( cur, data );</
td >
< /tr>
< tr >
< td
id = "L8172"
class
= "blob-num js-line-number"
data - line - number = "8172" > < /td>
    < td
id = "LC8172"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8173"
class
= "blob-num js-line-number"
data - line - number = "8173" > < /td>
    < td
id = "LC8173"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8174"
class
= "blob-num js-line-number"
data - line - number = "8174" > < /td>
    < td
id = "LC8174"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Native handler</span></td>
    < /tr>
    < tr >
    < td
id = "L8175"
class
= "blob-num js-line-number"
data - line - number = "8175" > < /td>
    < td
id = "LC8175"
class
= "blob-code blob-code-inner js-file-line" > handle < span
class
= "pl-k" >= < /span> ontype <span class="pl-k">&amp;&amp;</s
pan > cur[ontype];
<
/td>
< /tr>
< tr >
< td
id = "L8176"
class
= "blob-num js-line-number"
data - line - number = "8176" > < /td>
    < td
id = "LC8176"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( handle <span class="pl-k">&amp;&amp;</s
pan > handle < span
class
= "pl-k" >
.<
/span>apply <span class="pl-k">&amp;&amp;</s
pan > acceptData(cur)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8177"
class
    = "blob-num js-line-number"
    data - line - number = "8177" > < /td>
        < td
    id = "LC8177"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>result <span class="pl-k">=</s
    pan > handle < span
class
    = "pl-k" >
.<
    /span>apply( cur, data );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8178"
class
    = "blob-num js-line-number"
    data - line - number = "8178" > < /td>
        < td
    id = "LC8178"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( event<span class="pl-k">.</s
    pan > result < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">false</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8179"
class
    = "blob-num js-line-number"
    data - line - number = "8179" > < /td>
        < td
    id = "LC8179"
class
    = "blob-code blob-code-inner js-file-line" > event < span
class
    = "pl-k" >
.<
    /span>preventDefault();</
    td >
    < /tr>
    < tr >
    < td
    id = "L8180"
class
    = "blob-num js-line-number"
    data - line - number = "8180" > < /td>
        < td
    id = "LC8180"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8181"
class
= "blob-num js-line-number"
data - line - number = "8181" > < /td>
    < td
id = "LC8181"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8182"
class
= "blob-num js-line-number"
data - line - number = "8182" > < /td>
    < td
id = "LC8182"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8183"
class
= "blob-num js-line-number"
data - line - number = "8183" > < /td>
    < td
id = "LC8183"
class
= "blob-code blob-code-inner js-file-line" > event < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">=</s
pan > type;
<
/td>
< /tr>
< tr >
< td
id = "L8184"
class
= "blob-num js-line-number"
data - line - number = "8184" > < /td>
    < td
id = "LC8184"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8185"
class
= "blob-num js-line-number"
data - line - number = "8185" > < /td>
    < td
id = "LC8185"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If nobody prevented the default action, do it now</span></td>
    < /tr>
    < tr >
    < td
id = "L8186"
class
= "blob-num js-line-number"
data - line - number = "8186" > < /td>
    < td
id = "LC8186"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > onlyHandlers < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
pan > event < span
class
= "pl-k" >
.<
/span>isDefaultPrevented() ) {</
td >
< /tr>
< tr >
< td
id = "L8187"
class
= "blob-num js-line-number"
data - line - number = "8187" > < /td>
    < td
id = "LC8187"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8188"
class
= "blob-num js-line-number"
data - line - number = "8188" > < /td>
    < td
id = "LC8188"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ( <span class="pl-k">!</s
pan > special < span
class
= "pl-k" >
.<
/span>_default <span class="pl-k">||</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8189"
class
= "blob-num js-line-number"
data - line - number = "8189" > < /td>
    < td
id = "LC8189"
class
= "blob-code blob-code-inner js-file-line" > special < span
class
= "pl-k" >
.<
/span>_default<span class="pl-k">.</s
pan > apply(eventPath < span
class
= "pl-k" >
.<
/span>pop(), data ) <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > false < /span> ) <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8190"
class
= "blob-num js-line-number"
data - line - number = "8190" > < /td>
    < td
id = "LC8190"
class
= "blob-code blob-code-inner js-file-line" > acceptData(elem)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8191"
class
    = "blob-num js-line-number"
    data - line - number = "8191" > < /td>
        < td
    id = "LC8191"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8192"
class
    = "blob-num js-line-number"
    data - line - number = "8192" > < /td>
        < td
    id = "LC8192"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Call a native DOM method on the target with the same name as the event.</span></td>
        < /tr>
        < tr >
        < td
    id = "L8193"
class
    = "blob-num js-line-number"
    data - line - number = "8193" > < /td>
        < td
    id = "LC8193"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Don&#39;t do default actions on window, that&#39;s where global variables be (#6170)</span></td>
        < /tr>
        < tr >
        < td
    id = "L8194"
class
    = "blob-num js-line-number"
    data - line - number = "8194" > < /td>
        < td
    id = "LC8194"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( ontype <span class="pl-k">&amp;&amp;</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>isFunction( elem[ type ] ) <span class="pl-k">&amp;&amp;</s
    pan > < span
class
    = "pl-k" > ! < /span>jQuery<span class="pl-k">.</s
    pan > isWindow(elem)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8195"
class
    = "blob-num js-line-number"
    data - line - number = "8195" > < /td>
        < td
    id = "LC8195"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8196"
class
    = "blob-num js-line-number"
    data - line - number = "8196" > < /td>
        < td
    id = "LC8196"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Don&#39;t re-trigger an onFOO event when we call its FOO() method</span></td>
        < /tr>
        < tr >
        < td
    id = "L8197"
class
    = "blob-num js-line-number"
    data - line - number = "8197" > < /td>
        < td
    id = "LC8197"
class
    = "blob-code blob-code-inner js-file-line" > tmp < span
class
    = "pl-k" >= < /span> elem[ ontype ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L8198"
class
    = "blob-num js-line-number"
    data - line - number = "8198" > < /td>
        < td
    id = "LC8198"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8199"
class
    = "blob-num js-line-number"
    data - line - number = "8199" > < /td>
        < td
    id = "LC8199"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( tmp ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8200"
class
    = "blob-num js-line-number"
    data - line - number = "8200" > < /td>
        < td
    id = "LC8200"
class
    = "blob-code blob-code-inner js-file-line" > elem[ontype] < span
class
    = "pl-k" >= < /span> <span class="pl-c1">null</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8201"
class
    = "blob-num js-line-number"
    data - line - number = "8201" > < /td>
        < td
    id = "LC8201"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8202"
class
= "blob-num js-line-number"
data - line - number = "8202" > < /td>
    < td
id = "LC8202"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8203"
class
= "blob-num js-line-number"
data - line - number = "8203" > < /td>
    < td
id = "LC8203"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Prevent re-triggering of the same event, since we already bubbled it above</span></td>
    < /tr>
    < tr >
    < td
id = "L8204"
class
= "blob-num js-line-number"
data - line - number = "8204" > < /td>
    < td
id = "LC8204"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event<span class="pl-k">.</s
pan > triggered < span
class
= "pl-k" >= < /span> type;</
td >
< /tr>
< tr >
< td
id = "L8205"
class
= "blob-num js-line-number"
data - line - number = "8205" > < /td>
    < td
id = "LC8205"
class
= "blob-code blob-code-inner js-file-line" > elem[type]();
<
/td>
< /tr>
< tr >
< td
id = "L8206"
class
= "blob-num js-line-number"
data - line - number = "8206" > < /td>
    < td
id = "LC8206"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event<span class="pl-k">.</s
pan > triggered < span
class
= "pl-k" >= < /span> undefined;</
td >
< /tr>
< tr >
< td
id = "L8207"
class
= "blob-num js-line-number"
data - line - number = "8207" > < /td>
    < td
id = "LC8207"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8208"
class
= "blob-num js-line-number"
data - line - number = "8208" > < /td>
    < td
id = "LC8208"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( tmp ) {</
td >
< /tr>
< tr >
< td
id = "L8209"
class
= "blob-num js-line-number"
data - line - number = "8209" > < /td>
    < td
id = "LC8209"
class
= "blob-code blob-code-inner js-file-line" > elem[ontype] < span
class
= "pl-k" >= < /span> tmp;</
td >
< /tr>
< tr >
< td
id = "L8210"
class
= "blob-num js-line-number"
data - line - number = "8210" > < /td>
    < td
id = "LC8210"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8211"
class
= "blob-num js-line-number"
data - line - number = "8211" > < /td>
    < td
id = "LC8211"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8212"
class
= "blob-num js-line-number"
data - line - number = "8212" > < /td>
    < td
id = "LC8212"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8213"
class
= "blob-num js-line-number"
data - line - number = "8213" > < /td>
    < td
id = "LC8213"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8214"
class
= "blob-num js-line-number"
data - line - number = "8214" > < /td>
    < td
id = "LC8214"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8215"
class
= "blob-num js-line-number"
data - line - number = "8215" > < /td>
    < td
id = "LC8215"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> event<span class="pl-k">.</s
pan > result;
<
/td>
< /tr>
< tr >
< td
id = "L8216"
class
= "blob-num js-line-number"
data - line - number = "8216" > < /td>
    < td
id = "LC8216"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8217"
class
= "blob-num js-line-number"
data - line - number = "8217" > < /td>
    < td
id = "LC8217"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8218"
class
= "blob-num js-line-number"
data - line - number = "8218" > < /td>
    < td
id = "LC8218"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Piggyback on a donor event to simulate a different one</span></td>
    < /tr>
    < tr >
    < td
id = "L8219"
class
= "blob-num js-line-number"
data - line - number = "8219" > < /td>
    < td
id = "LC8219"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Used only for `focus(in | out)` events</span></td>
    < /tr>
    < tr >
    < td
id = "L8220"
class
= "blob-num js-line-number"
data - line - number = "8220" > < /td>
    < td
id = "LC8220"
class
= "blob-code blob-code-inner js-file-line" > simulate < span
class
= "pl-k" >
:<
/span> function( type, elem, event ) {</
td >
< /tr>
< tr >
< td
id = "L8221"
class
= "blob-num js-line-number"
data - line - number = "8221" > < /td>
    < td
id = "LC8221"
class
= "blob-code blob-code-inner js-file-line" >
var e
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > extend( < /td>
< /tr>
< tr >
< td
id = "L8222"
class
= "blob-num js-line-number"
data - line - number = "8222" > < /td>
    < td
id = "LC8222"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > new < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Event < /span>(),</
td >
< /tr>
< tr >
< td
id = "L8223"
class
= "blob-num js-line-number"
data - line - number = "8223" > < /td>
    < td
id = "LC8223"
class
= "blob-code blob-code-inner js-file-line" > event,
<
/td>
< /tr>
< tr >
< td
id = "L8224"
class
= "blob-num js-line-number"
data - line - number = "8224" > < /td>
    < td
id = "LC8224"
class
= "blob-code blob-code-inner js-file-line" > { < /td>
    < /tr>
    < tr >
    < td
id = "L8225"
class
= "blob-num js-line-number"
data - line - number = "8225" > < /td>
    < td
id = "LC8225"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >
:<
/span> type,</
td >
< /tr>
< tr >
< td
id = "L8226"
class
= "blob-num js-line-number"
data - line - number = "8226" > < /td>
    < td
id = "LC8226"
class
= "blob-code blob-code-inner js-file-line" > isSimulated < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8227"
class
= "blob-num js-line-number"
data - line - number = "8227" > < /td>
    < td
id = "LC8227"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8228"
class
= "blob-num js-line-number"
data - line - number = "8228" > < /td>
    < td
id = "LC8228"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8229"
class
= "blob-num js-line-number"
data - line - number = "8229" > < /td>
    < td
id = "LC8229"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8230"
class
= "blob-num js-line-number"
data - line - number = "8230" > < /td>
    < td
id = "LC8230"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event<span class="pl-k">.</s
pan > trigger(e, < span
class
= "pl-c1" > null < /span>, elem );</
td >
< /tr>
< tr >
< td
id = "L8231"
class
= "blob-num js-line-number"
data - line - number = "8231" > < /td>
    < td
id = "LC8231"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8232"
class
= "blob-num js-line-number"
data - line - number = "8232" > < /td>
    < td
id = "LC8232"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8233"
class
= "blob-num js-line-number"
data - line - number = "8233" > < /td>
    < td
id = "LC8233"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8234"
class
= "blob-num js-line-number"
data - line - number = "8234" > < /td>
    < td
id = "LC8234"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8235"
class
= "blob-num js-line-number"
data - line - number = "8235" > < /td>
    < td
id = "LC8235"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L8236"
class
= "blob-num js-line-number"
data - line - number = "8236" > < /td>
    < td
id = "LC8236"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8237"
class
= "blob-num js-line-number"
data - line - number = "8237" > < /td>
    < td
id = "LC8237"
class
= "blob-code blob-code-inner js-file-line" > trigger < span
class
= "pl-k" >
:<
/span> function( type, data ) {</
td >
< /tr>
< tr >
< td
id = "L8238"
class
= "blob-num js-line-number"
data - line - number = "8238" > < /td>
    < td
id = "LC8238"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L8239"
class
= "blob-num js-line-number"
data - line - number = "8239" > < /td>
    < td
id = "LC8239"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event<span class="pl-k">.</s
pan > trigger(type, data, < span
class
= "pl-c1" > this < /span> );</
td >
< /tr>
< tr >
< td
id = "L8240"
class
= "blob-num js-line-number"
data - line - number = "8240" > < /td>
    < td
id = "LC8240"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8241"
class
= "blob-num js-line-number"
data - line - number = "8241" > < /td>
    < td
id = "LC8241"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8242"
class
= "blob-num js-line-number"
data - line - number = "8242" > < /td>
    < td
id = "LC8242"
class
= "blob-code blob-code-inner js-file-line" > triggerHandler < span
class
= "pl-k" >
:<
/span> function( type, data ) {</
td >
< /tr>
< tr >
< td
id = "L8243"
class
= "blob-num js-line-number"
data - line - number = "8243" > < /td>
    < td
id = "LC8243"
class
= "blob-code blob-code-inner js-file-line" >
var elem
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > [ < span
class
= "pl-c1" > 0 < /span> ];</
td >
< /tr>
< tr >
< td
id = "L8244"
class
= "blob-num js-line-number"
data - line - number = "8244" > < /td>
    < td
id = "LC8244"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( elem ) {</
td >
< /tr>
< tr >
< td
id = "L8245"
class
= "blob-num js-line-number"
data - line - number = "8245" > < /td>
    < td
id = "LC8245"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" >
.<
/span>trigger( type, data, elem, <span class="pl-c1">true</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8246"
class
= "blob-num js-line-number"
data - line - number = "8246" > < /td>
    < td
id = "LC8246"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8247"
class
= "blob-num js-line-number"
data - line - number = "8247" > < /td>
    < td
id = "LC8247"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8248"
class
= "blob-num js-line-number"
data - line - number = "8248" > < /td>
    < td
id = "LC8248"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8249"
class
= "blob-num js-line-number"
data - line - number = "8249" > < /td>
    < td
id = "LC8249"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8250"
class
= "blob-num js-line-number"
data - line - number = "8250" > < /td>
    < td
id = "LC8250"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8251"
class
= "blob-num js-line-number"
data - line - number = "8251" > < /td>
    < td
id = "LC8251"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( ( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > blur
focus
focusin
focusout
resize
scroll
click
dblclick < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span></
td >
< /tr>
< tr >
< td
id = "L8252"
class
= "blob-num js-line-number"
data - line - number = "8252" > < /td>
    < td
id = "LC8252"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave <span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8253"
class
= "blob-num js-line-number"
data - line - number = "8253" > < /td>
    < td
id = "LC8253"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>change select submit keydown keypress keyup contextmenu<span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > split( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L8254"
class
= "blob-num js-line-number"
data - line - number = "8254" > < /td>
    < td
id = "LC8254"
class
= "blob-code blob-code-inner js-file-line" > function (i, name) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8255"
class
    = "blob-num js-line-number"
    data - line - number = "8255" > < /td>
        < td
    id = "LC8255"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8256"
class
    = "blob-num js-line-number"
    data - line - number = "8256" > < /td>
        < td
    id = "LC8256"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Handle event binding</span></td>
        < /tr>
        < tr >
        < td
    id = "L8257"
class
    = "blob-num js-line-number"
    data - line - number = "8257" > < /td>
        < td
    id = "LC8257"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>fn[ name ] <span class="pl-k">=</s
    pan > function (data, fn) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L8258"
    class
        = "blob-num js-line-number"
        data - line - number = "8258" > < /td>
            < td
        id = "LC8258"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> arguments<span class="pl-k">.</s
        pan > length < span
    class
        = "pl-k" > &gt; < /span> <span class="pl-c1">0</s
        pan > < span
    class
        = "pl-k" > ?
    <
        /span></
        td >
        < /tr>
        < tr >
        < td
        id = "L8259"
    class
        = "blob-num js-line-number"
        data - line - number = "8259" > < /td>
            < td
        id = "LC8259"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c1" > this < /span><span class="pl-k">.</s
        pan > on(name, < span
    class
        = "pl-c1" > null < /span>, data, fn ) <span class="pl-k">:</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L8260"
    class
        = "blob-num js-line-number"
        data - line - number = "8260" > < /td>
            < td
        id = "LC8260"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c1" > this < /span><span class="pl-k">.</s
        pan > trigger(name);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L8261"
    class
        = "blob-num js-line-number"
        data - line - number = "8261" > < /td>
            < td
        id = "LC8261"
    class
        = "blob-code blob-code-inner js-file-line" >
    };
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8262"
class
    = "blob-num js-line-number"
    data - line - number = "8262" > < /td>
        < td
    id = "LC8262"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8263"
class
= "blob-num js-line-number"
data - line - number = "8263" > < /td>
    < td
id = "LC8263"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8264"
class
= "blob-num js-line-number"
data - line - number = "8264" > < /td>
    < td
id = "LC8264"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L8265"
class
= "blob-num js-line-number"
data - line - number = "8265" > < /td>
    < td
id = "LC8265"
class
= "blob-code blob-code-inner js-file-line" > hover < span
class
= "pl-k" >
:<
/span> function( fnOver, fnOut ) {</
td >
< /tr>
< tr >
< td
id = "L8266"
class
= "blob-num js-line-number"
data - line - number = "8266" > < /td>
    < td
id = "LC8266"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>mouseenter( fnOver )<span class="pl-k">.</s
pan > mouseleave(fnOut < span
class
= "pl-k" > || < /span> fnOver );</
td >
< /tr>
< tr >
< td
id = "L8267"
class
= "blob-num js-line-number"
data - line - number = "8267" > < /td>
    < td
id = "LC8267"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8268"
class
= "blob-num js-line-number"
data - line - number = "8268" > < /td>
    < td
id = "LC8268"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8269"
class
= "blob-num js-line-number"
data - line - number = "8269" > < /td>
    < td
id = "LC8269"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8270"
class
= "blob-num js-line-number"
data - line - number = "8270" > < /td>
    < td
id = "LC8270"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8271"
class
= "blob-num js-line-number"
data - line - number = "8271" > < /td>
    < td
id = "LC8271"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8272"
class
= "blob-num js-line-number"
data - line - number = "8272" > < /td>
    < td
id = "LC8272"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8273"
class
= "blob-num js-line-number"
data - line - number = "8273" > < /td>
    < td
id = "LC8273"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>focusin <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>onfocusin<span class="pl-pds">&quot;</s
pan > < /span> in window;</
td >
< /tr>
< tr >
< td
id = "L8274"
class
= "blob-num js-line-number"
data - line - number = "8274" > < /td>
    < td
id = "LC8274"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8275"
class
= "blob-num js-line-number"
data - line - number = "8275" > < /td>
    < td
id = "LC8275"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8276"
class
= "blob-num js-line-number"
data - line - number = "8276" > < /td>
    < td
id = "LC8276"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Firefox &lt;=44</span></td>
    < /tr>
    < tr >
    < td
id = "L8277"
class
= "blob-num js-line-number"
data - line - number = "8277" > < /td>
    < td
id = "LC8277"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Firefox doesn&#39;t have focus(in | out) events</span></td>
    < /tr>
    < tr >
    < td
id = "L8278"
class
= "blob-num js-line-number"
data - line - number = "8278" > < /td>
    < td
id = "LC8278"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787</span></td>
    < /tr>
    < tr >
    < td
id = "L8279"
class
= "blob-num js-line-number"
data - line - number = "8279" > < /td>
    < td
id = "LC8279"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L8280"
class
= "blob-num js-line-number"
data - line - number = "8280" > < /td>
    < td
id = "LC8280"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Chrome &lt;=48 - 49, Safari &lt;=9.0 - 9.1</span></td>
    < /tr>
    < tr >
    < td
id = "L8281"
class
= "blob-num js-line-number"
data - line - number = "8281" > < /td>
    < td
id = "LC8281"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> focus(in | out) events fire after focus &amp; blur events,</span></td>
    < /tr>
    < tr >
    < td
id = "L8282"
class
= "blob-num js-line-number"
data - line - number = "8282" > < /td>
    < td
id = "LC8282"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order</span></td>
    < /tr>
    < tr >
    < td
id = "L8283"
class
= "blob-num js-line-number"
data - line - number = "8283" > < /td>
    < td
id = "LC8283"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857</span></td>
    < /tr>
    < tr >
    < td
id = "L8284"
class
= "blob-num js-line-number"
data - line - number = "8284" > < /td>
    < td
id = "LC8284"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > support < span
class
= "pl-k" >
.<
/span>focusin ) {</
td >
< /tr>
< tr >
< td
id = "L8285"
class
= "blob-num js-line-number"
data - line - number = "8285" > < /td>
    < td
id = "LC8285"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( { focus<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>focusin<span class="pl-pds">&quot;</s
pan > < /span>, blur<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>focusout<span class="pl-pds">&quot;</s
pan > < /span> }, function( orig, fix ) {</
td >
< /tr>
< tr >
< td
id = "L8286"
class
= "blob-num js-line-number"
data - line - number = "8286" > < /td>
    < td
id = "LC8286"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8287"
class
= "blob-num js-line-number"
data - line - number = "8287" > < /td>
    < td
id = "LC8287"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Attach a single capturing handler on the document while someone wants focusin/focusout</span></td>
    < /tr>
    < tr >
    < td
id = "L8288"
class
= "blob-num js-line-number"
data - line - number = "8288" > < /td>
    < td
id = "LC8288"
class
= "blob-code blob-code-inner js-file-line" >
var handler
<
span
class
= "pl-k" >= < /span> function( event ) {</
td >
< /tr>
< tr >
< td
id = "L8289"
class
= "blob-num js-line-number"
data - line - number = "8289" > < /td>
    < td
id = "LC8289"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event<span class="pl-k">.</s
pan > simulate(fix, event < span
class
= "pl-k" >
.<
/span>target, jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" >
.<
/span>fix( event ) );</
td >
< /tr>
< tr >
< td
id = "L8290"
class
= "blob-num js-line-number"
data - line - number = "8290" > < /td>
    < td
id = "LC8290"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8291"
class
= "blob-num js-line-number"
data - line - number = "8291" > < /td>
    < td
id = "LC8291"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8292"
class
= "blob-num js-line-number"
data - line - number = "8292" > < /td>
    < td
id = "LC8292"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event<span class="pl-k">.</s
pan > special[fix] < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L8293"
class
= "blob-num js-line-number"
data - line - number = "8293" > < /td>
    < td
id = "LC8293"
class
= "blob-code blob-code-inner js-file-line" > setup < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L8294"
class
= "blob-num js-line-number"
data - line - number = "8294" > < /td>
    < td
id = "LC8294"
class
= "blob-code blob-code-inner js-file-line" >
var doc
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>ownerDocument <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > this < /span>,</
td >
< /tr>
< tr >
< td
id = "L8295"
class
= "blob-num js-line-number"
data - line - number = "8295" > < /td>
    < td
id = "LC8295"
class
= "blob-code blob-code-inner js-file-line" > attaches < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > access(doc, fix);
<
/td>
< /tr>
< tr >
< td
id = "L8296"
class
= "blob-num js-line-number"
data - line - number = "8296" > < /td>
    < td
id = "LC8296"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8297"
class
= "blob-num js-line-number"
data - line - number = "8297" > < /td>
    < td
id = "LC8297"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > attaches
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8298"
class
    = "blob-num js-line-number"
    data - line - number = "8298" > < /td>
        < td
    id = "LC8298"
class
    = "blob-code blob-code-inner js-file-line" > doc < span
class
    = "pl-k" >
.<
    /span>addEventListener( orig, handler, <span class="pl-c1">true</s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8299"
class
= "blob-num js-line-number"
data - line - number = "8299" > < /td>
    < td
id = "LC8299"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8300"
class
= "blob-num js-line-number"
data - line - number = "8300" > < /td>
    < td
id = "LC8300"
class
= "blob-code blob-code-inner js-file-line" > dataPriv < span
class
= "pl-k" >
.<
/span>access( doc, fix, ( attaches <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > 0 < /span> ) <span class="pl-k">+</s
pan > < span
class
= "pl-c1" > 1 < /span> );</
td >
< /tr>
< tr >
< td
id = "L8301"
class
= "blob-num js-line-number"
data - line - number = "8301" > < /td>
    < td
id = "LC8301"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8302"
class
= "blob-num js-line-number"
data - line - number = "8302" > < /td>
    < td
id = "LC8302"
class
= "blob-code blob-code-inner js-file-line" > teardown < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L8303"
class
= "blob-num js-line-number"
data - line - number = "8303" > < /td>
    < td
id = "LC8303"
class
= "blob-code blob-code-inner js-file-line" >
var doc
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>ownerDocument <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > this < /span>,</
td >
< /tr>
< tr >
< td
id = "L8304"
class
= "blob-num js-line-number"
data - line - number = "8304" > < /td>
    < td
id = "LC8304"
class
= "blob-code blob-code-inner js-file-line" > attaches < span
class
= "pl-k" >= < /span> dataPriv<span class="pl-k">.</s
pan > access(doc, fix) < span
class
= "pl-k" > - < /span> <span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L8305"
class
= "blob-num js-line-number"
data - line - number = "8305" > < /td>
    < td
id = "LC8305"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8306"
class
= "blob-num js-line-number"
data - line - number = "8306" > < /td>
    < td
id = "LC8306"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > attaches
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8307"
class
    = "blob-num js-line-number"
    data - line - number = "8307" > < /td>
        < td
    id = "LC8307"
class
    = "blob-code blob-code-inner js-file-line" > doc < span
class
    = "pl-k" >
.<
    /span>removeEventListener( orig, handler, <span class="pl-c1">true</s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8308"
class
= "blob-num js-line-number"
data - line - number = "8308" > < /td>
    < td
id = "LC8308"
class
= "blob-code blob-code-inner js-file-line" > dataPriv < span
class
= "pl-k" >
.<
/span>remove( doc, fix );</
td >
< /tr>
< tr >
< td
id = "L8309"
class
= "blob-num js-line-number"
data - line - number = "8309" > < /td>
    < td
id = "LC8309"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8310"
class
= "blob-num js-line-number"
data - line - number = "8310" > < /td>
    < td
id = "LC8310"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8311"
class
= "blob-num js-line-number"
data - line - number = "8311" > < /td>
    < td
id = "LC8311"
class
= "blob-code blob-code-inner js-file-line" > dataPriv < span
class
= "pl-k" >
.<
/span>access( doc, fix, attaches );</
td >
< /tr>
< tr >
< td
id = "L8312"
class
= "blob-num js-line-number"
data - line - number = "8312" > < /td>
    < td
id = "LC8312"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8313"
class
= "blob-num js-line-number"
data - line - number = "8313" > < /td>
    < td
id = "LC8313"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8314"
class
= "blob-num js-line-number"
data - line - number = "8314" > < /td>
    < td
id = "LC8314"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8315"
class
= "blob-num js-line-number"
data - line - number = "8315" > < /td>
    < td
id = "LC8315"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8316"
class
= "blob-num js-line-number"
data - line - number = "8316" > < /td>
    < td
id = "LC8316"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8317"
class
= "blob-num js-line-number"
data - line - number = "8317" > < /td>
    < td
id = "LC8317"
class
= "blob-code blob-code-inner js-file-line" >
var location
<
span
class
= "pl-k" >= < /span> window<span class="pl-k">.</s
pan > location;
<
/td>
< /tr>
< tr >
< td
id = "L8318"
class
= "blob-num js-line-number"
data - line - number = "8318" > < /td>
    < td
id = "LC8318"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8319"
class
= "blob-num js-line-number"
data - line - number = "8319" > < /td>
    < td
id = "LC8319"
class
= "blob-code blob-code-inner js-file-line" >
var nonce
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > now();
<
/td>
< /tr>
< tr >
< td
id = "L8320"
class
= "blob-num js-line-number"
data - line - number = "8320" > < /td>
    < td
id = "LC8320"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8321"
class
= "blob-num js-line-number"
data - line - number = "8321" > < /td>
    < td
id = "LC8321"
class
= "blob-code blob-code-inner js-file-line" >
var rquery
<
span
class
= "pl-k" >= < /span> ( <span class="pl-k">/ < /span>\<span class="pl-k">?</s
pan > < span
class
= "pl-k" > / < /span> );</
td >
< /tr>
< tr >
< td
id = "L8322"
class
= "blob-num js-line-number"
data - line - number = "8322" > < /td>
    < td
id = "LC8322"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8323"
class
= "blob-num js-line-number"
data - line - number = "8323" > < /td>
    < td
id = "LC8323"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8324"
class
= "blob-num js-line-number"
data - line - number = "8324" > < /td>
    < td
id = "LC8324"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8325"
class
= "blob-num js-line-number"
data - line - number = "8325" > < /td>
    < td
id = "LC8325"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Cross-browser xml parsing</span></td>
    < /tr>
    < tr >
    < td
id = "L8326"
class
= "blob-num js-line-number"
data - line - number = "8326" > < /td>
    < td
id = "LC8326"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>parseXML <span class="pl-k">=</s
pan > function (data) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8327"
class
    = "blob-num js-line-number"
    data - line - number = "8327" > < /td>
        < td
    id = "LC8327"
class
    = "blob-code blob-code-inner js-file-line" >
    var xml;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8328"
class
    = "blob-num js-line-number"
    data - line - number = "8328" > < /td>
        < td
    id = "LC8328"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > data < span
class
    = "pl-k" > || < /span> typeof data <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > string < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8329"
class
    = "blob-num js-line-number"
    data - line - number = "8329" > < /td>
        < td
    id = "LC8329"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">null</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8330"
class
    = "blob-num js-line-number"
    data - line - number = "8330" > < /td>
        < td
    id = "LC8330"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8331"
class
= "blob-num js-line-number"
data - line - number = "8331" > < /td>
    < td
id = "LC8331"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8332"
class
= "blob-num js-line-number"
data - line - number = "8332" > < /td>
    < td
id = "LC8332"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE 9 - 11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L8333"
class
= "blob-num js-line-number"
data - line - number = "8333" > < /td>
    < td
id = "LC8333"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> IE throws on parseFromString with invalid input.</span></td>
    < /tr>
    < tr >
    < td
id = "L8334"
class
= "blob-num js-line-number"
data - line - number = "8334" > < /td>
    < td
id = "LC8334"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
try
<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8335"
class
= "blob-num js-line-number"
data - line - number = "8335" > < /td>
    < td
id = "LC8335"
class
= "blob-code blob-code-inner js-file-line" > xml < span
class
= "pl-k" >= < /span> ( <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > window < span
class
= "pl-k" >
.<
/span>DOMParser</s
pan > ()
)<
span
class
= "pl-k" >
.<
/span>parseFromString( data, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > text / xml < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8336"
class
= "blob-num js-line-number"
data - line - number = "8336" > < /td>
    < td
id = "LC8336"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> ( e ) {</
td >
< /tr>
< tr >
< td
id = "L8337"
class
= "blob-num js-line-number"
data - line - number = "8337" > < /td>
    < td
id = "LC8337"
class
= "blob-code blob-code-inner js-file-line" > xml < span
class
= "pl-k" >= < /span> undefined;</
td >
< /tr>
< tr >
< td
id = "L8338"
class
= "blob-num js-line-number"
data - line - number = "8338" > < /td>
    < td
id = "LC8338"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8339"
class
= "blob-num js-line-number"
data - line - number = "8339" > < /td>
    < td
id = "LC8339"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8340"
class
= "blob-num js-line-number"
data - line - number = "8340" > < /td>
    < td
id = "LC8340"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > xml < span
class
= "pl-k" > || < /span> xml<span class="pl-k">.</s
pan > getElementsByTagName( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>parsererror<span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8341"
class
    = "blob-num js-line-number"
    data - line - number = "8341" > < /td>
        < td
    id = "LC8341"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>error( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > Invalid
    XML: <
    span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> data );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8342"
class
    = "blob-num js-line-number"
    data - line - number = "8342" > < /td>
        < td
    id = "LC8342"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8343"
class
= "blob-num js-line-number"
data - line - number = "8343" > < /td>
    < td
id = "LC8343"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> xml;</
td >
< /tr>
< tr >
< td
id = "L8344"
class
= "blob-num js-line-number"
data - line - number = "8344" > < /td>
    < td
id = "LC8344"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8345"
class
= "blob-num js-line-number"
data - line - number = "8345" > < /td>
    < td
id = "LC8345"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8346"
class
= "blob-num js-line-number"
data - line - number = "8346" > < /td>
    < td
id = "LC8346"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8347"
class
= "blob-num js-line-number"
data - line - number = "8347" > < /td>
    < td
id = "LC8347"
class
= "blob-code blob-code-inner js-file-line" >
var <
/td>
< /tr>
< tr >
< td
id = "L8348"
class
= "blob-num js-line-number"
data - line - number = "8348" > < /td>
    < td
id = "LC8348"
class
= "blob-code blob-code-inner js-file-line" > rbracket < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>\[\]$<span class="pl-k">/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L8349"
class
= "blob-num js-line-number"
data - line - number = "8349" > < /td>
    < td
id = "LC8349"
class
= "blob-code blob-code-inner js-file-line" > rCRLF < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>\r<span class="pl-k">?</s
pan >\n < span
class
= "pl-k" > / < /span>g,</
td >
< /tr>
< tr >
< td
id = "L8350"
class
= "blob-num js-line-number"
data - line - number = "8350" > < /td>
    < td
id = "LC8350"
class
= "blob-code blob-code-inner js-file-line" > rsubmitterTypes < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>submit<span class="pl-k">|</s
pan > button < span
class
= "pl-k" > | < /span>image<span class="pl-k">|</s
pan > reset < span
class
= "pl-k" > | < /span>file)$<span class="pl-k">/ < /span>i,</
td >
< /tr>
< tr >
< td
id = "L8351"
class
= "blob-num js-line-number"
data - line - number = "8351" > < /td>
    < td
id = "LC8351"
class
= "blob-code blob-code-inner js-file-line" > rsubmittable < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>input<span class="pl-k">|</s
pan > select < span
class
= "pl-k" > | < /span>textarea<span class="pl-k">|</s
pan > keygen
)<
span
class
= "pl-k" > / < /span>i;</
td >
< /tr>
< tr >
< td
id = "L8352"
class
= "blob-num js-line-number"
data - line - number = "8352" > < /td>
    < td
id = "LC8352"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8353"
class
= "blob-num js-line-number"
data - line - number = "8353" > < /td>
    < td
id = "LC8353"
class
= "blob-code blob-code-inner js-file-line" > function buildParams(prefix, obj, traditional, add) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8354"
class
    = "blob-num js-line-number"
    data - line - number = "8354" > < /td>
        < td
    id = "LC8354"
class
    = "blob-code blob-code-inner js-file-line" >
    var name;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8355"
class
    = "blob-num js-line-number"
    data - line - number = "8355" > < /td>
        < td
    id = "LC8355"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8356"
class
    = "blob-num js-line-number"
    data - line - number = "8356" > < /td>
        < td
    id = "LC8356"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > isArray(obj)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8357"
class
    = "blob-num js-line-number"
    data - line - number = "8357" > < /td>
        < td
    id = "LC8357"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8358"
class
    = "blob-num js-line-number"
    data - line - number = "8358" > < /td>
        < td
    id = "LC8358"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Serialize array item.</span></td>
        < /tr>
        < tr >
        < td
    id = "L8359"
class
    = "blob-num js-line-number"
    data - line - number = "8359" > < /td>
        < td
    id = "LC8359"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>each( obj, function( i, v ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8360"
class
    = "blob-num js-line-number"
    data - line - number = "8360" > < /td>
        < td
    id = "LC8360"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( traditional <span class="pl-k">||</s
    pan > rbracket < span
class
    = "pl-k" >
.<
    /span>test( prefix ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8361"
class
    = "blob-num js-line-number"
    data - line - number = "8361" > < /td>
        < td
    id = "LC8361"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8362"
class
    = "blob-num js-line-number"
    data - line - number = "8362" > < /td>
        < td
    id = "LC8362"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Treat each array item as a scalar.</span></td>
        < /tr>
        < tr >
        < td
    id = "L8363"
class
    = "blob-num js-line-number"
    data - line - number = "8363" > < /td>
        < td
    id = "LC8363"
class
    = "blob-code blob-code-inner js-file-line" > add(prefix, v);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8364"
class
    = "blob-num js-line-number"
    data - line - number = "8364" > < /td>
        < td
    id = "LC8364"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8365"
class
    = "blob-num js-line-number"
    data - line - number = "8365" > < /td>
        < td
    id = "LC8365"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8366"
class
= "blob-num js-line-number"
data - line - number = "8366" > < /td>
    < td
id = "LC8366"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8367"
class
= "blob-num js-line-number"
data - line - number = "8367" > < /td>
    < td
id = "LC8367"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Item is non-scalar (array or object), encode its numeric index.</span></td>
    < /tr>
    < tr >
    < td
id = "L8368"
class
= "blob-num js-line-number"
data - line - number = "8368" > < /td>
    < td
id = "LC8368"
class
= "blob-code blob-code-inner js-file-line" > buildParams( < /td>
    < /tr>
    < tr >
    < td
id = "L8369"
class
= "blob-num js-line-number"
data - line - number = "8369" > < /td>
    < td
id = "LC8369"
class
= "blob-code blob-code-inner js-file-line" > prefix < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > [ < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> ( typeof v <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > v < span
class
= "pl-k" > != < /span> <span class="pl-c1">null</s
pan > < span
class
= "pl-k" > ?
<
/span> i <span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>]<span class="pl-pds">&quot;</s
pan > < /span>,</
td >
< /tr>
< tr >
< td
id = "L8370"
class
= "blob-num js-line-number"
data - line - number = "8370" > < /td>
    < td
id = "LC8370"
class
= "blob-code blob-code-inner js-file-line" > v,
<
/td>
< /tr>
< tr >
< td
id = "L8371"
class
= "blob-num js-line-number"
data - line - number = "8371" > < /td>
    < td
id = "LC8371"
class
= "blob-code blob-code-inner js-file-line" > traditional,
<
/td>
< /tr>
< tr >
< td
id = "L8372"
class
= "blob-num js-line-number"
data - line - number = "8372" > < /td>
    < td
id = "LC8372"
class
= "blob-code blob-code-inner js-file-line" > add < /td>
    < /tr>
    < tr >
    < td
id = "L8373"
class
= "blob-num js-line-number"
data - line - number = "8373" > < /td>
    < td
id = "LC8373"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8374"
class
= "blob-num js-line-number"
data - line - number = "8374" > < /td>
    < td
id = "LC8374"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8375"
class
= "blob-num js-line-number"
data - line - number = "8375" > < /td>
    < td
id = "LC8375"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8376"
class
= "blob-num js-line-number"
data - line - number = "8376" > < /td>
    < td
id = "LC8376"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8377"
class
= "blob-num js-line-number"
data - line - number = "8377" > < /td>
    < td
id = "LC8377"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > ( < span
class
= "pl-k" > ! < /span>traditional <span class="pl-k">&amp;&amp;</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>type( obj ) <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L8378"
class
= "blob-num js-line-number"
data - line - number = "8378" > < /td>
    < td
id = "LC8378"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8379"
class
= "blob-num js-line-number"
data - line - number = "8379" > < /td>
    < td
id = "LC8379"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Serialize object item.</span></td>
    < /tr>
    < tr >
    < td
id = "L8380"
class
= "blob-num js-line-number"
data - line - number = "8380" > < /td>
    < td
id = "LC8380"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( name in obj ) {</
td >
< /tr>
< tr >
< td
id = "L8381"
class
= "blob-num js-line-number"
data - line - number = "8381" > < /td>
    < td
id = "LC8381"
class
= "blob-code blob-code-inner js-file-line" > buildParams(prefix < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > [ < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> name <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>]<span class="pl-pds">&quot;</s
pan > < /span>, obj[ name ], traditional, add );</
td >
< /tr>
< tr >
< td
id = "L8382"
class
= "blob-num js-line-number"
data - line - number = "8382" > < /td>
    < td
id = "LC8382"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8383"
class
= "blob-num js-line-number"
data - line - number = "8383" > < /td>
    < td
id = "LC8383"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8384"
class
= "blob-num js-line-number"
data - line - number = "8384" > < /td>
    < td
id = "LC8384"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8385"
class
= "blob-num js-line-number"
data - line - number = "8385" > < /td>
    < td
id = "LC8385"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8386"
class
= "blob-num js-line-number"
data - line - number = "8386" > < /td>
    < td
id = "LC8386"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Serialize scalar item.</span></td>
    < /tr>
    < tr >
    < td
id = "L8387"
class
= "blob-num js-line-number"
data - line - number = "8387" > < /td>
    < td
id = "LC8387"
class
= "blob-code blob-code-inner js-file-line" > add(prefix, obj);
<
/td>
< /tr>
< tr >
< td
id = "L8388"
class
= "blob-num js-line-number"
data - line - number = "8388" > < /td>
    < td
id = "LC8388"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8389"
class
= "blob-num js-line-number"
data - line - number = "8389" > < /td>
    < td
id = "LC8389"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8390"
class
= "blob-num js-line-number"
data - line - number = "8390" > < /td>
    < td
id = "LC8390"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8391"
class
= "blob-num js-line-number"
data - line - number = "8391" > < /td>
    < td
id = "LC8391"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Serialize an array of form elements or a set of</span></td>
    < /tr>
    < tr >
    < td
id = "L8392"
class
= "blob-num js-line-number"
data - line - number = "8392" > < /td>
    < td
id = "LC8392"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> key/values into a query string</span></td>
    < /tr>
    < tr >
    < td
id = "L8393"
class
= "blob-num js-line-number"
data - line - number = "8393" > < /td>
    < td
id = "LC8393"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>param <span class="pl-k">=</s
pan > function (a, traditional) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8394"
class
    = "blob-num js-line-number"
    data - line - number = "8394" > < /td>
        < td
    id = "LC8394"
class
    = "blob-code blob-code-inner js-file-line" >
    var prefix, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L8395"
class
    = "blob-num js-line-number"
    data - line - number = "8395" > < /td>
        < td
    id = "LC8395"
class
    = "blob-code blob-code-inner js-file-line" > s < span
class
    = "pl-k" >= < /span> [],</
    td >
    < /tr>
    < tr >
    < td
    id = "L8396"
class
    = "blob-num js-line-number"
    data - line - number = "8396" > < /td>
        < td
    id = "LC8396"
class
    = "blob-code blob-code-inner js-file-line" > add < span
class
    = "pl-k" >= < /span> function( key, valueOrFunction ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8397"
class
    = "blob-num js-line-number"
    data - line - number = "8397" > < /td>
        < td
    id = "LC8397"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8398"
class
    = "blob-num js-line-number"
    data - line - number = "8398" > < /td>
        < td
    id = "LC8398"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If value is a function, invoke it and use its return value</span></td>
        < /tr>
        < tr >
        < td
    id = "L8399"
class
    = "blob-num js-line-number"
    data - line - number = "8399" > < /td>
        < td
    id = "LC8399"
class
    = "blob-code blob-code-inner js-file-line" >
    var value
<
    span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > isFunction(valueOrFunction) < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L8400"
class
    = "blob-num js-line-number"
    data - line - number = "8400" > < /td>
        < td
    id = "LC8400"
class
    = "blob-code blob-code-inner js-file-line" > valueOrFunction() < span
class
    = "pl-k" >
:<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L8401"
class
    = "blob-num js-line-number"
    data - line - number = "8401" > < /td>
        < td
    id = "LC8401"
class
    = "blob-code blob-code-inner js-file-line" > valueOrFunction;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8402"
class
    = "blob-num js-line-number"
    data - line - number = "8402" > < /td>
        < td
    id = "LC8402"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8403"
class
    = "blob-num js-line-number"
    data - line - number = "8403" > < /td>
        < td
    id = "LC8403"
class
    = "blob-code blob-code-inner js-file-line" > s[s < span
class
    = "pl-k" >
.<
    /span>length ] <span class="pl-k">=</s
    pan > encodeURIComponent(key) < span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan >= < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L8404"
class
    = "blob-num js-line-number"
    data - line - number = "8404" > < /td>
        < td
    id = "LC8404"
class
    = "blob-code blob-code-inner js-file-line" > encodeURIComponent(value < span
class
    = "pl-k" >= =
<
    /span> <span class="pl-c1">null</s
    pan > < span
class
    = "pl-k" > ?
<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" >
:<
    /span> value );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8405"
class
    = "blob-num js-line-number"
    data - line - number = "8405" > < /td>
        < td
    id = "LC8405"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L8406"
class
= "blob-num js-line-number"
data - line - number = "8406" > < /td>
    < td
id = "LC8406"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8407"
class
= "blob-num js-line-number"
data - line - number = "8407" > < /td>
    < td
id = "LC8407"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If an array was passed in, assume that it is an array of form elements.</span></td>
    < /tr>
    < tr >
    < td
id = "L8408"
class
= "blob-num js-line-number"
data - line - number = "8408" > < /td>
    < td
id = "LC8408"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isArray(a) < span
class
= "pl-k" > || < /span> ( a<span class="pl-k">.</s
pan > jquery < span
class
= "pl-k" > &amp;&amp; < /span> <span class="pl-k">!</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>isPlainObject( a ) ) ) {</
td >
< /tr>
< tr >
< td
id = "L8409"
class
= "blob-num js-line-number"
data - line - number = "8409" > < /td>
    < td
id = "LC8409"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8410"
class
= "blob-num js-line-number"
data - line - number = "8410" > < /td>
    < td
id = "LC8410"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Serialize the form elements</span></td>
    < /tr>
    < tr >
    < td
id = "L8411"
class
= "blob-num js-line-number"
data - line - number = "8411" > < /td>
    < td
id = "LC8411"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( a, function() {</
td >
< /tr>
< tr >
< td
id = "L8412"
class
= "blob-num js-line-number"
data - line - number = "8412" > < /td>
    < td
id = "LC8412"
class
= "blob-code blob-code-inner js-file-line" > add( < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > name,
<
span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > value
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8413"
class
= "blob-num js-line-number"
data - line - number = "8413" > < /td>
    < td
id = "LC8413"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8414"
class
= "blob-num js-line-number"
data - line - number = "8414" > < /td>
    < td
id = "LC8414"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8415"
class
= "blob-num js-line-number"
data - line - number = "8415" > < /td>
    < td
id = "LC8415"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8416"
class
= "blob-num js-line-number"
data - line - number = "8416" > < /td>
    < td
id = "LC8416"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8417"
class
= "blob-num js-line-number"
data - line - number = "8417" > < /td>
    < td
id = "LC8417"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If traditional, encode the &quot;old&quot; way (the way 1.3.2 or older</span></td>
    < /tr>
    < tr >
    < td
id = "L8418"
class
= "blob-num js-line-number"
data - line - number = "8418" > < /td>
    < td
id = "LC8418"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> did it), otherwise encode params recursively.</span></td>
    < /tr>
    < tr >
    < td
id = "L8419"
class
= "blob-num js-line-number"
data - line - number = "8419" > < /td>
    < td
id = "LC8419"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( prefix in a ) {</
td >
< /tr>
< tr >
< td
id = "L8420"
class
= "blob-num js-line-number"
data - line - number = "8420" > < /td>
    < td
id = "LC8420"
class
= "blob-code blob-code-inner js-file-line" > buildParams(prefix, a[prefix], traditional, add);
<
/td>
< /tr>
< tr >
< td
id = "L8421"
class
= "blob-num js-line-number"
data - line - number = "8421" > < /td>
    < td
id = "LC8421"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8422"
class
= "blob-num js-line-number"
data - line - number = "8422" > < /td>
    < td
id = "LC8422"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8423"
class
= "blob-num js-line-number"
data - line - number = "8423" > < /td>
    < td
id = "LC8423"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8424"
class
= "blob-num js-line-number"
data - line - number = "8424" > < /td>
    < td
id = "LC8424"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return the resulting serialization</span></td>
    < /tr>
    < tr >
    < td
id = "L8425"
class
= "blob-num js-line-number"
data - line - number = "8425" > < /td>
    < td
id = "LC8425"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> s<span class="pl-k">.</s
pan > join( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>&amp;<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L8426"
class
= "blob-num js-line-number"
data - line - number = "8426" > < /td>
    < td
id = "LC8426"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8427"
class
= "blob-num js-line-number"
data - line - number = "8427" > < /td>
    < td
id = "LC8427"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8428"
class
= "blob-num js-line-number"
data - line - number = "8428" > < /td>
    < td
id = "LC8428"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L8429"
class
= "blob-num js-line-number"
data - line - number = "8429" > < /td>
    < td
id = "LC8429"
class
= "blob-code blob-code-inner js-file-line" > serialize < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L8430"
class
= "blob-num js-line-number"
data - line - number = "8430" > < /td>
    < td
id = "LC8430"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > param( < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > serializeArray()
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8431"
class
= "blob-num js-line-number"
data - line - number = "8431" > < /td>
    < td
id = "LC8431"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8432"
class
= "blob-num js-line-number"
data - line - number = "8432" > < /td>
    < td
id = "LC8432"
class
= "blob-code blob-code-inner js-file-line" > serializeArray < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L8433"
class
= "blob-num js-line-number"
data - line - number = "8433" > < /td>
    < td
id = "LC8433"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>map( function() {</
td >
< /tr>
< tr >
< td
id = "L8434"
class
= "blob-num js-line-number"
data - line - number = "8434" > < /td>
    < td
id = "LC8434"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8435"
class
= "blob-num js-line-number"
data - line - number = "8435" > < /td>
    < td
id = "LC8435"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Can add propHook for &quot;elements&quot; to filter or add form elements</span></td>
    < /tr>
    < tr >
    < td
id = "L8436"
class
= "blob-num js-line-number"
data - line - number = "8436" > < /td>
    < td
id = "LC8436"
class
= "blob-code blob-code-inner js-file-line" >
var elements
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > prop( < span
class
= "pl-c1" > this < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > elements < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8437"
class
= "blob-num js-line-number"
data - line - number = "8437" > < /td>
    < td
id = "LC8437"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elements <span class="pl-k">?</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>makeArray( elements ) <span class="pl-k">:</s
pan > < span
class
= "pl-c1" > this < /span>;</
td >
< /tr>
< tr >
< td
id = "L8438"
class
= "blob-num js-line-number"
data - line - number = "8438" > < /td>
    < td
id = "LC8438"
class
= "blob-code blob-code-inner js-file-line" >
} )<
/td>
< /tr>
< tr >
< td
id = "L8439"
class
= "blob-num js-line-number"
data - line - number = "8439" > < /td>
    < td
id = "LC8439"
class
= "blob-code blob-code-inner js-file-line" >
.
filter(function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8440"
class
    = "blob-num js-line-number"
    data - line - number = "8440" > < /td>
        < td
    id = "LC8440"
class
    = "blob-code blob-code-inner js-file-line" >
    var type
<
    span
class
    = "pl-k" >= < /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>type;</
    td >
    < /tr>
    < tr >
    < td
    id = "L8441"
class
    = "blob-num js-line-number"
    data - line - number = "8441" > < /td>
        < td
    id = "LC8441"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8442"
class
    = "blob-num js-line-number"
    data - line - number = "8442" > < /td>
        < td
    id = "LC8442"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Use .is( &quot;:disabled&quot; ) so that fieldset[disabled] works</span></td>
        < /tr>
        < tr >
        < td
    id = "L8443"
class
    = "blob-num js-line-number"
    data - line - number = "8443" > < /td>
        < td
    id = "LC8443"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>name <span class="pl-k">&amp;&amp;</s
    pan > < span
class
    = "pl-k" > ! < /span>jQuery( <span class="pl-c1">this</s
    pan >
) < span
class
= "pl-k" >
.<
/span>is( <span class="pl-s"><span class="pl-pds">&quot;</s
pan >
:
disabled < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L8444"
class
= "blob-num js-line-number"
data - line - number = "8444" > < /td>
    < td
id = "LC8444"
class
= "blob-code blob-code-inner js-file-line" > rsubmittable < span
class
= "pl-k" >
.<
/span>test( <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>nodeName ) <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>rsubmitterTypes<span class="pl-k">.</s
pan > test(type) < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L8445"
class
= "blob-num js-line-number"
data - line - number = "8445" > < /td>
    < td
id = "LC8445"
class
= "blob-code blob-code-inner js-file-line" > ( < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > checked < span
class
= "pl-k" > || < /span> <span class="pl-k">!</s
pan > rcheckableType < span
class
= "pl-k" >
.<
/span>test( type ) );</
td >
< /tr>
< tr >
< td
id = "L8446"
class
= "blob-num js-line-number"
data - line - number = "8446" > < /td>
    < td
id = "LC8446"
class
= "blob-code blob-code-inner js-file-line" >
} )<
/td>
< /tr>
< tr >
< td
id = "L8447"
class
= "blob-num js-line-number"
data - line - number = "8447" > < /td>
    < td
id = "LC8447"
class
= "blob-code blob-code-inner js-file-line" >
.
map(function (i, elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8448"
class
    = "blob-num js-line-number"
    data - line - number = "8448" > < /td>
        < td
    id = "LC8448"
class
    = "blob-code blob-code-inner js-file-line" >
    var val
<
    span
class
    = "pl-k" >= < /span> jQuery( <span class="pl-c1">this</s
    pan >
) < span
class
= "pl-k" >
.<
/span>val();</
td >
< /tr>
< tr >
< td
id = "L8449"
class
= "blob-num js-line-number"
data - line - number = "8449" > < /td>
    < td
id = "LC8449"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8450"
class
= "blob-num js-line-number"
data - line - number = "8450" > < /td>
    < td
id = "LC8450"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( val <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L8451"
class
= "blob-num js-line-number"
data - line - number = "8451" > < /td>
    < td
id = "LC8451"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L8452"
class
= "blob-num js-line-number"
data - line - number = "8452" > < /td>
    < td
id = "LC8452"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8453"
class
= "blob-num js-line-number"
data - line - number = "8453" > < /td>
    < td
id = "LC8453"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8454"
class
= "blob-num js-line-number"
data - line - number = "8454" > < /td>
    < td
id = "LC8454"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isArray(val)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8455"
class
    = "blob-num js-line-number"
    data - line - number = "8455" > < /td>
        < td
    id = "LC8455"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> jQuery<span class="pl-k">.</s
    pan > map(val, function (val) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L8456"
    class
        = "blob-num js-line-number"
        data - line - number = "8456" > < /td>
            < td
        id = "LC8456"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> { name<span class="pl-k">:</s
        pan > elem < span
    class
        = "pl-k" >
    .<
        /span>name, value<span class="pl-k">:</s
        pan > val < span
    class
        = "pl-k" >
    .<
        /span>replace( rCRLF, <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > < span
    class
        = "pl-cce" >\r\n < /span><span class="pl-pds">&quot;</s
        pan > < /span> ) };</
        td >
        < /tr>
        < tr >
        < td
        id = "L8457"
    class
        = "blob-num js-line-number"
        data - line - number = "8457" > < /td>
            < td
        id = "LC8457"
    class
        = "blob-code blob-code-inner js-file-line" >
    });
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8458"
class
    = "blob-num js-line-number"
    data - line - number = "8458" > < /td>
        < td
    id = "LC8458"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8459"
class
= "blob-num js-line-number"
data - line - number = "8459" > < /td>
    < td
id = "LC8459"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8460"
class
= "blob-num js-line-number"
data - line - number = "8460" > < /td>
    < td
id = "LC8460"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> { name<span class="pl-k">:</s
pan > elem < span
class
= "pl-k" >
.<
/span>name, value<span class="pl-k">:</s
pan > val < span
class
= "pl-k" >
.<
/span>replace( rCRLF, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-cce" >\r\n < /span><span class="pl-pds">&quot;</s
pan > < /span> ) };</
td >
< /tr>
< tr >
< td
id = "L8461"
class
= "blob-num js-line-number"
data - line - number = "8461" > < /td>
    < td
id = "LC8461"
class
= "blob-code blob-code-inner js-file-line" >
} )<
span
class
= "pl-k" >
.<
/span>get();</
td >
< /tr>
< tr >
< td
id = "L8462"
class
= "blob-num js-line-number"
data - line - number = "8462" > < /td>
    < td
id = "LC8462"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8463"
class
= "blob-num js-line-number"
data - line - number = "8463" > < /td>
    < td
id = "LC8463"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L8464"
class
= "blob-num js-line-number"
data - line - number = "8464" > < /td>
    < td
id = "LC8464"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8465"
class
= "blob-num js-line-number"
data - line - number = "8465" > < /td>
    < td
id = "LC8465"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8466"
class
= "blob-num js-line-number"
data - line - number = "8466" > < /td>
    < td
id = "LC8466"
class
= "blob-code blob-code-inner js-file-line" >
var <
/td>
< /tr>
< tr >
< td
id = "L8467"
class
= "blob-num js-line-number"
data - line - number = "8467" > < /td>
    < td
id = "LC8467"
class
= "blob-code blob-code-inner js-file-line" > r20 < span
class
= "pl-k" >= < /span> <span class="pl-k">/ % < /span><span class="pl-c1">20</s
pan > < span
class
= "pl-k" > / < /span>g,</
td >
< /tr>
< tr >
< td
id = "L8468"
class
= "blob-num js-line-number"
data - line - number = "8468" > < /td>
    < td
id = "LC8468"
class
= "blob-code blob-code-inner js-file-line" > rhash < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>#<span class="pl-c1">.</s
pan > < span
class
= "pl-k" > * < /span>$<span class="pl-k">/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L8469"
class
= "blob-num js-line-number"
data - line - number = "8469" > < /td>
    < td
id = "LC8469"
class
= "blob-code blob-code-inner js-file-line" > rantiCache < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>([<span class="pl-k">?</span><span class="pl-k">&amp;</span>])_<span class="pl-k">=</s
pan > [ < span
class
= "pl-k" > ^ &amp; < /span>]<span class="pl-k">*/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L8470"
class
= "blob-num js-line-number"
data - line - number = "8470" > < /td>
    < td
id = "LC8470"
class
= "blob-code blob-code-inner js-file-line" > rheaders < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-c1" >
.<
/span><span class="pl-k">*</s
pan > < span
class
= "pl-k" > ?
<
/span>)<span class="pl-k">:</s
pan > [ \t
]<
span
class
= "pl-k" > * < /span>([<span class="pl-k">^</span>\r\n]<span class="pl-k">*</s
pan >
)
$ < span
class
= "pl-k" > / < /span>mg,</
td >
< /tr>
< tr >
< td
id = "L8471"
class
= "blob-num js-line-number"
data - line - number = "8471" > < /td>
    < td
id = "LC8471"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8472"
class
= "blob-num js-line-number"
data - line - number = "8472" > < /td>
    < td
id = "LC8472"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> #7653, #8125, #8152: local protocol detection</span></td>
    < /tr>
    < tr >
    < td
id = "L8473"
class
= "blob-num js-line-number"
data - line - number = "8473" > < /td>
    < td
id = "LC8473"
class
= "blob-code blob-code-inner js-file-line" > rlocalProtocol < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span>about<span class="pl-k">|</s
pan > app < span
class
= "pl-k" > | < /span>app<span class="pl-k">-</s
pan > storage < span
class
= "pl-k" > | < /span><span class="pl-c1">.</s
pan > < span
class
= "pl-k" > +- < /span>extension<span class="pl-k">|</s
pan > file < span
class
= "pl-k" > | < /span>res<span class="pl-k">|</s
pan > widget
)<
span
class
= "pl-k" >
:<
/span>$<span class="pl-k">/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L8474"
class
= "blob-num js-line-number"
data - line - number = "8474" > < /td>
    < td
id = "LC8474"
class
= "blob-code blob-code-inner js-file-line" > rnoContent < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan > ( < span
class
= "pl-k" > ? :
<
/span><span class="pl-c1">GET</s
pan > < span
class
= "pl-k" > | < /span><span class="pl-c1">HEAD</s
pan >
)
$ < span
class
= "pl-k" > / < /span>,</
td >
< /tr>
< tr >
< td
id = "L8475"
class
= "blob-num js-line-number"
data - line - number = "8475" > < /td>
    < td
id = "LC8475"
class
= "blob-code blob-code-inner js-file-line" > rprotocol < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span><span class="pl-k">^</s
pan >\<
span
class
= "pl-k" > / < /span>\<span class="pl-c"><span class="pl-c">/
/</s
pan >,
<
/span></
td >
< /tr>
< tr >
< td
id = "L8476"
class
= "blob-num js-line-number"
data - line - number = "8476" > < /td>
    < td
id = "LC8476"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8477"
class
= "blob-num js-line-number"
data - line - number = "8477" > < /td>
    < td
id = "LC8477"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> Prefilters</span></td>
      </tr>
      <tr>
        <td id="L8478" class="blob-num js-line-number" data-line-number="8478"></td>
        <td id="LC8478" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)</span></td>
      </tr>
      <tr>
        <td id="L8479" class="blob-num js-line-number" data-line-number="8479"></td>
        <td id="LC8479" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * 2) These are called:</span></td>
      </tr>
      <tr>
        <td id="L8480" class="blob-num js-line-number" data-line-number="8480"></td>
        <td id="LC8480" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         *    - BEFORE asking for a transport</span></td>
      </tr>
      <tr>
        <td id="L8481" class="blob-num js-line-number" data-line-number="8481"></td>
        <td id="LC8481" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         *    - AFTER param serialization (s.data is a string if s.processData is true)</span></td>
      </tr>
      <tr>
        <td id="L8482" class="blob-num js-line-number" data-line-number="8482"></td>
        <td id="LC8482" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * 3) key is the dataType</span></td>
      </tr>
      <tr>
        <td id="L8483" class="blob-num js-line-number" data-line-number="8483"></td>
        <td id="LC8483" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * 4) the catchall symbol &quot;*&quot; can be used</span></td>
      </tr>
      <tr>
        <td id="L8484" class="blob-num js-line-number" data-line-number="8484"></td>
        <td id="LC8484" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * 5) execution will start with transport dataType and THEN continue down to &quot;*&quot; if needed</span></td>
      </tr>
      <tr>
        <td id="L8485" class="blob-num js-line-number" data-line-number="8485"></td>
        <td id="LC8485" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L8486"
class
= "blob-num js-line-number"
data - line - number = "8486" > < /td>
    < td
id = "LC8486"
class
= "blob-code blob-code-inner js-file-line" > prefilters < span
class
= "pl-k" >= < /span> {},</
td >
< /tr>
< tr >
< td
id = "L8487"
class
= "blob-num js-line-number"
data - line - number = "8487" > < /td>
    < td
id = "LC8487"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8488"
class
= "blob-num js-line-number"
data - line - number = "8488" > < /td>
    < td
id = "LC8488"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> Transports bindings</span></td>
      </tr>
      <tr>
        <td id="L8489" class="blob-num js-line-number" data-line-number="8489"></td>
        <td id="LC8489" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * 1) key is the dataType</span></td>
      </tr>
      <tr>
        <td id="L8490" class="blob-num js-line-number" data-line-number="8490"></td>
        <td id="LC8490" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * 2) the catchall symbol &quot;*&quot; can be used</span></td>
      </tr>
      <tr>
        <td id="L8491" class="blob-num js-line-number" data-line-number="8491"></td>
        <td id="LC8491" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * 3) selection will start with transport dataType and THEN go to &quot;*&quot; if needed</span></td>
      </tr>
      <tr>
        <td id="L8492" class="blob-num js-line-number" data-line-number="8492"></td>
        <td id="LC8492" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L8493"
class
= "blob-num js-line-number"
data - line - number = "8493" > < /td>
    < td
id = "LC8493"
class
= "blob-code blob-code-inner js-file-line" > transports < span
class
= "pl-k" >= < /span> {},</
td >
< /tr>
< tr >
< td
id = "L8494"
class
= "blob-num js-line-number"
data - line - number = "8494" > < /td>
    < td
id = "LC8494"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8495"
class
= "blob-num js-line-number"
data - line - number = "8495" > < /td>
    < td
id = "LC8495"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Avoid comment-prolog char sequence (#10098); must appease lint and evade compression</span></td>
    < /tr>
    < tr >
    < td
id = "L8496"
class
= "blob-num js-line-number"
data - line - number = "8496" > < /td>
    < td
id = "LC8496"
class
= "blob-code blob-code-inner js-file-line" > allTypes < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > * /<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">.</s
pan > concat( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L8497"
class
= "blob-num js-line-number"
data - line - number = "8497" > < /td>
    < td
id = "LC8497"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8498"
class
= "blob-num js-line-number"
data - line - number = "8498" > < /td>
    < td
id = "LC8498"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Anchor tag for parsing the document origin</span></td>
    < /tr>
    < tr >
    < td
id = "L8499"
class
= "blob-num js-line-number"
data - line - number = "8499" > < /td>
    < td
id = "LC8499"
class
= "blob-code blob-code-inner js-file-line" > originAnchor < span
class
= "pl-k" >= < /span> document<span class="pl-k">.</s
pan > createElement( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>a<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L8500"
class
= "blob-num js-line-number"
data - line - number = "8500" > < /td>
    < td
id = "LC8500"
class
= "blob-code blob-code-inner js-file-line" > originAnchor < span
class
= "pl-k" >
.<
/span>href <span class="pl-k">=</s
pan > location < span
class
= "pl-k" >
.<
/span>href;</
td >
< /tr>
< tr >
< td
id = "L8501"
class
= "blob-num js-line-number"
data - line - number = "8501" > < /td>
    < td
id = "LC8501"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8502"
class
= "blob-num js-line-number"
data - line - number = "8502" > < /td>
    < td
id = "LC8502"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Base &quot;constructor&quot; for jQuery.ajaxPrefilter and jQuery.ajaxTransport</span></td>
    < /tr>
    < tr >
    < td
id = "L8503"
class
= "blob-num js-line-number"
data - line - number = "8503" > < /td>
    < td
id = "LC8503"
class
= "blob-code blob-code-inner js-file-line" > function addToPrefiltersOrTransports(structure) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8504"
class
    = "blob-num js-line-number"
    data - line - number = "8504" > < /td>
        < td
    id = "LC8504"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8505"
class
    = "blob-num js-line-number"
    data - line - number = "8505" > < /td>
        < td
    id = "LC8505"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> dataTypeExpression is optional and defaults to &quot;*&quot;</span></td>
        < /tr>
        < tr >
        < td
    id = "L8506"
class
    = "blob-num js-line-number"
    data - line - number = "8506" > < /td>
        < td
    id = "LC8506"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> function( dataTypeExpression, func ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8507"
class
    = "blob-num js-line-number"
    data - line - number = "8507" > < /td>
        < td
    id = "LC8507"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8508"
class
    = "blob-num js-line-number"
    data - line - number = "8508" > < /td>
        < td
    id = "LC8508"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof dataTypeExpression <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > string < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8509"
class
    = "blob-num js-line-number"
    data - line - number = "8509" > < /td>
        < td
    id = "LC8509"
class
    = "blob-code blob-code-inner js-file-line" > func < span
class
    = "pl-k" >= < /span> dataTypeExpression;</
    td >
    < /tr>
    < tr >
    < td
    id = "L8510"
class
    = "blob-num js-line-number"
    data - line - number = "8510" > < /td>
        < td
    id = "LC8510"
class
    = "blob-code blob-code-inner js-file-line" > dataTypeExpression < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > * < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8511"
class
    = "blob-num js-line-number"
    data - line - number = "8511" > < /td>
        < td
    id = "LC8511"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8512"
class
= "blob-num js-line-number"
data - line - number = "8512" > < /td>
    < td
id = "LC8512"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8513"
class
= "blob-num js-line-number"
data - line - number = "8513" > < /td>
    < td
id = "LC8513"
class
= "blob-code blob-code-inner js-file-line" >
var dataType, <
/td>
< /tr>
< tr >
< td
id = "L8514"
class
= "blob-num js-line-number"
data - line - number = "8514" > < /td>
    < td
id = "LC8514"
class
= "blob-code blob-code-inner js-file-line" > i < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8515"
class
= "blob-num js-line-number"
data - line - number = "8515" > < /td>
    < td
id = "LC8515"
class
= "blob-code blob-code-inner js-file-line" > dataTypes < span
class
= "pl-k" >= < /span> dataTypeExpression<span class="pl-k">.</s
pan > toLowerCase() < span
class
= "pl-k" >
.<
/span>match( rnothtmlwhite ) <span class="pl-k">||</s
pan > [];
<
/td>
< /tr>
< tr >
< td
id = "L8516"
class
= "blob-num js-line-number"
data - line - number = "8516" > < /td>
    < td
id = "LC8516"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8517"
class
= "blob-num js-line-number"
data - line - number = "8517" > < /td>
    < td
id = "LC8517"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(func)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8518"
class
    = "blob-num js-line-number"
    data - line - number = "8518" > < /td>
        < td
    id = "LC8518"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8519"
class
    = "blob-num js-line-number"
    data - line - number = "8519" > < /td>
        < td
    id = "LC8519"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> For each dataType in the dataTypeExpression</span></td>
        < /tr>
        < tr >
        < td
    id = "L8520"
class
    = "blob-num js-line-number"
    data - line - number = "8520" > < /td>
        < td
    id = "LC8520"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( ( dataType <span class="pl-k">=</s
    pan > dataTypes[i < span
class
    = "pl-k" > ++ < /span> ] ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8521"
class
    = "blob-num js-line-number"
    data - line - number = "8521" > < /td>
        < td
    id = "LC8521"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8522"
class
    = "blob-num js-line-number"
    data - line - number = "8522" > < /td>
        < td
    id = "LC8522"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Prepend if requested</span></td>
        < /tr>
        < tr >
        < td
    id = "L8523"
class
    = "blob-num js-line-number"
    data - line - number = "8523" > < /td>
        < td
    id = "LC8523"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( dataType[ <span class="pl-c1">0</span> ] <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>+<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8524"
class
    = "blob-num js-line-number"
    data - line - number = "8524" > < /td>
        < td
    id = "LC8524"
class
    = "blob-code blob-code-inner js-file-line" > dataType < span
class
    = "pl-k" >= < /span> dataType<span class="pl-k">.</s
    pan > slice( < span
class
    = "pl-c1" > 1 < /span> ) <span class="pl-k">||</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>*<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L8525"
class
    = "blob-num js-line-number"
    data - line - number = "8525" > < /td>
        < td
    id = "LC8525"
class
    = "blob-code blob-code-inner js-file-line" > (structure[dataType] < span
class
    = "pl-k" >= < /span> structure[ dataType ] <span class="pl-k">||</s
    pan > []
)<
    span
class
    = "pl-k" >
.<
    /span>unshift( func );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8526"
class
    = "blob-num js-line-number"
    data - line - number = "8526" > < /td>
        < td
    id = "LC8526"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8527"
class
    = "blob-num js-line-number"
    data - line - number = "8527" > < /td>
        < td
    id = "LC8527"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Otherwise append</span></td>
        < /tr>
        < tr >
        < td
    id = "L8528"
class
    = "blob-num js-line-number"
    data - line - number = "8528" > < /td>
        < td
    id = "LC8528"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8529"
class
= "blob-num js-line-number"
data - line - number = "8529" > < /td>
    < td
id = "LC8529"
class
= "blob-code blob-code-inner js-file-line" > (structure[dataType] < span
class
= "pl-k" >= < /span> structure[ dataType ] <span class="pl-k">||</s
pan > []
)<
span
class
= "pl-k" >
.<
/span>push( func );</
td >
< /tr>
< tr >
< td
id = "L8530"
class
= "blob-num js-line-number"
data - line - number = "8530" > < /td>
    < td
id = "LC8530"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8531"
class
= "blob-num js-line-number"
data - line - number = "8531" > < /td>
    < td
id = "LC8531"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8532"
class
= "blob-num js-line-number"
data - line - number = "8532" > < /td>
    < td
id = "LC8532"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8533"
class
= "blob-num js-line-number"
data - line - number = "8533" > < /td>
    < td
id = "LC8533"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8534"
class
= "blob-num js-line-number"
data - line - number = "8534" > < /td>
    < td
id = "LC8534"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8535"
class
= "blob-num js-line-number"
data - line - number = "8535" > < /td>
    < td
id = "LC8535"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8536"
class
= "blob-num js-line-number"
data - line - number = "8536" > < /td>
    < td
id = "LC8536"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Base inspection function for prefilters and transports</span></td>
    < /tr>
    < tr >
    < td
id = "L8537"
class
= "blob-num js-line-number"
data - line - number = "8537" > < /td>
    < td
id = "LC8537"
class
= "blob-code blob-code-inner js-file-line" > function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8538"
class
    = "blob-num js-line-number"
    data - line - number = "8538" > < /td>
        < td
    id = "LC8538"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8539"
class
    = "blob-num js-line-number"
    data - line - number = "8539" > < /td>
        < td
    id = "LC8539"
class
    = "blob-code blob-code-inner js-file-line" >
    var inspected
<
    span
class
    = "pl-k" >= < /span> {},</
    td >
    < /tr>
    < tr >
    < td
    id = "L8540"
class
    = "blob-num js-line-number"
    data - line - number = "8540" > < /td>
        < td
    id = "LC8540"
class
    = "blob-code blob-code-inner js-file-line" > seekingTransport < span
class
    = "pl-k" >= < /span> ( structure <span class="pl-k">===</s
    pan > transports
);
<
/td>
< /tr>
< tr >
< td
id = "L8541"
class
= "blob-num js-line-number"
data - line - number = "8541" > < /td>
    < td
id = "LC8541"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8542"
class
= "blob-num js-line-number"
data - line - number = "8542" > < /td>
    < td
id = "LC8542"
class
= "blob-code blob-code-inner js-file-line" > function inspect(dataType) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8543"
class
    = "blob-num js-line-number"
    data - line - number = "8543" > < /td>
        < td
    id = "LC8543"
class
    = "blob-code blob-code-inner js-file-line" >
    var selected;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8544"
class
    = "blob-num js-line-number"
    data - line - number = "8544" > < /td>
        < td
    id = "LC8544"
class
    = "blob-code blob-code-inner js-file-line" > inspected[dataType] < span
class
    = "pl-k" >= < /span> <span class="pl-c1">true</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8545"
class
    = "blob-num js-line-number"
    data - line - number = "8545" > < /td>
        < td
    id = "LC8545"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>each( structure[ dataType ] <span class="pl-k">||</s
    pan > [], function (_, prefilterOrFactory) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L8546"
    class
        = "blob-num js-line-number"
        data - line - number = "8546" > < /td>
            < td
        id = "LC8546"
    class
        = "blob-code blob-code-inner js-file-line" >
        var dataTypeOrTransport
    <
        span
    class
        = "pl-k" >= < /span> prefilterOrFactory( options, originalOptions, jqXHR );</
        td >
        < /tr>
        < tr >
        < td
        id = "L8547"
    class
        = "blob-num js-line-number"
        data - line - number = "8547" > < /td>
            < td
        id = "LC8547"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( typeof dataTypeOrTransport <span class="pl-k">===</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>string<span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">&amp;&amp;</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L8548"
    class
        = "blob-num js-line-number"
        data - line - number = "8548" > < /td>
            < td
        id = "LC8548"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" > ! < /span>seekingTransport <span class="pl-k">&amp;&amp;</s
        pan > < span
    class
        = "pl-k" > ! < /span>inspected[ dataTypeOrTransport ] ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L8549"
    class
        = "blob-num js-line-number"
        data - line - number = "8549" > < /td>
            < td
        id = "LC8549"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L8550"
    class
        = "blob-num js-line-number"
        data - line - number = "8550" > < /td>
            < td
        id = "LC8550"
    class
        = "blob-code blob-code-inner js-file-line" > options < span
    class
        = "pl-k" >
    .<
        /span>dataTypes<span class="pl-k">.</s
        pan > unshift(dataTypeOrTransport);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L8551"
    class
        = "blob-num js-line-number"
        data - line - number = "8551" > < /td>
            < td
        id = "LC8551"
    class
        = "blob-code blob-code-inner js-file-line" > inspect(dataTypeOrTransport);
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L8552"
    class
        = "blob-num js-line-number"
        data - line - number = "8552" > < /td>
            < td
        id = "LC8552"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-c1">false</s
        pan >;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L8553"
    class
        = "blob-num js-line-number"
        data - line - number = "8553" > < /td>
            < td
        id = "LC8553"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < span
class
    = "pl-k" >
else<
    /span> <span class="pl-k">if</s
    pan > (seekingTransport)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L8554"
    class
        = "blob-num js-line-number"
        data - line - number = "8554" > < /td>
            < td
        id = "LC8554"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> <span class="pl-k">!</s
        pan > (selected < span
    class
        = "pl-k" >= < /span> dataTypeOrTransport );</
        td >
        < /tr>
        < tr >
        < td
        id = "L8555"
    class
        = "blob-num js-line-number"
        data - line - number = "8555" > < /td>
            < td
        id = "LC8555"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8556"
class
    = "blob-num js-line-number"
    data - line - number = "8556" > < /td>
        < td
    id = "LC8556"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8557"
class
= "blob-num js-line-number"
data - line - number = "8557" > < /td>
    < td
id = "LC8557"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> selected;</
td >
< /tr>
< tr >
< td
id = "L8558"
class
= "blob-num js-line-number"
data - line - number = "8558" > < /td>
    < td
id = "LC8558"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8559"
class
= "blob-num js-line-number"
data - line - number = "8559" > < /td>
    < td
id = "LC8559"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8560"
class
= "blob-num js-line-number"
data - line - number = "8560" > < /td>
    < td
id = "LC8560"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> inspect( options<span class="pl-k">.</s
pan > dataTypes[ < span
class
= "pl-c1" > 0 < /span> ] ) <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>inspected[ <span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span> ] <span class="pl-k">&amp;&amp;</s
pan > inspect( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L8561"
class
= "blob-num js-line-number"
data - line - number = "8561" > < /td>
    < td
id = "LC8561"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8562"
class
= "blob-num js-line-number"
data - line - number = "8562" > < /td>
    < td
id = "LC8562"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8563"
class
= "blob-num js-line-number"
data - line - number = "8563" > < /td>
    < td
id = "LC8563"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> A special extend for ajax options</span></td>
    < /tr>
    < tr >
    < td
id = "L8564"
class
= "blob-num js-line-number"
data - line - number = "8564" > < /td>
    < td
id = "LC8564"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> that takes &quot;flat&quot; options (not to be deep extended)</span></td>
    < /tr>
    < tr >
    < td
id = "L8565"
class
= "blob-num js-line-number"
data - line - number = "8565" > < /td>
    < td
id = "LC8565"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fixes #9887</span></td>
    < /tr>
    < tr >
    < td
id = "L8566"
class
= "blob-num js-line-number"
data - line - number = "8566" > < /td>
    < td
id = "LC8566"
class
= "blob-code blob-code-inner js-file-line" > function ajaxExtend(target, src) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8567"
class
    = "blob-num js-line-number"
    data - line - number = "8567" > < /td>
        < td
    id = "LC8567"
class
    = "blob-code blob-code-inner js-file-line" >
    var key, deep, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L8568"
class
    = "blob-num js-line-number"
    data - line - number = "8568" > < /td>
        < td
    id = "LC8568"
class
    = "blob-code blob-code-inner js-file-line" > flatOptions < span
class
    = "pl-k" >= < /span> jQuery<span class="pl-k">.</s
    pan > ajaxSettings < span
class
    = "pl-k" >
.<
    /span>flatOptions <span class="pl-k">||</s
    pan > {};
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8569"
class
    = "blob-num js-line-number"
    data - line - number = "8569" > < /td>
        < td
    id = "LC8569"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8570"
class
    = "blob-num js-line-number"
    data - line - number = "8570" > < /td>
        < td
    id = "LC8570"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( key in src ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8571"
class
    = "blob-num js-line-number"
    data - line - number = "8571" > < /td>
        < td
    id = "LC8571"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( src[ key ] <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> undefined ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8572"
class
    = "blob-num js-line-number"
    data - line - number = "8572" > < /td>
        < td
    id = "LC8572"
class
    = "blob-code blob-code-inner js-file-line" > (flatOptions[key] < span
class
    = "pl-k" > ?
<
    /span> target <span class="pl-k">:</s
    pan > (deep < span
class
    = "pl-k" > || < /span> ( deep <span class="pl-k">=</s
    pan > {}
) ) )[key] < span
class
= "pl-k" >= < /span> src[ key ];</
td >
< /tr>
< tr >
< td
id = "L8573"
class
= "blob-num js-line-number"
data - line - number = "8573" > < /td>
    < td
id = "LC8573"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8574"
class
= "blob-num js-line-number"
data - line - number = "8574" > < /td>
    < td
id = "LC8574"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8575"
class
= "blob-num js-line-number"
data - line - number = "8575" > < /td>
    < td
id = "LC8575"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( deep ) {</
td >
< /tr>
< tr >
< td
id = "L8576"
class
= "blob-num js-line-number"
data - line - number = "8576" > < /td>
    < td
id = "LC8576"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( <span class="pl-c1">true</s
pan >, target, deep
)
;
<
/td>
< /tr>
< tr >
< td
id = "L8577"
class
= "blob-num js-line-number"
data - line - number = "8577" > < /td>
    < td
id = "LC8577"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8578"
class
= "blob-num js-line-number"
data - line - number = "8578" > < /td>
    < td
id = "LC8578"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8579"
class
= "blob-num js-line-number"
data - line - number = "8579" > < /td>
    < td
id = "LC8579"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> target;</
td >
< /tr>
< tr >
< td
id = "L8580"
class
= "blob-num js-line-number"
data - line - number = "8580" > < /td>
    < td
id = "LC8580"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8581"
class
= "blob-num js-line-number"
data - line - number = "8581" > < /td>
    < td
id = "LC8581"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8582"
class
= "blob-num js-line-number"
data - line - number = "8582" > < /td>
    < td
id = "LC8582"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> Handles responses to an ajax request:</span></td>
      </tr>
      <tr>
        <td id="L8583" class="blob-num js-line-number" data-line-number="8583"></td>
        <td id="LC8583" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - finds the right dataType (mediates between content-type and expected dataType)</span></td>
      </tr>
      <tr>
        <td id="L8584" class="blob-num js-line-number" data-line-number="8584"></td>
        <td id="LC8584" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - returns the corresponding response</span></td>
      </tr>
      <tr>
        <td id="L8585" class="blob-num js-line-number" data-line-number="8585"></td>
        <td id="LC8585" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L8586"
class
= "blob-num js-line-number"
data - line - number = "8586" > < /td>
    < td
id = "LC8586"
class
= "blob-code blob-code-inner js-file-line" > function ajaxHandleResponses(s, jqXHR, responses) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8587"
class
    = "blob-num js-line-number"
    data - line - number = "8587" > < /td>
        < td
    id = "LC8587"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8588"
class
    = "blob-num js-line-number"
    data - line - number = "8588" > < /td>
        < td
    id = "LC8588"
class
    = "blob-code blob-code-inner js-file-line" >
    var ct, type, finalDataType, firstDataType, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L8589"
class
    = "blob-num js-line-number"
    data - line - number = "8589" > < /td>
        < td
    id = "LC8589"
class
    = "blob-code blob-code-inner js-file-line" > contents < span
class
    = "pl-k" >= < /span> s<span class="pl-k">.</s
    pan > contents,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8590"
class
    = "blob-num js-line-number"
    data - line - number = "8590" > < /td>
        < td
    id = "LC8590"
class
    = "blob-code blob-code-inner js-file-line" > dataTypes < span
class
    = "pl-k" >= < /span> s<span class="pl-k">.</s
    pan > dataTypes;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8591"
class
    = "blob-num js-line-number"
    data - line - number = "8591" > < /td>
        < td
    id = "LC8591"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8592"
class
    = "blob-num js-line-number"
    data - line - number = "8592" > < /td>
        < td
    id = "LC8592"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Remove auto dataType and get content-type in the process</span></td>
        < /tr>
        < tr >
        < td
    id = "L8593"
class
    = "blob-num js-line-number"
    data - line - number = "8593" > < /td>
        < td
    id = "LC8593"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( dataTypes[ <span class="pl-c1">0</span> ] <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>*<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8594"
class
    = "blob-num js-line-number"
    data - line - number = "8594" > < /td>
        < td
    id = "LC8594"
class
    = "blob-code blob-code-inner js-file-line" > dataTypes < span
class
    = "pl-k" >
.<
    /span>shift();</
    td >
    < /tr>
    < tr >
    < td
    id = "L8595"
class
    = "blob-num js-line-number"
    data - line - number = "8595" > < /td>
        < td
    id = "LC8595"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( ct <span class="pl-k">===</s
    pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8596"
class
    = "blob-num js-line-number"
    data - line - number = "8596" > < /td>
        < td
    id = "LC8596"
class
    = "blob-code blob-code-inner js-file-line" > ct < span
class
    = "pl-k" >= < /span> s<span class="pl-k">.</s
    pan > mimeType < span
class
    = "pl-k" > || < /span> jqXHR<span class="pl-k">.</s
    pan > getResponseHeader( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>Content-Type<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8597"
class
    = "blob-num js-line-number"
    data - line - number = "8597" > < /td>
        < td
    id = "LC8597"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8598"
class
= "blob-num js-line-number"
data - line - number = "8598" > < /td>
    < td
id = "LC8598"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8599"
class
= "blob-num js-line-number"
data - line - number = "8599" > < /td>
    < td
id = "LC8599"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8600"
class
= "blob-num js-line-number"
data - line - number = "8600" > < /td>
    < td
id = "LC8600"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check if we&#39;re dealing with a known content-type</span></td>
    < /tr>
    < tr >
    < td
id = "L8601"
class
= "blob-num js-line-number"
data - line - number = "8601" > < /td>
    < td
id = "LC8601"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( ct ) {</
td >
< /tr>
< tr >
< td
id = "L8602"
class
= "blob-num js-line-number"
data - line - number = "8602" > < /td>
    < td
id = "LC8602"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( type in contents ) {</
td >
< /tr>
< tr >
< td
id = "L8603"
class
= "blob-num js-line-number"
data - line - number = "8603" > < /td>
    < td
id = "LC8603"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( contents[ type ] <span class="pl-k">&amp;&amp;</s
pan > contents[type] < span
class
= "pl-k" >
.<
/span>test( ct ) ) {</
td >
< /tr>
< tr >
< td
id = "L8604"
class
= "blob-num js-line-number"
data - line - number = "8604" > < /td>
    < td
id = "LC8604"
class
= "blob-code blob-code-inner js-file-line" > dataTypes < span
class
= "pl-k" >
.<
/span>unshift( type );</
td >
< /tr>
< tr >
< td
id = "L8605"
class
= "blob-num js-line-number"
data - line - number = "8605" > < /td>
    < td
id = "LC8605"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
break
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L8606"
class
= "blob-num js-line-number"
data - line - number = "8606" > < /td>
    < td
id = "LC8606"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8607"
class
= "blob-num js-line-number"
data - line - number = "8607" > < /td>
    < td
id = "LC8607"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8608"
class
= "blob-num js-line-number"
data - line - number = "8608" > < /td>
    < td
id = "LC8608"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8609"
class
= "blob-num js-line-number"
data - line - number = "8609" > < /td>
    < td
id = "LC8609"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8610"
class
= "blob-num js-line-number"
data - line - number = "8610" > < /td>
    < td
id = "LC8610"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check to see if we have a response for the expected dataType</span></td>
    < /tr>
    < tr >
    < td
id = "L8611"
class
= "blob-num js-line-number"
data - line - number = "8611" > < /td>
    < td
id = "LC8611"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( dataTypes[ <span class="pl-c1">0</span> ] in responses ) {</
td >
< /tr>
< tr >
< td
id = "L8612"
class
= "blob-num js-line-number"
data - line - number = "8612" > < /td>
    < td
id = "LC8612"
class
= "blob-code blob-code-inner js-file-line" > finalDataType < span
class
= "pl-k" >= < /span> dataTypes[ <span class="pl-c1">0</span> ];</
td >
< /tr>
< tr >
< td
id = "L8613"
class
= "blob-num js-line-number"
data - line - number = "8613" > < /td>
    < td
id = "LC8613"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8614"
class
= "blob-num js-line-number"
data - line - number = "8614" > < /td>
    < td
id = "LC8614"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8615"
class
= "blob-num js-line-number"
data - line - number = "8615" > < /td>
    < td
id = "LC8615"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Try convertible dataTypes</span></td>
    < /tr>
    < tr >
    < td
id = "L8616"
class
= "blob-num js-line-number"
data - line - number = "8616" > < /td>
    < td
id = "LC8616"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( type in responses ) {</
td >
< /tr>
< tr >
< td
id = "L8617"
class
= "blob-num js-line-number"
data - line - number = "8617" > < /td>
    < td
id = "LC8617"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > dataTypes[ < span
class
= "pl-c1" > 0 < /span> ] <span class="pl-k">||</s
pan > s < span
class
= "pl-k" >
.<
/span>converters[ type <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> dataTypes[ <span class="pl-c1">0</span> ] ] ) {</
td >
< /tr>
< tr >
< td
id = "L8618"
class
= "blob-num js-line-number"
data - line - number = "8618" > < /td>
    < td
id = "LC8618"
class
= "blob-code blob-code-inner js-file-line" > finalDataType < span
class
= "pl-k" >= < /span> type;</
td >
< /tr>
< tr >
< td
id = "L8619"
class
= "blob-num js-line-number"
data - line - number = "8619" > < /td>
    < td
id = "LC8619"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
break
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L8620"
class
= "blob-num js-line-number"
data - line - number = "8620" > < /td>
    < td
id = "LC8620"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8621"
class
= "blob-num js-line-number"
data - line - number = "8621" > < /td>
    < td
id = "LC8621"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > firstDataType
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8622"
class
    = "blob-num js-line-number"
    data - line - number = "8622" > < /td>
        < td
    id = "LC8622"
class
    = "blob-code blob-code-inner js-file-line" > firstDataType < span
class
    = "pl-k" >= < /span> type;</
    td >
    < /tr>
    < tr >
    < td
    id = "L8623"
class
    = "blob-num js-line-number"
    data - line - number = "8623" > < /td>
        < td
    id = "LC8623"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8624"
class
= "blob-num js-line-number"
data - line - number = "8624" > < /td>
    < td
id = "LC8624"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8625"
class
= "blob-num js-line-number"
data - line - number = "8625" > < /td>
    < td
id = "LC8625"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8626"
class
= "blob-num js-line-number"
data - line - number = "8626" > < /td>
    < td
id = "LC8626"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Or just use first one</span></td>
    < /tr>
    < tr >
    < td
id = "L8627"
class
= "blob-num js-line-number"
data - line - number = "8627" > < /td>
    < td
id = "LC8627"
class
= "blob-code blob-code-inner js-file-line" > finalDataType < span
class
= "pl-k" >= < /span> finalDataType <span class="pl-k">||</s
pan > firstDataType;
<
/td>
< /tr>
< tr >
< td
id = "L8628"
class
= "blob-num js-line-number"
data - line - number = "8628" > < /td>
    < td
id = "LC8628"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8629"
class
= "blob-num js-line-number"
data - line - number = "8629" > < /td>
    < td
id = "LC8629"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8630"
class
= "blob-num js-line-number"
data - line - number = "8630" > < /td>
    < td
id = "LC8630"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If we found a dataType</span></td>
    < /tr>
    < tr >
    < td
id = "L8631"
class
= "blob-num js-line-number"
data - line - number = "8631" > < /td>
    < td
id = "LC8631"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> We add the dataType to the list if needed</span></td>
    < /tr>
    < tr >
    < td
id = "L8632"
class
= "blob-num js-line-number"
data - line - number = "8632" > < /td>
    < td
id = "LC8632"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> and return the corresponding response</span></td>
    < /tr>
    < tr >
    < td
id = "L8633"
class
= "blob-num js-line-number"
data - line - number = "8633" > < /td>
    < td
id = "LC8633"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( finalDataType ) {</
td >
< /tr>
< tr >
< td
id = "L8634"
class
= "blob-num js-line-number"
data - line - number = "8634" > < /td>
    < td
id = "LC8634"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( finalDataType <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> dataTypes[ <span class="pl-c1">0</span> ] ) {</
td >
< /tr>
< tr >
< td
id = "L8635"
class
= "blob-num js-line-number"
data - line - number = "8635" > < /td>
    < td
id = "LC8635"
class
= "blob-code blob-code-inner js-file-line" > dataTypes < span
class
= "pl-k" >
.<
/span>unshift( finalDataType );</
td >
< /tr>
< tr >
< td
id = "L8636"
class
= "blob-num js-line-number"
data - line - number = "8636" > < /td>
    < td
id = "LC8636"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8637"
class
= "blob-num js-line-number"
data - line - number = "8637" > < /td>
    < td
id = "LC8637"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> responses[ finalDataType ];</
td >
< /tr>
< tr >
< td
id = "L8638"
class
= "blob-num js-line-number"
data - line - number = "8638" > < /td>
    < td
id = "LC8638"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8639"
class
= "blob-num js-line-number"
data - line - number = "8639" > < /td>
    < td
id = "LC8639"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8640"
class
= "blob-num js-line-number"
data - line - number = "8640" > < /td>
    < td
id = "LC8640"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8641"
class
= "blob-num js-line-number"
data - line - number = "8641" > < /td>
    < td
id = "LC8641"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span> Chain conversions given the request and the original response</span></td>
      </tr>
      <tr>
        <td id="L8642" class="blob-num js-line-number" data-line-number="8642"></td>
        <td id="LC8642" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Also sets the responseXXX fields on the jqXHR instance</span></td>
      </tr>
      <tr>
        <td id="L8643" class="blob-num js-line-number" data-line-number="8643"></td>
        <td id="LC8643" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L8644"
class
= "blob-num js-line-number"
data - line - number = "8644" > < /td>
    < td
id = "LC8644"
class
= "blob-code blob-code-inner js-file-line" > function ajaxConvert(s, response, jqXHR, isSuccess) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8645"
class
    = "blob-num js-line-number"
    data - line - number = "8645" > < /td>
        < td
    id = "LC8645"
class
    = "blob-code blob-code-inner js-file-line" >
    var conv2, current, conv, tmp, prev, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L8646"
class
    = "blob-num js-line-number"
    data - line - number = "8646" > < /td>
        < td
    id = "LC8646"
class
    = "blob-code blob-code-inner js-file-line" > converters < span
class
    = "pl-k" >= < /span> {},</
    td >
    < /tr>
    < tr >
    < td
    id = "L8647"
class
    = "blob-num js-line-number"
    data - line - number = "8647" > < /td>
        < td
    id = "LC8647"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8648"
class
    = "blob-num js-line-number"
    data - line - number = "8648" > < /td>
        < td
    id = "LC8648"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Work with a copy of dataTypes in case we need to modify it for conversion</span></td>
        < /tr>
        < tr >
        < td
    id = "L8649"
class
    = "blob-num js-line-number"
    data - line - number = "8649" > < /td>
        < td
    id = "LC8649"
class
    = "blob-code blob-code-inner js-file-line" > dataTypes < span
class
    = "pl-k" >= < /span> s<span class="pl-k">.</s
    pan > dataTypes < span
class
    = "pl-k" >
.<
    /span>slice();</
    td >
    < /tr>
    < tr >
    < td
    id = "L8650"
class
    = "blob-num js-line-number"
    data - line - number = "8650" > < /td>
        < td
    id = "LC8650"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8651"
class
    = "blob-num js-line-number"
    data - line - number = "8651" > < /td>
        < td
    id = "LC8651"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Create converters map with lowercased keys</span></td>
        < /tr>
        < tr >
        < td
    id = "L8652"
class
    = "blob-num js-line-number"
    data - line - number = "8652" > < /td>
        < td
    id = "LC8652"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( dataTypes[ <span class="pl-c1">1</span> ] ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8653"
class
    = "blob-num js-line-number"
    data - line - number = "8653" > < /td>
        < td
    id = "LC8653"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( conv in s<span class="pl-k">.</s
    pan > converters
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8654"
class
    = "blob-num js-line-number"
    data - line - number = "8654" > < /td>
        < td
    id = "LC8654"
class
    = "blob-code blob-code-inner js-file-line" > converters[conv < span
class
    = "pl-k" >
.<
    /span>toLowerCase() ] <span class="pl-k">=</s
    pan > s < span
class
    = "pl-k" >
.<
    /span>converters[ conv ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L8655"
class
    = "blob-num js-line-number"
    data - line - number = "8655" > < /td>
        < td
    id = "LC8655"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8656"
class
= "blob-num js-line-number"
data - line - number = "8656" > < /td>
    < td
id = "LC8656"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8657"
class
= "blob-num js-line-number"
data - line - number = "8657" > < /td>
    < td
id = "LC8657"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8658"
class
= "blob-num js-line-number"
data - line - number = "8658" > < /td>
    < td
id = "LC8658"
class
= "blob-code blob-code-inner js-file-line" > current < span
class
= "pl-k" >= < /span> dataTypes<span class="pl-k">.</s
pan > shift();
<
/td>
< /tr>
< tr >
< td
id = "L8659"
class
= "blob-num js-line-number"
data - line - number = "8659" > < /td>
    < td
id = "LC8659"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8660"
class
= "blob-num js-line-number"
data - line - number = "8660" > < /td>
    < td
id = "LC8660"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert to each sequential dataType</span></td>
    < /tr>
    < tr >
    < td
id = "L8661"
class
= "blob-num js-line-number"
data - line - number = "8661" > < /td>
    < td
id = "LC8661"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( current ) {</
td >
< /tr>
< tr >
< td
id = "L8662"
class
= "blob-num js-line-number"
data - line - number = "8662" > < /td>
    < td
id = "LC8662"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8663"
class
= "blob-num js-line-number"
data - line - number = "8663" > < /td>
    < td
id = "LC8663"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > responseFields[current]
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8664"
class
    = "blob-num js-line-number"
    data - line - number = "8664" > < /td>
        < td
    id = "LC8664"
class
    = "blob-code blob-code-inner js-file-line" > jqXHR[s < span
class
    = "pl-k" >
.<
    /span>responseFields[ current ] ] <span class="pl-k">=</s
    pan > response;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8665"
class
    = "blob-num js-line-number"
    data - line - number = "8665" > < /td>
        < td
    id = "LC8665"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8666"
class
= "blob-num js-line-number"
data - line - number = "8666" > < /td>
    < td
id = "LC8666"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8667"
class
= "blob-num js-line-number"
data - line - number = "8667" > < /td>
    < td
id = "LC8667"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Apply the dataFilter if provided</span></td>
    < /tr>
    < tr >
    < td
id = "L8668"
class
= "blob-num js-line-number"
data - line - number = "8668" > < /td>
    < td
id = "LC8668"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > prev < span
class
= "pl-k" > &amp;&amp; < /span> isSuccess <span class="pl-k">&amp;&amp;</s
pan > s < span
class
= "pl-k" >
.<
/span>dataFilter ) {</
td >
< /tr>
< tr >
< td
id = "L8669"
class
= "blob-num js-line-number"
data - line - number = "8669" > < /td>
    < td
id = "LC8669"
class
= "blob-code blob-code-inner js-file-line" > response < span
class
= "pl-k" >= < /span> s<span class="pl-k">.</s
pan > dataFilter(response, s < span
class
= "pl-k" >
.<
/span>dataType );</
td >
< /tr>
< tr >
< td
id = "L8670"
class
= "blob-num js-line-number"
data - line - number = "8670" > < /td>
    < td
id = "LC8670"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8671"
class
= "blob-num js-line-number"
data - line - number = "8671" > < /td>
    < td
id = "LC8671"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8672"
class
= "blob-num js-line-number"
data - line - number = "8672" > < /td>
    < td
id = "LC8672"
class
= "blob-code blob-code-inner js-file-line" > prev < span
class
= "pl-k" >= < /span> current;</
td >
< /tr>
< tr >
< td
id = "L8673"
class
= "blob-num js-line-number"
data - line - number = "8673" > < /td>
    < td
id = "LC8673"
class
= "blob-code blob-code-inner js-file-line" > current < span
class
= "pl-k" >= < /span> dataTypes<span class="pl-k">.</s
pan > shift();
<
/td>
< /tr>
< tr >
< td
id = "L8674"
class
= "blob-num js-line-number"
data - line - number = "8674" > < /td>
    < td
id = "LC8674"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8675"
class
= "blob-num js-line-number"
data - line - number = "8675" > < /td>
    < td
id = "LC8675"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( current ) {</
td >
< /tr>
< tr >
< td
id = "L8676"
class
= "blob-num js-line-number"
data - line - number = "8676" > < /td>
    < td
id = "LC8676"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8677"
class
= "blob-num js-line-number"
data - line - number = "8677" > < /td>
    < td
id = "LC8677"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> There&#39;s only work to do if current dataType is non-auto</span></td>
    < /tr>
    < tr >
    < td
id = "L8678"
class
= "blob-num js-line-number"
data - line - number = "8678" > < /td>
    < td
id = "LC8678"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( current <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L8679"
class
= "blob-num js-line-number"
data - line - number = "8679" > < /td>
    < td
id = "LC8679"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8680"
class
= "blob-num js-line-number"
data - line - number = "8680" > < /td>
    < td
id = "LC8680"
class
= "blob-code blob-code-inner js-file-line" > current < span
class
= "pl-k" >= < /span> prev;</
td >
< /tr>
< tr >
< td
id = "L8681"
class
= "blob-num js-line-number"
data - line - number = "8681" > < /td>
    < td
id = "LC8681"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8682"
class
= "blob-num js-line-number"
data - line - number = "8682" > < /td>
    < td
id = "LC8682"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert response if prev dataType is non-auto and differs from current</span></td>
    < /tr>
    < tr >
    < td
id = "L8683"
class
= "blob-num js-line-number"
data - line - number = "8683" > < /td>
    < td
id = "LC8683"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (prev < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > prev < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > current
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8684"
class
    = "blob-num js-line-number"
    data - line - number = "8684" > < /td>
        < td
    id = "LC8684"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8685"
class
    = "blob-num js-line-number"
    data - line - number = "8685" > < /td>
        < td
    id = "LC8685"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Seek a direct converter</span></td>
        < /tr>
        < tr >
        < td
    id = "L8686"
class
    = "blob-num js-line-number"
    data - line - number = "8686" > < /td>
        < td
    id = "LC8686"
class
    = "blob-code blob-code-inner js-file-line" > conv < span
class
    = "pl-k" >= < /span> converters[ prev <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> current ] <span class="pl-k">||</s
    pan > converters[ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>* <span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > current
]
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8687"
class
    = "blob-num js-line-number"
    data - line - number = "8687" > < /td>
        < td
    id = "LC8687"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8688"
class
    = "blob-num js-line-number"
    data - line - number = "8688" > < /td>
        < td
    id = "LC8688"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If none found, seek a pair</span></td>
        < /tr>
        < tr >
        < td
    id = "L8689"
class
    = "blob-num js-line-number"
    data - line - number = "8689" > < /td>
        < td
    id = "LC8689"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > conv
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8690"
class
    = "blob-num js-line-number"
    data - line - number = "8690" > < /td>
        < td
    id = "LC8690"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( conv2 in converters ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8691"
class
    = "blob-num js-line-number"
    data - line - number = "8691" > < /td>
        < td
    id = "LC8691"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8692"
class
    = "blob-num js-line-number"
    data - line - number = "8692" > < /td>
        < td
    id = "LC8692"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If conv2 outputs current</span></td>
        < /tr>
        < tr >
        < td
    id = "L8693"
class
    = "blob-num js-line-number"
    data - line - number = "8693" > < /td>
        < td
    id = "LC8693"
class
    = "blob-code blob-code-inner js-file-line" > tmp < span
class
    = "pl-k" >= < /span> conv2<span class="pl-k">.</s
    pan > split( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> <span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8694"
class
    = "blob-num js-line-number"
    data - line - number = "8694" > < /td>
        < td
    id = "LC8694"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( tmp[ <span class="pl-c1">1</span> ] <span class="pl-k">===</s
    pan > current
)
    {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L8695"
    class
        = "blob-num js-line-number"
        data - line - number = "8695" > < /td>
            < td
        id = "LC8695"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L8696"
    class
        = "blob-num js-line-number"
        data - line - number = "8696" > < /td>
            < td
        id = "LC8696"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> If prev can be converted to accepted input</span></td>
            < /tr>
            < tr >
            < td
        id = "L8697"
    class
        = "blob-num js-line-number"
        data - line - number = "8697" > < /td>
            < td
        id = "LC8697"
    class
        = "blob-code blob-code-inner js-file-line" > conv < span
    class
        = "pl-k" >= < /span> converters[ prev <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> tmp[ <span class="pl-c1">0</span> ] ] <span class="pl-k">||</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L8698"
    class
        = "blob-num js-line-number"
        data - line - number = "8698" > < /td>
            < td
        id = "LC8698"
    class
        = "blob-code blob-code-inner js-file-line" > converters[ < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>* <span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">+</s
        pan > tmp[ < span
    class
        = "pl-c1" > 0 < /span> ] ];</
        td >
        < /tr>
        < tr >
        < td
        id = "L8699"
    class
        = "blob-num js-line-number"
        data - line - number = "8699" > < /td>
            < td
        id = "LC8699"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( conv ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L8700"
    class
        = "blob-num js-line-number"
        data - line - number = "8700" > < /td>
            < td
        id = "LC8700"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L8701"
    class
        = "blob-num js-line-number"
        data - line - number = "8701" > < /td>
            < td
        id = "LC8701"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Condense equivalence converters</span></td>
            < /tr>
            < tr >
            < td
        id = "L8702"
    class
        = "blob-num js-line-number"
        data - line - number = "8702" > < /td>
            < td
        id = "LC8702"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( conv <span class="pl-k">===</s
        pan > < span
    class
        = "pl-c1" > true < /span> ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L8703"
    class
        = "blob-num js-line-number"
        data - line - number = "8703" > < /td>
            < td
        id = "LC8703"
    class
        = "blob-code blob-code-inner js-file-line" > conv < span
    class
        = "pl-k" >= < /span> converters[ conv2 ];</
        td >
        < /tr>
        < tr >
        < td
        id = "L8704"
    class
        = "blob-num js-line-number"
        data - line - number = "8704" > < /td>
            < td
        id = "LC8704"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L8705"
    class
        = "blob-num js-line-number"
        data - line - number = "8705" > < /td>
            < td
        id = "LC8705"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Otherwise, insert the intermediate dataType</span></td>
            < /tr>
            < tr >
            < td
        id = "L8706"
    class
        = "blob-num js-line-number"
        data - line - number = "8706" > < /td>
            < td
        id = "LC8706"
    class
        = "blob-code blob-code-inner js-file-line" >
    }
<
    span
class
    = "pl-k" >
else<
    /span> <span class="pl-k">if</s
    pan > (converters[conv2] < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > true < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8707"
class
    = "blob-num js-line-number"
    data - line - number = "8707" > < /td>
        < td
    id = "LC8707"
class
    = "blob-code blob-code-inner js-file-line" > current < span
class
    = "pl-k" >= < /span> tmp[ <span class="pl-c1">0</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L8708"
class
    = "blob-num js-line-number"
    data - line - number = "8708" > < /td>
        < td
    id = "LC8708"
class
    = "blob-code blob-code-inner js-file-line" > dataTypes < span
class
    = "pl-k" >
.<
    /span>unshift( tmp[ <span class="pl-c1">1</span> ] );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8709"
class
    = "blob-num js-line-number"
    data - line - number = "8709" > < /td>
        < td
    id = "LC8709"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8710"
class
= "blob-num js-line-number"
data - line - number = "8710" > < /td>
    < td
id = "LC8710"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
break
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L8711"
class
= "blob-num js-line-number"
data - line - number = "8711" > < /td>
    < td
id = "LC8711"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8712"
class
= "blob-num js-line-number"
data - line - number = "8712" > < /td>
    < td
id = "LC8712"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8713"
class
= "blob-num js-line-number"
data - line - number = "8713" > < /td>
    < td
id = "LC8713"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8714"
class
= "blob-num js-line-number"
data - line - number = "8714" > < /td>
    < td
id = "LC8714"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8715"
class
= "blob-num js-line-number"
data - line - number = "8715" > < /td>
    < td
id = "LC8715"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8716"
class
= "blob-num js-line-number"
data - line - number = "8716" > < /td>
    < td
id = "LC8716"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Apply converter (if not an equivalence)</span></td>
    < /tr>
    < tr >
    < td
id = "L8717"
class
= "blob-num js-line-number"
data - line - number = "8717" > < /td>
    < td
id = "LC8717"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( conv <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">true</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8718"
class
    = "blob-num js-line-number"
    data - line - number = "8718" > < /td>
        < td
    id = "LC8718"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8719"
class
    = "blob-num js-line-number"
    data - line - number = "8719" > < /td>
        < td
    id = "LC8719"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Unless errors are allowed to bubble, catch and return them</span></td>
        < /tr>
        < tr >
        < td
    id = "L8720"
class
    = "blob-num js-line-number"
    data - line - number = "8720" > < /td>
        < td
    id = "LC8720"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( conv <span class="pl-k">&amp;&amp;</s
    pan > s < span
class
    = "pl-k" >
.<
    /span>throws ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8721"
class
    = "blob-num js-line-number"
    data - line - number = "8721" > < /td>
        < td
    id = "LC8721"
class
    = "blob-code blob-code-inner js-file-line" > response < span
class
    = "pl-k" >= < /span> conv( response );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8722"
class
    = "blob-num js-line-number"
    data - line - number = "8722" > < /td>
        < td
    id = "LC8722"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8723"
class
= "blob-num js-line-number"
data - line - number = "8723" > < /td>
    < td
id = "LC8723"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
try
<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8724"
class
= "blob-num js-line-number"
data - line - number = "8724" > < /td>
    < td
id = "LC8724"
class
= "blob-code blob-code-inner js-file-line" > response < span
class
= "pl-k" >= < /span> conv( response );</
td >
< /tr>
< tr >
< td
id = "L8725"
class
= "blob-num js-line-number"
data - line - number = "8725" > < /td>
    < td
id = "LC8725"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> ( e ) {</
td >
< /tr>
< tr >
< td
id = "L8726"
class
= "blob-num js-line-number"
data - line - number = "8726" > < /td>
    < td
id = "LC8726"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8727"
class
= "blob-num js-line-number"
data - line - number = "8727" > < /td>
    < td
id = "LC8727"
class
= "blob-code blob-code-inner js-file-line" > state < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > parsererror < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8728"
class
= "blob-num js-line-number"
data - line - number = "8728" > < /td>
    < td
id = "LC8728"
class
= "blob-code blob-code-inner js-file-line" > error < span
class
= "pl-k" >
:<
/span> conv <span class="pl-k">?</s
pan > e < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > No
conversion
from < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> prev <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> to <span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > current < /td>
< /tr>
< tr >
< td
id = "L8729"
class
= "blob-num js-line-number"
data - line - number = "8729" > < /td>
    < td
id = "LC8729"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8730"
class
= "blob-num js-line-number"
data - line - number = "8730" > < /td>
    < td
id = "LC8730"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8731"
class
= "blob-num js-line-number"
data - line - number = "8731" > < /td>
    < td
id = "LC8731"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8732"
class
= "blob-num js-line-number"
data - line - number = "8732" > < /td>
    < td
id = "LC8732"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8733"
class
= "blob-num js-line-number"
data - line - number = "8733" > < /td>
    < td
id = "LC8733"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8734"
class
= "blob-num js-line-number"
data - line - number = "8734" > < /td>
    < td
id = "LC8734"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8735"
class
= "blob-num js-line-number"
data - line - number = "8735" > < /td>
    < td
id = "LC8735"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8736"
class
= "blob-num js-line-number"
data - line - number = "8736" > < /td>
    < td
id = "LC8736"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8737"
class
= "blob-num js-line-number"
data - line - number = "8737" > < /td>
    < td
id = "LC8737"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> { state<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>success<span class="pl-pds">&quot;</s
pan > < /span>, data<span class="pl-k">:</s
pan > response
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8738"
class
= "blob-num js-line-number"
data - line - number = "8738" > < /td>
    < td
id = "LC8738"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8739"
class
= "blob-num js-line-number"
data - line - number = "8739" > < /td>
    < td
id = "LC8739"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8740"
class
= "blob-num js-line-number"
data - line - number = "8740" > < /td>
    < td
id = "LC8740"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L8741"
class
= "blob-num js-line-number"
data - line - number = "8741" > < /td>
    < td
id = "LC8741"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8742"
class
= "blob-num js-line-number"
data - line - number = "8742" > < /td>
    < td
id = "LC8742"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Counter for holding the number of active queries</span></td>
    < /tr>
    < tr >
    < td
id = "L8743"
class
= "blob-num js-line-number"
data - line - number = "8743" > < /td>
    < td
id = "LC8743"
class
= "blob-code blob-code-inner js-file-line" > active < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8744"
class
= "blob-num js-line-number"
data - line - number = "8744" > < /td>
    < td
id = "LC8744"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8745"
class
= "blob-num js-line-number"
data - line - number = "8745" > < /td>
    < td
id = "LC8745"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Last-Modified header cache for next request</span></td>
    < /tr>
    < tr >
    < td
id = "L8746"
class
= "blob-num js-line-number"
data - line - number = "8746" > < /td>
    < td
id = "LC8746"
class
= "blob-code blob-code-inner js-file-line" > lastModified < span
class
= "pl-k" >
:<
/span> {},</
td >
< /tr>
< tr >
< td
id = "L8747"
class
= "blob-num js-line-number"
data - line - number = "8747" > < /td>
    < td
id = "LC8747"
class
= "blob-code blob-code-inner js-file-line" > etag < span
class
= "pl-k" >
:<
/span> {},</
td >
< /tr>
< tr >
< td
id = "L8748"
class
= "blob-num js-line-number"
data - line - number = "8748" > < /td>
    < td
id = "LC8748"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8749"
class
= "blob-num js-line-number"
data - line - number = "8749" > < /td>
    < td
id = "LC8749"
class
= "blob-code blob-code-inner js-file-line" > ajaxSettings < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8750"
class
= "blob-num js-line-number"
data - line - number = "8750" > < /td>
    < td
id = "LC8750"
class
= "blob-code blob-code-inner js-file-line" > url < span
class
= "pl-k" >
:<
/span> location<span class="pl-k">.</s
pan > href,
<
/td>
< /tr>
< tr >
< td
id = "L8751"
class
= "blob-num js-line-number"
data - line - number = "8751" > < /td>
    < td
id = "LC8751"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > GET < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8752"
class
= "blob-num js-line-number"
data - line - number = "8752" > < /td>
    < td
id = "LC8752"
class
= "blob-code blob-code-inner js-file-line" > isLocal < span
class
= "pl-k" >
:<
/span> rlocalProtocol<span class="pl-k">.</s
pan > test(location < span
class
= "pl-k" >
.<
/span>protocol ),</
td >
< /tr>
< tr >
< td
id = "L8753"
class
= "blob-num js-line-number"
data - line - number = "8753" > < /td>
    < td
id = "LC8753"
class
= "blob-code blob-code-inner js-file-line" > global < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8754"
class
= "blob-num js-line-number"
data - line - number = "8754" > < /td>
    < td
id = "LC8754"
class
= "blob-code blob-code-inner js-file-line" > processData < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8755"
class
= "blob-num js-line-number"
data - line - number = "8755" > < /td>
    < td
id = "LC8755"
class
= "blob-code blob-code-inner js-file-line" > async < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8756"
class
= "blob-num js-line-number"
data - line - number = "8756" > < /td>
    < td
id = "LC8756"
class
= "blob-code blob-code-inner js-file-line" > contentType < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > application / x - www - form - urlencoded;
charset = UTF - 8 < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8757"
class
= "blob-num js-line-number"
data - line - number = "8757" > < /td>
    < td
id = "LC8757"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8758"
class
= "blob-num js-line-number"
data - line - number = "8758" > < /td>
    < td
id = "LC8758"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/*</span></span></td>
      </tr>
      <tr>
        <td id="L8759" class="blob-num js-line-number" data-line-number="8759"></td>
        <td id="LC8759" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             timeout: 0,</span></td>
      </tr>
      <tr>
        <td id="L8760" class="blob-num js-line-number" data-line-number="8760"></td>
        <td id="LC8760" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             data: null,</span></td>
      </tr>
      <tr>
        <td id="L8761" class="blob-num js-line-number" data-line-number="8761"></td>
        <td id="LC8761" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             dataType: null,</span></td>
      </tr>
      <tr>
        <td id="L8762" class="blob-num js-line-number" data-line-number="8762"></td>
        <td id="LC8762" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             username: null,</span></td>
      </tr>
      <tr>
        <td id="L8763" class="blob-num js-line-number" data-line-number="8763"></td>
        <td id="LC8763" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             password: null,</span></td>
      </tr>
      <tr>
        <td id="L8764" class="blob-num js-line-number" data-line-number="8764"></td>
        <td id="LC8764" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             cache: null,</span></td>
      </tr>
      <tr>
        <td id="L8765" class="blob-num js-line-number" data-line-number="8765"></td>
        <td id="LC8765" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             throws: false,</span></td>
      </tr>
      <tr>
        <td id="L8766" class="blob-num js-line-number" data-line-number="8766"></td>
        <td id="LC8766" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             traditional: false,</span></td>
      </tr>
      <tr>
        <td id="L8767" class="blob-num js-line-number" data-line-number="8767"></td>
        <td id="LC8767" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             headers: {},</span></td>
      </tr>
      <tr>
        <td id="L8768" class="blob-num js-line-number" data-line-number="8768"></td>
        <td id="LC8768" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L8769"
class
= "blob-num js-line-number"
data - line - number = "8769" > < /td>
    < td
id = "LC8769"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8770"
class
= "blob-num js-line-number"
data - line - number = "8770" > < /td>
    < td
id = "LC8770"
class
= "blob-code blob-code-inner js-file-line" > accepts < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8771"
class
= "blob-num js-line-number"
data - line - number = "8771" > < /td>
    < td
id = "LC8771"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > allTypes,
<
/td>
< /tr>
< tr >
< td
id = "L8772"
class
= "blob-num js-line-number"
data - line - number = "8772" > < /td>
    < td
id = "LC8772"
class
= "blob-code blob-code-inner js-file-line" > text < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > text / plain < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8773"
class
= "blob-num js-line-number"
data - line - number = "8773" > < /td>
    < td
id = "LC8773"
class
= "blob-code blob-code-inner js-file-line" > html < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > text / html < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8774"
class
= "blob-num js-line-number"
data - line - number = "8774" > < /td>
    < td
id = "LC8774"
class
= "blob-code blob-code-inner js-file-line" > xml < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > application / xml, text / xml < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8775"
class
= "blob-num js-line-number"
data - line - number = "8775" > < /td>
    < td
id = "LC8775"
class
= "blob-code blob-code-inner js-file-line" > json < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > application / json, text / javascript < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L8776"
class
= "blob-num js-line-number"
data - line - number = "8776" > < /td>
    < td
id = "LC8776"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8777"
class
= "blob-num js-line-number"
data - line - number = "8777" > < /td>
    < td
id = "LC8777"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8778"
class
= "blob-num js-line-number"
data - line - number = "8778" > < /td>
    < td
id = "LC8778"
class
= "blob-code blob-code-inner js-file-line" > contents < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8779"
class
= "blob-num js-line-number"
data - line - number = "8779" > < /td>
    < td
id = "LC8779"
class
= "blob-code blob-code-inner js-file-line" > xml < span
class
= "pl-k" >
:<
/span> <span class="pl-k">/ < /span>\bxml\b<span class="pl-k">/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L8780"
class
= "blob-num js-line-number"
data - line - number = "8780" > < /td>
    < td
id = "LC8780"
class
= "blob-code blob-code-inner js-file-line" > html < span
class
= "pl-k" >
:<
/span> <span class="pl-k">/ < /span>\bhtml<span class="pl-k">/ < /span>,</
td >
< /tr>
< tr >
< td
id = "L8781"
class
= "blob-num js-line-number"
data - line - number = "8781" > < /td>
    < td
id = "LC8781"
class
= "blob-code blob-code-inner js-file-line" > json < span
class
= "pl-k" >
:<
/span> <span class="pl-k">/ < /span>\bjson\b<span class="pl-k">/ < /span></
td >
< /tr>
< tr >
< td
id = "L8782"
class
= "blob-num js-line-number"
data - line - number = "8782" > < /td>
    < td
id = "LC8782"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8783"
class
= "blob-num js-line-number"
data - line - number = "8783" > < /td>
    < td
id = "LC8783"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8784"
class
= "blob-num js-line-number"
data - line - number = "8784" > < /td>
    < td
id = "LC8784"
class
= "blob-code blob-code-inner js-file-line" > responseFields < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8785"
class
= "blob-num js-line-number"
data - line - number = "8785" > < /td>
    < td
id = "LC8785"
class
= "blob-code blob-code-inner js-file-line" > xml < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > responseXML < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8786"
class
= "blob-num js-line-number"
data - line - number = "8786" > < /td>
    < td
id = "LC8786"
class
= "blob-code blob-code-inner js-file-line" > text < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > responseText < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8787"
class
= "blob-num js-line-number"
data - line - number = "8787" > < /td>
    < td
id = "LC8787"
class
= "blob-code blob-code-inner js-file-line" > json < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > responseJSON < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L8788"
class
= "blob-num js-line-number"
data - line - number = "8788" > < /td>
    < td
id = "LC8788"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8789"
class
= "blob-num js-line-number"
data - line - number = "8789" > < /td>
    < td
id = "LC8789"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8790"
class
= "blob-num js-line-number"
data - line - number = "8790" > < /td>
    < td
id = "LC8790"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Data converters</span></td>
    < /tr>
    < tr >
    < td
id = "L8791"
class
= "blob-num js-line-number"
data - line - number = "8791" > < /td>
    < td
id = "LC8791"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Keys separate source (or catchall &quot;*&quot;) and destination types with a single space</span></td>
    < /tr>
    < tr >
    < td
id = "L8792"
class
= "blob-num js-line-number"
data - line - number = "8792" > < /td>
    < td
id = "LC8792"
class
= "blob-code blob-code-inner js-file-line" > converters < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8793"
class
= "blob-num js-line-number"
data - line - number = "8793" > < /td>
    < td
id = "LC8793"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8794"
class
= "blob-num js-line-number"
data - line - number = "8794" > < /td>
    < td
id = "LC8794"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert anything to text</span></td>
    < /tr>
    < tr >
    < td
id = "L8795"
class
= "blob-num js-line-number"
data - line - number = "8795" > < /td>
    < td
id = "LC8795"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>* text<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-smi" > String < /span>,</
td >
< /tr>
< tr >
< td
id = "L8796"
class
= "blob-num js-line-number"
data - line - number = "8796" > < /td>
    < td
id = "LC8796"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8797"
class
= "blob-num js-line-number"
data - line - number = "8797" > < /td>
    < td
id = "LC8797"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Text to html (true = no transformation)</span></td>
    < /tr>
    < tr >
    < td
id = "L8798"
class
= "blob-num js-line-number"
data - line - number = "8798" > < /td>
    < td
id = "LC8798"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>text html<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > true < /span>,</
td >
< /tr>
< tr >
< td
id = "L8799"
class
= "blob-num js-line-number"
data - line - number = "8799" > < /td>
    < td
id = "LC8799"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8800"
class
= "blob-num js-line-number"
data - line - number = "8800" > < /td>
    < td
id = "LC8800"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Evaluate text as a json expression</span></td>
    < /tr>
    < tr >
    < td
id = "L8801"
class
= "blob-num js-line-number"
data - line - number = "8801" > < /td>
    < td
id = "LC8801"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>text json<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > JSON < /span><span class="pl-k">.</s
pan > parse,
<
/td>
< /tr>
< tr >
< td
id = "L8802"
class
= "blob-num js-line-number"
data - line - number = "8802" > < /td>
    < td
id = "LC8802"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8803"
class
= "blob-num js-line-number"
data - line - number = "8803" > < /td>
    < td
id = "LC8803"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Parse text as xml</span></td>
    < /tr>
    < tr >
    < td
id = "L8804"
class
= "blob-num js-line-number"
data - line - number = "8804" > < /td>
    < td
id = "LC8804"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>text xml<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>parseXML</
td >
< /tr>
< tr >
< td
id = "L8805"
class
= "blob-num js-line-number"
data - line - number = "8805" > < /td>
    < td
id = "LC8805"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8806"
class
= "blob-num js-line-number"
data - line - number = "8806" > < /td>
    < td
id = "LC8806"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8807"
class
= "blob-num js-line-number"
data - line - number = "8807" > < /td>
    < td
id = "LC8807"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> For options that shouldn&#39;t be deep extended:</span></td>
    < /tr>
    < tr >
    < td
id = "L8808"
class
= "blob-num js-line-number"
data - line - number = "8808" > < /td>
    < td
id = "LC8808"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> you can add your own custom options here if</span></td>
    < /tr>
    < tr >
    < td
id = "L8809"
class
= "blob-num js-line-number"
data - line - number = "8809" > < /td>
    < td
id = "LC8809"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> and when you create one that shouldn&#39;t be</span></td>
    < /tr>
    < tr >
    < td
id = "L8810"
class
= "blob-num js-line-number"
data - line - number = "8810" > < /td>
    < td
id = "LC8810"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> deep extended (see ajaxExtend)</span></td>
    < /tr>
    < tr >
    < td
id = "L8811"
class
= "blob-num js-line-number"
data - line - number = "8811" > < /td>
    < td
id = "LC8811"
class
= "blob-code blob-code-inner js-file-line" > flatOptions < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8812"
class
= "blob-num js-line-number"
data - line - number = "8812" > < /td>
    < td
id = "LC8812"
class
= "blob-code blob-code-inner js-file-line" > url < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8813"
class
= "blob-num js-line-number"
data - line - number = "8813" > < /td>
    < td
id = "LC8813"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">true</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8814"
class
= "blob-num js-line-number"
data - line - number = "8814" > < /td>
    < td
id = "LC8814"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8815"
class
= "blob-num js-line-number"
data - line - number = "8815" > < /td>
    < td
id = "LC8815"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8816"
class
= "blob-num js-line-number"
data - line - number = "8816" > < /td>
    < td
id = "LC8816"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8817"
class
= "blob-num js-line-number"
data - line - number = "8817" > < /td>
    < td
id = "LC8817"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Creates a full fledged settings object into target</span></td>
    < /tr>
    < tr >
    < td
id = "L8818"
class
= "blob-num js-line-number"
data - line - number = "8818" > < /td>
    < td
id = "LC8818"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> with both ajaxSettings and settings fields.</span></td>
    < /tr>
    < tr >
    < td
id = "L8819"
class
= "blob-num js-line-number"
data - line - number = "8819" > < /td>
    < td
id = "LC8819"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If target is omitted, writes into ajaxSettings.</span></td>
    < /tr>
    < tr >
    < td
id = "L8820"
class
= "blob-num js-line-number"
data - line - number = "8820" > < /td>
    < td
id = "LC8820"
class
= "blob-code blob-code-inner js-file-line" > ajaxSetup < span
class
= "pl-k" >
:<
/span> function( target, settings ) {</
td >
< /tr>
< tr >
< td
id = "L8821"
class
= "blob-num js-line-number"
data - line - number = "8821" > < /td>
    < td
id = "LC8821"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> settings <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8822"
class
= "blob-num js-line-number"
data - line - number = "8822" > < /td>
    < td
id = "LC8822"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8823"
class
= "blob-num js-line-number"
data - line - number = "8823" > < /td>
    < td
id = "LC8823"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Building a settings object</span></td>
    < /tr>
    < tr >
    < td
id = "L8824"
class
= "blob-num js-line-number"
data - line - number = "8824" > < /td>
    < td
id = "LC8824"
class
= "blob-code blob-code-inner js-file-line" > ajaxExtend(ajaxExtend(target, jQuery < span
class
= "pl-k" >
.<
/span>ajaxSettings ), settings ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8825"
class
= "blob-num js-line-number"
data - line - number = "8825" > < /td>
    < td
id = "LC8825"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8826"
class
= "blob-num js-line-number"
data - line - number = "8826" > < /td>
    < td
id = "LC8826"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Extending ajaxSettings</span></td>
    < /tr>
    < tr >
    < td
id = "L8827"
class
= "blob-num js-line-number"
data - line - number = "8827" > < /td>
    < td
id = "LC8827"
class
= "blob-code blob-code-inner js-file-line" > ajaxExtend(jQuery < span
class
= "pl-k" >
.<
/span>ajaxSettings, target );</
td >
< /tr>
< tr >
< td
id = "L8828"
class
= "blob-num js-line-number"
data - line - number = "8828" > < /td>
    < td
id = "LC8828"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8829"
class
= "blob-num js-line-number"
data - line - number = "8829" > < /td>
    < td
id = "LC8829"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8830"
class
= "blob-num js-line-number"
data - line - number = "8830" > < /td>
    < td
id = "LC8830"
class
= "blob-code blob-code-inner js-file-line" > ajaxPrefilter < span
class
= "pl-k" >
:<
/span> addToPrefiltersOrTransports( prefilters ),</
td >
< /tr>
< tr >
< td
id = "L8831"
class
= "blob-num js-line-number"
data - line - number = "8831" > < /td>
    < td
id = "LC8831"
class
= "blob-code blob-code-inner js-file-line" > ajaxTransport < span
class
= "pl-k" >
:<
/span> addToPrefiltersOrTransports( transports ),</
td >
< /tr>
< tr >
< td
id = "L8832"
class
= "blob-num js-line-number"
data - line - number = "8832" > < /td>
    < td
id = "LC8832"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8833"
class
= "blob-num js-line-number"
data - line - number = "8833" > < /td>
    < td
id = "LC8833"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Main method</span></td>
    < /tr>
    < tr >
    < td
id = "L8834"
class
= "blob-num js-line-number"
data - line - number = "8834" > < /td>
    < td
id = "LC8834"
class
= "blob-code blob-code-inner js-file-line" > ajax < span
class
= "pl-k" >
:<
/span> function( url, options ) {</
td >
< /tr>
< tr >
< td
id = "L8835"
class
= "blob-num js-line-number"
data - line - number = "8835" > < /td>
    < td
id = "LC8835"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8836"
class
= "blob-num js-line-number"
data - line - number = "8836" > < /td>
    < td
id = "LC8836"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If url is an object, simulate pre-1.5 signature</span></td>
    < /tr>
    < tr >
    < td
id = "L8837"
class
= "blob-num js-line-number"
data - line - number = "8837" > < /td>
    < td
id = "LC8837"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof url <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L8838"
class
= "blob-num js-line-number"
data - line - number = "8838" > < /td>
    < td
id = "LC8838"
class
= "blob-code blob-code-inner js-file-line" > options < span
class
= "pl-k" >= < /span> url;</
td >
< /tr>
< tr >
< td
id = "L8839"
class
= "blob-num js-line-number"
data - line - number = "8839" > < /td>
    < td
id = "LC8839"
class
= "blob-code blob-code-inner js-file-line" > url < span
class
= "pl-k" >= < /span> undefined;</
td >
< /tr>
< tr >
< td
id = "L8840"
class
= "blob-num js-line-number"
data - line - number = "8840" > < /td>
    < td
id = "LC8840"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8841"
class
= "blob-num js-line-number"
data - line - number = "8841" > < /td>
    < td
id = "LC8841"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8842"
class
= "blob-num js-line-number"
data - line - number = "8842" > < /td>
    < td
id = "LC8842"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Force options to be an object</span></td>
    < /tr>
    < tr >
    < td
id = "L8843"
class
= "blob-num js-line-number"
data - line - number = "8843" > < /td>
    < td
id = "LC8843"
class
= "blob-code blob-code-inner js-file-line" > options < span
class
= "pl-k" >= < /span> options <span class="pl-k">||</s
pan > {};
<
/td>
< /tr>
< tr >
< td
id = "L8844"
class
= "blob-num js-line-number"
data - line - number = "8844" > < /td>
    < td
id = "LC8844"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8845"
class
= "blob-num js-line-number"
data - line - number = "8845" > < /td>
    < td
id = "LC8845"
class
= "blob-code blob-code-inner js-file-line" >
var transport, <
/td>
< /tr>
< tr >
< td
id = "L8846"
class
= "blob-num js-line-number"
data - line - number = "8846" > < /td>
    < td
id = "LC8846"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8847"
class
= "blob-num js-line-number"
data - line - number = "8847" > < /td>
    < td
id = "LC8847"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> URL without anti-cache param</span></td>
    < /tr>
    < tr >
    < td
id = "L8848"
class
= "blob-num js-line-number"
data - line - number = "8848" > < /td>
    < td
id = "LC8848"
class
= "blob-code blob-code-inner js-file-line" > cacheURL,
<
/td>
< /tr>
< tr >
< td
id = "L8849"
class
= "blob-num js-line-number"
data - line - number = "8849" > < /td>
    < td
id = "LC8849"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8850"
class
= "blob-num js-line-number"
data - line - number = "8850" > < /td>
    < td
id = "LC8850"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Response headers</span></td>
    < /tr>
    < tr >
    < td
id = "L8851"
class
= "blob-num js-line-number"
data - line - number = "8851" > < /td>
    < td
id = "LC8851"
class
= "blob-code blob-code-inner js-file-line" > responseHeadersString,
<
/td>
< /tr>
< tr >
< td
id = "L8852"
class
= "blob-num js-line-number"
data - line - number = "8852" > < /td>
    < td
id = "LC8852"
class
= "blob-code blob-code-inner js-file-line" > responseHeaders,
<
/td>
< /tr>
< tr >
< td
id = "L8853"
class
= "blob-num js-line-number"
data - line - number = "8853" > < /td>
    < td
id = "LC8853"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8854"
class
= "blob-num js-line-number"
data - line - number = "8854" > < /td>
    < td
id = "LC8854"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> timeout handle</span></td>
    < /tr>
    < tr >
    < td
id = "L8855"
class
= "blob-num js-line-number"
data - line - number = "8855" > < /td>
    < td
id = "LC8855"
class
= "blob-code blob-code-inner js-file-line" > timeoutTimer,
<
/td>
< /tr>
< tr >
< td
id = "L8856"
class
= "blob-num js-line-number"
data - line - number = "8856" > < /td>
    < td
id = "LC8856"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8857"
class
= "blob-num js-line-number"
data - line - number = "8857" > < /td>
    < td
id = "LC8857"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Url cleanup var</span></td>
    < /tr>
    < tr >
    < td
id = "L8858"
class
= "blob-num js-line-number"
data - line - number = "8858" > < /td>
    < td
id = "LC8858"
class
= "blob-code blob-code-inner js-file-line" > urlAnchor,
<
/td>
< /tr>
< tr >
< td
id = "L8859"
class
= "blob-num js-line-number"
data - line - number = "8859" > < /td>
    < td
id = "LC8859"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8860"
class
= "blob-num js-line-number"
data - line - number = "8860" > < /td>
    < td
id = "LC8860"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Request state (becomes false upon send and true upon completion)</span></td>
    < /tr>
    < tr >
    < td
id = "L8861"
class
= "blob-num js-line-number"
data - line - number = "8861" > < /td>
    < td
id = "LC8861"
class
= "blob-code blob-code-inner js-file-line" > completed,
<
/td>
< /tr>
< tr >
< td
id = "L8862"
class
= "blob-num js-line-number"
data - line - number = "8862" > < /td>
    < td
id = "LC8862"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8863"
class
= "blob-num js-line-number"
data - line - number = "8863" > < /td>
    < td
id = "LC8863"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> To know if global events are to be dispatched</span></td>
    < /tr>
    < tr >
    < td
id = "L8864"
class
= "blob-num js-line-number"
data - line - number = "8864" > < /td>
    < td
id = "LC8864"
class
= "blob-code blob-code-inner js-file-line" > fireGlobals,
<
/td>
< /tr>
< tr >
< td
id = "L8865"
class
= "blob-num js-line-number"
data - line - number = "8865" > < /td>
    < td
id = "LC8865"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8866"
class
= "blob-num js-line-number"
data - line - number = "8866" > < /td>
    < td
id = "LC8866"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Loop variable</span></td>
    < /tr>
    < tr >
    < td
id = "L8867"
class
= "blob-num js-line-number"
data - line - number = "8867" > < /td>
    < td
id = "LC8867"
class
= "blob-code blob-code-inner js-file-line" > i,
<
/td>
< /tr>
< tr >
< td
id = "L8868"
class
= "blob-num js-line-number"
data - line - number = "8868" > < /td>
    < td
id = "LC8868"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8869"
class
= "blob-num js-line-number"
data - line - number = "8869" > < /td>
    < td
id = "LC8869"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> uncached part of the url</span></td>
    < /tr>
    < tr >
    < td
id = "L8870"
class
= "blob-num js-line-number"
data - line - number = "8870" > < /td>
    < td
id = "LC8870"
class
= "blob-code blob-code-inner js-file-line" > uncached,
<
/td>
< /tr>
< tr >
< td
id = "L8871"
class
= "blob-num js-line-number"
data - line - number = "8871" > < /td>
    < td
id = "LC8871"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8872"
class
= "blob-num js-line-number"
data - line - number = "8872" > < /td>
    < td
id = "LC8872"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Create the final options object</span></td>
    < /tr>
    < tr >
    < td
id = "L8873"
class
= "blob-num js-line-number"
data - line - number = "8873" > < /td>
    < td
id = "LC8873"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > ajaxSetup({}, options),
<
/td>
< /tr>
< tr >
< td
id = "L8874"
class
= "blob-num js-line-number"
data - line - number = "8874" > < /td>
    < td
id = "LC8874"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8875"
class
= "blob-num js-line-number"
data - line - number = "8875" > < /td>
    < td
id = "LC8875"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Callbacks context</span></td>
    < /tr>
    < tr >
    < td
id = "L8876"
class
= "blob-num js-line-number"
data - line - number = "8876" > < /td>
    < td
id = "LC8876"
class
= "blob-code blob-code-inner js-file-line" > callbackContext < span
class
= "pl-k" >= < /span> s<span class="pl-k">.</s
pan > context < span
class
= "pl-k" > || < /span> s,</
td >
< /tr>
< tr >
< td
id = "L8877"
class
= "blob-num js-line-number"
data - line - number = "8877" > < /td>
    < td
id = "LC8877"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8878"
class
= "blob-num js-line-number"
data - line - number = "8878" > < /td>
    < td
id = "LC8878"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Context for global events is callbackContext if it is a DOM node or jQuery collection</span></td>
    < /tr>
    < tr >
    < td
id = "L8879"
class
= "blob-num js-line-number"
data - line - number = "8879" > < /td>
    < td
id = "LC8879"
class
= "blob-code blob-code-inner js-file-line" > globalEventContext < span
class
= "pl-k" >= < /span> s<span class="pl-k">.</s
pan > context < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L8880"
class
= "blob-num js-line-number"
data - line - number = "8880" > < /td>
    < td
id = "LC8880"
class
= "blob-code blob-code-inner js-file-line" > (callbackContext < span
class
= "pl-k" >
.<
/span>nodeType <span class="pl-k">||</s
pan > callbackContext < span
class
= "pl-k" >
.<
/span>jquery ) <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8881"
class
= "blob-num js-line-number"
data - line - number = "8881" > < /td>
    < td
id = "LC8881"
class
= "blob-code blob-code-inner js-file-line" > jQuery(callbackContext) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L8882"
class
= "blob-num js-line-number"
data - line - number = "8882" > < /td>
    < td
id = "LC8882"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>event,</
td >
< /tr>
< tr >
< td
id = "L8883"
class
= "blob-num js-line-number"
data - line - number = "8883" > < /td>
    < td
id = "LC8883"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8884"
class
= "blob-num js-line-number"
data - line - number = "8884" > < /td>
    < td
id = "LC8884"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Deferreds</span></td>
    < /tr>
    < tr >
    < td
id = "L8885"
class
= "blob-num js-line-number"
data - line - number = "8885" > < /td>
    < td
id = "LC8885"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >= < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Deferred < /span>(),</
td >
< /tr>
< tr >
< td
id = "L8886"
class
= "blob-num js-line-number"
data - line - number = "8886" > < /td>
    < td
id = "LC8886"
class
= "blob-code blob-code-inner js-file-line" > completeDeferred < span
class
= "pl-k" >= < /span> <span class="pl-smi">jQuery<span class="pl-k">.</s
pan > Callbacks < /span>( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > once
memory < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L8887"
class
= "blob-num js-line-number"
data - line - number = "8887" > < /td>
    < td
id = "LC8887"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8888"
class
= "blob-num js-line-number"
data - line - number = "8888" > < /td>
    < td
id = "LC8888"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Status-dependent callbacks</span></td>
    < /tr>
    < tr >
    < td
id = "L8889"
class
= "blob-num js-line-number"
data - line - number = "8889" > < /td>
    < td
id = "LC8889"
class
= "blob-code blob-code-inner js-file-line" > statusCode < span
class
= "pl-k" >= < /span> s<span class="pl-k">.</s
pan > statusCode < span
class
= "pl-k" > || < /span> {},</
td >
< /tr>
< tr >
< td
id = "L8890"
class
= "blob-num js-line-number"
data - line - number = "8890" > < /td>
    < td
id = "LC8890"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8891"
class
= "blob-num js-line-number"
data - line - number = "8891" > < /td>
    < td
id = "LC8891"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Headers (they are sent all at once)</span></td>
    < /tr>
    < tr >
    < td
id = "L8892"
class
= "blob-num js-line-number"
data - line - number = "8892" > < /td>
    < td
id = "LC8892"
class
= "blob-code blob-code-inner js-file-line" > requestHeaders < span
class
= "pl-k" >= < /span> {},</
td >
< /tr>
< tr >
< td
id = "L8893"
class
= "blob-num js-line-number"
data - line - number = "8893" > < /td>
    < td
id = "LC8893"
class
= "blob-code blob-code-inner js-file-line" > requestHeadersNames < span
class
= "pl-k" >= < /span> {},</
td >
< /tr>
< tr >
< td
id = "L8894"
class
= "blob-num js-line-number"
data - line - number = "8894" > < /td>
    < td
id = "LC8894"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8895"
class
= "blob-num js-line-number"
data - line - number = "8895" > < /td>
    < td
id = "LC8895"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Default abort message</span></td>
    < /tr>
    < tr >
    < td
id = "L8896"
class
= "blob-num js-line-number"
data - line - number = "8896" > < /td>
    < td
id = "LC8896"
class
= "blob-code blob-code-inner js-file-line" > strAbort < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > canceled < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8897"
class
= "blob-num js-line-number"
data - line - number = "8897" > < /td>
    < td
id = "LC8897"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8898"
class
= "blob-num js-line-number"
data - line - number = "8898" > < /td>
    < td
id = "LC8898"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fake xhr</span></td>
    < /tr>
    < tr >
    < td
id = "L8899"
class
= "blob-num js-line-number"
data - line - number = "8899" > < /td>
    < td
id = "LC8899"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L8900"
class
= "blob-num js-line-number"
data - line - number = "8900" > < /td>
    < td
id = "LC8900"
class
= "blob-code blob-code-inner js-file-line" > readyState < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">0</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L8901"
class
= "blob-num js-line-number"
data - line - number = "8901" > < /td>
    < td
id = "LC8901"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8902"
class
= "blob-num js-line-number"
data - line - number = "8902" > < /td>
    < td
id = "LC8902"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Builds headers hashtable if needed</span></td>
    < /tr>
    < tr >
    < td
id = "L8903"
class
= "blob-num js-line-number"
data - line - number = "8903" > < /td>
    < td
id = "LC8903"
class
= "blob-code blob-code-inner js-file-line" > getResponseHeader < span
class
= "pl-k" >
:<
/span> function( key ) {</
td >
< /tr>
< tr >
< td
id = "L8904"
class
= "blob-num js-line-number"
data - line - number = "8904" > < /td>
    < td
id = "LC8904"
class
= "blob-code blob-code-inner js-file-line" >
var match;
<
/td>
< /tr>
< tr >
< td
id = "L8905"
class
= "blob-num js-line-number"
data - line - number = "8905" > < /td>
    < td
id = "LC8905"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( completed ) {</
td >
< /tr>
< tr >
< td
id = "L8906"
class
= "blob-num js-line-number"
data - line - number = "8906" > < /td>
    < td
id = "LC8906"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > responseHeaders
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8907"
class
    = "blob-num js-line-number"
    data - line - number = "8907" > < /td>
        < td
    id = "LC8907"
class
    = "blob-code blob-code-inner js-file-line" > responseHeaders < span
class
    = "pl-k" >= < /span> {};</
    td >
    < /tr>
    < tr >
    < td
    id = "L8908"
class
    = "blob-num js-line-number"
    data - line - number = "8908" > < /td>
        < td
    id = "LC8908"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    while<
    /span> ( ( match <span class="pl-k">=</s
    pan > rheaders < span
class
    = "pl-k" >
.<
    /span>exec( responseHeadersString ) ) ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8909"
class
    = "blob-num js-line-number"
    data - line - number = "8909" > < /td>
        < td
    id = "LC8909"
class
    = "blob-code blob-code-inner js-file-line" > responseHeaders[match[ < span
class
    = "pl-c1" > 1 < /span> ]<span class="pl-k">.</s
    pan > toLowerCase()
] <
    span
class
    = "pl-k" >= < /span> match[ <span class="pl-c1">2</span> ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L8910"
class
    = "blob-num js-line-number"
    data - line - number = "8910" > < /td>
        < td
    id = "LC8910"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L8911"
class
= "blob-num js-line-number"
data - line - number = "8911" > < /td>
    < td
id = "LC8911"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8912"
class
= "blob-num js-line-number"
data - line - number = "8912" > < /td>
    < td
id = "LC8912"
class
= "blob-code blob-code-inner js-file-line" > match < span
class
= "pl-k" >= < /span> responseHeaders[ key<span class="pl-k">.</span>toLowerCase() ];</
td >
< /tr>
< tr >
< td
id = "L8913"
class
= "blob-num js-line-number"
data - line - number = "8913" > < /td>
    < td
id = "LC8913"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8914"
class
= "blob-num js-line-number"
data - line - number = "8914" > < /td>
    < td
id = "LC8914"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> match <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > null < /span> <span class="pl-k">:</s
pan > match;
<
/td>
< /tr>
< tr >
< td
id = "L8915"
class
= "blob-num js-line-number"
data - line - number = "8915" > < /td>
    < td
id = "LC8915"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8916"
class
= "blob-num js-line-number"
data - line - number = "8916" > < /td>
    < td
id = "LC8916"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8917"
class
= "blob-num js-line-number"
data - line - number = "8917" > < /td>
    < td
id = "LC8917"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Raw string</span></td>
    < /tr>
    < tr >
    < td
id = "L8918"
class
= "blob-num js-line-number"
data - line - number = "8918" > < /td>
    < td
id = "LC8918"
class
= "blob-code blob-code-inner js-file-line" > getAllResponseHeaders < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L8919"
class
= "blob-num js-line-number"
data - line - number = "8919" > < /td>
    < td
id = "LC8919"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> completed <span class="pl-k">?</s
pan > responseHeadersString < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L8920"
class
= "blob-num js-line-number"
data - line - number = "8920" > < /td>
    < td
id = "LC8920"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8921"
class
= "blob-num js-line-number"
data - line - number = "8921" > < /td>
    < td
id = "LC8921"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8922"
class
= "blob-num js-line-number"
data - line - number = "8922" > < /td>
    < td
id = "LC8922"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Caches the header</span></td>
    < /tr>
    < tr >
    < td
id = "L8923"
class
= "blob-num js-line-number"
data - line - number = "8923" > < /td>
    < td
id = "LC8923"
class
= "blob-code blob-code-inner js-file-line" > setRequestHeader < span
class
= "pl-k" >
:<
/span> function( name, value ) {</
td >
< /tr>
< tr >
< td
id = "L8924"
class
= "blob-num js-line-number"
data - line - number = "8924" > < /td>
    < td
id = "LC8924"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( completed <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L8925"
class
= "blob-num js-line-number"
data - line - number = "8925" > < /td>
    < td
id = "LC8925"
class
= "blob-code blob-code-inner js-file-line" > name < span
class
= "pl-k" >= < /span> requestHeadersNames[ name<span class="pl-k">.</span>toLowerCase() ] <span class="pl-k">=</s
pan > < /td>
< /tr>
< tr >
< td
id = "L8926"
class
= "blob-num js-line-number"
data - line - number = "8926" > < /td>
    < td
id = "LC8926"
class
= "blob-code blob-code-inner js-file-line" > requestHeadersNames[name < span
class
= "pl-k" >
.<
/span>toLowerCase() ] <span class="pl-k">||</s
pan > name;
<
/td>
< /tr>
< tr >
< td
id = "L8927"
class
= "blob-num js-line-number"
data - line - number = "8927" > < /td>
    < td
id = "LC8927"
class
= "blob-code blob-code-inner js-file-line" > requestHeaders[name] < span
class
= "pl-k" >= < /span> value;</
td >
< /tr>
< tr >
< td
id = "L8928"
class
= "blob-num js-line-number"
data - line - number = "8928" > < /td>
    < td
id = "LC8928"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8929"
class
= "blob-num js-line-number"
data - line - number = "8929" > < /td>
    < td
id = "LC8929"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L8930"
class
= "blob-num js-line-number"
data - line - number = "8930" > < /td>
    < td
id = "LC8930"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8931"
class
= "blob-num js-line-number"
data - line - number = "8931" > < /td>
    < td
id = "LC8931"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8932"
class
= "blob-num js-line-number"
data - line - number = "8932" > < /td>
    < td
id = "LC8932"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Overrides response content-type header</span></td>
    < /tr>
    < tr >
    < td
id = "L8933"
class
= "blob-num js-line-number"
data - line - number = "8933" > < /td>
    < td
id = "LC8933"
class
= "blob-code blob-code-inner js-file-line" > overrideMimeType < span
class
= "pl-k" >
:<
/span> function( type ) {</
td >
< /tr>
< tr >
< td
id = "L8934"
class
= "blob-num js-line-number"
data - line - number = "8934" > < /td>
    < td
id = "LC8934"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( completed <span class="pl-k">==</s
pan > < span
class
= "pl-c1" > null < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L8935"
class
= "blob-num js-line-number"
data - line - number = "8935" > < /td>
    < td
id = "LC8935"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>mimeType <span class="pl-k">=</s
pan > type;
<
/td>
< /tr>
< tr >
< td
id = "L8936"
class
= "blob-num js-line-number"
data - line - number = "8936" > < /td>
    < td
id = "LC8936"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8937"
class
= "blob-num js-line-number"
data - line - number = "8937" > < /td>
    < td
id = "LC8937"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L8938"
class
= "blob-num js-line-number"
data - line - number = "8938" > < /td>
    < td
id = "LC8938"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8939"
class
= "blob-num js-line-number"
data - line - number = "8939" > < /td>
    < td
id = "LC8939"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8940"
class
= "blob-num js-line-number"
data - line - number = "8940" > < /td>
    < td
id = "LC8940"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Status-dependent callbacks</span></td>
    < /tr>
    < tr >
    < td
id = "L8941"
class
= "blob-num js-line-number"
data - line - number = "8941" > < /td>
    < td
id = "LC8941"
class
= "blob-code blob-code-inner js-file-line" > statusCode < span
class
= "pl-k" >
:<
/span> function( map ) {</
td >
< /tr>
< tr >
< td
id = "L8942"
class
= "blob-num js-line-number"
data - line - number = "8942" > < /td>
    < td
id = "LC8942"
class
= "blob-code blob-code-inner js-file-line" >
var code;
<
/td>
< /tr>
< tr >
< td
id = "L8943"
class
= "blob-num js-line-number"
data - line - number = "8943" > < /td>
    < td
id = "LC8943"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( map ) {</
td >
< /tr>
< tr >
< td
id = "L8944"
class
= "blob-num js-line-number"
data - line - number = "8944" > < /td>
    < td
id = "LC8944"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( completed ) {</
td >
< /tr>
< tr >
< td
id = "L8945"
class
= "blob-num js-line-number"
data - line - number = "8945" > < /td>
    < td
id = "LC8945"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8946"
class
= "blob-num js-line-number"
data - line - number = "8946" > < /td>
    < td
id = "LC8946"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Execute the appropriate callbacks</span></td>
    < /tr>
    < tr >
    < td
id = "L8947"
class
= "blob-num js-line-number"
data - line - number = "8947" > < /td>
    < td
id = "LC8947"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>always( map[ jqXHR<span class="pl-k">.</span>status ] );</
td >
< /tr>
< tr >
< td
id = "L8948"
class
= "blob-num js-line-number"
data - line - number = "8948" > < /td>
    < td
id = "LC8948"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L8949"
class
= "blob-num js-line-number"
data - line - number = "8949" > < /td>
    < td
id = "LC8949"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8950"
class
= "blob-num js-line-number"
data - line - number = "8950" > < /td>
    < td
id = "LC8950"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Lazy-add the new callbacks in a way that preserves old ones</span></td>
    < /tr>
    < tr >
    < td
id = "L8951"
class
= "blob-num js-line-number"
data - line - number = "8951" > < /td>
    < td
id = "LC8951"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( code in map ) {</
td >
< /tr>
< tr >
< td
id = "L8952"
class
= "blob-num js-line-number"
data - line - number = "8952" > < /td>
    < td
id = "LC8952"
class
= "blob-code blob-code-inner js-file-line" > statusCode[code] < span
class
= "pl-k" >= < /span> [ statusCode[ code ], map[ code ] ];</
td >
< /tr>
< tr >
< td
id = "L8953"
class
= "blob-num js-line-number"
data - line - number = "8953" > < /td>
    < td
id = "LC8953"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8954"
class
= "blob-num js-line-number"
data - line - number = "8954" > < /td>
    < td
id = "LC8954"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8955"
class
= "blob-num js-line-number"
data - line - number = "8955" > < /td>
    < td
id = "LC8955"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8956"
class
= "blob-num js-line-number"
data - line - number = "8956" > < /td>
    < td
id = "LC8956"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L8957"
class
= "blob-num js-line-number"
data - line - number = "8957" > < /td>
    < td
id = "LC8957"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L8958"
class
= "blob-num js-line-number"
data - line - number = "8958" > < /td>
    < td
id = "LC8958"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8959"
class
= "blob-num js-line-number"
data - line - number = "8959" > < /td>
    < td
id = "LC8959"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Cancel the request</span></td>
    < /tr>
    < tr >
    < td
id = "L8960"
class
= "blob-num js-line-number"
data - line - number = "8960" > < /td>
    < td
id = "LC8960"
class
= "blob-code blob-code-inner js-file-line" > abort < span
class
= "pl-k" >
:<
/span> function( statusText ) {</
td >
< /tr>
< tr >
< td
id = "L8961"
class
= "blob-num js-line-number"
data - line - number = "8961" > < /td>
    < td
id = "LC8961"
class
= "blob-code blob-code-inner js-file-line" >
var finalText
<
span
class
= "pl-k" >= < /span> statusText <span class="pl-k">||</s
pan > strAbort;
<
/td>
< /tr>
< tr >
< td
id = "L8962"
class
= "blob-num js-line-number"
data - line - number = "8962" > < /td>
    < td
id = "LC8962"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( transport ) {</
td >
< /tr>
< tr >
< td
id = "L8963"
class
= "blob-num js-line-number"
data - line - number = "8963" > < /td>
    < td
id = "LC8963"
class
= "blob-code blob-code-inner js-file-line" > transport < span
class
= "pl-k" >
.<
/span>abort( finalText );</
td >
< /tr>
< tr >
< td
id = "L8964"
class
= "blob-num js-line-number"
data - line - number = "8964" > < /td>
    < td
id = "LC8964"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8965"
class
= "blob-num js-line-number"
data - line - number = "8965" > < /td>
    < td
id = "LC8965"
class
= "blob-code blob-code-inner js-file-line" > done( < span
class
= "pl-c1" > 0 < /span>, finalText );</
td >
< /tr>
< tr >
< td
id = "L8966"
class
= "blob-num js-line-number"
data - line - number = "8966" > < /td>
    < td
id = "LC8966"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L8967"
class
= "blob-num js-line-number"
data - line - number = "8967" > < /td>
    < td
id = "LC8967"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L8968"
class
= "blob-num js-line-number"
data - line - number = "8968" > < /td>
    < td
id = "LC8968"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L8969"
class
= "blob-num js-line-number"
data - line - number = "8969" > < /td>
    < td
id = "LC8969"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8970"
class
= "blob-num js-line-number"
data - line - number = "8970" > < /td>
    < td
id = "LC8970"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Attach deferreds</span></td>
    < /tr>
    < tr >
    < td
id = "L8971"
class
= "blob-num js-line-number"
data - line - number = "8971" > < /td>
    < td
id = "LC8971"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>promise( jqXHR );</
td >
< /tr>
< tr >
< td
id = "L8972"
class
= "blob-num js-line-number"
data - line - number = "8972" > < /td>
    < td
id = "LC8972"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8973"
class
= "blob-num js-line-number"
data - line - number = "8973" > < /td>
    < td
id = "LC8973"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add protocol if not provided (prefilters might expect it)</span></td>
    < /tr>
    < tr >
    < td
id = "L8974"
class
= "blob-num js-line-number"
data - line - number = "8974" > < /td>
    < td
id = "LC8974"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle falsy url in the settings object (#10093: consistency with old signature)</span></td>
    < /tr>
    < tr >
    < td
id = "L8975"
class
= "blob-num js-line-number"
data - line - number = "8975" > < /td>
    < td
id = "LC8975"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> We also use the url parameter if available</span></td>
    < /tr>
    < tr >
    < td
id = "L8976"
class
= "blob-num js-line-number"
data - line - number = "8976" > < /td>
    < td
id = "LC8976"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>url <span class="pl-k">=</s
pan > ((url < span
class
= "pl-k" > || < /span> s<span class="pl-k">.</s
pan > url < span
class
= "pl-k" > || < /span> location<span class="pl-k">.</s
pan > href
) <
span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)<
/td>
< /tr>
< tr >
< td
id = "L8977"
class
= "blob-num js-line-number"
data - line - number = "8977" > < /td>
    < td
id = "LC8977"
class
= "blob-code blob-code-inner js-file-line" >
.
replace(rprotocol, location < span
class
= "pl-k" >
.<
/span>protocol <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>/
/<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L8978"
class
= "blob-num js-line-number"
data - line - number = "8978" > < /td>
    < td
id = "LC8978"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8979"
class
= "blob-num js-line-number"
data - line - number = "8979" > < /td>
    < td
id = "LC8979"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Alias method option to type as per ticket #12004</span></td>
    < /tr>
    < tr >
    < td
id = "L8980"
class
= "blob-num js-line-number"
data - line - number = "8980" > < /td>
    < td
id = "LC8980"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">=</s
pan > options < span
class
= "pl-k" >
.<
/span>method <span class="pl-k">||</s
pan > options < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">||</s
pan > s < span
class
= "pl-k" >
.<
/span>method <span class="pl-k">||</s
pan > s < span
class
= "pl-k" >
.<
/span>type;</
td >
< /tr>
< tr >
< td
id = "L8981"
class
= "blob-num js-line-number"
data - line - number = "8981" > < /td>
    < td
id = "LC8981"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8982"
class
= "blob-num js-line-number"
data - line - number = "8982" > < /td>
    < td
id = "LC8982"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Extract dataTypes list</span></td>
    < /tr>
    < tr >
    < td
id = "L8983"
class
= "blob-num js-line-number"
data - line - number = "8983" > < /td>
    < td
id = "LC8983"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>dataTypes <span class="pl-k">=</s
pan > (s < span
class
= "pl-k" >
.<
/span>dataType <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>*<span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > toLowerCase() < span
class
= "pl-k" >
.<
/span>match( rnothtmlwhite ) <span class="pl-k">||</s
pan > [ < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> ];</
td >
< /tr>
< tr >
< td
id = "L8984"
class
= "blob-num js-line-number"
data - line - number = "8984" > < /td>
    < td
id = "LC8984"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L8985"
class
= "blob-num js-line-number"
data - line - number = "8985" > < /td>
    < td
id = "LC8985"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> A cross-domain request is in order when the origin doesn&#39;t match the current origin.</span></td>
    < /tr>
    < tr >
    < td
id = "L8986"
class
= "blob-num js-line-number"
data - line - number = "8986" > < /td>
    < td
id = "LC8986"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > crossDomain < span
class
= "pl-k" >= =
<
/span> <span class="pl-c1">null</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L8987"
class
    = "blob-num js-line-number"
    data - line - number = "8987" > < /td>
        < td
    id = "LC8987"
class
    = "blob-code blob-code-inner js-file-line" > urlAnchor < span
class
    = "pl-k" >= < /span> document<span class="pl-k">.</s
    pan > createElement( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>a<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L8988"
class
    = "blob-num js-line-number"
    data - line - number = "8988" > < /td>
        < td
    id = "LC8988"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8989"
class
    = "blob-num js-line-number"
    data - line - number = "8989" > < /td>
        < td
    id = "LC8989"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE &lt;=8 - 11, Edge 12 - 13</span></td>
        < /tr>
        < tr >
        < td
    id = "L8990"
class
    = "blob-num js-line-number"
    data - line - number = "8990" > < /td>
        < td
    id = "LC8990"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> IE throws exception on accessing the href property if url is malformed,</span></td>
        < /tr>
        < tr >
        < td
    id = "L8991"
class
    = "blob-num js-line-number"
    data - line - number = "8991" > < /td>
        < td
    id = "LC8991"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> e.g. http://example.com:80x/</span></td>
        < /tr>
        < tr >
        < td
    id = "L8992"
class
    = "blob-num js-line-number"
    data - line - number = "8992" > < /td>
        < td
    id = "LC8992"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    try
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L8993"
class
    = "blob-num js-line-number"
    data - line - number = "8993" > < /td>
        < td
    id = "LC8993"
class
    = "blob-code blob-code-inner js-file-line" > urlAnchor < span
class
    = "pl-k" >
.<
    /span>href <span class="pl-k">=</s
    pan > s < span
class
    = "pl-k" >
.<
    /span>url;</
    td >
    < /tr>
    < tr >
    < td
    id = "L8994"
class
    = "blob-num js-line-number"
    data - line - number = "8994" > < /td>
        < td
    id = "LC8994"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L8995"
class
    = "blob-num js-line-number"
    data - line - number = "8995" > < /td>
        < td
    id = "LC8995"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE &lt;=8 - 11 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L8996"
class
    = "blob-num js-line-number"
    data - line - number = "8996" > < /td>
        < td
    id = "LC8996"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Anchor&#39;s host property isn&#39;t correctly set when s.url is relative</span></td>
        < /tr>
        < tr >
        < td
    id = "L8997"
class
    = "blob-num js-line-number"
    data - line - number = "8997" > < /td>
        < td
    id = "LC8997"
class
    = "blob-code blob-code-inner js-file-line" > urlAnchor < span
class
    = "pl-k" >
.<
    /span>href <span class="pl-k">=</s
    pan > urlAnchor < span
class
    = "pl-k" >
.<
    /span>href;</
    td >
    < /tr>
    < tr >
    < td
    id = "L8998"
class
    = "blob-num js-line-number"
    data - line - number = "8998" > < /td>
        < td
    id = "LC8998"
class
    = "blob-code blob-code-inner js-file-line" > s < span
class
    = "pl-k" >
.<
    /span>crossDomain <span class="pl-k">=</s
    pan > originAnchor < span
class
    = "pl-k" >
.<
    /span>protocol <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>/
    /<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > originAnchor < span
class
    = "pl-k" >
.<
    /span>host <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L8999"
class
    = "blob-num js-line-number"
    data - line - number = "8999" > < /td>
        < td
    id = "LC8999"
class
    = "blob-code blob-code-inner js-file-line" > urlAnchor < span
class
    = "pl-k" >
.<
    /span>protocol <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>/
    /<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > urlAnchor < span
class
    = "pl-k" >
.<
    /span>host;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9000"
class
    = "blob-num js-line-number"
    data - line - number = "9000" > < /td>
        < td
    id = "LC9000"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
catch<
/span> ( e ) {</
td >
< /tr>
< tr >
< td
id = "L9001"
class
= "blob-num js-line-number"
data - line - number = "9001" > < /td>
    < td
id = "LC9001"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9002"
class
= "blob-num js-line-number"
data - line - number = "9002" > < /td>
    < td
id = "LC9002"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If there is an error parsing the URL, assume it is crossDomain,</span></td>
    < /tr>
    < tr >
    < td
id = "L9003"
class
= "blob-num js-line-number"
data - line - number = "9003" > < /td>
    < td
id = "LC9003"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> it can be rejected by the transport if it is invalid</span></td>
    < /tr>
    < tr >
    < td
id = "L9004"
class
= "blob-num js-line-number"
data - line - number = "9004" > < /td>
    < td
id = "LC9004"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>crossDomain <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > true < /span>;</
td >
< /tr>
< tr >
< td
id = "L9005"
class
= "blob-num js-line-number"
data - line - number = "9005" > < /td>
    < td
id = "LC9005"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9006"
class
= "blob-num js-line-number"
data - line - number = "9006" > < /td>
    < td
id = "LC9006"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9007"
class
= "blob-num js-line-number"
data - line - number = "9007" > < /td>
    < td
id = "LC9007"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9008"
class
= "blob-num js-line-number"
data - line - number = "9008" > < /td>
    < td
id = "LC9008"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert data if not already a string</span></td>
    < /tr>
    < tr >
    < td
id = "L9009"
class
= "blob-num js-line-number"
data - line - number = "9009" > < /td>
    < td
id = "LC9009"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > data < span
class
= "pl-k" > &amp;&amp; < /span> s<span class="pl-k">.</s
pan > processData < span
class
= "pl-k" > &amp;&amp; < /span> typeof s<span class="pl-k">.</s
pan > data < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>string<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L9010"
class
= "blob-num js-line-number"
data - line - number = "9010" > < /td>
    < td
id = "LC9010"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>data <span class="pl-k">=</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>param( s<span class="pl-k">.</s
pan > data, s < span
class
= "pl-k" >
.<
/span>traditional );</
td >
< /tr>
< tr >
< td
id = "L9011"
class
= "blob-num js-line-number"
data - line - number = "9011" > < /td>
    < td
id = "LC9011"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9012"
class
= "blob-num js-line-number"
data - line - number = "9012" > < /td>
    < td
id = "LC9012"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9013"
class
= "blob-num js-line-number"
data - line - number = "9013" > < /td>
    < td
id = "LC9013"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Apply prefilters</span></td>
    < /tr>
    < tr >
    < td
id = "L9014"
class
= "blob-num js-line-number"
data - line - number = "9014" > < /td>
    < td
id = "LC9014"
class
= "blob-code blob-code-inner js-file-line" > inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
<
/td>
< /tr>
< tr >
< td
id = "L9015"
class
= "blob-num js-line-number"
data - line - number = "9015" > < /td>
    < td
id = "LC9015"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9016"
class
= "blob-num js-line-number"
data - line - number = "9016" > < /td>
    < td
id = "LC9016"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If request was aborted inside a prefilter, stop there</span></td>
    < /tr>
    < tr >
    < td
id = "L9017"
class
= "blob-num js-line-number"
data - line - number = "9017" > < /td>
    < td
id = "LC9017"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( completed ) {</
td >
< /tr>
< tr >
< td
id = "L9018"
class
= "blob-num js-line-number"
data - line - number = "9018" > < /td>
    < td
id = "LC9018"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jqXHR;</
td >
< /tr>
< tr >
< td
id = "L9019"
class
= "blob-num js-line-number"
data - line - number = "9019" > < /td>
    < td
id = "LC9019"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9020"
class
= "blob-num js-line-number"
data - line - number = "9020" > < /td>
    < td
id = "LC9020"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9021"
class
= "blob-num js-line-number"
data - line - number = "9021" > < /td>
    < td
id = "LC9021"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> We can fire global events as of now if asked to</span></td>
    < /tr>
    < tr >
    < td
id = "L9022"
class
= "blob-num js-line-number"
data - line - number = "9022" > < /td>
    < td
id = "LC9022"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Don&#39;t fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)</span></td>
    < /tr>
    < tr >
    < td
id = "L9023"
class
= "blob-num js-line-number"
data - line - number = "9023" > < /td>
    < td
id = "LC9023"
class
= "blob-code blob-code-inner js-file-line" > fireGlobals < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > event < span
class
= "pl-k" > &amp;&amp; < /span> s<span class="pl-k">.</s
pan > global;
<
/td>
< /tr>
< tr >
< td
id = "L9024"
class
= "blob-num js-line-number"
data - line - number = "9024" > < /td>
    < td
id = "LC9024"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9025"
class
= "blob-num js-line-number"
data - line - number = "9025" > < /td>
    < td
id = "LC9025"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Watch for a new set of requests</span></td>
    < /tr>
    < tr >
    < td
id = "L9026"
class
= "blob-num js-line-number"
data - line - number = "9026" > < /td>
    < td
id = "LC9026"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fireGlobals <span class="pl-k">&amp;&amp;</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>active<span class="pl-k">++</s
pan > < span
class
= "pl-k" >= == < /span> <span class="pl-c1">0</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9027"
class
    = "blob-num js-line-number"
    data - line - number = "9027" > < /td>
        < td
    id = "LC9027"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>event<span class="pl-k">.</s
    pan > trigger( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>ajaxStart<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9028"
class
    = "blob-num js-line-number"
    data - line - number = "9028" > < /td>
        < td
    id = "LC9028"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9029"
class
= "blob-num js-line-number"
data - line - number = "9029" > < /td>
    < td
id = "LC9029"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9030"
class
= "blob-num js-line-number"
data - line - number = "9030" > < /td>
    < td
id = "LC9030"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Uppercase the type</span></td>
    < /tr>
    < tr >
    < td
id = "L9031"
class
= "blob-num js-line-number"
data - line - number = "9031" > < /td>
    < td
id = "LC9031"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">=</s
pan > s < span
class
= "pl-k" >
.<
/span>type<span class="pl-k">.</s
pan > toUpperCase();
<
/td>
< /tr>
< tr >
< td
id = "L9032"
class
= "blob-num js-line-number"
data - line - number = "9032" > < /td>
    < td
id = "LC9032"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9033"
class
= "blob-num js-line-number"
data - line - number = "9033" > < /td>
    < td
id = "LC9033"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Determine if request has content</span></td>
    < /tr>
    < tr >
    < td
id = "L9034"
class
= "blob-num js-line-number"
data - line - number = "9034" > < /td>
    < td
id = "LC9034"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>hasContent <span class="pl-k">=</s
pan > < span
class
= "pl-k" > ! < /span>rnoContent<span class="pl-k">.</s
pan > test(s < span
class
= "pl-k" >
.<
/span>type );</
td >
< /tr>
< tr >
< td
id = "L9035"
class
= "blob-num js-line-number"
data - line - number = "9035" > < /td>
    < td
id = "LC9035"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9036"
class
= "blob-num js-line-number"
data - line - number = "9036" > < /td>
    < td
id = "LC9036"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Save the URL in case we&#39;re toying with the If-Modified-Since</span></td>
    < /tr>
    < tr >
    < td
id = "L9037"
class
= "blob-num js-line-number"
data - line - number = "9037" > < /td>
    < td
id = "LC9037"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> and/or If-None-Match header later on</span></td>
    < /tr>
    < tr >
    < td
id = "L9038"
class
= "blob-num js-line-number"
data - line - number = "9038" > < /td>
    < td
id = "LC9038"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remove hash to simplify url manipulation</span></td>
    < /tr>
    < tr >
    < td
id = "L9039"
class
= "blob-num js-line-number"
data - line - number = "9039" > < /td>
    < td
id = "LC9039"
class
= "blob-code blob-code-inner js-file-line" > cacheURL < span
class
= "pl-k" >= < /span> s<span class="pl-k">.</s
pan > url < span
class
= "pl-k" >
.<
/span>replace( rhash, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9040"
class
= "blob-num js-line-number"
data - line - number = "9040" > < /td>
    < td
id = "LC9040"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9041"
class
= "blob-num js-line-number"
data - line - number = "9041" > < /td>
    < td
id = "LC9041"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> More options handling for requests with no content</span></td>
    < /tr>
    < tr >
    < td
id = "L9042"
class
= "blob-num js-line-number"
data - line - number = "9042" > < /td>
    < td
id = "LC9042"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > s < span
class
= "pl-k" >
.<
/span>hasContent ) {</
td >
< /tr>
< tr >
< td
id = "L9043"
class
= "blob-num js-line-number"
data - line - number = "9043" > < /td>
    < td
id = "LC9043"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9044"
class
= "blob-num js-line-number"
data - line - number = "9044" > < /td>
    < td
id = "LC9044"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Remember the hash so we can put it back</span></td>
    < /tr>
    < tr >
    < td
id = "L9045"
class
= "blob-num js-line-number"
data - line - number = "9045" > < /td>
    < td
id = "LC9045"
class
= "blob-code blob-code-inner js-file-line" > uncached < span
class
= "pl-k" >= < /span> s<span class="pl-k">.</s
pan > url < span
class
= "pl-k" >
.<
/span>slice( cacheURL<span class="pl-k">.</s
pan > length
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9046"
class
= "blob-num js-line-number"
data - line - number = "9046" > < /td>
    < td
id = "LC9046"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9047"
class
= "blob-num js-line-number"
data - line - number = "9047" > < /td>
    < td
id = "LC9047"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If data is available, append data to url</span></td>
    < /tr>
    < tr >
    < td
id = "L9048"
class
= "blob-num js-line-number"
data - line - number = "9048" > < /td>
    < td
id = "LC9048"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > data
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9049"
class
    = "blob-num js-line-number"
    data - line - number = "9049" > < /td>
        < td
    id = "LC9049"
class
    = "blob-code blob-code-inner js-file-line" > cacheURL < span
class
    = "pl-k" > +=
<
    /span> ( rquery<span class="pl-k">.</s
    pan > test(cacheURL) < span
class
    = "pl-k" > ?
<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > &amp; < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" >
:<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > ?
<
    span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
<
span
class
= "pl-k" > + < /span> s<span class="pl-k">.</s
pan > data;
<
/td>
< /tr>
< tr >
< td
id = "L9050"
class
= "blob-num js-line-number"
data - line - number = "9050" > < /td>
    < td
id = "LC9050"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9051"
class
= "blob-num js-line-number"
data - line - number = "9051" > < /td>
    < td
id = "LC9051"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> #9682: remove data so that it&#39;s not used in an eventual retry</span></td>
    < /tr>
    < tr >
    < td
id = "L9052"
class
= "blob-num js-line-number"
data - line - number = "9052" > < /td>
    < td
id = "LC9052"
class
= "blob-code blob-code-inner js-file-line" > delete s < span
class
= "pl-k" >
.<
/span>data;</
td >
< /tr>
< tr >
< td
id = "L9053"
class
= "blob-num js-line-number"
data - line - number = "9053" > < /td>
    < td
id = "LC9053"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9054"
class
= "blob-num js-line-number"
data - line - number = "9054" > < /td>
    < td
id = "LC9054"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9055"
class
= "blob-num js-line-number"
data - line - number = "9055" > < /td>
    < td
id = "LC9055"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add or update anti-cache param if needed</span></td>
    < /tr>
    < tr >
    < td
id = "L9056"
class
= "blob-num js-line-number"
data - line - number = "9056" > < /td>
    < td
id = "LC9056"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > cache < span
class
= "pl-k" >= == < /span> <span class="pl-c1">false</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9057"
class
    = "blob-num js-line-number"
    data - line - number = "9057" > < /td>
        < td
    id = "LC9057"
class
    = "blob-code blob-code-inner js-file-line" > cacheURL < span
class
    = "pl-k" >= < /span> cacheURL<span class="pl-k">.</s
    pan > replace(rantiCache, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>$1<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9058"
class
    = "blob-num js-line-number"
    data - line - number = "9058" > < /td>
        < td
    id = "LC9058"
class
    = "blob-code blob-code-inner js-file-line" > uncached < span
class
    = "pl-k" >= < /span> ( rquery<span class="pl-k">.</s
    pan > test(cacheURL) < span
class
    = "pl-k" > ?
<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > &amp; < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" >
:<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > ?
<
    span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) <
    span
class
    = "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > _ =
<
    span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" > + < /span> ( nonce<span class="pl-k">++</s
    pan >
)
<
span
class
= "pl-k" > + < /span> uncached;</
td >
< /tr>
< tr >
< td
id = "L9059"
class
= "blob-num js-line-number"
data - line - number = "9059" > < /td>
    < td
id = "LC9059"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9060"
class
= "blob-num js-line-number"
data - line - number = "9060" > < /td>
    < td
id = "LC9060"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9061"
class
= "blob-num js-line-number"
data - line - number = "9061" > < /td>
    < td
id = "LC9061"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Put hash and anti-cache on the URL that will be requested (gh-1732)</span></td>
    < /tr>
    < tr >
    < td
id = "L9062"
class
= "blob-num js-line-number"
data - line - number = "9062" > < /td>
    < td
id = "LC9062"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>url <span class="pl-k">=</s
pan > cacheURL < span
class
= "pl-k" > + < /span> uncached;</
td >
< /tr>
< tr >
< td
id = "L9063"
class
= "blob-num js-line-number"
data - line - number = "9063" > < /td>
    < td
id = "LC9063"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9064"
class
= "blob-num js-line-number"
data - line - number = "9064" > < /td>
    < td
id = "LC9064"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Change &#39;%20&#39; to &#39;+&#39; if this is encoded form body content (gh-2658)</span></td>
    < /tr>
    < tr >
    < td
id = "L9065"
class
= "blob-num js-line-number"
data - line - number = "9065" > < /td>
    < td
id = "LC9065"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (s < span
class
= "pl-k" >
.<
/span>data <span class="pl-k">&amp;&amp;</s
pan > s < span
class
= "pl-k" >
.<
/span>processData <span class="pl-k">&amp;&amp;</s
pan > < /td>
< /tr>
< tr >
< td
id = "L9066"
class
= "blob-num js-line-number"
data - line - number = "9066" > < /td>
    < td
id = "LC9066"
class
= "blob-code blob-code-inner js-file-line" > (s < span
class
= "pl-k" >
.<
/span>contentType <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > indexOf( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>application/x - www - form - urlencoded < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" >= == < /span> <span class="pl-c1">0</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9067"
class
    = "blob-num js-line-number"
    data - line - number = "9067" > < /td>
        < td
    id = "LC9067"
class
    = "blob-code blob-code-inner js-file-line" > s < span
class
    = "pl-k" >
.<
    /span>data <span class="pl-k">=</s
    pan > s < span
class
    = "pl-k" >
.<
    /span>data<span class="pl-k">.</s
    pan > replace(r20, < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>+<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9068"
class
    = "blob-num js-line-number"
    data - line - number = "9068" > < /td>
        < td
    id = "LC9068"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9069"
class
= "blob-num js-line-number"
data - line - number = "9069" > < /td>
    < td
id = "LC9069"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9070"
class
= "blob-num js-line-number"
data - line - number = "9070" > < /td>
    < td
id = "LC9070"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.</span></td>
    < /tr>
    < tr >
    < td
id = "L9071"
class
= "blob-num js-line-number"
data - line - number = "9071" > < /td>
    < td
id = "LC9071"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > ifModified
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9072"
class
    = "blob-num js-line-number"
    data - line - number = "9072" > < /td>
        < td
    id = "LC9072"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( jQuery<span class="pl-k">.</s
    pan > lastModified[cacheURL]
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9073"
class
    = "blob-num js-line-number"
    data - line - number = "9073" > < /td>
        < td
    id = "LC9073"
class
    = "blob-code blob-code-inner js-file-line" > jqXHR < span
class
    = "pl-k" >
.<
    /span>setRequestHeader( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > If - Modified - Since < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >, jQuery < span
class
    = "pl-k" >
.<
    /span>lastModified[ cacheURL ] );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9074"
class
    = "blob-num js-line-number"
    data - line - number = "9074" > < /td>
        < td
    id = "LC9074"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9075"
class
= "blob-num js-line-number"
data - line - number = "9075" > < /td>
    < td
id = "LC9075"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > etag[cacheURL]
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9076"
class
    = "blob-num js-line-number"
    data - line - number = "9076" > < /td>
        < td
    id = "LC9076"
class
    = "blob-code blob-code-inner js-file-line" > jqXHR < span
class
    = "pl-k" >
.<
    /span>setRequestHeader( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > If - None - Match < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >, jQuery < span
class
    = "pl-k" >
.<
    /span>etag[ cacheURL ] );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9077"
class
    = "blob-num js-line-number"
    data - line - number = "9077" > < /td>
        < td
    id = "LC9077"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9078"
class
= "blob-num js-line-number"
data - line - number = "9078" > < /td>
    < td
id = "LC9078"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9079"
class
= "blob-num js-line-number"
data - line - number = "9079" > < /td>
    < td
id = "LC9079"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9080"
class
= "blob-num js-line-number"
data - line - number = "9080" > < /td>
    < td
id = "LC9080"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set the correct header, if data is being sent</span></td>
    < /tr>
    < tr >
    < td
id = "L9081"
class
= "blob-num js-line-number"
data - line - number = "9081" > < /td>
    < td
id = "LC9081"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > data < span
class
= "pl-k" > &amp;&amp; < /span> s<span class="pl-k">.</s
pan > hasContent < span
class
= "pl-k" > &amp;&amp; < /span> s<span class="pl-k">.</s
pan > contentType < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > < span
class
= "pl-c1" > false < /span> <span class="pl-k">||</s
pan > options < span
class
= "pl-k" >
.<
/span>contentType ) {</
td >
< /tr>
< tr >
< td
id = "L9082"
class
= "blob-num js-line-number"
data - line - number = "9082" > < /td>
    < td
id = "LC9082"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>setRequestHeader( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > Content - Type < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, s < span
class
= "pl-k" >
.<
/span>contentType );</
td >
< /tr>
< tr >
< td
id = "L9083"
class
= "blob-num js-line-number"
data - line - number = "9083" > < /td>
    < td
id = "LC9083"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9084"
class
= "blob-num js-line-number"
data - line - number = "9084" > < /td>
    < td
id = "LC9084"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9085"
class
= "blob-num js-line-number"
data - line - number = "9085" > < /td>
    < td
id = "LC9085"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set the Accepts header for the server, depending on the dataType</span></td>
    < /tr>
    < tr >
    < td
id = "L9086"
class
= "blob-num js-line-number"
data - line - number = "9086" > < /td>
    < td
id = "LC9086"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>setRequestHeader(</
td >
< /tr>
< tr >
< td
id = "L9087"
class
= "blob-num js-line-number"
data - line - number = "9087" > < /td>
    < td
id = "LC9087"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>Accept<span class="pl-pds">&quot;</s
pan > < /span>,</
td >
< /tr>
< tr >
< td
id = "L9088"
class
= "blob-num js-line-number"
data - line - number = "9088" > < /td>
    < td
id = "LC9088"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>dataTypes[ <span class="pl-c1">0</span> ] <span class="pl-k">&amp;&amp;</s
pan > s < span
class
= "pl-k" >
.<
/span>accepts[ s<span class="pl-k">.</span>dataTypes[ <span class="pl-c1">0</span> ] ] <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L9089"
class
= "blob-num js-line-number"
data - line - number = "9089" > < /td>
    < td
id = "LC9089"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>accepts[ s<span class="pl-k">.</span>dataTypes[ <span class="pl-c1">0</span> ] ] <span class="pl-k">+</s
pan > < /td>
< /tr>
< tr >
< td
id = "L9090"
class
= "blob-num js-line-number"
data - line - number = "9090" > < /td>
    < td
id = "LC9090"
class
= "blob-code blob-code-inner js-file-line" > (s < span
class
= "pl-k" >
.<
/span>dataTypes[ <span class="pl-c1">0</span> ] <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > * < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan >,
<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> allTypes <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>; q=0.01<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L9091"
class
= "blob-num js-line-number"
data - line - number = "9091" > < /td>
    < td
id = "LC9091"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>accepts[ <span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span> ]</
td >
< /tr>
< tr >
< td
id = "L9092"
class
= "blob-num js-line-number"
data - line - number = "9092" > < /td>
    < td
id = "LC9092"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9093"
class
= "blob-num js-line-number"
data - line - number = "9093" > < /td>
    < td
id = "LC9093"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9094"
class
= "blob-num js-line-number"
data - line - number = "9094" > < /td>
    < td
id = "LC9094"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Check for headers option</span></td>
    < /tr>
    < tr >
    < td
id = "L9095"
class
= "blob-num js-line-number"
data - line - number = "9095" > < /td>
    < td
id = "LC9095"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i in s<span class="pl-k">.</s
pan > headers
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9096"
class
    = "blob-num js-line-number"
    data - line - number = "9096" > < /td>
        < td
    id = "LC9096"
class
    = "blob-code blob-code-inner js-file-line" > jqXHR < span
class
    = "pl-k" >
.<
    /span>setRequestHeader( i, s<span class="pl-k">.</s
    pan > headers[i]
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9097"
class
= "blob-num js-line-number"
data - line - number = "9097" > < /td>
    < td
id = "LC9097"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9098"
class
= "blob-num js-line-number"
data - line - number = "9098" > < /td>
    < td
id = "LC9098"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9099"
class
= "blob-num js-line-number"
data - line - number = "9099" > < /td>
    < td
id = "LC9099"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Allow custom headers/mimetypes and early abort</span></td>
    < /tr>
    < tr >
    < td
id = "L9100"
class
= "blob-num js-line-number"
data - line - number = "9100" > < /td>
    < td
id = "LC9100"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > beforeSend < span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L9101"
class
= "blob-num js-line-number"
data - line - number = "9101" > < /td>
    < td
id = "LC9101"
class
= "blob-code blob-code-inner js-file-line" > (s < span
class
= "pl-k" >
.<
/span>beforeSend<span class="pl-k">.</s
pan > call(callbackContext, jqXHR, s) < span
class
= "pl-k" >= == < /span> <span class="pl-c1">false</s
pan > < span
class
= "pl-k" > || < /span> completed ) ) {</
td >
< /tr>
< tr >
< td
id = "L9102"
class
= "blob-num js-line-number"
data - line - number = "9102" > < /td>
    < td
id = "LC9102"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9103"
class
= "blob-num js-line-number"
data - line - number = "9103" > < /td>
    < td
id = "LC9103"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Abort if not done already and return</span></td>
    < /tr>
    < tr >
    < td
id = "L9104"
class
= "blob-num js-line-number"
data - line - number = "9104" > < /td>
    < td
id = "LC9104"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jqXHR<span class="pl-k">.</s
pan > abort();
<
/td>
< /tr>
< tr >
< td
id = "L9105"
class
= "blob-num js-line-number"
data - line - number = "9105" > < /td>
    < td
id = "LC9105"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9106"
class
= "blob-num js-line-number"
data - line - number = "9106" > < /td>
    < td
id = "LC9106"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9107"
class
= "blob-num js-line-number"
data - line - number = "9107" > < /td>
    < td
id = "LC9107"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Aborting is no longer a cancellation</span></td>
    < /tr>
    < tr >
    < td
id = "L9108"
class
= "blob-num js-line-number"
data - line - number = "9108" > < /td>
    < td
id = "LC9108"
class
= "blob-code blob-code-inner js-file-line" > strAbort < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > abort < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9109"
class
= "blob-num js-line-number"
data - line - number = "9109" > < /td>
    < td
id = "LC9109"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9110"
class
= "blob-num js-line-number"
data - line - number = "9110" > < /td>
    < td
id = "LC9110"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Install callbacks on deferreds</span></td>
    < /tr>
    < tr >
    < td
id = "L9111"
class
= "blob-num js-line-number"
data - line - number = "9111" > < /td>
    < td
id = "LC9111"
class
= "blob-code blob-code-inner js-file-line" > completeDeferred < span
class
= "pl-k" >
.<
/span>add( s<span class="pl-k">.</s
pan > complete
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9112"
class
= "blob-num js-line-number"
data - line - number = "9112" > < /td>
    < td
id = "LC9112"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>done( s<span class="pl-k">.</s
pan > success
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9113"
class
= "blob-num js-line-number"
data - line - number = "9113" > < /td>
    < td
id = "LC9113"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>fail( s<span class="pl-k">.</s
pan > error
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9114"
class
= "blob-num js-line-number"
data - line - number = "9114" > < /td>
    < td
id = "LC9114"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9115"
class
= "blob-num js-line-number"
data - line - number = "9115" > < /td>
    < td
id = "LC9115"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get transport</span></td>
    < /tr>
    < tr >
    < td
id = "L9116"
class
= "blob-num js-line-number"
data - line - number = "9116" > < /td>
    < td
id = "LC9116"
class
= "blob-code blob-code-inner js-file-line" > transport < span
class
= "pl-k" >= < /span> inspectPrefiltersOrTransports( transports, s, options, jqXHR );</
td >
< /tr>
< tr >
< td
id = "L9117"
class
= "blob-num js-line-number"
data - line - number = "9117" > < /td>
    < td
id = "LC9117"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9118"
class
= "blob-num js-line-number"
data - line - number = "9118" > < /td>
    < td
id = "LC9118"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If no transport, we auto-abort</span></td>
    < /tr>
    < tr >
    < td
id = "L9119"
class
= "blob-num js-line-number"
data - line - number = "9119" > < /td>
    < td
id = "LC9119"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > transport
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9120"
class
    = "blob-num js-line-number"
    data - line - number = "9120" > < /td>
        < td
    id = "LC9120"
class
    = "blob-code blob-code-inner js-file-line" > done( < span
class
    = "pl-k" > - < /span><span class="pl-c1">1</s
    pan >,
<
    span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>No Transport<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9121"
class
    = "blob-num js-line-number"
    data - line - number = "9121" > < /td>
        < td
    id = "LC9121"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9122"
class
= "blob-num js-line-number"
data - line - number = "9122" > < /td>
    < td
id = "LC9122"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>readyState <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > 1 < /span>;</
td >
< /tr>
< tr >
< td
id = "L9123"
class
= "blob-num js-line-number"
data - line - number = "9123" > < /td>
    < td
id = "LC9123"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9124"
class
= "blob-num js-line-number"
data - line - number = "9124" > < /td>
    < td
id = "LC9124"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Send global event</span></td>
    < /tr>
    < tr >
    < td
id = "L9125"
class
= "blob-num js-line-number"
data - line - number = "9125" > < /td>
    < td
id = "LC9125"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fireGlobals ) {</
td >
< /tr>
< tr >
< td
id = "L9126"
class
= "blob-num js-line-number"
data - line - number = "9126" > < /td>
    < td
id = "LC9126"
class
= "blob-code blob-code-inner js-file-line" > globalEventContext < span
class
= "pl-k" >
.<
/span>trigger( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ajaxSend < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, [jqXHR, s]
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9127"
class
= "blob-num js-line-number"
data - line - number = "9127" > < /td>
    < td
id = "LC9127"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9128"
class
= "blob-num js-line-number"
data - line - number = "9128" > < /td>
    < td
id = "LC9128"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9129"
class
= "blob-num js-line-number"
data - line - number = "9129" > < /td>
    < td
id = "LC9129"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If request was aborted inside ajaxSend, stop there</span></td>
    < /tr>
    < tr >
    < td
id = "L9130"
class
= "blob-num js-line-number"
data - line - number = "9130" > < /td>
    < td
id = "LC9130"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( completed ) {</
td >
< /tr>
< tr >
< td
id = "L9131"
class
= "blob-num js-line-number"
data - line - number = "9131" > < /td>
    < td
id = "LC9131"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jqXHR;</
td >
< /tr>
< tr >
< td
id = "L9132"
class
= "blob-num js-line-number"
data - line - number = "9132" > < /td>
    < td
id = "LC9132"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9133"
class
= "blob-num js-line-number"
data - line - number = "9133" > < /td>
    < td
id = "LC9133"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9134"
class
= "blob-num js-line-number"
data - line - number = "9134" > < /td>
    < td
id = "LC9134"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Timeout</span></td>
    < /tr>
    < tr >
    < td
id = "L9135"
class
= "blob-num js-line-number"
data - line - number = "9135" > < /td>
    < td
id = "LC9135"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > async < span
class
= "pl-k" > &amp;&amp; < /span> s<span class="pl-k">.</s
pan > timeout < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">0</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9136"
class
    = "blob-num js-line-number"
    data - line - number = "9136" > < /td>
        < td
    id = "LC9136"
class
    = "blob-code blob-code-inner js-file-line" > timeoutTimer < span
class
    = "pl-k" >= < /span> window<span class="pl-k">.</s
    pan > setTimeout(function () {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L9137"
    class
        = "blob-num js-line-number"
        data - line - number = "9137" > < /td>
            < td
        id = "LC9137"
    class
        = "blob-code blob-code-inner js-file-line" > jqXHR < span
    class
        = "pl-k" >
    .<
        /span>abort( <span class="pl-s"><span class="pl-pds">&quot;</s
        pan > timeout < span
    class
        = "pl-pds" > & quot;
    <
        /span></s
        pan >
    );
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9138"
class
    = "blob-num js-line-number"
    data - line - number = "9138" > < /td>
        < td
    id = "LC9138"
class
    = "blob-code blob-code-inner js-file-line" >
}
,
s < span
class
= "pl-k" >
.<
/span>timeout );</
td >
< /tr>
< tr >
< td
id = "L9139"
class
= "blob-num js-line-number"
data - line - number = "9139" > < /td>
    < td
id = "LC9139"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9140"
class
= "blob-num js-line-number"
data - line - number = "9140" > < /td>
    < td
id = "LC9140"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9141"
class
= "blob-num js-line-number"
data - line - number = "9141" > < /td>
    < td
id = "LC9141"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
try
<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9142"
class
= "blob-num js-line-number"
data - line - number = "9142" > < /td>
    < td
id = "LC9142"
class
= "blob-code blob-code-inner js-file-line" > completed < span
class
= "pl-k" >= < /span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9143"
class
= "blob-num js-line-number"
data - line - number = "9143" > < /td>
    < td
id = "LC9143"
class
= "blob-code blob-code-inner js-file-line" > transport < span
class
= "pl-k" >
.<
/span>send( requestHeaders, done );</
td >
< /tr>
< tr >
< td
id = "L9144"
class
= "blob-num js-line-number"
data - line - number = "9144" > < /td>
    < td
id = "LC9144"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> ( e ) {</
td >
< /tr>
< tr >
< td
id = "L9145"
class
= "blob-num js-line-number"
data - line - number = "9145" > < /td>
    < td
id = "LC9145"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9146"
class
= "blob-num js-line-number"
data - line - number = "9146" > < /td>
    < td
id = "LC9146"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Rethrow post-completion exceptions</span></td>
    < /tr>
    < tr >
    < td
id = "L9147"
class
= "blob-num js-line-number"
data - line - number = "9147" > < /td>
    < td
id = "LC9147"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( completed ) {</
td >
< /tr>
< tr >
< td
id = "L9148"
class
= "blob-num js-line-number"
data - line - number = "9148" > < /td>
    < td
id = "LC9148"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
throw
<
/span> e;</
td >
< /tr>
< tr >
< td
id = "L9149"
class
= "blob-num js-line-number"
data - line - number = "9149" > < /td>
    < td
id = "LC9149"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9150"
class
= "blob-num js-line-number"
data - line - number = "9150" > < /td>
    < td
id = "LC9150"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9151"
class
= "blob-num js-line-number"
data - line - number = "9151" > < /td>
    < td
id = "LC9151"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Propagate others as results</span></td>
    < /tr>
    < tr >
    < td
id = "L9152"
class
= "blob-num js-line-number"
data - line - number = "9152" > < /td>
    < td
id = "LC9152"
class
= "blob-code blob-code-inner js-file-line" > done( < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >, e
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9153"
class
= "blob-num js-line-number"
data - line - number = "9153" > < /td>
    < td
id = "LC9153"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9154"
class
= "blob-num js-line-number"
data - line - number = "9154" > < /td>
    < td
id = "LC9154"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9155"
class
= "blob-num js-line-number"
data - line - number = "9155" > < /td>
    < td
id = "LC9155"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9156"
class
= "blob-num js-line-number"
data - line - number = "9156" > < /td>
    < td
id = "LC9156"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Callback for when everything is done</span></td>
    < /tr>
    < tr >
    < td
id = "L9157"
class
= "blob-num js-line-number"
data - line - number = "9157" > < /td>
    < td
id = "LC9157"
class
= "blob-code blob-code-inner js-file-line" > function done(status, nativeStatusText, responses, headers) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L9158"
    class
        = "blob-num js-line-number"
        data - line - number = "9158" > < /td>
            < td
        id = "LC9158"
    class
        = "blob-code blob-code-inner js-file-line" >
        var isSuccess, success, error, response, modified, <
        /td>
        < /tr>
        < tr >
        < td
        id = "L9159"
    class
        = "blob-num js-line-number"
        data - line - number = "9159" > < /td>
            < td
        id = "LC9159"
    class
        = "blob-code blob-code-inner js-file-line" > statusText < span
    class
        = "pl-k" >= < /span> nativeStatusText;</
        td >
        < /tr>
        < tr >
        < td
        id = "L9160"
    class
        = "blob-num js-line-number"
        data - line - number = "9160" > < /td>
            < td
        id = "LC9160"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L9161"
    class
        = "blob-num js-line-number"
        data - line - number = "9161" > < /td>
            < td
        id = "LC9161"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Ignore repeat invocations</span></td>
            < /tr>
            < tr >
            < td
        id = "L9162"
    class
        = "blob-num js-line-number"
        data - line - number = "9162" > < /td>
            < td
        id = "LC9162"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( completed ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L9163"
    class
        = "blob-num js-line-number"
        data - line - number = "9163" > < /td>
            < td
        id = "LC9163"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span>;</
        td >
        < /tr>
        < tr >
        < td
        id = "L9164"
    class
        = "blob-num js-line-number"
        data - line - number = "9164" > < /td>
            < td
        id = "LC9164"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L9165"
class
= "blob-num js-line-number"
data - line - number = "9165" > < /td>
    < td
id = "LC9165"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9166"
class
= "blob-num js-line-number"
data - line - number = "9166" > < /td>
    < td
id = "LC9166"
class
= "blob-code blob-code-inner js-file-line" > completed < span
class
= "pl-k" >= < /span> <span class="pl-c1">true</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9167"
class
= "blob-num js-line-number"
data - line - number = "9167" > < /td>
    < td
id = "LC9167"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9168"
class
= "blob-num js-line-number"
data - line - number = "9168" > < /td>
    < td
id = "LC9168"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Clear timeout if it exists</span></td>
    < /tr>
    < tr >
    < td
id = "L9169"
class
= "blob-num js-line-number"
data - line - number = "9169" > < /td>
    < td
id = "LC9169"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( timeoutTimer ) {</
td >
< /tr>
< tr >
< td
id = "L9170"
class
= "blob-num js-line-number"
data - line - number = "9170" > < /td>
    < td
id = "LC9170"
class
= "blob-code blob-code-inner js-file-line" > window < span
class
= "pl-k" >
.<
/span>clearTimeout( timeoutTimer );</
td >
< /tr>
< tr >
< td
id = "L9171"
class
= "blob-num js-line-number"
data - line - number = "9171" > < /td>
    < td
id = "LC9171"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9172"
class
= "blob-num js-line-number"
data - line - number = "9172" > < /td>
    < td
id = "LC9172"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9173"
class
= "blob-num js-line-number"
data - line - number = "9173" > < /td>
    < td
id = "LC9173"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Dereference transport for early garbage collection</span></td>
    < /tr>
    < tr >
    < td
id = "L9174"
class
= "blob-num js-line-number"
data - line - number = "9174" > < /td>
    < td
id = "LC9174"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (no matter how long the jqXHR object will be used)</span></td>
    < /tr>
    < tr >
    < td
id = "L9175"
class
= "blob-num js-line-number"
data - line - number = "9175" > < /td>
    < td
id = "LC9175"
class
= "blob-code blob-code-inner js-file-line" > transport < span
class
= "pl-k" >= < /span> undefined;</
td >
< /tr>
< tr >
< td
id = "L9176"
class
= "blob-num js-line-number"
data - line - number = "9176" > < /td>
    < td
id = "LC9176"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9177"
class
= "blob-num js-line-number"
data - line - number = "9177" > < /td>
    < td
id = "LC9177"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Cache response headers</span></td>
    < /tr>
    < tr >
    < td
id = "L9178"
class
= "blob-num js-line-number"
data - line - number = "9178" > < /td>
    < td
id = "LC9178"
class
= "blob-code blob-code-inner js-file-line" > responseHeadersString < span
class
= "pl-k" >= < /span> headers <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L9179"
class
= "blob-num js-line-number"
data - line - number = "9179" > < /td>
    < td
id = "LC9179"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9180"
class
= "blob-num js-line-number"
data - line - number = "9180" > < /td>
    < td
id = "LC9180"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set readyState</span></td>
    < /tr>
    < tr >
    < td
id = "L9181"
class
= "blob-num js-line-number"
data - line - number = "9181" > < /td>
    < td
id = "LC9181"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>readyState <span class="pl-k">=</s
pan > status < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">0</s
pan > < span
class
= "pl-k" > ?
<
/span> <span class="pl-c1">4</s
pan > < span
class
= "pl-k" >
:<
/span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9182"
class
= "blob-num js-line-number"
data - line - number = "9182" > < /td>
    < td
id = "LC9182"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9183"
class
= "blob-num js-line-number"
data - line - number = "9183" > < /td>
    < td
id = "LC9183"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Determine if successful</span></td>
    < /tr>
    < tr >
    < td
id = "L9184"
class
= "blob-num js-line-number"
data - line - number = "9184" > < /td>
    < td
id = "LC9184"
class
= "blob-code blob-code-inner js-file-line" > isSuccess < span
class
= "pl-k" >= < /span> status <span class="pl-k">&gt;=</s
pan > < span
class
= "pl-c1" > 200 < /span> <span class="pl-k">&amp;&amp;</s
pan > status < span
class
= "pl-k" > &lt; < /span> <span class="pl-c1">300</s
pan > < span
class
= "pl-k" > || < /span> status <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 304 < /span>;</
td >
< /tr>
< tr >
< td
id = "L9185"
class
= "blob-num js-line-number"
data - line - number = "9185" > < /td>
    < td
id = "LC9185"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9186"
class
= "blob-num js-line-number"
data - line - number = "9186" > < /td>
    < td
id = "LC9186"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get response data</span></td>
    < /tr>
    < tr >
    < td
id = "L9187"
class
= "blob-num js-line-number"
data - line - number = "9187" > < /td>
    < td
id = "LC9187"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( responses ) {</
td >
< /tr>
< tr >
< td
id = "L9188"
class
= "blob-num js-line-number"
data - line - number = "9188" > < /td>
    < td
id = "LC9188"
class
= "blob-code blob-code-inner js-file-line" > response < span
class
= "pl-k" >= < /span> ajaxHandleResponses( s, jqXHR, responses );</
td >
< /tr>
< tr >
< td
id = "L9189"
class
= "blob-num js-line-number"
data - line - number = "9189" > < /td>
    < td
id = "LC9189"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9190"
class
= "blob-num js-line-number"
data - line - number = "9190" > < /td>
    < td
id = "LC9190"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9191"
class
= "blob-num js-line-number"
data - line - number = "9191" > < /td>
    < td
id = "LC9191"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Convert no matter what (that way responseXXX fields are always set)</span></td>
    < /tr>
    < tr >
    < td
id = "L9192"
class
= "blob-num js-line-number"
data - line - number = "9192" > < /td>
    < td
id = "LC9192"
class
= "blob-code blob-code-inner js-file-line" > response < span
class
= "pl-k" >= < /span> ajaxConvert( s, response, jqXHR, isSuccess );</
td >
< /tr>
< tr >
< td
id = "L9193"
class
= "blob-num js-line-number"
data - line - number = "9193" > < /td>
    < td
id = "LC9193"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9194"
class
= "blob-num js-line-number"
data - line - number = "9194" > < /td>
    < td
id = "LC9194"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If successful, handle type chaining</span></td>
    < /tr>
    < tr >
    < td
id = "L9195"
class
= "blob-num js-line-number"
data - line - number = "9195" > < /td>
    < td
id = "LC9195"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( isSuccess ) {</
td >
< /tr>
< tr >
< td
id = "L9196"
class
= "blob-num js-line-number"
data - line - number = "9196" > < /td>
    < td
id = "LC9196"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9197"
class
= "blob-num js-line-number"
data - line - number = "9197" > < /td>
    < td
id = "LC9197"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.</span></td>
    < /tr>
    < tr >
    < td
id = "L9198"
class
= "blob-num js-line-number"
data - line - number = "9198" > < /td>
    < td
id = "LC9198"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > ifModified
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9199"
class
    = "blob-num js-line-number"
    data - line - number = "9199" > < /td>
        < td
    id = "LC9199"
class
    = "blob-code blob-code-inner js-file-line" > modified < span
class
    = "pl-k" >= < /span> jqXHR<span class="pl-k">.</s
    pan > getResponseHeader( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>Last-Modified<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9200"
class
    = "blob-num js-line-number"
    data - line - number = "9200" > < /td>
        < td
    id = "LC9200"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( modified ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9201"
class
    = "blob-num js-line-number"
    data - line - number = "9201" > < /td>
        < td
    id = "LC9201"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>lastModified[ cacheURL ] <span class="pl-k">=</s
    pan > modified;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9202"
class
    = "blob-num js-line-number"
    data - line - number = "9202" > < /td>
        < td
    id = "LC9202"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9203"
class
= "blob-num js-line-number"
data - line - number = "9203" > < /td>
    < td
id = "LC9203"
class
= "blob-code blob-code-inner js-file-line" > modified < span
class
= "pl-k" >= < /span> jqXHR<span class="pl-k">.</s
pan > getResponseHeader( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>etag<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L9204"
class
= "blob-num js-line-number"
data - line - number = "9204" > < /td>
    < td
id = "LC9204"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( modified ) {</
td >
< /tr>
< tr >
< td
id = "L9205"
class
= "blob-num js-line-number"
data - line - number = "9205" > < /td>
    < td
id = "LC9205"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>etag[ cacheURL ] <span class="pl-k">=</s
pan > modified;
<
/td>
< /tr>
< tr >
< td
id = "L9206"
class
= "blob-num js-line-number"
data - line - number = "9206" > < /td>
    < td
id = "LC9206"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9207"
class
= "blob-num js-line-number"
data - line - number = "9207" > < /td>
    < td
id = "LC9207"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9208"
class
= "blob-num js-line-number"
data - line - number = "9208" > < /td>
    < td
id = "LC9208"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9209"
class
= "blob-num js-line-number"
data - line - number = "9209" > < /td>
    < td
id = "LC9209"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> if no content</span></td>
    < /tr>
    < tr >
    < td
id = "L9210"
class
= "blob-num js-line-number"
data - line - number = "9210" > < /td>
    < td
id = "LC9210"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( status <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 204 < /span> <span class="pl-k">||</s
pan > s < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>HEAD<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L9211"
class
= "blob-num js-line-number"
data - line - number = "9211" > < /td>
    < td
id = "LC9211"
class
= "blob-code blob-code-inner js-file-line" > statusText < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > nocontent < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9212"
class
= "blob-num js-line-number"
data - line - number = "9212" > < /td>
    < td
id = "LC9212"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9213"
class
= "blob-num js-line-number"
data - line - number = "9213" > < /td>
    < td
id = "LC9213"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> if not modified</span></td>
    < /tr>
    < tr >
    < td
id = "L9214"
class
= "blob-num js-line-number"
data - line - number = "9214" > < /td>
    < td
id = "LC9214"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (status < span
class
= "pl-k" >= == < /span> <span class="pl-c1">304</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9215"
class
    = "blob-num js-line-number"
    data - line - number = "9215" > < /td>
        < td
    id = "LC9215"
class
    = "blob-code blob-code-inner js-file-line" > statusText < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > notmodified < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9216"
class
    = "blob-num js-line-number"
    data - line - number = "9216" > < /td>
        < td
    id = "LC9216"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9217"
class
    = "blob-num js-line-number"
    data - line - number = "9217" > < /td>
        < td
    id = "LC9217"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If we have data, let&#39;s convert it</span></td>
        < /tr>
        < tr >
        < td
    id = "L9218"
class
    = "blob-num js-line-number"
    data - line - number = "9218" > < /td>
        < td
    id = "LC9218"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9219"
class
= "blob-num js-line-number"
data - line - number = "9219" > < /td>
    < td
id = "LC9219"
class
= "blob-code blob-code-inner js-file-line" > statusText < span
class
= "pl-k" >= < /span> response<span class="pl-k">.</s
pan > state;
<
/td>
< /tr>
< tr >
< td
id = "L9220"
class
= "blob-num js-line-number"
data - line - number = "9220" > < /td>
    < td
id = "LC9220"
class
= "blob-code blob-code-inner js-file-line" > success < span
class
= "pl-k" >= < /span> response<span class="pl-k">.</s
pan > data;
<
/td>
< /tr>
< tr >
< td
id = "L9221"
class
= "blob-num js-line-number"
data - line - number = "9221" > < /td>
    < td
id = "LC9221"
class
= "blob-code blob-code-inner js-file-line" > error < span
class
= "pl-k" >= < /span> response<span class="pl-k">.</s
pan > error;
<
/td>
< /tr>
< tr >
< td
id = "L9222"
class
= "blob-num js-line-number"
data - line - number = "9222" > < /td>
    < td
id = "LC9222"
class
= "blob-code blob-code-inner js-file-line" > isSuccess < span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > error;
<
/td>
< /tr>
< tr >
< td
id = "L9223"
class
= "blob-num js-line-number"
data - line - number = "9223" > < /td>
    < td
id = "LC9223"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9224"
class
= "blob-num js-line-number"
data - line - number = "9224" > < /td>
    < td
id = "LC9224"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9225"
class
= "blob-num js-line-number"
data - line - number = "9225" > < /td>
    < td
id = "LC9225"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9226"
class
= "blob-num js-line-number"
data - line - number = "9226" > < /td>
    < td
id = "LC9226"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Extract error from statusText and normalize for non-aborts</span></td>
    < /tr>
    < tr >
    < td
id = "L9227"
class
= "blob-num js-line-number"
data - line - number = "9227" > < /td>
    < td
id = "LC9227"
class
= "blob-code blob-code-inner js-file-line" > error < span
class
= "pl-k" >= < /span> statusText;</
td >
< /tr>
< tr >
< td
id = "L9228"
class
= "blob-num js-line-number"
data - line - number = "9228" > < /td>
    < td
id = "LC9228"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( status <span class="pl-k">||</s
pan > < span
class
= "pl-k" > ! < /span>statusText ) {</
td >
< /tr>
< tr >
< td
id = "L9229"
class
= "blob-num js-line-number"
data - line - number = "9229" > < /td>
    < td
id = "LC9229"
class
= "blob-code blob-code-inner js-file-line" > statusText < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > error < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9230"
class
= "blob-num js-line-number"
data - line - number = "9230" > < /td>
    < td
id = "LC9230"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( status <span class="pl-k">&lt;</s
pan > < span
class
= "pl-c1" > 0 < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L9231"
class
= "blob-num js-line-number"
data - line - number = "9231" > < /td>
    < td
id = "LC9231"
class
= "blob-code blob-code-inner js-file-line" > status < span
class
= "pl-k" >= < /span> <span class="pl-c1">0</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9232"
class
= "blob-num js-line-number"
data - line - number = "9232" > < /td>
    < td
id = "LC9232"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9233"
class
= "blob-num js-line-number"
data - line - number = "9233" > < /td>
    < td
id = "LC9233"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9234"
class
= "blob-num js-line-number"
data - line - number = "9234" > < /td>
    < td
id = "LC9234"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9235"
class
= "blob-num js-line-number"
data - line - number = "9235" > < /td>
    < td
id = "LC9235"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9236"
class
= "blob-num js-line-number"
data - line - number = "9236" > < /td>
    < td
id = "LC9236"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set data for the fake xhr object</span></td>
    < /tr>
    < tr >
    < td
id = "L9237"
class
= "blob-num js-line-number"
data - line - number = "9237" > < /td>
    < td
id = "LC9237"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>status <span class="pl-k">=</s
pan > status;
<
/td>
< /tr>
< tr >
< td
id = "L9238"
class
= "blob-num js-line-number"
data - line - number = "9238" > < /td>
    < td
id = "LC9238"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>statusText <span class="pl-k">=</s
pan > (nativeStatusText < span
class
= "pl-k" > || < /span> statusText ) <span class="pl-k">+</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span><span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L9239"
class
= "blob-num js-line-number"
data - line - number = "9239" > < /td>
    < td
id = "LC9239"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9240"
class
= "blob-num js-line-number"
data - line - number = "9240" > < /td>
    < td
id = "LC9240"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Success/Error</span></td>
    < /tr>
    < tr >
    < td
id = "L9241"
class
= "blob-num js-line-number"
data - line - number = "9241" > < /td>
    < td
id = "LC9241"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( isSuccess ) {</
td >
< /tr>
< tr >
< td
id = "L9242"
class
= "blob-num js-line-number"
data - line - number = "9242" > < /td>
    < td
id = "LC9242"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>resolveWith( callbackContext, [ success, statusText, jqXHR ] );</
td >
< /tr>
< tr >
< td
id = "L9243"
class
= "blob-num js-line-number"
data - line - number = "9243" > < /td>
    < td
id = "LC9243"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9244"
class
= "blob-num js-line-number"
data - line - number = "9244" > < /td>
    < td
id = "LC9244"
class
= "blob-code blob-code-inner js-file-line" > deferred < span
class
= "pl-k" >
.<
/span>rejectWith( callbackContext, [ jqXHR, statusText, error ] );</
td >
< /tr>
< tr >
< td
id = "L9245"
class
= "blob-num js-line-number"
data - line - number = "9245" > < /td>
    < td
id = "LC9245"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9246"
class
= "blob-num js-line-number"
data - line - number = "9246" > < /td>
    < td
id = "LC9246"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9247"
class
= "blob-num js-line-number"
data - line - number = "9247" > < /td>
    < td
id = "LC9247"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Status-dependent callbacks</span></td>
    < /tr>
    < tr >
    < td
id = "L9248"
class
= "blob-num js-line-number"
data - line - number = "9248" > < /td>
    < td
id = "LC9248"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>statusCode( statusCode );</
td >
< /tr>
< tr >
< td
id = "L9249"
class
= "blob-num js-line-number"
data - line - number = "9249" > < /td>
    < td
id = "LC9249"
class
= "blob-code blob-code-inner js-file-line" > statusCode < span
class
= "pl-k" >= < /span> undefined;</
td >
< /tr>
< tr >
< td
id = "L9250"
class
= "blob-num js-line-number"
data - line - number = "9250" > < /td>
    < td
id = "LC9250"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9251"
class
= "blob-num js-line-number"
data - line - number = "9251" > < /td>
    < td
id = "LC9251"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fireGlobals ) {</
td >
< /tr>
< tr >
< td
id = "L9252"
class
= "blob-num js-line-number"
data - line - number = "9252" > < /td>
    < td
id = "LC9252"
class
= "blob-code blob-code-inner js-file-line" > globalEventContext < span
class
= "pl-k" >
.<
/span>trigger( isSuccess <span class="pl-k">?</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ajaxSuccess<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>ajaxError<span class="pl-pds">&quot;</s
pan > < /span>,</
td >
< /tr>
< tr >
< td
id = "L9253"
class
= "blob-num js-line-number"
data - line - number = "9253" > < /td>
    < td
id = "LC9253"
class
= "blob-code blob-code-inner js-file-line" > [jqXHR, s, isSuccess < span class = "pl-k" > ? < /span> success <span class="pl-k">:</s
pan > error
] )
;
<
/td>
< /tr>
< tr >
< td
id = "L9254"
class
= "blob-num js-line-number"
data - line - number = "9254" > < /td>
    < td
id = "LC9254"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9255"
class
= "blob-num js-line-number"
data - line - number = "9255" > < /td>
    < td
id = "LC9255"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9256"
class
= "blob-num js-line-number"
data - line - number = "9256" > < /td>
    < td
id = "LC9256"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Complete</span></td>
    < /tr>
    < tr >
    < td
id = "L9257"
class
= "blob-num js-line-number"
data - line - number = "9257" > < /td>
    < td
id = "LC9257"
class
= "blob-code blob-code-inner js-file-line" > completeDeferred < span
class
= "pl-k" >
.<
/span>fireWith( callbackContext, [ jqXHR, statusText ] );</
td >
< /tr>
< tr >
< td
id = "L9258"
class
= "blob-num js-line-number"
data - line - number = "9258" > < /td>
    < td
id = "LC9258"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9259"
class
= "blob-num js-line-number"
data - line - number = "9259" > < /td>
    < td
id = "LC9259"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( fireGlobals ) {</
td >
< /tr>
< tr >
< td
id = "L9260"
class
= "blob-num js-line-number"
data - line - number = "9260" > < /td>
    < td
id = "LC9260"
class
= "blob-code blob-code-inner js-file-line" > globalEventContext < span
class
= "pl-k" >
.<
/span>trigger( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ajaxComplete < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, [jqXHR, s]
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9261"
class
= "blob-num js-line-number"
data - line - number = "9261" > < /td>
    < td
id = "LC9261"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9262"
class
= "blob-num js-line-number"
data - line - number = "9262" > < /td>
    < td
id = "LC9262"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle the global AJAX counter</span></td>
    < /tr>
    < tr >
    < td
id = "L9263"
class
= "blob-num js-line-number"
data - line - number = "9263" > < /td>
    < td
id = "LC9263"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > ( < span
class
= "pl-k" > -- < /span>jQuery<span class="pl-k">.</s
pan > active
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9264"
class
    = "blob-num js-line-number"
    data - line - number = "9264" > < /td>
        < td
    id = "LC9264"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>event<span class="pl-k">.</s
    pan > trigger( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>ajaxStop<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9265"
class
    = "blob-num js-line-number"
    data - line - number = "9265" > < /td>
        < td
    id = "LC9265"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9266"
class
= "blob-num js-line-number"
data - line - number = "9266" > < /td>
    < td
id = "LC9266"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9267"
class
= "blob-num js-line-number"
data - line - number = "9267" > < /td>
    < td
id = "LC9267"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9268"
class
= "blob-num js-line-number"
data - line - number = "9268" > < /td>
    < td
id = "LC9268"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9269"
class
= "blob-num js-line-number"
data - line - number = "9269" > < /td>
    < td
id = "LC9269"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jqXHR;</
td >
< /tr>
< tr >
< td
id = "L9270"
class
= "blob-num js-line-number"
data - line - number = "9270" > < /td>
    < td
id = "LC9270"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9271"
class
= "blob-num js-line-number"
data - line - number = "9271" > < /td>
    < td
id = "LC9271"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9272"
class
= "blob-num js-line-number"
data - line - number = "9272" > < /td>
    < td
id = "LC9272"
class
= "blob-code blob-code-inner js-file-line" > getJSON < span
class
= "pl-k" >
:<
/span> function( url, data, callback ) {</
td >
< /tr>
< tr >
< td
id = "L9273"
class
= "blob-num js-line-number"
data - line - number = "9273" > < /td>
    < td
id = "LC9273"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > get(url, data, callback, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>json<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L9274"
class
= "blob-num js-line-number"
data - line - number = "9274" > < /td>
    < td
id = "LC9274"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9275"
class
= "blob-num js-line-number"
data - line - number = "9275" > < /td>
    < td
id = "LC9275"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9276"
class
= "blob-num js-line-number"
data - line - number = "9276" > < /td>
    < td
id = "LC9276"
class
= "blob-code blob-code-inner js-file-line" > getScript < span
class
= "pl-k" >
:<
/span> function( url, callback ) {</
td >
< /tr>
< tr >
< td
id = "L9277"
class
= "blob-num js-line-number"
data - line - number = "9277" > < /td>
    < td
id = "LC9277"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > get(url, undefined, callback, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>script<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L9278"
class
= "blob-num js-line-number"
data - line - number = "9278" > < /td>
    < td
id = "LC9278"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9279"
class
= "blob-num js-line-number"
data - line - number = "9279" > < /td>
    < td
id = "LC9279"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9280"
class
= "blob-num js-line-number"
data - line - number = "9280" > < /td>
    < td
id = "LC9280"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9281"
class
= "blob-num js-line-number"
data - line - number = "9281" > < /td>
    < td
id = "LC9281"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( [ <span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>post<span class="pl-pds">&quot;</span></span> ], function( i, method ) {</
td >
< /tr>
< tr >
< td
id = "L9282"
class
= "blob-num js-line-number"
data - line - number = "9282" > < /td>
    < td
id = "LC9282"
class
= "blob-code blob-code-inner js-file-line" > jQuery[method] < span
class
= "pl-k" >= < /span> function( url, data, callback, type ) {</
td >
< /tr>
< tr >
< td
id = "L9283"
class
= "blob-num js-line-number"
data - line - number = "9283" > < /td>
    < td
id = "LC9283"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9284"
class
= "blob-num js-line-number"
data - line - number = "9284" > < /td>
    < td
id = "LC9284"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Shift arguments if data argument was omitted</span></td>
    < /tr>
    < tr >
    < td
id = "L9285"
class
= "blob-num js-line-number"
data - line - number = "9285" > < /td>
    < td
id = "LC9285"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(data)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9286"
class
    = "blob-num js-line-number"
    data - line - number = "9286" > < /td>
        < td
    id = "LC9286"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >= < /span> type <span class="pl-k">||</s
    pan > callback;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9287"
class
    = "blob-num js-line-number"
    data - line - number = "9287" > < /td>
        < td
    id = "LC9287"
class
    = "blob-code blob-code-inner js-file-line" > callback < span
class
    = "pl-k" >= < /span> data;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9288"
class
    = "blob-num js-line-number"
    data - line - number = "9288" > < /td>
        < td
    id = "LC9288"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9289"
class
    = "blob-num js-line-number"
    data - line - number = "9289" > < /td>
        < td
    id = "LC9289"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9290"
class
= "blob-num js-line-number"
data - line - number = "9290" > < /td>
    < td
id = "LC9290"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9291"
class
= "blob-num js-line-number"
data - line - number = "9291" > < /td>
    < td
id = "LC9291"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The url can be an options object (which then must have .url)</span></td>
    < /tr>
    < tr >
    < td
id = "L9292"
class
= "blob-num js-line-number"
data - line - number = "9292" > < /td>
    < td
id = "LC9292"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > ajax(jQuery < span
class
= "pl-k" >
.<
/span>extend( {</
td >
< /tr>
< tr >
< td
id = "L9293"
class
= "blob-num js-line-number"
data - line - number = "9293" > < /td>
    < td
id = "LC9293"
class
= "blob-code blob-code-inner js-file-line" > url < span
class
= "pl-k" >
:<
/span> url,</
td >
< /tr>
< tr >
< td
id = "L9294"
class
= "blob-num js-line-number"
data - line - number = "9294" > < /td>
    < td
id = "LC9294"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >
:<
/span> method,</
td >
< /tr>
< tr >
< td
id = "L9295"
class
= "blob-num js-line-number"
data - line - number = "9295" > < /td>
    < td
id = "LC9295"
class
= "blob-code blob-code-inner js-file-line" > dataType < span
class
= "pl-k" >
:<
/span> type,</
td >
< /tr>
< tr >
< td
id = "L9296"
class
= "blob-num js-line-number"
data - line - number = "9296" > < /td>
    < td
id = "LC9296"
class
= "blob-code blob-code-inner js-file-line" > data < span
class
= "pl-k" >
:<
/span> data,</
td >
< /tr>
< tr >
< td
id = "L9297"
class
= "blob-num js-line-number"
data - line - number = "9297" > < /td>
    < td
id = "LC9297"
class
= "blob-code blob-code-inner js-file-line" > success < span
class
= "pl-k" >
:<
/span> callback</
td >
< /tr>
< tr >
< td
id = "L9298"
class
= "blob-num js-line-number"
data - line - number = "9298" > < /td>
    < td
id = "LC9298"
class
= "blob-code blob-code-inner js-file-line" >
},
jQuery < span
class
= "pl-k" >
.<
/span>isPlainObject( url ) <span class="pl-k">&amp;&amp;</s
pan > url
) )
;
<
/td>
< /tr>
< tr >
< td
id = "L9299"
class
= "blob-num js-line-number"
data - line - number = "9299" > < /td>
    < td
id = "LC9299"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9300"
class
= "blob-num js-line-number"
data - line - number = "9300" > < /td>
    < td
id = "LC9300"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9301"
class
= "blob-num js-line-number"
data - line - number = "9301" > < /td>
    < td
id = "LC9301"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9302"
class
= "blob-num js-line-number"
data - line - number = "9302" > < /td>
    < td
id = "LC9302"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9303"
class
= "blob-num js-line-number"
data - line - number = "9303" > < /td>
    < td
id = "LC9303"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>_evalUrl <span class="pl-k">=</s
pan > function (url) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9304"
class
    = "blob-num js-line-number"
    data - line - number = "9304" > < /td>
        < td
    id = "LC9304"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> jQuery<span class="pl-k">.</s
    pan > ajax({ < /td>
        < /tr>
        < tr >
        < td
    id = "L9305"
class
    = "blob-num js-line-number"
    data - line - number = "9305" > < /td>
        < td
    id = "LC9305"
class
    = "blob-code blob-code-inner js-file-line" > url < span
class
    = "pl-k" >
:<
    /span> url,</
    td >
    < /tr>
    < tr >
    < td
    id = "L9306"
class
    = "blob-num js-line-number"
    data - line - number = "9306" > < /td>
        < td
    id = "LC9306"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9307"
class
    = "blob-num js-line-number"
    data - line - number = "9307" > < /td>
        < td
    id = "LC9307"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Make this explicit, since user can override this through ajaxSetup (#11264)</span></td>
        < /tr>
        < tr >
        < td
    id = "L9308"
class
    = "blob-num js-line-number"
    data - line - number = "9308" > < /td>
        < td
    id = "LC9308"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >
:<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > GET < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9309"
class
    = "blob-num js-line-number"
    data - line - number = "9309" > < /td>
        < td
    id = "LC9309"
class
    = "blob-code blob-code-inner js-file-line" > dataType < span
class
    = "pl-k" >
:<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > script < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9310"
class
    = "blob-num js-line-number"
    data - line - number = "9310" > < /td>
        < td
    id = "LC9310"
class
    = "blob-code blob-code-inner js-file-line" > cache < span
class
    = "pl-k" >
:<
    /span> <span class="pl-c1">true</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9311"
class
    = "blob-num js-line-number"
    data - line - number = "9311" > < /td>
        < td
    id = "LC9311"
class
    = "blob-code blob-code-inner js-file-line" > async < span
class
    = "pl-k" >
:<
    /span> <span class="pl-c1">false</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9312"
class
    = "blob-num js-line-number"
    data - line - number = "9312" > < /td>
        < td
    id = "LC9312"
class
    = "blob-code blob-code-inner js-file-line" > global < span
class
    = "pl-k" >
:<
    /span> <span class="pl-c1">false</s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9313"
class
    = "blob-num js-line-number"
    data - line - number = "9313" > < /td>
        < td
    id = "LC9313"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>throws<span class="pl-pds">&quot;</s
    pan > < /span><span class="pl-k">:</s
    pan > < span
class
    = "pl-c1" > true < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L9314"
class
    = "blob-num js-line-number"
    data - line - number = "9314" > < /td>
        < td
    id = "LC9314"
class
    = "blob-code blob-code-inner js-file-line" >
} )
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9315"
class
    = "blob-num js-line-number"
    data - line - number = "9315" > < /td>
        < td
    id = "LC9315"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L9316"
class
= "blob-num js-line-number"
data - line - number = "9316" > < /td>
    < td
id = "LC9316"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9317"
class
= "blob-num js-line-number"
data - line - number = "9317" > < /td>
    < td
id = "LC9317"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9318"
class
= "blob-num js-line-number"
data - line - number = "9318" > < /td>
    < td
id = "LC9318"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L9319"
class
= "blob-num js-line-number"
data - line - number = "9319" > < /td>
    < td
id = "LC9319"
class
= "blob-code blob-code-inner js-file-line" > wrapAll < span
class
= "pl-k" >
:<
/span> function( html ) {</
td >
< /tr>
< tr >
< td
id = "L9320"
class
= "blob-num js-line-number"
data - line - number = "9320" > < /td>
    < td
id = "LC9320"
class
= "blob-code blob-code-inner js-file-line" >
var wrap;
<
/td>
< /tr>
< tr >
< td
id = "L9321"
class
= "blob-num js-line-number"
data - line - number = "9321" > < /td>
    < td
id = "LC9321"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9322"
class
= "blob-num js-line-number"
data - line - number = "9322" > < /td>
    < td
id = "LC9322"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > [ < span
class
= "pl-c1" > 0 < /span> ] ) {</
td >
< /tr>
< tr >
< td
id = "L9323"
class
= "blob-num js-line-number"
data - line - number = "9323" > < /td>
    < td
id = "LC9323"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(html)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9324"
class
    = "blob-num js-line-number"
    data - line - number = "9324" > < /td>
        < td
    id = "LC9324"
class
    = "blob-code blob-code-inner js-file-line" > html < span
class
    = "pl-k" >= < /span> html<span class="pl-k">.</s
    pan > call( < span
class
    = "pl-c1" > this < /span>[ <span class="pl-c1">0</span> ] );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9325"
class
    = "blob-num js-line-number"
    data - line - number = "9325" > < /td>
        < td
    id = "LC9325"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9326"
class
= "blob-num js-line-number"
data - line - number = "9326" > < /td>
    < td
id = "LC9326"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9327"
class
= "blob-num js-line-number"
data - line - number = "9327" > < /td>
    < td
id = "LC9327"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> The elements to wrap the target around</span></td>
    < /tr>
    < tr >
    < td
id = "L9328"
class
= "blob-num js-line-number"
data - line - number = "9328" > < /td>
    < td
id = "LC9328"
class
= "blob-code blob-code-inner js-file-line" > wrap < span
class
= "pl-k" >= < /span> jQuery( html, <span class="pl-c1">this</s
pan > [ < span
class
= "pl-c1" > 0 < /span> ]<span class="pl-k">.</s
pan > ownerDocument
)<
span
class
= "pl-k" >
.<
/span>eq( <span class="pl-c1">0</s
pan >
)<
span
class
= "pl-k" >
.<
/span>clone( <span class="pl-c1">true</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9329"
class
= "blob-num js-line-number"
data - line - number = "9329" > < /td>
    < td
id = "LC9329"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9330"
class
= "blob-num js-line-number"
data - line - number = "9330" > < /td>
    < td
id = "LC9330"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-c1">this</s
pan > [ < span
class
= "pl-c1" > 0 < /span> ]<span class="pl-k">.</s
pan > parentNode
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9331"
class
    = "blob-num js-line-number"
    data - line - number = "9331" > < /td>
        < td
    id = "LC9331"
class
    = "blob-code blob-code-inner js-file-line" > wrap < span
class
    = "pl-k" >
.<
    /span>insertBefore( <span class="pl-c1">this</s
    pan > [ < span
class
    = "pl-c1" > 0 < /span> ] );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9332"
class
    = "blob-num js-line-number"
    data - line - number = "9332" > < /td>
        < td
    id = "LC9332"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9333"
class
= "blob-num js-line-number"
data - line - number = "9333" > < /td>
    < td
id = "LC9333"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9334"
class
= "blob-num js-line-number"
data - line - number = "9334" > < /td>
    < td
id = "LC9334"
class
= "blob-code blob-code-inner js-file-line" > wrap < span
class
= "pl-k" >
.<
/span>map( function() {</
td >
< /tr>
< tr >
< td
id = "L9335"
class
= "blob-num js-line-number"
data - line - number = "9335" > < /td>
    < td
id = "LC9335"
class
= "blob-code blob-code-inner js-file-line" >
var elem
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9336"
class
= "blob-num js-line-number"
data - line - number = "9336" > < /td>
    < td
id = "LC9336"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9337"
class
= "blob-num js-line-number"
data - line - number = "9337" > < /td>
    < td
id = "LC9337"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( elem<span class="pl-k">.</s
pan > firstElementChild
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9338"
class
    = "blob-num js-line-number"
    data - line - number = "9338" > < /td>
        < td
    id = "LC9338"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > firstElementChild;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9339"
class
    = "blob-num js-line-number"
    data - line - number = "9339" > < /td>
        < td
    id = "LC9339"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9340"
class
= "blob-num js-line-number"
data - line - number = "9340" > < /td>
    < td
id = "LC9340"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9341"
class
= "blob-num js-line-number"
data - line - number = "9341" > < /td>
    < td
id = "LC9341"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> elem;</
td >
< /tr>
< tr >
< td
id = "L9342"
class
= "blob-num js-line-number"
data - line - number = "9342" > < /td>
    < td
id = "LC9342"
class
= "blob-code blob-code-inner js-file-line" >
} )<
span
class
= "pl-k" >
.<
/span>append( <span class="pl-c1">this</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9343"
class
= "blob-num js-line-number"
data - line - number = "9343" > < /td>
    < td
id = "LC9343"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9344"
class
= "blob-num js-line-number"
data - line - number = "9344" > < /td>
    < td
id = "LC9344"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9345"
class
= "blob-num js-line-number"
data - line - number = "9345" > < /td>
    < td
id = "LC9345"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9346"
class
= "blob-num js-line-number"
data - line - number = "9346" > < /td>
    < td
id = "LC9346"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9347"
class
= "blob-num js-line-number"
data - line - number = "9347" > < /td>
    < td
id = "LC9347"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9348"
class
= "blob-num js-line-number"
data - line - number = "9348" > < /td>
    < td
id = "LC9348"
class
= "blob-code blob-code-inner js-file-line" > wrapInner < span
class
= "pl-k" >
:<
/span> function( html ) {</
td >
< /tr>
< tr >
< td
id = "L9349"
class
= "blob-num js-line-number"
data - line - number = "9349" > < /td>
    < td
id = "LC9349"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(html)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9350"
class
    = "blob-num js-line-number"
    data - line - number = "9350" > < /td>
        < td
    id = "LC9350"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>each( function( i ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9351"
class
    = "blob-num js-line-number"
    data - line - number = "9351" > < /td>
        < td
    id = "LC9351"
class
    = "blob-code blob-code-inner js-file-line" > jQuery( < span
class
    = "pl-c1" > this < /span> )<span class="pl-k">.</s
    pan > wrapInner(html < span
class
    = "pl-k" >
.<
    /span>call( <span class="pl-c1">this</s
    pan >, i
) )
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9352"
class
    = "blob-num js-line-number"
    data - line - number = "9352" > < /td>
        < td
    id = "LC9352"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9353"
class
= "blob-num js-line-number"
data - line - number = "9353" > < /td>
    < td
id = "LC9353"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9354"
class
= "blob-num js-line-number"
data - line - number = "9354" > < /td>
    < td
id = "LC9354"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9355"
class
= "blob-num js-line-number"
data - line - number = "9355" > < /td>
    < td
id = "LC9355"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L9356"
class
= "blob-num js-line-number"
data - line - number = "9356" > < /td>
    < td
id = "LC9356"
class
= "blob-code blob-code-inner js-file-line" >
var self
<
span
class
= "pl-k" >= < /span> jQuery( <span class="pl-c1">this</s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L9357"
class
= "blob-num js-line-number"
data - line - number = "9357" > < /td>
    < td
id = "LC9357"
class
= "blob-code blob-code-inner js-file-line" > contents < span
class
= "pl-k" >= < /span> self<span class="pl-k">.</s
pan > contents();
<
/td>
< /tr>
< tr >
< td
id = "L9358"
class
= "blob-num js-line-number"
data - line - number = "9358" > < /td>
    < td
id = "LC9358"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9359"
class
= "blob-num js-line-number"
data - line - number = "9359" > < /td>
    < td
id = "LC9359"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( contents<span class="pl-k">.</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9360"
class
    = "blob-num js-line-number"
    data - line - number = "9360" > < /td>
        < td
    id = "LC9360"
class
    = "blob-code blob-code-inner js-file-line" > contents < span
class
    = "pl-k" >
.<
    /span>wrapAll( html );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9361"
class
    = "blob-num js-line-number"
    data - line - number = "9361" > < /td>
        < td
    id = "LC9361"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9362"
class
    = "blob-num js-line-number"
    data - line - number = "9362" > < /td>
        < td
    id = "LC9362"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9363"
class
= "blob-num js-line-number"
data - line - number = "9363" > < /td>
    < td
id = "LC9363"
class
= "blob-code blob-code-inner js-file-line" > self < span
class
= "pl-k" >
.<
/span>append( html );</
td >
< /tr>
< tr >
< td
id = "L9364"
class
= "blob-num js-line-number"
data - line - number = "9364" > < /td>
    < td
id = "LC9364"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9365"
class
= "blob-num js-line-number"
data - line - number = "9365" > < /td>
    < td
id = "LC9365"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9366"
class
= "blob-num js-line-number"
data - line - number = "9366" > < /td>
    < td
id = "LC9366"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9367"
class
= "blob-num js-line-number"
data - line - number = "9367" > < /td>
    < td
id = "LC9367"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9368"
class
= "blob-num js-line-number"
data - line - number = "9368" > < /td>
    < td
id = "LC9368"
class
= "blob-code blob-code-inner js-file-line" > wrap < span
class
= "pl-k" >
:<
/span> function( html ) {</
td >
< /tr>
< tr >
< td
id = "L9369"
class
= "blob-num js-line-number"
data - line - number = "9369" > < /td>
    < td
id = "LC9369"
class
= "blob-code blob-code-inner js-file-line" >
var isFunction
<
span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > isFunction(html);
<
/td>
< /tr>
< tr >
< td
id = "L9370"
class
= "blob-num js-line-number"
data - line - number = "9370" > < /td>
    < td
id = "LC9370"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9371"
class
= "blob-num js-line-number"
data - line - number = "9371" > < /td>
    < td
id = "LC9371"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>each( function( i ) {</
td >
< /tr>
< tr >
< td
id = "L9372"
class
= "blob-num js-line-number"
data - line - number = "9372" > < /td>
    < td
id = "LC9372"
class
= "blob-code blob-code-inner js-file-line" > jQuery( < span
class
= "pl-c1" > this < /span> )<span class="pl-k">.</s
pan > wrapAll(isFunction < span
class
= "pl-k" > ?
<
/span> html<span class="pl-k">.</s
pan > call( < span
class
= "pl-c1" > this < /span>, i ) <span class="pl-k">:</s
pan > html
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9373"
class
= "blob-num js-line-number"
data - line - number = "9373" > < /td>
    < td
id = "LC9373"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9374"
class
= "blob-num js-line-number"
data - line - number = "9374" > < /td>
    < td
id = "LC9374"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9375"
class
= "blob-num js-line-number"
data - line - number = "9375" > < /td>
    < td
id = "LC9375"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9376"
class
= "blob-num js-line-number"
data - line - number = "9376" > < /td>
    < td
id = "LC9376"
class
= "blob-code blob-code-inner js-file-line" > unwrap < span
class
= "pl-k" >
:<
/span> function( selector ) {</
td >
< /tr>
< tr >
< td
id = "L9377"
class
= "blob-num js-line-number"
data - line - number = "9377" > < /td>
    < td
id = "LC9377"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > parent(selector) < span
class
= "pl-k" >
.<
/span>not( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > body < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)<
span
class
= "pl-k" >
.<
/span>each( function() {</
td >
< /tr>
< tr >
< td
id = "L9378"
class
= "blob-num js-line-number"
data - line - number = "9378" > < /td>
    < td
id = "LC9378"
class
= "blob-code blob-code-inner js-file-line" > jQuery( < span
class
= "pl-c1" > this < /span> )<span class="pl-k">.</s
pan > replaceWith( < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > childNodes
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9379"
class
= "blob-num js-line-number"
data - line - number = "9379" > < /td>
    < td
id = "LC9379"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9380"
class
= "blob-num js-line-number"
data - line - number = "9380" > < /td>
    < td
id = "LC9380"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9381"
class
= "blob-num js-line-number"
data - line - number = "9381" > < /td>
    < td
id = "LC9381"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9382"
class
= "blob-num js-line-number"
data - line - number = "9382" > < /td>
    < td
id = "LC9382"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9383"
class
= "blob-num js-line-number"
data - line - number = "9383" > < /td>
    < td
id = "LC9383"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9384"
class
= "blob-num js-line-number"
data - line - number = "9384" > < /td>
    < td
id = "LC9384"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9385"
class
= "blob-num js-line-number"
data - line - number = "9385" > < /td>
    < td
id = "LC9385"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>expr<span class="pl-k">.</s
pan > pseudos < span
class
= "pl-k" >
.<
/span>hidden <span class="pl-k">=</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9386"
class
    = "blob-num js-line-number"
    data - line - number = "9386" > < /td>
        < td
    id = "LC9386"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">!</s
    pan > jQuery < span
class
    = "pl-k" >
.<
    /span>expr<span class="pl-k">.</s
    pan > pseudos < span
class
    = "pl-k" >
.<
    /span>visible( elem );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9387"
class
    = "blob-num js-line-number"
    data - line - number = "9387" > < /td>
        < td
    id = "LC9387"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L9388"
class
= "blob-num js-line-number"
data - line - number = "9388" > < /td>
    < td
id = "LC9388"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>expr<span class="pl-k">.</s
pan > pseudos < span
class
= "pl-k" >
.<
/span>visible <span class="pl-k">=</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9389"
class
    = "blob-num js-line-number"
    data - line - number = "9389" > < /td>
        < td
    id = "LC9389"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-k">!!</s
    pan > (elem < span
class
    = "pl-k" >
.<
    /span>offsetWidth <span class="pl-k">||</s
    pan > elem < span
class
    = "pl-k" >
.<
    /span>offsetHeight <span class="pl-k">||</s
    pan > elem < span
class
    = "pl-k" >
.<
    /span>getClientRects()<span class="pl-k">.</s
    pan > length
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9390"
class
    = "blob-num js-line-number"
    data - line - number = "9390" > < /td>
        < td
    id = "LC9390"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L9391"
class
= "blob-num js-line-number"
data - line - number = "9391" > < /td>
    < td
id = "LC9391"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9392"
class
= "blob-num js-line-number"
data - line - number = "9392" > < /td>
    < td
id = "LC9392"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9393"
class
= "blob-num js-line-number"
data - line - number = "9393" > < /td>
    < td
id = "LC9393"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9394"
class
= "blob-num js-line-number"
data - line - number = "9394" > < /td>
    < td
id = "LC9394"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9395"
class
= "blob-num js-line-number"
data - line - number = "9395" > < /td>
    < td
id = "LC9395"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ajaxSettings<span class="pl-k">.</s
pan > xhr < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L9396"
class
= "blob-num js-line-number"
data - line - number = "9396" > < /td>
    < td
id = "LC9396"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
try
<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9397"
class
= "blob-num js-line-number"
data - line - number = "9397" > < /td>
    < td
id = "LC9397"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-k">new</s
pan > < span
class
= "pl-smi" > window < span
class
= "pl-k" >
.<
/span>XMLHttpRequest</s
pan > ();
<
/td>
< /tr>
< tr >
< td
id = "L9398"
class
= "blob-num js-line-number"
data - line - number = "9398" > < /td>
    < td
id = "LC9398"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> ( e ) {}</
td >
< /tr>
< tr >
< td
id = "L9399"
class
= "blob-num js-line-number"
data - line - number = "9399" > < /td>
    < td
id = "LC9399"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9400"
class
= "blob-num js-line-number"
data - line - number = "9400" > < /td>
    < td
id = "LC9400"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9401"
class
= "blob-num js-line-number"
data - line - number = "9401" > < /td>
    < td
id = "LC9401"
class
= "blob-code blob-code-inner js-file-line" >
var xhrSuccessStatus
<
span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L9402"
class
= "blob-num js-line-number"
data - line - number = "9402" > < /td>
    < td
id = "LC9402"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9403"
class
= "blob-num js-line-number"
data - line - number = "9403" > < /td>
    < td
id = "LC9403"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> File protocol always yields status code 0, assume 200</span></td>
    < /tr>
    < tr >
    < td
id = "L9404"
class
= "blob-num js-line-number"
data - line - number = "9404" > < /td>
    < td
id = "LC9404"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > 0 < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > 200 < /span>,</
td >
< /tr>
< tr >
< td
id = "L9405"
class
= "blob-num js-line-number"
data - line - number = "9405" > < /td>
    < td
id = "LC9405"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9406"
class
= "blob-num js-line-number"
data - line - number = "9406" > < /td>
    < td
id = "LC9406"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L9407"
class
= "blob-num js-line-number"
data - line - number = "9407" > < /td>
    < td
id = "LC9407"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> #1450: sometimes IE returns 1223 when it should be 204</span></td>
    < /tr>
    < tr >
    < td
id = "L9408"
class
= "blob-num js-line-number"
data - line - number = "9408" > < /td>
    < td
id = "LC9408"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > 1223 < /span><span class="pl-k">:</s
pan > < span
class
= "pl-c1" > 204 < /span></
td >
< /tr>
< tr >
< td
id = "L9409"
class
= "blob-num js-line-number"
data - line - number = "9409" > < /td>
    < td
id = "LC9409"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9410"
class
= "blob-num js-line-number"
data - line - number = "9410" > < /td>
    < td
id = "LC9410"
class
= "blob-code blob-code-inner js-file-line" > xhrSupported < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > ajaxSettings < span
class
= "pl-k" >
.<
/span>xhr();</
td >
< /tr>
< tr >
< td
id = "L9411"
class
= "blob-num js-line-number"
data - line - number = "9411" > < /td>
    < td
id = "LC9411"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9412"
class
= "blob-num js-line-number"
data - line - number = "9412" > < /td>
    < td
id = "LC9412"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>cors <span class="pl-k">=</s
pan > < span
class
= "pl-k" > !! < /span>xhrSupported <span class="pl-k">&amp;&amp;</s
pan > ( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>withCredentials<span class="pl-pds">&quot;</s
pan > < /span> in xhrSupported );</
td >
< /tr>
< tr >
< td
id = "L9413"
class
= "blob-num js-line-number"
data - line - number = "9413" > < /td>
    < td
id = "LC9413"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>ajax <span class="pl-k">=</s
pan > xhrSupported < span
class
= "pl-k" >= < /span> <span class="pl-k">!!</s
pan > xhrSupported;
<
/td>
< /tr>
< tr >
< td
id = "L9414"
class
= "blob-num js-line-number"
data - line - number = "9414" > < /td>
    < td
id = "LC9414"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9415"
class
= "blob-num js-line-number"
data - line - number = "9415" > < /td>
    < td
id = "LC9415"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ajaxTransport( function( options ) {</
td >
< /tr>
< tr >
< td
id = "L9416"
class
= "blob-num js-line-number"
data - line - number = "9416" > < /td>
    < td
id = "LC9416"
class
= "blob-code blob-code-inner js-file-line" >
var callback, errorCallback;
<
/td>
< /tr>
< tr >
< td
id = "L9417"
class
= "blob-num js-line-number"
data - line - number = "9417" > < /td>
    < td
id = "LC9417"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9418"
class
= "blob-num js-line-number"
data - line - number = "9418" > < /td>
    < td
id = "LC9418"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Cross domain only allowed if supported through XMLHttpRequest</span></td>
    < /tr>
    < tr >
    < td
id = "L9419"
class
= "blob-num js-line-number"
data - line - number = "9419" > < /td>
    < td
id = "LC9419"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( support<span class="pl-k">.</s
pan > cors < span
class
= "pl-k" > || < /span> xhrSupported <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>options<span class="pl-k">.</s
pan > crossDomain
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9420"
class
    = "blob-num js-line-number"
    data - line - number = "9420" > < /td>
        < td
    id = "LC9420"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9421"
class
    = "blob-num js-line-number"
    data - line - number = "9421" > < /td>
        < td
    id = "LC9421"
class
    = "blob-code blob-code-inner js-file-line" > send < span
class
    = "pl-k" >
:<
    /span> function( headers, complete ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9422"
class
    = "blob-num js-line-number"
    data - line - number = "9422" > < /td>
        < td
    id = "LC9422"
class
    = "blob-code blob-code-inner js-file-line" >
    var i, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L9423"
class
    = "blob-num js-line-number"
    data - line - number = "9423" > < /td>
        < td
    id = "LC9423"
class
    = "blob-code blob-code-inner js-file-line" > xhr < span
class
    = "pl-k" >= < /span> options<span class="pl-k">.</s
    pan > xhr();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9424"
class
    = "blob-num js-line-number"
    data - line - number = "9424" > < /td>
        < td
    id = "LC9424"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9425"
class
    = "blob-num js-line-number"
    data - line - number = "9425" > < /td>
        < td
    id = "LC9425"
class
    = "blob-code blob-code-inner js-file-line" > xhr < span
class
    = "pl-k" >
.<
    /span>open(</
    td >
    < /tr>
    < tr >
    < td
    id = "L9426"
class
    = "blob-num js-line-number"
    data - line - number = "9426" > < /td>
        < td
    id = "LC9426"
class
    = "blob-code blob-code-inner js-file-line" > options < span
class
    = "pl-k" >
.<
    /span>type,</
    td >
    < /tr>
    < tr >
    < td
    id = "L9427"
class
    = "blob-num js-line-number"
    data - line - number = "9427" > < /td>
        < td
    id = "LC9427"
class
    = "blob-code blob-code-inner js-file-line" > options < span
class
    = "pl-k" >
.<
    /span>url,</
    td >
    < /tr>
    < tr >
    < td
    id = "L9428"
class
    = "blob-num js-line-number"
    data - line - number = "9428" > < /td>
        < td
    id = "LC9428"
class
    = "blob-code blob-code-inner js-file-line" > options < span
class
    = "pl-k" >
.<
    /span>async,</
    td >
    < /tr>
    < tr >
    < td
    id = "L9429"
class
    = "blob-num js-line-number"
    data - line - number = "9429" > < /td>
        < td
    id = "LC9429"
class
    = "blob-code blob-code-inner js-file-line" > options < span
class
    = "pl-k" >
.<
    /span>username,</
    td >
    < /tr>
    < tr >
    < td
    id = "L9430"
class
    = "blob-num js-line-number"
    data - line - number = "9430" > < /td>
        < td
    id = "LC9430"
class
    = "blob-code blob-code-inner js-file-line" > options < span
class
    = "pl-k" >
.<
    /span>password</
    td >
    < /tr>
    < tr >
    < td
    id = "L9431"
class
    = "blob-num js-line-number"
    data - line - number = "9431" > < /td>
        < td
    id = "LC9431"
class
    = "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9432"
class
= "blob-num js-line-number"
data - line - number = "9432" > < /td>
    < td
id = "LC9432"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9433"
class
= "blob-num js-line-number"
data - line - number = "9433" > < /td>
    < td
id = "LC9433"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Apply custom fields if provided</span></td>
    < /tr>
    < tr >
    < td
id = "L9434"
class
= "blob-num js-line-number"
data - line - number = "9434" > < /td>
    < td
id = "LC9434"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( options<span class="pl-k">.</s
pan > xhrFields
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9435"
class
    = "blob-num js-line-number"
    data - line - number = "9435" > < /td>
        < td
    id = "LC9435"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    for<
    /span> ( i in options<span class="pl-k">.</s
    pan > xhrFields
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9436"
class
    = "blob-num js-line-number"
    data - line - number = "9436" > < /td>
        < td
    id = "LC9436"
class
    = "blob-code blob-code-inner js-file-line" > xhr[i] < span
class
    = "pl-k" >= < /span> options<span class="pl-k">.</s
    pan > xhrFields[i];
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9437"
class
    = "blob-num js-line-number"
    data - line - number = "9437" > < /td>
        < td
    id = "LC9437"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9438"
class
= "blob-num js-line-number"
data - line - number = "9438" > < /td>
    < td
id = "LC9438"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9439"
class
= "blob-num js-line-number"
data - line - number = "9439" > < /td>
    < td
id = "LC9439"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9440"
class
= "blob-num js-line-number"
data - line - number = "9440" > < /td>
    < td
id = "LC9440"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Override mime type if needed</span></td>
    < /tr>
    < tr >
    < td
id = "L9441"
class
= "blob-num js-line-number"
data - line - number = "9441" > < /td>
    < td
id = "LC9441"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( options<span class="pl-k">.</s
pan > mimeType < span
class
= "pl-k" > &amp;&amp; < /span> xhr<span class="pl-k">.</s
pan > overrideMimeType
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9442"
class
    = "blob-num js-line-number"
    data - line - number = "9442" > < /td>
        < td
    id = "LC9442"
class
    = "blob-code blob-code-inner js-file-line" > xhr < span
class
    = "pl-k" >
.<
    /span>overrideMimeType( options<span class="pl-k">.</s
    pan > mimeType
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9443"
class
= "blob-num js-line-number"
data - line - number = "9443" > < /td>
    < td
id = "LC9443"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9444"
class
= "blob-num js-line-number"
data - line - number = "9444" > < /td>
    < td
id = "LC9444"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9445"
class
= "blob-num js-line-number"
data - line - number = "9445" > < /td>
    < td
id = "LC9445"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> X-Requested-With header</span></td>
    < /tr>
    < tr >
    < td
id = "L9446"
class
= "blob-num js-line-number"
data - line - number = "9446" > < /td>
    < td
id = "LC9446"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> For cross-domain requests, seeing as conditions for a preflight are</span></td>
    < /tr>
    < tr >
    < td
id = "L9447"
class
= "blob-num js-line-number"
data - line - number = "9447" > < /td>
    < td
id = "LC9447"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> akin to a jigsaw puzzle, we simply never set it to be sure.</span></td>
    < /tr>
    < tr >
    < td
id = "L9448"
class
= "blob-num js-line-number"
data - line - number = "9448" > < /td>
    < td
id = "LC9448"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (it can always be set on a per-request basis or even using ajaxSetup)</span></td>
    < /tr>
    < tr >
    < td
id = "L9449"
class
= "blob-num js-line-number"
data - line - number = "9449" > < /td>
    < td
id = "LC9449"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> For same-domain requests, won&#39;t change header if already provided.</span></td>
    < /tr>
    < tr >
    < td
id = "L9450"
class
= "blob-num js-line-number"
data - line - number = "9450" > < /td>
    < td
id = "LC9450"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > options < span
class
= "pl-k" >
.<
/span>crossDomain <span class="pl-k">&amp;&amp;</s
pan > < span
class
= "pl-k" > ! < /span>headers[ <span class="pl-s"><span class="pl-pds">&quot;</span>X-Requested-With<span class="pl-pds">&quot;</span></span> ] ) {</
td >
< /tr>
< tr >
< td
id = "L9451"
class
= "blob-num js-line-number"
data - line - number = "9451" > < /td>
    < td
id = "LC9451"
class
= "blob-code blob-code-inner js-file-line" > headers[ < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>X-Requested-With<span class="pl-pds">&quot;</s
pan > < /span> ] <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>XMLHttpRequest<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L9452"
class
= "blob-num js-line-number"
data - line - number = "9452" > < /td>
    < td
id = "LC9452"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9453"
class
= "blob-num js-line-number"
data - line - number = "9453" > < /td>
    < td
id = "LC9453"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9454"
class
= "blob-num js-line-number"
data - line - number = "9454" > < /td>
    < td
id = "LC9454"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set headers</span></td>
    < /tr>
    < tr >
    < td
id = "L9455"
class
= "blob-num js-line-number"
data - line - number = "9455" > < /td>
    < td
id = "LC9455"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
for<
/span> ( i in headers ) {</
td >
< /tr>
< tr >
< td
id = "L9456"
class
= "blob-num js-line-number"
data - line - number = "9456" > < /td>
    < td
id = "LC9456"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>setRequestHeader( i, headers[ i ] );</
td >
< /tr>
< tr >
< td
id = "L9457"
class
= "blob-num js-line-number"
data - line - number = "9457" > < /td>
    < td
id = "LC9457"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9458"
class
= "blob-num js-line-number"
data - line - number = "9458" > < /td>
    < td
id = "LC9458"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9459"
class
= "blob-num js-line-number"
data - line - number = "9459" > < /td>
    < td
id = "LC9459"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Callback</span></td>
    < /tr>
    < tr >
    < td
id = "L9460"
class
= "blob-num js-line-number"
data - line - number = "9460" > < /td>
    < td
id = "LC9460"
class
= "blob-code blob-code-inner js-file-line" > callback < span
class
= "pl-k" >= < /span> function( type ) {</
td >
< /tr>
< tr >
< td
id = "L9461"
class
= "blob-num js-line-number"
data - line - number = "9461" > < /td>
    < td
id = "LC9461"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L9462"
class
= "blob-num js-line-number"
data - line - number = "9462" > < /td>
    < td
id = "LC9462"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( callback ) {</
td >
< /tr>
< tr >
< td
id = "L9463"
class
= "blob-num js-line-number"
data - line - number = "9463" > < /td>
    < td
id = "LC9463"
class
= "blob-code blob-code-inner js-file-line" > callback < span
class
= "pl-k" >= < /span> errorCallback <span class="pl-k">=</s
pan > xhr < span
class
= "pl-k" >
.<
/span>onload <span class="pl-k">=</s
pan > < /td>
< /tr>
< tr >
< td
id = "L9464"
class
= "blob-num js-line-number"
data - line - number = "9464" > < /td>
    < td
id = "LC9464"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>onerror <span class="pl-k">=</s
pan > xhr < span
class
= "pl-k" >
.<
/span>onabort <span class="pl-k">=</s
pan > xhr < span
class
= "pl-k" >
.<
/span>onreadystatechange <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > null < /span>;</
td >
< /tr>
< tr >
< td
id = "L9465"
class
= "blob-num js-line-number"
data - line - number = "9465" > < /td>
    < td
id = "LC9465"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9466"
class
= "blob-num js-line-number"
data - line - number = "9466" > < /td>
    < td
id = "LC9466"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>abort<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L9467"
class
= "blob-num js-line-number"
data - line - number = "9467" > < /td>
    < td
id = "LC9467"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>abort();</
td >
< /tr>
< tr >
< td
id = "L9468"
class
= "blob-num js-line-number"
data - line - number = "9468" > < /td>
    < td
id = "LC9468"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (type < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > error < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9469"
class
    = "blob-num js-line-number"
    data - line - number = "9469" > < /td>
        < td
    id = "LC9469"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9470"
class
    = "blob-num js-line-number"
    data - line - number = "9470" > < /td>
        < td
    id = "LC9470"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Support: IE &lt;=9 only</span></td>
        < /tr>
        < tr >
        < td
    id = "L9471"
class
    = "blob-num js-line-number"
    data - line - number = "9471" > < /td>
        < td
    id = "LC9471"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> On a manual native abort, IE9 throws</span></td>
        < /tr>
        < tr >
        < td
    id = "L9472"
class
    = "blob-num js-line-number"
    data - line - number = "9472" > < /td>
        < td
    id = "LC9472"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> errors on any property access that is not readyState</span></td>
        < /tr>
        < tr >
        < td
    id = "L9473"
class
    = "blob-num js-line-number"
    data - line - number = "9473" > < /td>
        < td
    id = "LC9473"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof xhr<span class="pl-k">.</s
    pan > status < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>number<span class="pl-pds">&quot;</s
    pan > < /span> ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9474"
class
    = "blob-num js-line-number"
    data - line - number = "9474" > < /td>
        < td
    id = "LC9474"
class
    = "blob-code blob-code-inner js-file-line" > complete( < span
class
    = "pl-c1" > 0 < /span>, <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > error < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
    ;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9475"
class
    = "blob-num js-line-number"
    data - line - number = "9475" > < /td>
        < td
    id = "LC9475"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9476"
class
= "blob-num js-line-number"
data - line - number = "9476" > < /td>
    < td
id = "LC9476"
class
= "blob-code blob-code-inner js-file-line" > complete( < /td>
    < /tr>
    < tr >
    < td
id = "L9477"
class
= "blob-num js-line-number"
data - line - number = "9477" > < /td>
    < td
id = "LC9477"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9478"
class
= "blob-num js-line-number"
data - line - number = "9478" > < /td>
    < td
id = "LC9478"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> File: protocol always yields status 0; see #8605, #14207</span></td>
    < /tr>
    < tr >
    < td
id = "L9479"
class
= "blob-num js-line-number"
data - line - number = "9479" > < /td>
    < td
id = "LC9479"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>status,</
td >
< /tr>
< tr >
< td
id = "L9480"
class
= "blob-num js-line-number"
data - line - number = "9480" > < /td>
    < td
id = "LC9480"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>statusText</
td >
< /tr>
< tr >
< td
id = "L9481"
class
= "blob-num js-line-number"
data - line - number = "9481" > < /td>
    < td
id = "LC9481"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9482"
class
= "blob-num js-line-number"
data - line - number = "9482" > < /td>
    < td
id = "LC9482"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9483"
class
= "blob-num js-line-number"
data - line - number = "9483" > < /td>
    < td
id = "LC9483"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9484"
class
= "blob-num js-line-number"
data - line - number = "9484" > < /td>
    < td
id = "LC9484"
class
= "blob-code blob-code-inner js-file-line" > complete( < /td>
    < /tr>
    < tr >
    < td
id = "L9485"
class
= "blob-num js-line-number"
data - line - number = "9485" > < /td>
    < td
id = "LC9485"
class
= "blob-code blob-code-inner js-file-line" > xhrSuccessStatus[xhr < span
class
= "pl-k" >
.<
/span>status ] <span class="pl-k">||</s
pan > xhr < span
class
= "pl-k" >
.<
/span>status,</
td >
< /tr>
< tr >
< td
id = "L9486"
class
= "blob-num js-line-number"
data - line - number = "9486" > < /td>
    < td
id = "LC9486"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>statusText,</
td >
< /tr>
< tr >
< td
id = "L9487"
class
= "blob-num js-line-number"
data - line - number = "9487" > < /td>
    < td
id = "LC9487"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9488"
class
= "blob-num js-line-number"
data - line - number = "9488" > < /td>
    < td
id = "LC9488"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L9489"
class
= "blob-num js-line-number"
data - line - number = "9489" > < /td>
    < td
id = "LC9489"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> IE9 has no XHR2 but throws on binary (trac-11426)</span></td>
    < /tr>
    < tr >
    < td
id = "L9490"
class
= "blob-num js-line-number"
data - line - number = "9490" > < /td>
    < td
id = "LC9490"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> For XHR2 non-text, let the caller handle it (gh-2498)</span></td>
    < /tr>
    < tr >
    < td
id = "L9491"
class
= "blob-num js-line-number"
data - line - number = "9491" > < /td>
    < td
id = "LC9491"
class
= "blob-code blob-code-inner js-file-line" > (xhr < span
class
= "pl-k" >
.<
/span>responseType <span class="pl-k">||</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>text<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > text < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > || < /span></
td >
< /tr>
< tr >
< td
id = "L9492"
class
= "blob-num js-line-number"
data - line - number = "9492" > < /td>
    < td
id = "LC9492"
class
= "blob-code blob-code-inner js-file-line" > typeof xhr < span
class
= "pl-k" >
.<
/span>responseText <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > string < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L9493"
class
= "blob-num js-line-number"
data - line - number = "9493" > < /td>
    < td
id = "LC9493"
class
= "blob-code blob-code-inner js-file-line" > {binary < span
class
= "pl-k" >
:<
/span> xhr<span class="pl-k">.</s
pan > response
} <
span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L9494"
class
= "blob-num js-line-number"
data - line - number = "9494" > < /td>
    < td
id = "LC9494"
class
= "blob-code blob-code-inner js-file-line" > {text < span
class
= "pl-k" >
:<
/span> xhr<span class="pl-k">.</s
pan > responseText
},<
/td>
< /tr>
< tr >
< td
id = "L9495"
class
= "blob-num js-line-number"
data - line - number = "9495" > < /td>
    < td
id = "LC9495"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>getAllResponseHeaders()</
td >
< /tr>
< tr >
< td
id = "L9496"
class
= "blob-num js-line-number"
data - line - number = "9496" > < /td>
    < td
id = "LC9496"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9497"
class
= "blob-num js-line-number"
data - line - number = "9497" > < /td>
    < td
id = "LC9497"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9498"
class
= "blob-num js-line-number"
data - line - number = "9498" > < /td>
    < td
id = "LC9498"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9499"
class
= "blob-num js-line-number"
data - line - number = "9499" > < /td>
    < td
id = "LC9499"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9500"
class
= "blob-num js-line-number"
data - line - number = "9500" > < /td>
    < td
id = "LC9500"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9501"
class
= "blob-num js-line-number"
data - line - number = "9501" > < /td>
    < td
id = "LC9501"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9502"
class
= "blob-num js-line-number"
data - line - number = "9502" > < /td>
    < td
id = "LC9502"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Listen to events</span></td>
    < /tr>
    < tr >
    < td
id = "L9503"
class
= "blob-num js-line-number"
data - line - number = "9503" > < /td>
    < td
id = "LC9503"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>onload <span class="pl-k">=</s
pan > callback();
<
/td>
< /tr>
< tr >
< td
id = "L9504"
class
= "blob-num js-line-number"
data - line - number = "9504" > < /td>
    < td
id = "LC9504"
class
= "blob-code blob-code-inner js-file-line" > errorCallback < span
class
= "pl-k" >= < /span> xhr<span class="pl-k">.</s
pan > onerror < span
class
= "pl-k" >= < /span> callback( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > error < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9505"
class
= "blob-num js-line-number"
data - line - number = "9505" > < /td>
    < td
id = "LC9505"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9506"
class
= "blob-num js-line-number"
data - line - number = "9506" > < /td>
    < td
id = "LC9506"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE 9 only</span></td>
    < /tr>
    < tr >
    < td
id = "L9507"
class
= "blob-num js-line-number"
data - line - number = "9507" > < /td>
    < td
id = "LC9507"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use onreadystatechange to replace onabort</span></td>
    < /tr>
    < tr >
    < td
id = "L9508"
class
= "blob-num js-line-number"
data - line - number = "9508" > < /td>
    < td
id = "LC9508"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> to handle uncaught aborts</span></td>
    < /tr>
    < tr >
    < td
id = "L9509"
class
= "blob-num js-line-number"
data - line - number = "9509" > < /td>
    < td
id = "LC9509"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( xhr<span class="pl-k">.</s
pan > onabort < span
class
= "pl-k" > != < /span><span class="pl-k">=</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9510"
class
    = "blob-num js-line-number"
    data - line - number = "9510" > < /td>
        < td
    id = "LC9510"
class
    = "blob-code blob-code-inner js-file-line" > xhr < span
class
    = "pl-k" >
.<
    /span>onabort <span class="pl-k">=</s
    pan > errorCallback;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9511"
class
    = "blob-num js-line-number"
    data - line - number = "9511" > < /td>
        < td
    id = "LC9511"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9512"
class
= "blob-num js-line-number"
data - line - number = "9512" > < /td>
    < td
id = "LC9512"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>onreadystatechange <span class="pl-k">=</s
pan > function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9513"
class
    = "blob-num js-line-number"
    data - line - number = "9513" > < /td>
        < td
    id = "LC9513"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9514"
class
    = "blob-num js-line-number"
    data - line - number = "9514" > < /td>
        < td
    id = "LC9514"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Check readyState before timeout as it changes</span></td>
        < /tr>
        < tr >
        < td
    id = "L9515"
class
    = "blob-num js-line-number"
    data - line - number = "9515" > < /td>
        < td
    id = "LC9515"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( xhr<span class="pl-k">.</s
    pan > readyState < span
class
    = "pl-k" >= == < /span> <span class="pl-c1">4</s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9516"
class
    = "blob-num js-line-number"
    data - line - number = "9516" > < /td>
        < td
    id = "LC9516"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9517"
class
    = "blob-num js-line-number"
    data - line - number = "9517" > < /td>
        < td
    id = "LC9517"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Allow onerror to be called first,</span></td>
        < /tr>
        < tr >
        < td
    id = "L9518"
class
    = "blob-num js-line-number"
    data - line - number = "9518" > < /td>
        < td
    id = "LC9518"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> but that will not handle a native abort</span></td>
        < /tr>
        < tr >
        < td
    id = "L9519"
class
    = "blob-num js-line-number"
    data - line - number = "9519" > < /td>
        < td
    id = "LC9519"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Also, save errorCallback to a variable</span></td>
        < /tr>
        < tr >
        < td
    id = "L9520"
class
    = "blob-num js-line-number"
    data - line - number = "9520" > < /td>
        < td
    id = "LC9520"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> as xhr.onerror cannot be accessed</span></td>
        < /tr>
        < tr >
        < td
    id = "L9521"
class
    = "blob-num js-line-number"
    data - line - number = "9521" > < /td>
        < td
    id = "LC9521"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>setTimeout( function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9522"
class
    = "blob-num js-line-number"
    data - line - number = "9522" > < /td>
        < td
    id = "LC9522"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( callback ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9523"
class
    = "blob-num js-line-number"
    data - line - number = "9523" > < /td>
        < td
    id = "LC9523"
class
    = "blob-code blob-code-inner js-file-line" > errorCallback();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9524"
class
    = "blob-num js-line-number"
    data - line - number = "9524" > < /td>
        < td
    id = "LC9524"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9525"
class
= "blob-num js-line-number"
data - line - number = "9525" > < /td>
    < td
id = "LC9525"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9526"
class
= "blob-num js-line-number"
data - line - number = "9526" > < /td>
    < td
id = "LC9526"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9527"
class
= "blob-num js-line-number"
data - line - number = "9527" > < /td>
    < td
id = "LC9527"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9528"
class
= "blob-num js-line-number"
data - line - number = "9528" > < /td>
    < td
id = "LC9528"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9529"
class
= "blob-num js-line-number"
data - line - number = "9529" > < /td>
    < td
id = "LC9529"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9530"
class
= "blob-num js-line-number"
data - line - number = "9530" > < /td>
    < td
id = "LC9530"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Create the abort callback</span></td>
    < /tr>
    < tr >
    < td
id = "L9531"
class
= "blob-num js-line-number"
data - line - number = "9531" > < /td>
    < td
id = "LC9531"
class
= "blob-code blob-code-inner js-file-line" > callback < span
class
= "pl-k" >= < /span> callback( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > abort < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9532"
class
= "blob-num js-line-number"
data - line - number = "9532" > < /td>
    < td
id = "LC9532"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9533"
class
= "blob-num js-line-number"
data - line - number = "9533" > < /td>
    < td
id = "LC9533"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
try
<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9534"
class
= "blob-num js-line-number"
data - line - number = "9534" > < /td>
    < td
id = "LC9534"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9535"
class
= "blob-num js-line-number"
data - line - number = "9535" > < /td>
    < td
id = "LC9535"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Do send the request (this may raise an exception)</span></td>
    < /tr>
    < tr >
    < td
id = "L9536"
class
= "blob-num js-line-number"
data - line - number = "9536" > < /td>
    < td
id = "LC9536"
class
= "blob-code blob-code-inner js-file-line" > xhr < span
class
= "pl-k" >
.<
/span>send( options<span class="pl-k">.</s
pan > hasContent < span
class
= "pl-k" > &amp;&amp; < /span> options<span class="pl-k">.</s
pan > data < span
class
= "pl-k" > || < /span> <span class="pl-c1">null</s
pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9537"
class
= "blob-num js-line-number"
data - line - number = "9537" > < /td>
    < td
id = "LC9537"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
catch<
/span> ( e ) {</
td >
< /tr>
< tr >
< td
id = "L9538"
class
= "blob-num js-line-number"
data - line - number = "9538" > < /td>
    < td
id = "LC9538"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9539"
class
= "blob-num js-line-number"
data - line - number = "9539" > < /td>
    < td
id = "LC9539"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> #14683: Only rethrow if this hasn&#39;t been notified as an error yet</span></td>
    < /tr>
    < tr >
    < td
id = "L9540"
class
= "blob-num js-line-number"
data - line - number = "9540" > < /td>
    < td
id = "LC9540"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( callback ) {</
td >
< /tr>
< tr >
< td
id = "L9541"
class
= "blob-num js-line-number"
data - line - number = "9541" > < /td>
    < td
id = "LC9541"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
throw
<
/span> e;</
td >
< /tr>
< tr >
< td
id = "L9542"
class
= "blob-num js-line-number"
data - line - number = "9542" > < /td>
    < td
id = "LC9542"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9543"
class
= "blob-num js-line-number"
data - line - number = "9543" > < /td>
    < td
id = "LC9543"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9544"
class
= "blob-num js-line-number"
data - line - number = "9544" > < /td>
    < td
id = "LC9544"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9545"
class
= "blob-num js-line-number"
data - line - number = "9545" > < /td>
    < td
id = "LC9545"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9546"
class
= "blob-num js-line-number"
data - line - number = "9546" > < /td>
    < td
id = "LC9546"
class
= "blob-code blob-code-inner js-file-line" > abort < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L9547"
class
= "blob-num js-line-number"
data - line - number = "9547" > < /td>
    < td
id = "LC9547"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( callback ) {</
td >
< /tr>
< tr >
< td
id = "L9548"
class
= "blob-num js-line-number"
data - line - number = "9548" > < /td>
    < td
id = "LC9548"
class
= "blob-code blob-code-inner js-file-line" > callback();
<
/td>
< /tr>
< tr >
< td
id = "L9549"
class
= "blob-num js-line-number"
data - line - number = "9549" > < /td>
    < td
id = "LC9549"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9550"
class
= "blob-num js-line-number"
data - line - number = "9550" > < /td>
    < td
id = "LC9550"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9551"
class
= "blob-num js-line-number"
data - line - number = "9551" > < /td>
    < td
id = "LC9551"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9552"
class
= "blob-num js-line-number"
data - line - number = "9552" > < /td>
    < td
id = "LC9552"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9553"
class
= "blob-num js-line-number"
data - line - number = "9553" > < /td>
    < td
id = "LC9553"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9554"
class
= "blob-num js-line-number"
data - line - number = "9554" > < /td>
    < td
id = "LC9554"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9555"
class
= "blob-num js-line-number"
data - line - number = "9555" > < /td>
    < td
id = "LC9555"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9556"
class
= "blob-num js-line-number"
data - line - number = "9556" > < /td>
    < td
id = "LC9556"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9557"
class
= "blob-num js-line-number"
data - line - number = "9557" > < /td>
    < td
id = "LC9557"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9558"
class
= "blob-num js-line-number"
data - line - number = "9558" > < /td>
    < td
id = "LC9558"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)</span></td>
    < /tr>
    < tr >
    < td
id = "L9559"
class
= "blob-num js-line-number"
data - line - number = "9559" > < /td>
    < td
id = "LC9559"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ajaxPrefilter( function( s ) {</
td >
< /tr>
< tr >
< td
id = "L9560"
class
= "blob-num js-line-number"
data - line - number = "9560" > < /td>
    < td
id = "LC9560"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > crossDomain
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9561"
class
    = "blob-num js-line-number"
    data - line - number = "9561" > < /td>
        < td
    id = "LC9561"
class
    = "blob-code blob-code-inner js-file-line" > s < span
class
    = "pl-k" >
.<
    /span>contents<span class="pl-k">.</s
    pan > script < span
class
    = "pl-k" >= < /span> <span class="pl-c1">false</s
    pan >;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9562"
class
    = "blob-num js-line-number"
    data - line - number = "9562" > < /td>
        < td
    id = "LC9562"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9563"
class
= "blob-num js-line-number"
data - line - number = "9563" > < /td>
    < td
id = "LC9563"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9564"
class
= "blob-num js-line-number"
data - line - number = "9564" > < /td>
    < td
id = "LC9564"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9565"
class
= "blob-num js-line-number"
data - line - number = "9565" > < /td>
    < td
id = "LC9565"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Install script dataType</span></td>
    < /tr>
    < tr >
    < td
id = "L9566"
class
= "blob-num js-line-number"
data - line - number = "9566" > < /td>
    < td
id = "LC9566"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ajaxSetup( {</
td >
< /tr>
< tr >
< td
id = "L9567"
class
= "blob-num js-line-number"
data - line - number = "9567" > < /td>
    < td
id = "LC9567"
class
= "blob-code blob-code-inner js-file-line" > accepts < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9568"
class
= "blob-num js-line-number"
data - line - number = "9568" > < /td>
    < td
id = "LC9568"
class
= "blob-code blob-code-inner js-file-line" > script < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > text / javascript, application / javascript,
<
span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span></
td >
< /tr>
< tr >
< td
id = "L9569"
class
= "blob-num js-line-number"
data - line - number = "9569" > < /td>
    < td
id = "LC9569"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>application/
ecmascript, application / x - ecmascript < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L9570"
class
= "blob-num js-line-number"
data - line - number = "9570" > < /td>
    < td
id = "LC9570"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9571"
class
= "blob-num js-line-number"
data - line - number = "9571" > < /td>
    < td
id = "LC9571"
class
= "blob-code blob-code-inner js-file-line" > contents < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9572"
class
= "blob-num js-line-number"
data - line - number = "9572" > < /td>
    < td
id = "LC9572"
class
= "blob-code blob-code-inner js-file-line" > script < span
class
= "pl-k" >
:<
/span> <span class="pl-k">/ < /span>\b(<span class="pl-k">?:</s
pan > java < span
class
= "pl-k" > | < /span>ecma)script\b<span class="pl-k">/ < /span></
td >
< /tr>
< tr >
< td
id = "L9573"
class
= "blob-num js-line-number"
data - line - number = "9573" > < /td>
    < td
id = "LC9573"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9574"
class
= "blob-num js-line-number"
data - line - number = "9574" > < /td>
    < td
id = "LC9574"
class
= "blob-code blob-code-inner js-file-line" > converters < span
class
= "pl-k" >
:<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9575"
class
= "blob-num js-line-number"
data - line - number = "9575" > < /td>
    < td
id = "LC9575"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>text script<span class="pl-pds">&quot;</s
pan > < /span><span class="pl-k">:</s
pan > function (text) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9576"
class
    = "blob-num js-line-number"
    data - line - number = "9576" > < /td>
        < td
    id = "LC9576"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>globalEval( text );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9577"
class
    = "blob-num js-line-number"
    data - line - number = "9577" > < /td>
        < td
    id = "LC9577"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> text;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9578"
class
    = "blob-num js-line-number"
    data - line - number = "9578" > < /td>
        < td
    id = "LC9578"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L9579"
class
= "blob-num js-line-number"
data - line - number = "9579" > < /td>
    < td
id = "LC9579"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9580"
class
= "blob-num js-line-number"
data - line - number = "9580" > < /td>
    < td
id = "LC9580"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9581"
class
= "blob-num js-line-number"
data - line - number = "9581" > < /td>
    < td
id = "LC9581"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9582"
class
= "blob-num js-line-number"
data - line - number = "9582" > < /td>
    < td
id = "LC9582"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle cache&#39;s special case and crossDomain</span></td>
    < /tr>
    < tr >
    < td
id = "L9583"
class
= "blob-num js-line-number"
data - line - number = "9583" > < /td>
    < td
id = "LC9583"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ajaxPrefilter( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > script < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, function (s) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9584"
class
    = "blob-num js-line-number"
    data - line - number = "9584" > < /td>
        < td
    id = "LC9584"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( s<span class="pl-k">.</s
    pan > cache < span
class
    = "pl-k" >= == < /span> undefined ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9585"
class
    = "blob-num js-line-number"
    data - line - number = "9585" > < /td>
        < td
    id = "LC9585"
class
    = "blob-code blob-code-inner js-file-line" > s < span
class
    = "pl-k" >
.<
    /span>cache <span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > false < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9586"
class
    = "blob-num js-line-number"
    data - line - number = "9586" > < /td>
        < td
    id = "LC9586"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L9587"
class
= "blob-num js-line-number"
data - line - number = "9587" > < /td>
    < td
id = "LC9587"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s<span class="pl-k">.</s
pan > crossDomain
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9588"
class
    = "blob-num js-line-number"
    data - line - number = "9588" > < /td>
        < td
    id = "LC9588"
class
    = "blob-code blob-code-inner js-file-line" > s < span
class
    = "pl-k" >
.<
    /span>type <span class="pl-k">=</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>GET<span class="pl-pds">&quot;</s
    pan > < /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9589"
class
    = "blob-num js-line-number"
    data - line - number = "9589" > < /td>
        < td
    id = "LC9589"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9590"
class
= "blob-num js-line-number"
data - line - number = "9590" > < /td>
    < td
id = "LC9590"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9591"
class
= "blob-num js-line-number"
data - line - number = "9591" > < /td>
    < td
id = "LC9591"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9592"
class
= "blob-num js-line-number"
data - line - number = "9592" > < /td>
    < td
id = "LC9592"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Bind script tag hack transport</span></td>
    < /tr>
    < tr >
    < td
id = "L9593"
class
= "blob-num js-line-number"
data - line - number = "9593" > < /td>
    < td
id = "LC9593"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ajaxTransport( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > script < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, function (s) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9594"
class
    = "blob-num js-line-number"
    data - line - number = "9594" > < /td>
        < td
    id = "LC9594"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9595"
class
    = "blob-num js-line-number"
    data - line - number = "9595" > < /td>
        < td
    id = "LC9595"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> This transport only deals with cross domain requests</span></td>
        < /tr>
        < tr >
        < td
    id = "L9596"
class
    = "blob-num js-line-number"
    data - line - number = "9596" > < /td>
        < td
    id = "LC9596"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( s<span class="pl-k">.</s
    pan > crossDomain
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9597"
class
    = "blob-num js-line-number"
    data - line - number = "9597" > < /td>
        < td
    id = "LC9597"
class
    = "blob-code blob-code-inner js-file-line" >
    var script, callback;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9598"
class
    = "blob-num js-line-number"
    data - line - number = "9598" > < /td>
        < td
    id = "LC9598"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9599"
class
    = "blob-num js-line-number"
    data - line - number = "9599" > < /td>
        < td
    id = "LC9599"
class
    = "blob-code blob-code-inner js-file-line" > send < span
class
    = "pl-k" >
:<
    /span> function( _, complete ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9600"
class
    = "blob-num js-line-number"
    data - line - number = "9600" > < /td>
        < td
    id = "LC9600"
class
    = "blob-code blob-code-inner js-file-line" > script < span
class
    = "pl-k" >= < /span> jQuery( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > &lt; script &gt; < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
<
span
class
= "pl-k" >
.<
/span>prop( {</
td >
< /tr>
< tr >
< td
id = "L9601"
class
= "blob-num js-line-number"
data - line - number = "9601" > < /td>
    < td
id = "LC9601"
class
= "blob-code blob-code-inner js-file-line" > charset < span
class
= "pl-k" >
:<
/span> s<span class="pl-k">.</s
pan > scriptCharset,
<
/td>
< /tr>
< tr >
< td
id = "L9602"
class
= "blob-num js-line-number"
data - line - number = "9602" > < /td>
    < td
id = "LC9602"
class
= "blob-code blob-code-inner js-file-line" > src < span
class
= "pl-k" >
:<
/span> s<span class="pl-k">.</s
pan > url < /td>
< /tr>
< tr >
< td
id = "L9603"
class
= "blob-num js-line-number"
data - line - number = "9603" > < /td>
    < td
id = "LC9603"
class
= "blob-code blob-code-inner js-file-line" >
} )<
span
class
= "pl-k" >
.<
/span>on(</
td >
< /tr>
< tr >
< td
id = "L9604"
class
= "blob-num js-line-number"
data - line - number = "9604" > < /td>
    < td
id = "LC9604"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>load error<span class="pl-pds">&quot;</s
pan > < /span>,</
td >
< /tr>
< tr >
< td
id = "L9605"
class
= "blob-num js-line-number"
data - line - number = "9605" > < /td>
    < td
id = "LC9605"
class
= "blob-code blob-code-inner js-file-line" > callback < span
class
= "pl-k" >= < /span> function( evt ) {</
td >
< /tr>
< tr >
< td
id = "L9606"
class
= "blob-num js-line-number"
data - line - number = "9606" > < /td>
    < td
id = "LC9606"
class
= "blob-code blob-code-inner js-file-line" > script < span
class
= "pl-k" >
.<
/span>remove();</
td >
< /tr>
< tr >
< td
id = "L9607"
class
= "blob-num js-line-number"
data - line - number = "9607" > < /td>
    < td
id = "LC9607"
class
= "blob-code blob-code-inner js-file-line" > callback < span
class
= "pl-k" >= < /span> <span class="pl-c1">null</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9608"
class
= "blob-num js-line-number"
data - line - number = "9608" > < /td>
    < td
id = "LC9608"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( evt ) {</
td >
< /tr>
< tr >
< td
id = "L9609"
class
= "blob-num js-line-number"
data - line - number = "9609" > < /td>
    < td
id = "LC9609"
class
= "blob-code blob-code-inner js-file-line" > complete(evt < span
class
= "pl-k" >
.<
/span>type <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>error<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">?</s
pan > < span
class
= "pl-c1" > 404 < /span> <span class="pl-k">:</s
pan > < span
class
= "pl-c1" > 200 < /span>, evt<span class="pl-k">.</s
pan > type
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9610"
class
= "blob-num js-line-number"
data - line - number = "9610" > < /td>
    < td
id = "LC9610"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9611"
class
= "blob-num js-line-number"
data - line - number = "9611" > < /td>
    < td
id = "LC9611"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9612"
class
= "blob-num js-line-number"
data - line - number = "9612" > < /td>
    < td
id = "LC9612"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9613"
class
= "blob-num js-line-number"
data - line - number = "9613" > < /td>
    < td
id = "LC9613"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9614"
class
= "blob-num js-line-number"
data - line - number = "9614" > < /td>
    < td
id = "LC9614"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use native DOM manipulation to avoid our domManip AJAX trickery</span></td>
    < /tr>
    < tr >
    < td
id = "L9615"
class
= "blob-num js-line-number"
data - line - number = "9615" > < /td>
    < td
id = "LC9615"
class
= "blob-code blob-code-inner js-file-line" > document < span
class
= "pl-k" >
.<
/span>head<span class="pl-k">.</s
pan > appendChild(script[ < span
class
= "pl-c1" > 0 < /span> ] );</
td >
< /tr>
< tr >
< td
id = "L9616"
class
= "blob-num js-line-number"
data - line - number = "9616" > < /td>
    < td
id = "LC9616"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9617"
class
= "blob-num js-line-number"
data - line - number = "9617" > < /td>
    < td
id = "LC9617"
class
= "blob-code blob-code-inner js-file-line" > abort < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L9618"
class
= "blob-num js-line-number"
data - line - number = "9618" > < /td>
    < td
id = "LC9618"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( callback ) {</
td >
< /tr>
< tr >
< td
id = "L9619"
class
= "blob-num js-line-number"
data - line - number = "9619" > < /td>
    < td
id = "LC9619"
class
= "blob-code blob-code-inner js-file-line" > callback();
<
/td>
< /tr>
< tr >
< td
id = "L9620"
class
= "blob-num js-line-number"
data - line - number = "9620" > < /td>
    < td
id = "LC9620"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9621"
class
= "blob-num js-line-number"
data - line - number = "9621" > < /td>
    < td
id = "LC9621"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9622"
class
= "blob-num js-line-number"
data - line - number = "9622" > < /td>
    < td
id = "LC9622"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9623"
class
= "blob-num js-line-number"
data - line - number = "9623" > < /td>
    < td
id = "LC9623"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9624"
class
= "blob-num js-line-number"
data - line - number = "9624" > < /td>
    < td
id = "LC9624"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9625"
class
= "blob-num js-line-number"
data - line - number = "9625" > < /td>
    < td
id = "LC9625"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9626"
class
= "blob-num js-line-number"
data - line - number = "9626" > < /td>
    < td
id = "LC9626"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9627"
class
= "blob-num js-line-number"
data - line - number = "9627" > < /td>
    < td
id = "LC9627"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9628"
class
= "blob-num js-line-number"
data - line - number = "9628" > < /td>
    < td
id = "LC9628"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9629"
class
= "blob-num js-line-number"
data - line - number = "9629" > < /td>
    < td
id = "LC9629"
class
= "blob-code blob-code-inner js-file-line" >
var oldCallbacks
<
span
class
= "pl-k" >= < /span> [],</
td >
< /tr>
< tr >
< td
id = "L9630"
class
= "blob-num js-line-number"
data - line - number = "9630" > < /td>
    < td
id = "LC9630"
class
= "blob-code blob-code-inner js-file-line" > rjsonp < span
class
= "pl-k" >= < /span> <span class="pl-k">/ < /span>(<span class="pl-k">=</s
pan >
)\<
span
class
= "pl-k" > ?
<
/span>(<span class="pl-k">?</s
pan > < span
class
= "pl-k" >= < /span><span class="pl-k">&amp;|</s
pan > $
)<
span
class
= "pl-k" > | < /span>\<span class="pl-k">?</s
pan >\<
span
class
= "pl-k" > ?
<
/span><span class="pl-k">/ < /span>;</
td >
< /tr>
< tr >
< td
id = "L9631"
class
= "blob-num js-line-number"
data - line - number = "9631" > < /td>
    < td
id = "LC9631"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9632"
class
= "blob-num js-line-number"
data - line - number = "9632" > < /td>
    < td
id = "LC9632"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Default jsonp settings</span></td>
    < /tr>
    < tr >
    < td
id = "L9633"
class
= "blob-num js-line-number"
data - line - number = "9633" > < /td>
    < td
id = "LC9633"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ajaxSetup( {</
td >
< /tr>
< tr >
< td
id = "L9634"
class
= "blob-num js-line-number"
data - line - number = "9634" > < /td>
    < td
id = "LC9634"
class
= "blob-code blob-code-inner js-file-line" > jsonp < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > callback < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L9635"
class
= "blob-num js-line-number"
data - line - number = "9635" > < /td>
    < td
id = "LC9635"
class
= "blob-code blob-code-inner js-file-line" > jsonpCallback < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L9636"
class
= "blob-num js-line-number"
data - line - number = "9636" > < /td>
    < td
id = "LC9636"
class
= "blob-code blob-code-inner js-file-line" >
var callback
<
span
class
= "pl-k" >= < /span> oldCallbacks<span class="pl-k">.</s
pan > pop() < span
class
= "pl-k" > || < /span> ( jQuery<span class="pl-k">.</s
pan > expando < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > _ < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> ( nonce<span class="pl-k">++</s
pan >
) )
;
<
/td>
< /tr>
< tr >
< td
id = "L9637"
class
= "blob-num js-line-number"
data - line - number = "9637" > < /td>
    < td
id = "LC9637"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span>[ callback ] <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > true < /span>;</
td >
< /tr>
< tr >
< td
id = "L9638"
class
= "blob-num js-line-number"
data - line - number = "9638" > < /td>
    < td
id = "LC9638"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> callback;</
td >
< /tr>
< tr >
< td
id = "L9639"
class
= "blob-num js-line-number"
data - line - number = "9639" > < /td>
    < td
id = "LC9639"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9640"
class
= "blob-num js-line-number"
data - line - number = "9640" > < /td>
    < td
id = "LC9640"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9641"
class
= "blob-num js-line-number"
data - line - number = "9641" > < /td>
    < td
id = "LC9641"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9642"
class
= "blob-num js-line-number"
data - line - number = "9642" > < /td>
    < td
id = "LC9642"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Detect, normalize options and install callbacks for jsonp requests</span></td>
    < /tr>
    < tr >
    < td
id = "L9643"
class
= "blob-num js-line-number"
data - line - number = "9643" > < /td>
    < td
id = "LC9643"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>ajaxPrefilter( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > json
jsonp < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, function (s, originalSettings, jqXHR) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9644"
class
    = "blob-num js-line-number"
    data - line - number = "9644" > < /td>
        < td
    id = "LC9644"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9645"
class
    = "blob-num js-line-number"
    data - line - number = "9645" > < /td>
        < td
    id = "LC9645"
class
    = "blob-code blob-code-inner js-file-line" >
    var callbackName, overwritten, responseContainer, <
    /td>
    < /tr>
    < tr >
    < td
    id = "L9646"
class
    = "blob-num js-line-number"
    data - line - number = "9646" > < /td>
        < td
    id = "LC9646"
class
    = "blob-code blob-code-inner js-file-line" > jsonProp < span
class
    = "pl-k" >= < /span> s<span class="pl-k">.</s
    pan > jsonp < span
class
    = "pl-k" > != < /span><span class="pl-k">=</s
    pan > < span
class
    = "pl-c1" > false < /span> <span class="pl-k">&amp;&amp;</s
    pan > (rjsonp < span
class
    = "pl-k" >
.<
    /span>test( s<span class="pl-k">.</s
    pan > url
) <
    span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L9647"
class
    = "blob-num js-line-number"
    data - line - number = "9647" > < /td>
        < td
    id = "LC9647"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>url<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">:</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L9648"
class
    = "blob-num js-line-number"
    data - line - number = "9648" > < /td>
        < td
    id = "LC9648"
class
    = "blob-code blob-code-inner js-file-line" > typeof s < span
class
    = "pl-k" >
.<
    /span>data <span class="pl-k">===</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>string<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">&amp;&amp;</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L9649"
class
    = "blob-num js-line-number"
    data - line - number = "9649" > < /td>
        < td
    id = "LC9649"
class
    = "blob-code blob-code-inner js-file-line" > (s < span
class
    = "pl-k" >
.<
    /span>contentType <span class="pl-k">||</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span><span class="pl-pds">&quot;</s
    pan > < /span> )</
    td >
    < /tr>
    < tr >
    < td
    id = "L9650"
class
    = "blob-num js-line-number"
    data - line - number = "9650" > < /td>
        < td
    id = "LC9650"
class
    = "blob-code blob-code-inner js-file-line" >
.
    indexOf( < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>application/x - www - form - urlencoded < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) <
    span
class
    = "pl-k" >= == < /span> <span class="pl-c1">0</s
    pan > < span
class
    = "pl-k" > &amp;&amp; < /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L9651"
class
    = "blob-num js-line-number"
    data - line - number = "9651" > < /td>
        < td
    id = "LC9651"
class
    = "blob-code blob-code-inner js-file-line" > rjsonp < span
class
    = "pl-k" >
.<
    /span>test( s<span class="pl-k">.</s
    pan > data
) <
    span
class
    = "pl-k" > &amp;&amp; < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > data < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L9652"
class
    = "blob-num js-line-number"
    data - line - number = "9652" > < /td>
        < td
    id = "LC9652"
class
    = "blob-code blob-code-inner js-file-line" >
);
<
/td>
< /tr>
< tr >
< td
id = "L9653"
class
= "blob-num js-line-number"
data - line - number = "9653" > < /td>
    < td
id = "LC9653"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9654"
class
= "blob-num js-line-number"
data - line - number = "9654" > < /td>
    < td
id = "LC9654"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Handle iff the expected data type is &quot;jsonp&quot; or we have a parameter to set</span></td>
    < /tr>
    < tr >
    < td
id = "L9655"
class
= "blob-num js-line-number"
data - line - number = "9655" > < /td>
    < td
id = "LC9655"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jsonProp <span class="pl-k">||</s
pan > s < span
class
= "pl-k" >
.<
/span>dataTypes[ <span class="pl-c1">0</span> ] <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>jsonp<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L9656"
class
= "blob-num js-line-number"
data - line - number = "9656" > < /td>
    < td
id = "LC9656"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9657"
class
= "blob-num js-line-number"
data - line - number = "9657" > < /td>
    < td
id = "LC9657"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get callback name, remembering preexisting value associated with it</span></td>
    < /tr>
    < tr >
    < td
id = "L9658"
class
= "blob-num js-line-number"
data - line - number = "9658" > < /td>
    < td
id = "LC9658"
class
= "blob-code blob-code-inner js-file-line" > callbackName < span
class
= "pl-k" >= < /span> s<span class="pl-k">.</s
pan > jsonpCallback < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > isFunction(s < span
class
= "pl-k" >
.<
/span>jsonpCallback ) <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L9659"
class
= "blob-num js-line-number"
data - line - number = "9659" > < /td>
    < td
id = "LC9659"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>jsonpCallback() <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L9660"
class
= "blob-num js-line-number"
data - line - number = "9660" > < /td>
    < td
id = "LC9660"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>jsonpCallback;</
td >
< /tr>
< tr >
< td
id = "L9661"
class
= "blob-num js-line-number"
data - line - number = "9661" > < /td>
    < td
id = "LC9661"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9662"
class
= "blob-num js-line-number"
data - line - number = "9662" > < /td>
    < td
id = "LC9662"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Insert callback into url or form data</span></td>
    < /tr>
    < tr >
    < td
id = "L9663"
class
= "blob-num js-line-number"
data - line - number = "9663" > < /td>
    < td
id = "LC9663"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jsonProp ) {</
td >
< /tr>
< tr >
< td
id = "L9664"
class
= "blob-num js-line-number"
data - line - number = "9664" > < /td>
    < td
id = "LC9664"
class
= "blob-code blob-code-inner js-file-line" > s[jsonProp] < span
class
= "pl-k" >= < /span> s[ jsonProp ]<span class="pl-k">.</s
pan > replace(rjsonp, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>$1<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > callbackName
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9665"
class
= "blob-num js-line-number"
data - line - number = "9665" > < /td>
    < td
id = "LC9665"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (s < span
class
= "pl-k" >
.<
/span>jsonp <span class="pl-k">!=</s
pan > < span
class
= "pl-k" >= < /span> <span class="pl-c1">false</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9666"
class
    = "blob-num js-line-number"
    data - line - number = "9666" > < /td>
        < td
    id = "LC9666"
class
    = "blob-code blob-code-inner js-file-line" > s < span
class
    = "pl-k" >
.<
    /span>url <span class="pl-k">+=</s
    pan > (rquery < span
class
    = "pl-k" >
.<
    /span>test( s<span class="pl-k">.</s
    pan > url
) <
    span
class
    = "pl-k" > ?
<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > &amp; < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan > < span
class
    = "pl-k" >
:<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > ?
<
    span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
<
span
class
= "pl-k" > + < /span> s<span class="pl-k">.</s
pan > jsonp < span
class
= "pl-k" > + < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan >= < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> callbackName;</
td >
< /tr>
< tr >
< td
id = "L9667"
class
= "blob-num js-line-number"
data - line - number = "9667" > < /td>
    < td
id = "LC9667"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9668"
class
= "blob-num js-line-number"
data - line - number = "9668" > < /td>
    < td
id = "LC9668"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9669"
class
= "blob-num js-line-number"
data - line - number = "9669" > < /td>
    < td
id = "LC9669"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Use data converter to retrieve json after script execution</span></td>
    < /tr>
    < tr >
    < td
id = "L9670"
class
= "blob-num js-line-number"
data - line - number = "9670" > < /td>
    < td
id = "LC9670"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>converters[ <span class="pl-s"><span class="pl-pds">&quot;</span>script json<span class="pl-pds">&quot;</span></span> ] <span class="pl-k">=</s
pan > function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9671"
class
    = "blob-num js-line-number"
    data - line - number = "9671" > < /td>
        < td
    id = "LC9671"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( <span class="pl-k">!</s
    pan > responseContainer
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9672"
class
    = "blob-num js-line-number"
    data - line - number = "9672" > < /td>
        < td
    id = "LC9672"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>error( callbackName <span class="pl-k">+</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span> was not called<span class="pl-pds">&quot;</s
    pan > < /span> );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9673"
class
    = "blob-num js-line-number"
    data - line - number = "9673" > < /td>
        < td
    id = "LC9673"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9674"
class
= "blob-num js-line-number"
data - line - number = "9674" > < /td>
    < td
id = "LC9674"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> responseContainer[ <span class="pl-c1">0</span> ];</
td >
< /tr>
< tr >
< td
id = "L9675"
class
= "blob-num js-line-number"
data - line - number = "9675" > < /td>
    < td
id = "LC9675"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9676"
class
= "blob-num js-line-number"
data - line - number = "9676" > < /td>
    < td
id = "LC9676"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9677"
class
= "blob-num js-line-number"
data - line - number = "9677" > < /td>
    < td
id = "LC9677"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Force json dataType</span></td>
    < /tr>
    < tr >
    < td
id = "L9678"
class
= "blob-num js-line-number"
data - line - number = "9678" > < /td>
    < td
id = "LC9678"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>dataTypes[ <span class="pl-c1">0</span> ] <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>json<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L9679"
class
= "blob-num js-line-number"
data - line - number = "9679" > < /td>
    < td
id = "LC9679"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9680"
class
= "blob-num js-line-number"
data - line - number = "9680" > < /td>
    < td
id = "LC9680"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Install callback</span></td>
    < /tr>
    < tr >
    < td
id = "L9681"
class
= "blob-num js-line-number"
data - line - number = "9681" > < /td>
    < td
id = "LC9681"
class
= "blob-code blob-code-inner js-file-line" > overwritten < span
class
= "pl-k" >= < /span> window[ callbackName ];</
td >
< /tr>
< tr >
< td
id = "L9682"
class
= "blob-num js-line-number"
data - line - number = "9682" > < /td>
    < td
id = "LC9682"
class
= "blob-code blob-code-inner js-file-line" > window[callbackName] < span
class
= "pl-k" >= < /span> function() {</
td >
< /tr>
< tr >
< td
id = "L9683"
class
= "blob-num js-line-number"
data - line - number = "9683" > < /td>
    < td
id = "LC9683"
class
= "blob-code blob-code-inner js-file-line" > responseContainer < span
class
= "pl-k" >= < /span> arguments;</
td >
< /tr>
< tr >
< td
id = "L9684"
class
= "blob-num js-line-number"
data - line - number = "9684" > < /td>
    < td
id = "LC9684"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9685"
class
= "blob-num js-line-number"
data - line - number = "9685" > < /td>
    < td
id = "LC9685"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9686"
class
= "blob-num js-line-number"
data - line - number = "9686" > < /td>
    < td
id = "LC9686"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Clean-up function (fires after converters)</span></td>
    < /tr>
    < tr >
    < td
id = "L9687"
class
= "blob-num js-line-number"
data - line - number = "9687" > < /td>
    < td
id = "LC9687"
class
= "blob-code blob-code-inner js-file-line" > jqXHR < span
class
= "pl-k" >
.<
/span>always( function() {</
td >
< /tr>
< tr >
< td
id = "L9688"
class
= "blob-num js-line-number"
data - line - number = "9688" > < /td>
    < td
id = "LC9688"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9689"
class
= "blob-num js-line-number"
data - line - number = "9689" > < /td>
    < td
id = "LC9689"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If previous value didn&#39;t exist - remove it</span></td>
    < /tr>
    < tr >
    < td
id = "L9690"
class
= "blob-num js-line-number"
data - line - number = "9690" > < /td>
    < td
id = "LC9690"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( overwritten <span class="pl-k">===</s
pan > undefined
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9691"
class
    = "blob-num js-line-number"
    data - line - number = "9691" > < /td>
        < td
    id = "LC9691"
class
    = "blob-code blob-code-inner js-file-line" > jQuery(window) < span
class
    = "pl-k" >
.<
    /span>removeProp( callbackName );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9692"
class
    = "blob-num js-line-number"
    data - line - number = "9692" > < /td>
        < td
    id = "LC9692"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9693"
class
    = "blob-num js-line-number"
    data - line - number = "9693" > < /td>
        < td
    id = "LC9693"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Otherwise restore preexisting value</span></td>
        < /tr>
        < tr >
        < td
    id = "L9694"
class
    = "blob-num js-line-number"
    data - line - number = "9694" > < /td>
        < td
    id = "LC9694"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9695"
class
= "blob-num js-line-number"
data - line - number = "9695" > < /td>
    < td
id = "LC9695"
class
= "blob-code blob-code-inner js-file-line" > window[callbackName] < span
class
= "pl-k" >= < /span> overwritten;</
td >
< /tr>
< tr >
< td
id = "L9696"
class
= "blob-num js-line-number"
data - line - number = "9696" > < /td>
    < td
id = "LC9696"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9697"
class
= "blob-num js-line-number"
data - line - number = "9697" > < /td>
    < td
id = "LC9697"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9698"
class
= "blob-num js-line-number"
data - line - number = "9698" > < /td>
    < td
id = "LC9698"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Save back as free</span></td>
    < /tr>
    < tr >
    < td
id = "L9699"
class
= "blob-num js-line-number"
data - line - number = "9699" > < /td>
    < td
id = "LC9699"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( s[ callbackName ] ) {</
td >
< /tr>
< tr >
< td
id = "L9700"
class
= "blob-num js-line-number"
data - line - number = "9700" > < /td>
    < td
id = "LC9700"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9701"
class
= "blob-num js-line-number"
data - line - number = "9701" > < /td>
    < td
id = "LC9701"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure that re-using the options doesn&#39;t screw things around</span></td>
    < /tr>
    < tr >
    < td
id = "L9702"
class
= "blob-num js-line-number"
data - line - number = "9702" > < /td>
    < td
id = "LC9702"
class
= "blob-code blob-code-inner js-file-line" > s < span
class
= "pl-k" >
.<
/span>jsonpCallback <span class="pl-k">=</s
pan > originalSettings < span
class
= "pl-k" >
.<
/span>jsonpCallback;</
td >
< /tr>
< tr >
< td
id = "L9703"
class
= "blob-num js-line-number"
data - line - number = "9703" > < /td>
    < td
id = "LC9703"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9704"
class
= "blob-num js-line-number"
data - line - number = "9704" > < /td>
    < td
id = "LC9704"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Save the callback name for future use</span></td>
    < /tr>
    < tr >
    < td
id = "L9705"
class
= "blob-num js-line-number"
data - line - number = "9705" > < /td>
    < td
id = "LC9705"
class
= "blob-code blob-code-inner js-file-line" > oldCallbacks < span
class
= "pl-k" >
.<
/span>push( callbackName );</
td >
< /tr>
< tr >
< td
id = "L9706"
class
= "blob-num js-line-number"
data - line - number = "9706" > < /td>
    < td
id = "LC9706"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9707"
class
= "blob-num js-line-number"
data - line - number = "9707" > < /td>
    < td
id = "LC9707"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9708"
class
= "blob-num js-line-number"
data - line - number = "9708" > < /td>
    < td
id = "LC9708"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Call if it was a function and we have a response</span></td>
    < /tr>
    < tr >
    < td
id = "L9709"
class
= "blob-num js-line-number"
data - line - number = "9709" > < /td>
    < td
id = "LC9709"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( responseContainer <span class="pl-k">&amp;&amp;</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>isFunction( overwritten ) ) {</
td >
< /tr>
< tr >
< td
id = "L9710"
class
= "blob-num js-line-number"
data - line - number = "9710" > < /td>
    < td
id = "LC9710"
class
= "blob-code blob-code-inner js-file-line" > overwritten(responseContainer[ < span
class
= "pl-c1" > 0 < /span> ] );</
td >
< /tr>
< tr >
< td
id = "L9711"
class
= "blob-num js-line-number"
data - line - number = "9711" > < /td>
    < td
id = "LC9711"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9712"
class
= "blob-num js-line-number"
data - line - number = "9712" > < /td>
    < td
id = "LC9712"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9713"
class
= "blob-num js-line-number"
data - line - number = "9713" > < /td>
    < td
id = "LC9713"
class
= "blob-code blob-code-inner js-file-line" > responseContainer < span
class
= "pl-k" >= < /span> overwritten <span class="pl-k">=</s
pan > undefined;
<
/td>
< /tr>
< tr >
< td
id = "L9714"
class
= "blob-num js-line-number"
data - line - number = "9714" > < /td>
    < td
id = "LC9714"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9715"
class
= "blob-num js-line-number"
data - line - number = "9715" > < /td>
    < td
id = "LC9715"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9716"
class
= "blob-num js-line-number"
data - line - number = "9716" > < /td>
    < td
id = "LC9716"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Delegate to script</span></td>
    < /tr>
    < tr >
    < td
id = "L9717"
class
= "blob-num js-line-number"
data - line - number = "9717" > < /td>
    < td
id = "LC9717"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > script < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9718"
class
= "blob-num js-line-number"
data - line - number = "9718" > < /td>
    < td
id = "LC9718"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9719"
class
= "blob-num js-line-number"
data - line - number = "9719" > < /td>
    < td
id = "LC9719"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9720"
class
= "blob-num js-line-number"
data - line - number = "9720" > < /td>
    < td
id = "LC9720"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9721"
class
= "blob-num js-line-number"
data - line - number = "9721" > < /td>
    < td
id = "LC9721"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9722"
class
= "blob-num js-line-number"
data - line - number = "9722" > < /td>
    < td
id = "LC9722"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9723"
class
= "blob-num js-line-number"
data - line - number = "9723" > < /td>
    < td
id = "LC9723"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9724"
class
= "blob-num js-line-number"
data - line - number = "9724" > < /td>
    < td
id = "LC9724"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Safari 8 only</span></td>
    < /tr>
    < tr >
    < td
id = "L9725"
class
= "blob-num js-line-number"
data - line - number = "9725" > < /td>
    < td
id = "LC9725"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> In Safari 8 documents created via document.implementation.createHTMLDocument</span></td>
    < /tr>
    < tr >
    < td
id = "L9726"
class
= "blob-num js-line-number"
data - line - number = "9726" > < /td>
    < td
id = "LC9726"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> collapse sibling forms: the second one becomes a child of the first one.</span></td>
    < /tr>
    < tr >
    < td
id = "L9727"
class
= "blob-num js-line-number"
data - line - number = "9727" > < /td>
    < td
id = "LC9727"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Because of that, this security measure has to be disabled in Safari 8.</span></td>
    < /tr>
    < tr >
    < td
id = "L9728"
class
= "blob-num js-line-number"
data - line - number = "9728" > < /td>
    < td
id = "LC9728"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://bugs.webkit.org/show_bug.cgi?id=137337</span></td>
    < /tr>
    < tr >
    < td
id = "L9729"
class
= "blob-num js-line-number"
data - line - number = "9729" > < /td>
    < td
id = "LC9729"
class
= "blob-code blob-code-inner js-file-line" > support < span
class
= "pl-k" >
.<
/span>createHTMLDocument <span class="pl-k">=</s
pan > (function () {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9730"
class
    = "blob-num js-line-number"
    data - line - number = "9730" > < /td>
        < td
    id = "LC9730"
class
    = "blob-code blob-code-inner js-file-line" >
    var body
<
    span
class
    = "pl-k" >= < /span> document<span class="pl-k">.</s
    pan > implementation < span
class
    = "pl-k" >
.<
    /span>createHTMLDocument( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
) < span
class
= "pl-k" >
.<
/span>body;</
td >
< /tr>
< tr >
< td
id = "L9731"
class
= "blob-num js-line-number"
data - line - number = "9731" > < /td>
    < td
id = "LC9731"
class
= "blob-code blob-code-inner js-file-line" > body < span
class
= "pl-k" >
.<
/span>innerHTML <span class="pl-k">=</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>&lt;form&gt;&lt;/
form &gt; &lt; form &gt; &lt; /form&gt;<span class="pl-pds">&quot;</s
pan > < /span>;</
td >
< /tr>
< tr >
< td
id = "L9732"
class
= "blob-num js-line-number"
data - line - number = "9732" > < /td>
    < td
id = "LC9732"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> body<span class="pl-k">.</s
pan > childNodes < span
class
= "pl-k" >
.<
/span>length <span class="pl-k">===</s
pan > < span
class
= "pl-c1" > 2 < /span>;</
td >
< /tr>
< tr >
< td
id = "L9733"
class
= "blob-num js-line-number"
data - line - number = "9733" > < /td>
    < td
id = "LC9733"
class
= "blob-code blob-code-inner js-file-line" >
} )
();
<
/td>
< /tr>
< tr >
< td
id = "L9734"
class
= "blob-num js-line-number"
data - line - number = "9734" > < /td>
    < td
id = "LC9734"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9735"
class
= "blob-num js-line-number"
data - line - number = "9735" > < /td>
    < td
id = "LC9735"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9736"
class
= "blob-num js-line-number"
data - line - number = "9736" > < /td>
    < td
id = "LC9736"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Argument &quot;data&quot; should be string of html</span></td>
    < /tr>
    < tr >
    < td
id = "L9737"
class
= "blob-num js-line-number"
data - line - number = "9737" > < /td>
    < td
id = "LC9737"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> context (optional): If specified, the fragment will be created in this context,</span></td>
    < /tr>
    < tr >
    < td
id = "L9738"
class
= "blob-num js-line-number"
data - line - number = "9738" > < /td>
    < td
id = "LC9738"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> defaults to document</span></td>
    < /tr>
    < tr >
    < td
id = "L9739"
class
= "blob-num js-line-number"
data - line - number = "9739" > < /td>
    < td
id = "LC9739"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> keepScripts (optional): If true, will include scripts passed in the html string</span></td>
    < /tr>
    < tr >
    < td
id = "L9740"
class
= "blob-num js-line-number"
data - line - number = "9740" > < /td>
    < td
id = "LC9740"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>parseHTML <span class="pl-k">=</s
pan > function (data, context, keepScripts) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9741"
class
    = "blob-num js-line-number"
    data - line - number = "9741" > < /td>
        < td
    id = "LC9741"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( typeof data <span class="pl-k">!=</s
    pan > < span
class
    = "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > string < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9742"
class
    = "blob-num js-line-number"
    data - line - number = "9742" > < /td>
        < td
    id = "LC9742"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> [];</
    td >
    < /tr>
    < tr >
    < td
    id = "L9743"
class
    = "blob-num js-line-number"
    data - line - number = "9743" > < /td>
        < td
    id = "LC9743"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9744"
class
= "blob-num js-line-number"
data - line - number = "9744" > < /td>
    < td
id = "LC9744"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof context <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>boolean<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L9745"
class
= "blob-num js-line-number"
data - line - number = "9745" > < /td>
    < td
id = "LC9745"
class
= "blob-code blob-code-inner js-file-line" > keepScripts < span
class
= "pl-k" >= < /span> context;</
td >
< /tr>
< tr >
< td
id = "L9746"
class
= "blob-num js-line-number"
data - line - number = "9746" > < /td>
    < td
id = "LC9746"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" >= < /span> <span class="pl-c1">false</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9747"
class
= "blob-num js-line-number"
data - line - number = "9747" > < /td>
    < td
id = "LC9747"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9748"
class
= "blob-num js-line-number"
data - line - number = "9748" > < /td>
    < td
id = "LC9748"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9749"
class
= "blob-num js-line-number"
data - line - number = "9749" > < /td>
    < td
id = "LC9749"
class
= "blob-code blob-code-inner js-file-line" >
var base, parsed, scripts;
<
/td>
< /tr>
< tr >
< td
id = "L9750"
class
= "blob-num js-line-number"
data - line - number = "9750" > < /td>
    < td
id = "LC9750"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9751"
class
= "blob-num js-line-number"
data - line - number = "9751" > < /td>
    < td
id = "LC9751"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > context
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9752"
class
    = "blob-num js-line-number"
    data - line - number = "9752" > < /td>
        < td
    id = "LC9752"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9753"
class
    = "blob-num js-line-number"
    data - line - number = "9753" > < /td>
        < td
    id = "LC9753"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Stop scripts or inline event handlers from being executed immediately</span></td>
        < /tr>
        < tr >
        < td
    id = "L9754"
class
    = "blob-num js-line-number"
    data - line - number = "9754" > < /td>
        < td
    id = "LC9754"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> by using document.implementation</span></td>
        < /tr>
        < tr >
        < td
    id = "L9755"
class
    = "blob-num js-line-number"
    data - line - number = "9755" > < /td>
        < td
    id = "LC9755"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( support<span class="pl-k">.</s
    pan > createHTMLDocument
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9756"
class
    = "blob-num js-line-number"
    data - line - number = "9756" > < /td>
        < td
    id = "LC9756"
class
    = "blob-code blob-code-inner js-file-line" > context < span
class
    = "pl-k" >= < /span> document<span class="pl-k">.</s
    pan > implementation < span
class
    = "pl-k" >
.<
    /span>createHTMLDocument( <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9757"
class
= "blob-num js-line-number"
data - line - number = "9757" > < /td>
    < td
id = "LC9757"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9758"
class
= "blob-num js-line-number"
data - line - number = "9758" > < /td>
    < td
id = "LC9758"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set the base href for the created document</span></td>
    < /tr>
    < tr >
    < td
id = "L9759"
class
= "blob-num js-line-number"
data - line - number = "9759" > < /td>
    < td
id = "LC9759"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> so any parsed elements with URLs</span></td>
    < /tr>
    < tr >
    < td
id = "L9760"
class
= "blob-num js-line-number"
data - line - number = "9760" > < /td>
    < td
id = "LC9760"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> are based on the document&#39;s URL (gh-2965)</span></td>
    < /tr>
    < tr >
    < td
id = "L9761"
class
= "blob-num js-line-number"
data - line - number = "9761" > < /td>
    < td
id = "LC9761"
class
= "blob-code blob-code-inner js-file-line" > base < span
class
= "pl-k" >= < /span> context<span class="pl-k">.</s
pan > createElement( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>base<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L9762"
class
= "blob-num js-line-number"
data - line - number = "9762" > < /td>
    < td
id = "LC9762"
class
= "blob-code blob-code-inner js-file-line" > base < span
class
= "pl-k" >
.<
/span>href <span class="pl-k">=</s
pan > document < span
class
= "pl-k" >
.<
/span>location<span class="pl-k">.</s
pan > href;
<
/td>
< /tr>
< tr >
< td
id = "L9763"
class
= "blob-num js-line-number"
data - line - number = "9763" > < /td>
    < td
id = "LC9763"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" >
.<
/span>head<span class="pl-k">.</s
pan > appendChild(base);
<
/td>
< /tr>
< tr >
< td
id = "L9764"
class
= "blob-num js-line-number"
data - line - number = "9764" > < /td>
    < td
id = "LC9764"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9765"
class
= "blob-num js-line-number"
data - line - number = "9765" > < /td>
    < td
id = "LC9765"
class
= "blob-code blob-code-inner js-file-line" > context < span
class
= "pl-k" >= < /span> document;</
td >
< /tr>
< tr >
< td
id = "L9766"
class
= "blob-num js-line-number"
data - line - number = "9766" > < /td>
    < td
id = "LC9766"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9767"
class
= "blob-num js-line-number"
data - line - number = "9767" > < /td>
    < td
id = "LC9767"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9768"
class
= "blob-num js-line-number"
data - line - number = "9768" > < /td>
    < td
id = "LC9768"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9769"
class
= "blob-num js-line-number"
data - line - number = "9769" > < /td>
    < td
id = "LC9769"
class
= "blob-code blob-code-inner js-file-line" > parsed < span
class
= "pl-k" >= < /span> rsingleTag<span class="pl-k">.</s
pan > exec(data);
<
/td>
< /tr>
< tr >
< td
id = "L9770"
class
= "blob-num js-line-number"
data - line - number = "9770" > < /td>
    < td
id = "LC9770"
class
= "blob-code blob-code-inner js-file-line" > scripts < span
class
= "pl-k" >= < /span> <span class="pl-k">!</s
pan > keepScripts < span
class
= "pl-k" > &amp;&amp; < /span> [];</
td >
< /tr>
< tr >
< td
id = "L9771"
class
= "blob-num js-line-number"
data - line - number = "9771" > < /td>
    < td
id = "LC9771"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9772"
class
= "blob-num js-line-number"
data - line - number = "9772" > < /td>
    < td
id = "LC9772"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Single tag</span></td>
    < /tr>
    < tr >
    < td
id = "L9773"
class
= "blob-num js-line-number"
data - line - number = "9773" > < /td>
    < td
id = "LC9773"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( parsed ) {</
td >
< /tr>
< tr >
< td
id = "L9774"
class
= "blob-num js-line-number"
data - line - number = "9774" > < /td>
    < td
id = "LC9774"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> [ context<span class="pl-k">.</span>createElement( parsed[ <span class="pl-c1">1</span> ] ) ];</
td >
< /tr>
< tr >
< td
id = "L9775"
class
= "blob-num js-line-number"
data - line - number = "9775" > < /td>
    < td
id = "LC9775"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9776"
class
= "blob-num js-line-number"
data - line - number = "9776" > < /td>
    < td
id = "LC9776"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9777"
class
= "blob-num js-line-number"
data - line - number = "9777" > < /td>
    < td
id = "LC9777"
class
= "blob-code blob-code-inner js-file-line" > parsed < span
class
= "pl-k" >= < /span> buildFragment( [ data ], context, scripts );</
td >
< /tr>
< tr >
< td
id = "L9778"
class
= "blob-num js-line-number"
data - line - number = "9778" > < /td>
    < td
id = "LC9778"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9779"
class
= "blob-num js-line-number"
data - line - number = "9779" > < /td>
    < td
id = "LC9779"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( scripts <span class="pl-k">&amp;&amp;</s
pan > scripts < span
class
= "pl-k" >
.<
/span>length ) {</
td >
< /tr>
< tr >
< td
id = "L9780"
class
= "blob-num js-line-number"
data - line - number = "9780" > < /td>
    < td
id = "LC9780"
class
= "blob-code blob-code-inner js-file-line" > jQuery(scripts) < span
class
= "pl-k" >
.<
/span>remove();</
td >
< /tr>
< tr >
< td
id = "L9781"
class
= "blob-num js-line-number"
data - line - number = "9781" > < /td>
    < td
id = "LC9781"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9782"
class
= "blob-num js-line-number"
data - line - number = "9782" > < /td>
    < td
id = "LC9782"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9783"
class
= "blob-num js-line-number"
data - line - number = "9783" > < /td>
    < td
id = "LC9783"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery<span class="pl-k">.</s
pan > merge([], parsed < span
class
= "pl-k" >
.<
/span>childNodes );</
td >
< /tr>
< tr >
< td
id = "L9784"
class
= "blob-num js-line-number"
data - line - number = "9784" > < /td>
    < td
id = "LC9784"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9785"
class
= "blob-num js-line-number"
data - line - number = "9785" > < /td>
    < td
id = "LC9785"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9786"
class
= "blob-num js-line-number"
data - line - number = "9786" > < /td>
    < td
id = "LC9786"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9787"
class
= "blob-num js-line-number"
data - line - number = "9787" > < /td>
    < td
id = "LC9787"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L9788" class="blob-num js-line-number" data-line-number="9788"></td>
 <td id="LC9788" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Load a url into a page</span></td>
 </tr>
 <tr>
 <td id="L9789" class="blob-num js-line-number" data-line-number="9789"></td>
 <td id="LC9789" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L9790"
class
= "blob-num js-line-number"
data - line - number = "9790" > < /td>
    < td
id = "LC9790"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > load < span
class
= "pl-k" >= < /span> function( url, params, callback ) {</
td >
< /tr>
< tr >
< td
id = "L9791"
class
= "blob-num js-line-number"
data - line - number = "9791" > < /td>
    < td
id = "LC9791"
class
= "blob-code blob-code-inner js-file-line" >
var selector, type, response, <
/td>
< /tr>
< tr >
< td
id = "L9792"
class
= "blob-num js-line-number"
data - line - number = "9792" > < /td>
    < td
id = "LC9792"
class
= "blob-code blob-code-inner js-file-line" > self < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan >,
<
/td>
< /tr>
< tr >
< td
id = "L9793"
class
= "blob-num js-line-number"
data - line - number = "9793" > < /td>
    < td
id = "LC9793"
class
= "blob-code blob-code-inner js-file-line" > off < span
class
= "pl-k" >= < /span> url<span class="pl-k">.</s
pan > indexOf( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span> <span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L9794"
class
= "blob-num js-line-number"
data - line - number = "9794" > < /td>
    < td
id = "LC9794"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9795"
class
= "blob-num js-line-number"
data - line - number = "9795" > < /td>
    < td
id = "LC9795"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( off <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9796"
class
    = "blob-num js-line-number"
    data - line - number = "9796" > < /td>
        < td
    id = "LC9796"
class
    = "blob-code blob-code-inner js-file-line" > selector < span
class
    = "pl-k" >= < /span> stripAndCollapse( url<span class="pl-k">.</s
    pan > slice(off)
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9797"
class
= "blob-num js-line-number"
data - line - number = "9797" > < /td>
    < td
id = "LC9797"
class
= "blob-code blob-code-inner js-file-line" > url < span
class
= "pl-k" >= < /span> url<span class="pl-k">.</s
pan > slice( < span
class
= "pl-c1" > 0 < /span>, off );</
td >
< /tr>
< tr >
< td
id = "L9798"
class
= "blob-num js-line-number"
data - line - number = "9798" > < /td>
    < td
id = "LC9798"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9799"
class
= "blob-num js-line-number"
data - line - number = "9799" > < /td>
    < td
id = "LC9799"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9800"
class
= "blob-num js-line-number"
data - line - number = "9800" > < /td>
    < td
id = "LC9800"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If it&#39;s a function</span></td>
    < /tr>
    < tr >
    < td
id = "L9801"
class
= "blob-num js-line-number"
data - line - number = "9801" > < /td>
    < td
id = "LC9801"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(params)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9802"
class
    = "blob-num js-line-number"
    data - line - number = "9802" > < /td>
        < td
    id = "LC9802"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9803"
class
    = "blob-num js-line-number"
    data - line - number = "9803" > < /td>
        < td
    id = "LC9803"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> We assume that it&#39;s the callback</span></td>
        < /tr>
        < tr >
        < td
    id = "L9804"
class
    = "blob-num js-line-number"
    data - line - number = "9804" > < /td>
        < td
    id = "LC9804"
class
    = "blob-code blob-code-inner js-file-line" > callback < span
class
    = "pl-k" >= < /span> params;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9805"
class
    = "blob-num js-line-number"
    data - line - number = "9805" > < /td>
        < td
    id = "LC9805"
class
    = "blob-code blob-code-inner js-file-line" > params < span
class
    = "pl-k" >= < /span> undefined;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9806"
class
    = "blob-num js-line-number"
    data - line - number = "9806" > < /td>
        < td
    id = "LC9806"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9807"
class
    = "blob-num js-line-number"
    data - line - number = "9807" > < /td>
        < td
    id = "LC9807"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Otherwise, build a param string</span></td>
        < /tr>
        < tr >
        < td
    id = "L9808"
class
    = "blob-num js-line-number"
    data - line - number = "9808" > < /td>
        < td
    id = "LC9808"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> <span class="pl-k">if</s
pan > (params < span
class
= "pl-k" > &amp;&amp; < /span> typeof params <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>object<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L9809"
class
= "blob-num js-line-number"
data - line - number = "9809" > < /td>
    < td
id = "LC9809"
class
= "blob-code blob-code-inner js-file-line" > type < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > POST < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9810"
class
= "blob-num js-line-number"
data - line - number = "9810" > < /td>
    < td
id = "LC9810"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9811"
class
= "blob-num js-line-number"
data - line - number = "9811" > < /td>
    < td
id = "LC9811"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9812"
class
= "blob-num js-line-number"
data - line - number = "9812" > < /td>
    < td
id = "LC9812"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If we have elements to modify, make the request</span></td>
    < /tr>
    < tr >
    < td
id = "L9813"
class
= "blob-num js-line-number"
data - line - number = "9813" > < /td>
    < td
id = "LC9813"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( self<span class="pl-k">.</s
pan > length < span
class
= "pl-k" > &gt; < /span> <span class="pl-c1">0</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9814"
class
    = "blob-num js-line-number"
    data - line - number = "9814" > < /td>
        < td
    id = "LC9814"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>ajax( {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9815"
class
    = "blob-num js-line-number"
    data - line - number = "9815" > < /td>
        < td
    id = "LC9815"
class
    = "blob-code blob-code-inner js-file-line" > url < span
class
    = "pl-k" >
:<
    /span> url,</
    td >
    < /tr>
    < tr >
    < td
    id = "L9816"
class
    = "blob-num js-line-number"
    data - line - number = "9816" > < /td>
        < td
    id = "LC9816"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9817"
class
    = "blob-num js-line-number"
    data - line - number = "9817" > < /td>
        < td
    id = "LC9817"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> If &quot;type&quot; variable is undefined, then &quot;GET&quot; method will be used.</span></td>
        < /tr>
        < tr >
        < td
    id = "L9818"
class
    = "blob-num js-line-number"
    data - line - number = "9818" > < /td>
        < td
    id = "LC9818"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Make value of this field explicit since</span></td>
        < /tr>
        < tr >
        < td
    id = "L9819"
class
    = "blob-num js-line-number"
    data - line - number = "9819" > < /td>
        < td
    id = "LC9819"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> user can override it through ajaxSetup method</span></td>
        < /tr>
        < tr >
        < td
    id = "L9820"
class
    = "blob-num js-line-number"
    data - line - number = "9820" > < /td>
        < td
    id = "LC9820"
class
    = "blob-code blob-code-inner js-file-line" > type < span
class
    = "pl-k" >
:<
    /span> type <span class="pl-k">||</s
    pan > < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>GET<span class="pl-pds">&quot;</s
    pan > < /span>,</
    td >
    < /tr>
    < tr >
    < td
    id = "L9821"
class
    = "blob-num js-line-number"
    data - line - number = "9821" > < /td>
        < td
    id = "LC9821"
class
    = "blob-code blob-code-inner js-file-line" > dataType < span
class
    = "pl-k" >
:<
    /span> <span class="pl-s"><span class="pl-pds">&quot;</s
    pan > html < span
class
    = "pl-pds" > & quot;
<
    /span></s
    pan >,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9822"
class
    = "blob-num js-line-number"
    data - line - number = "9822" > < /td>
        < td
    id = "LC9822"
class
    = "blob-code blob-code-inner js-file-line" > data < span
class
    = "pl-k" >
:<
    /span> params</
    td >
    < /tr>
    < tr >
    < td
    id = "L9823"
class
    = "blob-num js-line-number"
    data - line - number = "9823" > < /td>
        < td
    id = "LC9823"
class
    = "blob-code blob-code-inner js-file-line" >
}
)<
span
class
= "pl-k" >
.<
/span>done( function( responseText ) {</
td >
< /tr>
< tr >
< td
id = "L9824"
class
= "blob-num js-line-number"
data - line - number = "9824" > < /td>
    < td
id = "LC9824"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9825"
class
= "blob-num js-line-number"
data - line - number = "9825" > < /td>
    < td
id = "LC9825"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Save response for use in complete callback</span></td>
    < /tr>
    < tr >
    < td
id = "L9826"
class
= "blob-num js-line-number"
data - line - number = "9826" > < /td>
    < td
id = "LC9826"
class
= "blob-code blob-code-inner js-file-line" > response < span
class
= "pl-k" >= < /span> arguments;</
td >
< /tr>
< tr >
< td
id = "L9827"
class
= "blob-num js-line-number"
data - line - number = "9827" > < /td>
    < td
id = "LC9827"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9828"
class
= "blob-num js-line-number"
data - line - number = "9828" > < /td>
    < td
id = "LC9828"
class
= "blob-code blob-code-inner js-file-line" > self < span
class
= "pl-k" >
.<
/span>html( selector <span class="pl-k">?</s
pan > < /td>
< /tr>
< tr >
< td
id = "L9829"
class
= "blob-num js-line-number"
data - line - number = "9829" > < /td>
    < td
id = "LC9829"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9830"
class
= "blob-num js-line-number"
data - line - number = "9830" > < /td>
    < td
id = "LC9830"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If a selector was specified, locate the right elements in a dummy div</span></td>
    < /tr>
    < tr >
    < td
id = "L9831"
class
= "blob-num js-line-number"
data - line - number = "9831" > < /td>
    < td
id = "LC9831"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Exclude scripts to avoid IE &#39;Permission Denied&#39; errors</span></td>
    < /tr>
    < tr >
    < td
id = "L9832"
class
= "blob-num js-line-number"
data - line - number = "9832" > < /td>
    < td
id = "LC9832"
class
= "blob-code blob-code-inner js-file-line" > jQuery( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>&lt;div&gt;<span class="pl-pds">&quot;</s
pan > < /span> )<span class="pl-k">.</s
pan > append(jQuery < span
class
= "pl-k" >
.<
/span>parseHTML( responseText ) )<span class="pl-k">.</s
pan > find(selector) < span
class
= "pl-k" >
:<
/span></
td >
< /tr>
< tr >
< td
id = "L9833"
class
= "blob-num js-line-number"
data - line - number = "9833" > < /td>
    < td
id = "LC9833"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9834"
class
= "blob-num js-line-number"
data - line - number = "9834" > < /td>
    < td
id = "LC9834"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Otherwise use the full result</span></td>
    < /tr>
    < tr >
    < td
id = "L9835"
class
= "blob-num js-line-number"
data - line - number = "9835" > < /td>
    < td
id = "LC9835"
class
= "blob-code blob-code-inner js-file-line" > responseText
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9836"
class
= "blob-num js-line-number"
data - line - number = "9836" > < /td>
    < td
id = "LC9836"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9837"
class
= "blob-num js-line-number"
data - line - number = "9837" > < /td>
    < td
id = "LC9837"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If the request succeeds, this function gets &quot;data&quot;, &quot;status&quot;, &quot;jqXHR&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L9838"
class
= "blob-num js-line-number"
data - line - number = "9838" > < /td>
    < td
id = "LC9838"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> but they are ignored because response was set above.</span></td>
    < /tr>
    < tr >
    < td
id = "L9839"
class
= "blob-num js-line-number"
data - line - number = "9839" > < /td>
    < td
id = "LC9839"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> If it fails, this function gets &quot;jqXHR&quot;, &quot;status&quot;, &quot;error&quot;</span></td>
    < /tr>
    < tr >
    < td
id = "L9840"
class
= "blob-num js-line-number"
data - line - number = "9840" > < /td>
    < td
id = "LC9840"
class
= "blob-code blob-code-inner js-file-line" >
} )<
span
class
= "pl-k" >
.<
/span>always( callback <span class="pl-k">&amp;&amp;</s
pan > function (jqXHR, status) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9841"
class
    = "blob-num js-line-number"
    data - line - number = "9841" > < /td>
        < td
    id = "LC9841"
class
    = "blob-code blob-code-inner js-file-line" > self < span
class
    = "pl-k" >
.<
    /span>each( function() {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9842"
class
    = "blob-num js-line-number"
    data - line - number = "9842" > < /td>
        < td
    id = "LC9842"
class
    = "blob-code blob-code-inner js-file-line" > callback < span
class
    = "pl-k" >
.<
    /span>apply( <span class="pl-c1">this</s
    pan >, response < span
class
    = "pl-k" > || < /span> [ jqXHR<span class="pl-k">.</span>responseText, status, jqXHR ] );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9843"
class
    = "blob-num js-line-number"
    data - line - number = "9843" > < /td>
        < td
    id = "LC9843"
class
    = "blob-code blob-code-inner js-file-line" >
}
)
;
<
/td>
< /tr>
< tr >
< td
id = "L9844"
class
= "blob-num js-line-number"
data - line - number = "9844" > < /td>
    < td
id = "LC9844"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9845"
class
= "blob-num js-line-number"
data - line - number = "9845" > < /td>
    < td
id = "LC9845"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9846"
class
= "blob-num js-line-number"
data - line - number = "9846" > < /td>
    < td
id = "LC9846"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9847"
class
= "blob-num js-line-number"
data - line - number = "9847" > < /td>
    < td
id = "LC9847"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9848"
class
= "blob-num js-line-number"
data - line - number = "9848" > < /td>
    < td
id = "LC9848"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9849"
class
= "blob-num js-line-number"
data - line - number = "9849" > < /td>
    < td
id = "LC9849"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9850"
class
= "blob-num js-line-number"
data - line - number = "9850" > < /td>
    < td
id = "LC9850"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9851"
class
= "blob-num js-line-number"
data - line - number = "9851" > < /td>
    < td
id = "LC9851"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9852"
class
= "blob-num js-line-number"
data - line - number = "9852" > < /td>
    < td
id = "LC9852"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9853"
class
= "blob-num js-line-number"
data - line - number = "9853" > < /td>
    < td
id = "LC9853"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Attach a bunch of functions for handling common AJAX events</span></td>
    < /tr>
    < tr >
    < td
id = "L9854"
class
= "blob-num js-line-number"
data - line - number = "9854" > < /td>
    < td
id = "LC9854"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( [</td>
      </tr>
      <tr>
        <td id="L9855" class="blob-num js-line-number" data-line-number="9855"></td>
        <td id="LC9855" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>ajaxStart<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9856" class="blob-num js-line-number" data-line-number="9856"></td>
        <td id="LC9856" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>ajaxStop<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9857" class="blob-num js-line-number" data-line-number="9857"></td>
        <td id="LC9857" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>ajaxComplete<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9858" class="blob-num js-line-number" data-line-number="9858"></td>
        <td id="LC9858" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>ajaxError<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9859" class="blob-num js-line-number" data-line-number="9859"></td>
        <td id="LC9859" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>ajaxSuccess<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9860" class="blob-num js-line-number" data-line-number="9860"></td>
        <td id="LC9860" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span>ajaxSend<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L9861" class="blob-num js-line-number" data-line-number="9861"></td>
        <td id="LC9861" class="blob-code blob-code-inner js-file-line">    ], function( i, type ) {</
td >
< /tr>
< tr >
< td
id = "L9862"
class
= "blob-num js-line-number"
data - line - number = "9862" > < /td>
    < td
id = "LC9862"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn[ type ] <span class="pl-k">=</s
pan > function (fn) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9863"
class
    = "blob-num js-line-number"
    data - line - number = "9863" > < /td>
        < td
    id = "LC9863"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-c1">this</s
    pan > < span
class
    = "pl-k" >
.<
    /span>on( type, fn );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9864"
class
    = "blob-num js-line-number"
    data - line - number = "9864" > < /td>
        < td
    id = "LC9864"
class
    = "blob-code blob-code-inner js-file-line" >
};
<
/td>
< /tr>
< tr >
< td
id = "L9865"
class
= "blob-num js-line-number"
data - line - number = "9865" > < /td>
    < td
id = "LC9865"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L9866"
class
= "blob-num js-line-number"
data - line - number = "9866" > < /td>
    < td
id = "LC9866"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9867"
class
= "blob-num js-line-number"
data - line - number = "9867" > < /td>
    < td
id = "LC9867"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9868"
class
= "blob-num js-line-number"
data - line - number = "9868" > < /td>
    < td
id = "LC9868"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9869"
class
= "blob-num js-line-number"
data - line - number = "9869" > < /td>
    < td
id = "LC9869"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9870"
class
= "blob-num js-line-number"
data - line - number = "9870" > < /td>
    < td
id = "LC9870"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>expr<span class="pl-k">.</s
pan > pseudos < span
class
= "pl-k" >
.<
/span>animated <span class="pl-k">=</s
pan > function (elem) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9871"
class
    = "blob-num js-line-number"
    data - line - number = "9871" > < /td>
        < td
    id = "LC9871"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> jQuery<span class="pl-k">.</s
    pan > grep(jQuery < span
class
    = "pl-k" >
.<
    /span>timers, function( fn ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9872"
class
    = "blob-num js-line-number"
    data - line - number = "9872" > < /td>
        < td
    id = "LC9872"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> elem <span class="pl-k">===</s
    pan > fn < span
class
    = "pl-k" >
.<
    /span>elem;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9873"
class
    = "blob-num js-line-number"
    data - line - number = "9873" > < /td>
        < td
    id = "LC9873"
class
    = "blob-code blob-code-inner js-file-line" >
}
)<
span
class
= "pl-k" >
.<
/span>length;</
td >
< /tr>
< tr >
< td
id = "L9874"
class
= "blob-num js-line-number"
data - line - number = "9874" > < /td>
    < td
id = "LC9874"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9875"
class
= "blob-num js-line-number"
data - line - number = "9875" > < /td>
    < td
id = "LC9875"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9876"
class
= "blob-num js-line-number"
data - line - number = "9876" > < /td>
    < td
id = "LC9876"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9877"
class
= "blob-num js-line-number"
data - line - number = "9877" > < /td>
    < td
id = "LC9877"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9878"
class
= "blob-num js-line-number"
data - line - number = "9878" > < /td>
    < td
id = "LC9878"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9879"
class
= "blob-num js-line-number"
data - line - number = "9879" > < /td>
    < td
id = "LC9879"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >/**</span></span></td>
 </tr>
 <tr>
 <td id="L9880" class="blob-num js-line-number" data-line-number="9880"></td>
 <td id="LC9880" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Gets a window from an element</span></td>
 </tr>
 <tr>
 <td id="L9881" class="blob-num js-line-number" data-line-number="9881"></td>
 <td id="LC9881" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     <span class="pl-c">*/ < /span></s
pan > < /td>
< /tr>
< tr >
< td
id = "L9882"
class
= "blob-num js-line-number"
data - line - number = "9882" > < /td>
    < td
id = "LC9882"
class
= "blob-code blob-code-inner js-file-line" > function getWindow(elem) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L9883"
    class
        = "blob-num js-line-number"
        data - line - number = "9883" > < /td>
            < td
        id = "LC9883"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> jQuery<span class="pl-k">.</s
        pan > isWindow(elem) < span
    class
        = "pl-k" > ?
    <
        /span> elem <span class="pl-k">:</s
        pan > elem < span
    class
        = "pl-k" >
    .<
        /span>nodeType <span class="pl-k">===</s
        pan > < span
    class
        = "pl-c1" > 9 < /span> <span class="pl-k">&amp;&amp;</s
        pan > elem < span
    class
        = "pl-k" >
    .<
        /span>defaultView;</
        td >
        < /tr>
        < tr >
        < td
        id = "L9884"
    class
        = "blob-num js-line-number"
        data - line - number = "9884" > < /td>
            < td
        id = "LC9884"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L9885"
class
= "blob-num js-line-number"
data - line - number = "9885" > < /td>
    < td
id = "LC9885"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9886"
class
= "blob-num js-line-number"
data - line - number = "9886" > < /td>
    < td
id = "LC9886"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>offset <span class="pl-k">=</s
pan > { < /td>
< /tr>
< tr >
< td
id = "L9887"
class
= "blob-num js-line-number"
data - line - number = "9887" > < /td>
    < td
id = "LC9887"
class
= "blob-code blob-code-inner js-file-line" > setOffset < span
class
= "pl-k" >
:<
/span> function( elem, options, i ) {</
td >
< /tr>
< tr >
< td
id = "L9888"
class
= "blob-num js-line-number"
data - line - number = "9888" > < /td>
    < td
id = "LC9888"
class
= "blob-code blob-code-inner js-file-line" >
var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, <
/td>
< /tr>
< tr >
< td
id = "L9889"
class
= "blob-num js-line-number"
data - line - number = "9889" > < /td>
    < td
id = "LC9889"
class
= "blob-code blob-code-inner js-file-line" > position < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>position<span class="pl-pds">&quot;</s
pan > < /span> ),</
td >
< /tr>
< tr >
< td
id = "L9890"
class
= "blob-num js-line-number"
data - line - number = "9890" > < /td>
    < td
id = "LC9890"
class
= "blob-code blob-code-inner js-file-line" > curElem < span
class
= "pl-k" >= < /span> jQuery( elem ),</
td >
< /tr>
< tr >
< td
id = "L9891"
class
= "blob-num js-line-number"
data - line - number = "9891" > < /td>
    < td
id = "LC9891"
class
= "blob-code blob-code-inner js-file-line" > props < span
class
= "pl-k" >= < /span> {};</
td >
< /tr>
< tr >
< td
id = "L9892"
class
= "blob-num js-line-number"
data - line - number = "9892" > < /td>
    < td
id = "LC9892"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9893"
class
= "blob-num js-line-number"
data - line - number = "9893" > < /td>
    < td
id = "LC9893"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set position first, in-case top/left are set even on static elem</span></td>
    < /tr>
    < tr >
    < td
id = "L9894"
class
= "blob-num js-line-number"
data - line - number = "9894" > < /td>
    < td
id = "LC9894"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( position <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>static<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L9895"
class
= "blob-num js-line-number"
data - line - number = "9895" > < /td>
    < td
id = "LC9895"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >
.<
/span>style<span class="pl-k">.</s
pan > position < span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > relative < span
class
= "pl-pds" > & quot;
<
/span></s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9896"
class
= "blob-num js-line-number"
data - line - number = "9896" > < /td>
    < td
id = "LC9896"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9897"
class
= "blob-num js-line-number"
data - line - number = "9897" > < /td>
    < td
id = "LC9897"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9898"
class
= "blob-num js-line-number"
data - line - number = "9898" > < /td>
    < td
id = "LC9898"
class
= "blob-code blob-code-inner js-file-line" > curOffset < span
class
= "pl-k" >= < /span> curElem<span class="pl-k">.</s
pan > offset();
<
/td>
< /tr>
< tr >
< td
id = "L9899"
class
= "blob-num js-line-number"
data - line - number = "9899" > < /td>
    < td
id = "LC9899"
class
= "blob-code blob-code-inner js-file-line" > curCSSTop < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>top<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L9900"
class
= "blob-num js-line-number"
data - line - number = "9900" > < /td>
    < td
id = "LC9900"
class
= "blob-code blob-code-inner js-file-line" > curCSSLeft < span
class
= "pl-k" >= < /span> jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>left<span class="pl-pds">&quot;</s
pan > < /span> );</
td >
< /tr>
< tr >
< td
id = "L9901"
class
= "blob-num js-line-number"
data - line - number = "9901" > < /td>
    < td
id = "LC9901"
class
= "blob-code blob-code-inner js-file-line" > calculatePosition < span
class
= "pl-k" >= < /span> ( position <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>absolute<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">||</s
pan > position < span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > fixed < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" > &amp;&amp; < /span></
td >
< /tr>
< tr >
< td
id = "L9902"
class
= "blob-num js-line-number"
data - line - number = "9902" > < /td>
    < td
id = "LC9902"
class
= "blob-code blob-code-inner js-file-line" > (curCSSTop < span
class
= "pl-k" > + < /span> curCSSLeft )<span class="pl-k">.</s
pan > indexOf( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>auto<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">&gt;</s
pan > < span
class
= "pl-k" > - < /span><span class="pl-c1">1</s
pan >;
<
/td>
< /tr>
< tr >
< td
id = "L9903"
class
= "blob-num js-line-number"
data - line - number = "9903" > < /td>
    < td
id = "LC9903"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9904"
class
= "blob-num js-line-number"
data - line - number = "9904" > < /td>
    < td
id = "LC9904"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Need to be able to calculate position if either</span></td>
    < /tr>
    < tr >
    < td
id = "L9905"
class
= "blob-num js-line-number"
data - line - number = "9905" > < /td>
    < td
id = "LC9905"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> top or left is auto and position is either absolute or fixed</span></td>
    < /tr>
    < tr >
    < td
id = "L9906"
class
= "blob-num js-line-number"
data - line - number = "9906" > < /td>
    < td
id = "LC9906"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( calculatePosition ) {</
td >
< /tr>
< tr >
< td
id = "L9907"
class
= "blob-num js-line-number"
data - line - number = "9907" > < /td>
    < td
id = "LC9907"
class
= "blob-code blob-code-inner js-file-line" > curPosition < span
class
= "pl-k" >= < /span> curElem<span class="pl-k">.</s
pan > position();
<
/td>
< /tr>
< tr >
< td
id = "L9908"
class
= "blob-num js-line-number"
data - line - number = "9908" > < /td>
    < td
id = "LC9908"
class
= "blob-code blob-code-inner js-file-line" > curTop < span
class
= "pl-k" >= < /span> curPosition<span class="pl-k">.</s
pan > top;
<
/td>
< /tr>
< tr >
< td
id = "L9909"
class
= "blob-num js-line-number"
data - line - number = "9909" > < /td>
    < td
id = "LC9909"
class
= "blob-code blob-code-inner js-file-line" > curLeft < span
class
= "pl-k" >= < /span> curPosition<span class="pl-k">.</s
pan > left;
<
/td>
< /tr>
< tr >
< td
id = "L9910"
class
= "blob-num js-line-number"
data - line - number = "9910" > < /td>
    < td
id = "LC9910"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9911"
class
= "blob-num js-line-number"
data - line - number = "9911" > < /td>
    < td
id = "LC9911"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9912"
class
= "blob-num js-line-number"
data - line - number = "9912" > < /td>
    < td
id = "LC9912"
class
= "blob-code blob-code-inner js-file-line" > curTop < span
class
= "pl-k" >= < /span> parseFloat( curCSSTop ) <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L9913"
class
= "blob-num js-line-number"
data - line - number = "9913" > < /td>
    < td
id = "LC9913"
class
= "blob-code blob-code-inner js-file-line" > curLeft < span
class
= "pl-k" >= < /span> parseFloat( curCSSLeft ) <span class="pl-k">||</s
pan > < span
class
= "pl-c1" > 0 < /span>;</
td >
< /tr>
< tr >
< td
id = "L9914"
class
= "blob-num js-line-number"
data - line - number = "9914" > < /td>
    < td
id = "LC9914"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9915"
class
= "blob-num js-line-number"
data - line - number = "9915" > < /td>
    < td
id = "LC9915"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9916"
class
= "blob-num js-line-number"
data - line - number = "9916" > < /td>
    < td
id = "LC9916"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > isFunction(options)
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9917"
class
    = "blob-num js-line-number"
    data - line - number = "9917" > < /td>
        < td
    id = "LC9917"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9918"
class
    = "blob-num js-line-number"
    data - line - number = "9918" > < /td>
        < td
    id = "LC9918"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Use jQuery.extend here to allow modification of coordinates argument (gh-1848)</span></td>
        < /tr>
        < tr >
        < td
    id = "L9919"
class
    = "blob-num js-line-number"
    data - line - number = "9919" > < /td>
        < td
    id = "LC9919"
class
    = "blob-code blob-code-inner js-file-line" > options < span
class
    = "pl-k" >= < /span> options<span class="pl-k">.</s
    pan > call(elem, i, jQuery < span
class
    = "pl-k" >
.<
    /span>extend( {}, curOffset ) );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9920"
class
    = "blob-num js-line-number"
    data - line - number = "9920" > < /td>
        < td
    id = "LC9920"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9921"
class
= "blob-num js-line-number"
data - line - number = "9921" > < /td>
    < td
id = "LC9921"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9922"
class
= "blob-num js-line-number"
data - line - number = "9922" > < /td>
    < td
id = "LC9922"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( options<span class="pl-k">.</s
pan > top < span
class
= "pl-k" > != < /span> <span class="pl-c1">null</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9923"
class
    = "blob-num js-line-number"
    data - line - number = "9923" > < /td>
        < td
    id = "LC9923"
class
    = "blob-code blob-code-inner js-file-line" > props < span
class
    = "pl-k" >
.<
    /span>top <span class="pl-k">=</s
    pan > (options < span
class
    = "pl-k" >
.<
    /span>top <span class="pl-k">-</s
    pan > curOffset < span
class
    = "pl-k" >
.<
    /span>top ) <span class="pl-k">+</s
    pan > curTop;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9924"
class
    = "blob-num js-line-number"
    data - line - number = "9924" > < /td>
        < td
    id = "LC9924"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9925"
class
= "blob-num js-line-number"
data - line - number = "9925" > < /td>
    < td
id = "LC9925"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( options<span class="pl-k">.</s
pan > left < span
class
= "pl-k" > != < /span> <span class="pl-c1">null</s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9926"
class
    = "blob-num js-line-number"
    data - line - number = "9926" > < /td>
        < td
    id = "LC9926"
class
    = "blob-code blob-code-inner js-file-line" > props < span
class
    = "pl-k" >
.<
    /span>left <span class="pl-k">=</s
    pan > (options < span
class
    = "pl-k" >
.<
    /span>left <span class="pl-k">-</s
    pan > curOffset < span
class
    = "pl-k" >
.<
    /span>left ) <span class="pl-k">+</s
    pan > curLeft;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9927"
class
    = "blob-num js-line-number"
    data - line - number = "9927" > < /td>
        < td
    id = "LC9927"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9928"
class
= "blob-num js-line-number"
data - line - number = "9928" > < /td>
    < td
id = "LC9928"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9929"
class
= "blob-num js-line-number"
data - line - number = "9929" > < /td>
    < td
id = "LC9929"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-s"><span class="pl-pds">&quot;</s
pan > using < span
class
= "pl-pds" > & quot;
<
/span></s
pan > in options
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9930"
class
    = "blob-num js-line-number"
    data - line - number = "9930" > < /td>
        < td
    id = "LC9930"
class
    = "blob-code blob-code-inner js-file-line" > options < span
class
    = "pl-k" >
.<
    /span>using<span class="pl-k">.</s
    pan > call(elem, props);
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9931"
class
    = "blob-num js-line-number"
    data - line - number = "9931" > < /td>
        < td
    id = "LC9931"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9932"
class
    = "blob-num js-line-number"
    data - line - number = "9932" > < /td>
        < td
    id = "LC9932"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9933"
class
= "blob-num js-line-number"
data - line - number = "9933" > < /td>
    < td
id = "LC9933"
class
= "blob-code blob-code-inner js-file-line" > curElem < span
class
= "pl-k" >
.<
/span>css( props );</
td >
< /tr>
< tr >
< td
id = "L9934"
class
= "blob-num js-line-number"
data - line - number = "9934" > < /td>
    < td
id = "LC9934"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9935"
class
= "blob-num js-line-number"
data - line - number = "9935" > < /td>
    < td
id = "LC9935"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9936"
class
= "blob-num js-line-number"
data - line - number = "9936" > < /td>
    < td
id = "LC9936"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9937"
class
= "blob-num js-line-number"
data - line - number = "9937" > < /td>
    < td
id = "LC9937"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9938"
class
= "blob-num js-line-number"
data - line - number = "9938" > < /td>
    < td
id = "LC9938"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L9939"
class
= "blob-num js-line-number"
data - line - number = "9939" > < /td>
    < td
id = "LC9939"
class
= "blob-code blob-code-inner js-file-line" > offset < span
class
= "pl-k" >
:<
/span> function( options ) {</
td >
< /tr>
< tr >
< td
id = "L9940"
class
= "blob-num js-line-number"
data - line - number = "9940" > < /td>
    < td
id = "LC9940"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9941"
class
= "blob-num js-line-number"
data - line - number = "9941" > < /td>
    < td
id = "LC9941"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Preserve chaining for setter</span></td>
    < /tr>
    < tr >
    < td
id = "L9942"
class
= "blob-num js-line-number"
data - line - number = "9942" > < /td>
    < td
id = "LC9942"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( arguments<span class="pl-k">.</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9943"
class
    = "blob-num js-line-number"
    data - line - number = "9943" > < /td>
        < td
    id = "LC9943"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> options <span class="pl-k">===</s
    pan > undefined < span
class
    = "pl-k" > ?
<
    /span></
    td >
    < /tr>
    < tr >
    < td
    id = "L9944"
class
    = "blob-num js-line-number"
    data - line - number = "9944" > < /td>
        < td
    id = "LC9944"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > this < /span> <span class="pl-k">:</s
    pan > < /td>
    < /tr>
    < tr >
    < td
    id = "L9945"
class
    = "blob-num js-line-number"
    data - line - number = "9945" > < /td>
        < td
    id = "LC9945"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c1" > this < /span><span class="pl-k">.</s
    pan > each(function (i) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L9946"
    class
        = "blob-num js-line-number"
        data - line - number = "9946" > < /td>
            < td
        id = "LC9946"
    class
        = "blob-code blob-code-inner js-file-line" > jQuery < span
    class
        = "pl-k" >
    .<
        /span>offset<span class="pl-k">.</s
        pan > setOffset( < span
    class
        = "pl-c1" > this < /span>, options, i );</
        td >
        < /tr>
        < tr >
        < td
        id = "L9947"
    class
        = "blob-num js-line-number"
        data - line - number = "9947" > < /td>
            < td
        id = "LC9947"
    class
        = "blob-code blob-code-inner js-file-line" >
    });
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9948"
class
    = "blob-num js-line-number"
    data - line - number = "9948" > < /td>
        < td
    id = "LC9948"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9949"
class
= "blob-num js-line-number"
data - line - number = "9949" > < /td>
    < td
id = "LC9949"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9950"
class
= "blob-num js-line-number"
data - line - number = "9950" > < /td>
    < td
id = "LC9950"
class
= "blob-code blob-code-inner js-file-line" >
var docElem, win, rect, doc, <
/td>
< /tr>
< tr >
< td
id = "L9951"
class
= "blob-num js-line-number"
data - line - number = "9951" > < /td>
    < td
id = "LC9951"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > [ < span
class
= "pl-c1" > 0 < /span> ];</
td >
< /tr>
< tr >
< td
id = "L9952"
class
= "blob-num js-line-number"
data - line - number = "9952" > < /td>
    < td
id = "LC9952"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9953"
class
= "blob-num js-line-number"
data - line - number = "9953" > < /td>
    < td
id = "LC9953"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > elem
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9954"
class
    = "blob-num js-line-number"
    data - line - number = "9954" > < /td>
        < td
    id = "LC9954"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span>;</
    td >
    < /tr>
    < tr >
    < td
    id = "L9955"
class
    = "blob-num js-line-number"
    data - line - number = "9955" > < /td>
        < td
    id = "LC9955"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9956"
class
= "blob-num js-line-number"
data - line - number = "9956" > < /td>
    < td
id = "LC9956"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9957"
class
= "blob-num js-line-number"
data - line - number = "9957" > < /td>
    < td
id = "LC9957"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: IE &lt;=11 only</span></td>
    < /tr>
    < tr >
    < td
id = "L9958"
class
= "blob-num js-line-number"
data - line - number = "9958" > < /td>
    < td
id = "LC9958"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Running getBoundingClientRect on a</span></td>
    < /tr>
    < tr >
    < td
id = "L9959"
class
= "blob-num js-line-number"
data - line - number = "9959" > < /td>
    < td
id = "LC9959"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> disconnected node in IE throws an error</span></td>
    < /tr>
    < tr >
    < td
id = "L9960"
class
= "blob-num js-line-number"
data - line - number = "9960" > < /td>
    < td
id = "LC9960"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > elem < span
class
= "pl-k" >
.<
/span>getClientRects()<span class="pl-k">.</s
pan > length
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9961"
class
    = "blob-num js-line-number"
    data - line - number = "9961" > < /td>
        < td
    id = "LC9961"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> { top<span class="pl-k">:</s
    pan > < span
class
    = "pl-c1" > 0 < /span>, left<span class="pl-k">:</s
    pan > < span
class
    = "pl-c1" > 0 < /span> };</
    td >
    < /tr>
    < tr >
    < td
    id = "L9962"
class
    = "blob-num js-line-number"
    data - line - number = "9962" > < /td>
        < td
    id = "LC9962"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L9963"
class
= "blob-num js-line-number"
data - line - number = "9963" > < /td>
    < td
id = "LC9963"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9964"
class
= "blob-num js-line-number"
data - line - number = "9964" > < /td>
    < td
id = "LC9964"
class
= "blob-code blob-code-inner js-file-line" > rect < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > getBoundingClientRect();
<
/td>
< /tr>
< tr >
< td
id = "L9965"
class
= "blob-num js-line-number"
data - line - number = "9965" > < /td>
    < td
id = "LC9965"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9966"
class
= "blob-num js-line-number"
data - line - number = "9966" > < /td>
    < td
id = "LC9966"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Make sure element is not hidden (display: none)</span></td>
    < /tr>
    < tr >
    < td
id = "L9967"
class
= "blob-num js-line-number"
data - line - number = "9967" > < /td>
    < td
id = "LC9967"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( rect<span class="pl-k">.</s
pan > width < span
class
= "pl-k" > || < /span> rect<span class="pl-k">.</s
pan > height
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9968"
class
    = "blob-num js-line-number"
    data - line - number = "9968" > < /td>
        < td
    id = "LC9968"
class
    = "blob-code blob-code-inner js-file-line" > doc < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > ownerDocument;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9969"
class
    = "blob-num js-line-number"
    data - line - number = "9969" > < /td>
        < td
    id = "LC9969"
class
    = "blob-code blob-code-inner js-file-line" > win < span
class
    = "pl-k" >= < /span> getWindow( doc );</
    td >
    < /tr>
    < tr >
    < td
    id = "L9970"
class
    = "blob-num js-line-number"
    data - line - number = "9970" > < /td>
        < td
    id = "LC9970"
class
    = "blob-code blob-code-inner js-file-line" > docElem < span
class
    = "pl-k" >= < /span> doc<span class="pl-k">.</s
    pan > documentElement;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9971"
class
    = "blob-num js-line-number"
    data - line - number = "9971" > < /td>
        < td
    id = "LC9971"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L9972"
class
    = "blob-num js-line-number"
    data - line - number = "9972" > < /td>
        < td
    id = "LC9972"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> {</
    td >
    < /tr>
    < tr >
    < td
    id = "L9973"
class
    = "blob-num js-line-number"
    data - line - number = "9973" > < /td>
        < td
    id = "LC9973"
class
    = "blob-code blob-code-inner js-file-line" > top < span
class
    = "pl-k" >
:<
    /span> rect<span class="pl-k">.</s
    pan > top < span
class
    = "pl-k" > + < /span> win<span class="pl-k">.</s
    pan > pageYOffset < span
class
    = "pl-k" > - < /span> docElem<span class="pl-k">.</s
    pan > clientTop,
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L9974"
class
    = "blob-num js-line-number"
    data - line - number = "9974" > < /td>
        < td
    id = "LC9974"
class
    = "blob-code blob-code-inner js-file-line" > left < span
class
    = "pl-k" >
:<
    /span> rect<span class="pl-k">.</s
    pan > left < span
class
    = "pl-k" > + < /span> win<span class="pl-k">.</s
    pan > pageXOffset < span
class
    = "pl-k" > - < /span> docElem<span class="pl-k">.</s
    pan > clientLeft < /td>
    < /tr>
    < tr >
    < td
    id = "L9975"
class
    = "blob-num js-line-number"
    data - line - number = "9975" > < /td>
        < td
    id = "LC9975"
class
    = "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L9976"
class
= "blob-num js-line-number"
data - line - number = "9976" > < /td>
    < td
id = "LC9976"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9977"
class
= "blob-num js-line-number"
data - line - number = "9977" > < /td>
    < td
id = "LC9977"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9978"
class
= "blob-num js-line-number"
data - line - number = "9978" > < /td>
    < td
id = "LC9978"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Return zeros for disconnected and hidden elements (gh-2310)</span></td>
    < /tr>
    < tr >
    < td
id = "L9979"
class
= "blob-num js-line-number"
data - line - number = "9979" > < /td>
    < td
id = "LC9979"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> rect;</
td >
< /tr>
< tr >
< td
id = "L9980"
class
= "blob-num js-line-number"
data - line - number = "9980" > < /td>
    < td
id = "LC9980"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L9981"
class
= "blob-num js-line-number"
data - line - number = "9981" > < /td>
    < td
id = "LC9981"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9982"
class
= "blob-num js-line-number"
data - line - number = "9982" > < /td>
    < td
id = "LC9982"
class
= "blob-code blob-code-inner js-file-line" > position < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L9983"
class
= "blob-num js-line-number"
data - line - number = "9983" > < /td>
    < td
id = "LC9983"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > < span
class
= "pl-c1" > this < /span>[ <span class="pl-c1">0</span> ] ) {</
td >
< /tr>
< tr >
< td
id = "L9984"
class
= "blob-num js-line-number"
data - line - number = "9984" > < /td>
    < td
id = "LC9984"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span>;</
td >
< /tr>
< tr >
< td
id = "L9985"
class
= "blob-num js-line-number"
data - line - number = "9985" > < /td>
    < td
id = "LC9985"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L9986"
class
= "blob-num js-line-number"
data - line - number = "9986" > < /td>
    < td
id = "LC9986"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9987"
class
= "blob-num js-line-number"
data - line - number = "9987" > < /td>
    < td
id = "LC9987"
class
= "blob-code blob-code-inner js-file-line" >
var offsetParent, offset, <
/td>
< /tr>
< tr >
< td
id = "L9988"
class
= "blob-num js-line-number"
data - line - number = "9988" > < /td>
    < td
id = "LC9988"
class
= "blob-code blob-code-inner js-file-line" > elem < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > [ < span
class
= "pl-c1" > 0 < /span> ],</
td >
< /tr>
< tr >
< td
id = "L9989"
class
= "blob-num js-line-number"
data - line - number = "9989" > < /td>
    < td
id = "LC9989"
class
= "blob-code blob-code-inner js-file-line" > parentOffset < span
class
= "pl-k" >= < /span> { top<span class="pl-k">:</s
pan > < span
class
= "pl-c1" > 0 < /span>, left<span class="pl-k">:</s
pan > < span
class
= "pl-c1" > 0 < /span> };</
td >
< /tr>
< tr >
< td
id = "L9990"
class
= "blob-num js-line-number"
data - line - number = "9990" > < /td>
    < td
id = "LC9990"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9991"
class
= "blob-num js-line-number"
data - line - number = "9991" > < /td>
    < td
id = "LC9991"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Fixed elements are offset from window (parentOffset = {top:0, left: 0},</span></td>
    < /tr>
    < tr >
    < td
id = "L9992"
class
= "blob-num js-line-number"
data - line - number = "9992" > < /td>
    < td
id = "LC9992"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> because it is its only offset parent</span></td>
    < /tr>
    < tr >
    < td
id = "L9993"
class
= "blob-num js-line-number"
data - line - number = "9993" > < /td>
    < td
id = "LC9993"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>position<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>fixed<span class="pl-pds">&quot;</s
pan > < /span> ) {</
td >
< /tr>
< tr >
< td
id = "L9994"
class
= "blob-num js-line-number"
data - line - number = "9994" > < /td>
    < td
id = "LC9994"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9995"
class
= "blob-num js-line-number"
data - line - number = "9995" > < /td>
    < td
id = "LC9995"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Assume getBoundingClientRect is there when computed position is fixed</span></td>
    < /tr>
    < tr >
    < td
id = "L9996"
class
= "blob-num js-line-number"
data - line - number = "9996" > < /td>
    < td
id = "LC9996"
class
= "blob-code blob-code-inner js-file-line" > offset < span
class
= "pl-k" >= < /span> elem<span class="pl-k">.</s
pan > getBoundingClientRect();
<
/td>
< /tr>
< tr >
< td
id = "L9997"
class
= "blob-num js-line-number"
data - line - number = "9997" > < /td>
    < td
id = "LC9997"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L9998"
class
= "blob-num js-line-number"
data - line - number = "9998" > < /td>
    < td
id = "LC9998"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L9999"
class
= "blob-num js-line-number"
data - line - number = "9999" > < /td>
    < td
id = "LC9999"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10000"
class
= "blob-num js-line-number"
data - line - number = "10000" > < /td>
    < td
id = "LC10000"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get *real* offsetParent</span></td>
    < /tr>
    < tr >
    < td
id = "L10001"
class
= "blob-num js-line-number"
data - line - number = "10001" > < /td>
    < td
id = "LC10001"
class
= "blob-code blob-code-inner js-file-line" > offsetParent < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>offsetParent();</
td >
< /tr>
< tr >
< td
id = "L10002"
class
= "blob-num js-line-number"
data - line - number = "10002" > < /td>
    < td
id = "LC10002"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10003"
class
= "blob-num js-line-number"
data - line - number = "10003" > < /td>
    < td
id = "LC10003"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get correct offsets</span></td>
    < /tr>
    < tr >
    < td
id = "L10004"
class
= "blob-num js-line-number"
data - line - number = "10004" > < /td>
    < td
id = "LC10004"
class
= "blob-code blob-code-inner js-file-line" > offset < span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>offset();</
td >
< /tr>
< tr >
< td
id = "L10005"
class
= "blob-num js-line-number"
data - line - number = "10005" > < /td>
    < td
id = "LC10005"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>nodeName( offsetParent[ <span class="pl-c1">0</span> ], <span class="pl-s"><span class="pl-pds">&quot;</s
pan > html < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10006"
class
    = "blob-num js-line-number"
    data - line - number = "10006" > < /td>
        < td
    id = "LC10006"
class
    = "blob-code blob-code-inner js-file-line" > parentOffset < span
class
    = "pl-k" >= < /span> offsetParent<span class="pl-k">.</s
    pan > offset();
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10007"
class
    = "blob-num js-line-number"
    data - line - number = "10007" > < /td>
        < td
    id = "LC10007"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L10008"
class
= "blob-num js-line-number"
data - line - number = "10008" > < /td>
    < td
id = "LC10008"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10009"
class
= "blob-num js-line-number"
data - line - number = "10009" > < /td>
    < td
id = "LC10009"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add offsetParent borders</span></td>
    < /tr>
    < tr >
    < td
id = "L10010"
class
= "blob-num js-line-number"
data - line - number = "10010" > < /td>
    < td
id = "LC10010"
class
= "blob-code blob-code-inner js-file-line" > parentOffset < span
class
= "pl-k" >= < /span> {</
td >
< /tr>
< tr >
< td
id = "L10011"
class
= "blob-num js-line-number"
data - line - number = "10011" > < /td>
    < td
id = "LC10011"
class
= "blob-code blob-code-inner js-file-line" > top < span
class
= "pl-k" >
:<
/span> parentOffset<span class="pl-k">.</s
pan > top < span
class
= "pl-k" > + < /span> jQuery<span class="pl-k">.</s
pan > css(offsetParent[ < span
class
= "pl-c1" > 0 < /span> ], <span class="pl-s"><span class="pl-pds">&quot;</s
pan > borderTopWidth < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-c1" > true < /span> ),</
td >
< /tr>
< tr >
< td
id = "L10012"
class
= "blob-num js-line-number"
data - line - number = "10012" > < /td>
    < td
id = "LC10012"
class
= "blob-code blob-code-inner js-file-line" > left < span
class
= "pl-k" >
:<
/span> parentOffset<span class="pl-k">.</s
pan > left < span
class
= "pl-k" > + < /span> jQuery<span class="pl-k">.</s
pan > css(offsetParent[ < span
class
= "pl-c1" > 0 < /span> ], <span class="pl-s"><span class="pl-pds">&quot;</s
pan > borderLeftWidth < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-c1" > true < /span> )</
td >
< /tr>
< tr >
< td
id = "L10013"
class
= "blob-num js-line-number"
data - line - number = "10013" > < /td>
    < td
id = "LC10013"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L10014"
class
= "blob-num js-line-number"
data - line - number = "10014" > < /td>
    < td
id = "LC10014"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L10015"
class
= "blob-num js-line-number"
data - line - number = "10015" > < /td>
    < td
id = "LC10015"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10016"
class
= "blob-num js-line-number"
data - line - number = "10016" > < /td>
    < td
id = "LC10016"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Subtract parent offsets and element margins</span></td>
    < /tr>
    < tr >
    < td
id = "L10017"
class
= "blob-num js-line-number"
data - line - number = "10017" > < /td>
    < td
id = "LC10017"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> {</
td >
< /tr>
< tr >
< td
id = "L10018"
class
= "blob-num js-line-number"
data - line - number = "10018" > < /td>
    < td
id = "LC10018"
class
= "blob-code blob-code-inner js-file-line" > top < span
class
= "pl-k" >
:<
/span> offset<span class="pl-k">.</s
pan > top < span
class
= "pl-k" > - < /span> parentOffset<span class="pl-k">.</s
pan > top < span
class
= "pl-k" > - < /span> jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>marginTop<span class="pl-pds">&quot;</s
pan > < /span>, <span class="pl-c1">true</s
pan >
),<
/td>
< /tr>
< tr >
< td
id = "L10019"
class
= "blob-num js-line-number"
data - line - number = "10019" > < /td>
    < td
id = "LC10019"
class
= "blob-code blob-code-inner js-file-line" > left < span
class
= "pl-k" >
:<
/span> offset<span class="pl-k">.</s
pan > left < span
class
= "pl-k" > - < /span> parentOffset<span class="pl-k">.</s
pan > left < span
class
= "pl-k" > - < /span> jQuery<span class="pl-k">.</s
pan > css(elem, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>marginLeft<span class="pl-pds">&quot;</s
pan > < /span>, <span class="pl-c1">true</s
pan >
)<
/td>
< /tr>
< tr >
< td
id = "L10020"
class
= "blob-num js-line-number"
data - line - number = "10020" > < /td>
    < td
id = "LC10020"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L10021"
class
= "blob-num js-line-number"
data - line - number = "10021" > < /td>
    < td
id = "LC10021"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L10022"
class
= "blob-num js-line-number"
data - line - number = "10022" > < /td>
    < td
id = "LC10022"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10023"
class
= "blob-num js-line-number"
data - line - number = "10023" > < /td>
    < td
id = "LC10023"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> This method will return documentElement in the following cases:</span></td>
    < /tr>
    < tr >
    < td
id = "L10024"
class
= "blob-num js-line-number"
data - line - number = "10024" > < /td>
    < td
id = "LC10024"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> 1) For the element inside the iframe without offsetParent, this method will return</span></td>
    < /tr>
    < tr >
    < td
id = "L10025"
class
= "blob-num js-line-number"
data - line - number = "10025" > < /td>
    < td
id = "LC10025"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span>    documentElement of the parent window</span></td>
    < /tr>
    < tr >
    < td
id = "L10026"
class
= "blob-num js-line-number"
data - line - number = "10026" > < /td>
    < td
id = "LC10026"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> 2) For the hidden or detached element</span></td>
    < /tr>
    < tr >
    < td
id = "L10027"
class
= "blob-num js-line-number"
data - line - number = "10027" > < /td>
    < td
id = "LC10027"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> 3) For body or html element, i.e. in case of the html node - it will return itself</span></td>
    < /tr>
    < tr >
    < td
id = "L10028"
class
= "blob-num js-line-number"
data - line - number = "10028" > < /td>
    < td
id = "LC10028"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L10029"
class
= "blob-num js-line-number"
data - line - number = "10029" > < /td>
    < td
id = "LC10029"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> but those exceptions were never presented as a real life use-cases</span></td>
    < /tr>
    < tr >
    < td
id = "L10030"
class
= "blob-num js-line-number"
data - line - number = "10030" > < /td>
    < td
id = "LC10030"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> and might be considered as more preferable results.</span></td>
    < /tr>
    < tr >
    < td
id = "L10031"
class
= "blob-num js-line-number"
data - line - number = "10031" > < /td>
    < td
id = "LC10031"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span></span></td>
    < /tr>
    < tr >
    < td
id = "L10032"
class
= "blob-num js-line-number"
data - line - number = "10032" > < /td>
    < td
id = "LC10032"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> This logic, however, is not guaranteed and can change at any point in the future</span></td>
    < /tr>
    < tr >
    < td
id = "L10033"
class
= "blob-num js-line-number"
data - line - number = "10033" > < /td>
    < td
id = "LC10033"
class
= "blob-code blob-code-inner js-file-line" > offsetParent < span
class
= "pl-k" >
:<
/span> function() {</
td >
< /tr>
< tr >
< td
id = "L10034"
class
= "blob-num js-line-number"
data - line - number = "10034" > < /td>
    < td
id = "LC10034"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>map( function() {</
td >
< /tr>
< tr >
< td
id = "L10035"
class
= "blob-num js-line-number"
data - line - number = "10035" > < /td>
    < td
id = "LC10035"
class
= "blob-code blob-code-inner js-file-line" >
var offsetParent
<
span
class
= "pl-k" >= < /span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>offsetParent;</
td >
< /tr>
< tr >
< td
id = "L10036"
class
= "blob-num js-line-number"
data - line - number = "10036" > < /td>
    < td
id = "LC10036"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10037"
class
= "blob-num js-line-number"
data - line - number = "10037" > < /td>
    < td
id = "LC10037"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
while<
/span> ( offsetParent <span class="pl-k">&amp;&amp;</s
pan > jQuery < span
class
= "pl-k" >
.<
/span>css( offsetParent, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > position < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
) <
span
class
= "pl-k" >= == < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > static < span
class
= "pl-pds" > & quot;
<
/span></s
pan >
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10038"
class
    = "blob-num js-line-number"
    data - line - number = "10038" > < /td>
        < td
    id = "LC10038"
class
    = "blob-code blob-code-inner js-file-line" > offsetParent < span
class
    = "pl-k" >= < /span> offsetParent<span class="pl-k">.</s
    pan > offsetParent;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10039"
class
    = "blob-num js-line-number"
    data - line - number = "10039" > < /td>
        < td
    id = "LC10039"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L10040"
class
= "blob-num js-line-number"
data - line - number = "10040" > < /td>
    < td
id = "LC10040"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10041"
class
= "blob-num js-line-number"
data - line - number = "10041" > < /td>
    < td
id = "LC10041"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> offsetParent <span class="pl-k">||</s
pan > documentElement;
<
/td>
< /tr>
< tr >
< td
id = "L10042"
class
= "blob-num js-line-number"
data - line - number = "10042" > < /td>
    < td
id = "LC10042"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L10043"
class
= "blob-num js-line-number"
data - line - number = "10043" > < /td>
    < td
id = "LC10043"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L10044"
class
= "blob-num js-line-number"
data - line - number = "10044" > < /td>
    < td
id = "LC10044"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L10045"
class
= "blob-num js-line-number"
data - line - number = "10045" > < /td>
    < td
id = "LC10045"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10046"
class
= "blob-num js-line-number"
data - line - number = "10046" > < /td>
    < td
id = "LC10046"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Create scrollLeft and scrollTop methods</span></td>
    < /tr>
    < tr >
    < td
id = "L10047"
class
= "blob-num js-line-number"
data - line - number = "10047" > < /td>
    < td
id = "LC10047"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( { scrollLeft<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>pageXOffset<span class="pl-pds">&quot;</s
pan > < /span>, scrollTop<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>pageYOffset<span class="pl-pds">&quot;</s
pan > < /span> }, function( method, prop ) {</
td >
< /tr>
< tr >
< td
id = "L10048"
class
= "blob-num js-line-number"
data - line - number = "10048" > < /td>
    < td
id = "LC10048"
class
= "blob-code blob-code-inner js-file-line" >
var top
<
span
class
= "pl-k" >= < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > pageYOffset < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" >= == < /span> prop;</
td >
< /tr>
< tr >
< td
id = "L10049"
class
= "blob-num js-line-number"
data - line - number = "10049" > < /td>
    < td
id = "LC10049"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10050"
class
= "blob-num js-line-number"
data - line - number = "10050" > < /td>
    < td
id = "LC10050"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn[ method ] <span class="pl-k">=</s
pan > function (val) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10051"
class
    = "blob-num js-line-number"
    data - line - number = "10051" > < /td>
        < td
    id = "LC10051"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> access( <span class="pl-c1">this</s
    pan >, function (elem, method, val) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L10052"
    class
        = "blob-num js-line-number"
        data - line - number = "10052" > < /td>
            < td
        id = "LC10052"
    class
        = "blob-code blob-code-inner js-file-line" >
        var win
    <
        span
    class
        = "pl-k" >= < /span> getWindow( elem );</
        td >
        < /tr>
        < tr >
        < td
        id = "L10053"
    class
        = "blob-num js-line-number"
        data - line - number = "10053" > < /td>
            < td
        id = "LC10053"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L10054"
    class
        = "blob-num js-line-number"
        data - line - number = "10054" > < /td>
            < td
        id = "LC10054"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( val <span class="pl-k">===</s
        pan > undefined
    )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10055"
class
    = "blob-num js-line-number"
    data - line - number = "10055" > < /td>
        < td
    id = "LC10055"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> win <span class="pl-k">?</s
    pan > win[prop] < span
class
    = "pl-k" >
:<
    /span> elem[ method ];</
    td >
    < /tr>
    < tr >
    < td
    id = "L10056"
class
    = "blob-num js-line-number"
    data - line - number = "10056" > < /td>
        < td
    id = "LC10056"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L10057"
class
= "blob-num js-line-number"
data - line - number = "10057" > < /td>
    < td
id = "LC10057"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10058"
class
= "blob-num js-line-number"
data - line - number = "10058" > < /td>
    < td
id = "LC10058"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( win ) {</
td >
< /tr>
< tr >
< td
id = "L10059"
class
= "blob-num js-line-number"
data - line - number = "10059" > < /td>
    < td
id = "LC10059"
class
= "blob-code blob-code-inner js-file-line" > win < span
class
= "pl-k" >
.<
/span>scrollTo(</
td >
< /tr>
< tr >
< td
id = "L10060"
class
= "blob-num js-line-number"
data - line - number = "10060" > < /td>
    < td
id = "LC10060"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" > ! < /span>top <span class="pl-k">?</s
pan > val < span
class
= "pl-k" >
:<
/span> win<span class="pl-k">.</s
pan > pageXOffset,
<
/td>
< /tr>
< tr >
< td
id = "L10061"
class
= "blob-num js-line-number"
data - line - number = "10061" > < /td>
    < td
id = "LC10061"
class
= "blob-code blob-code-inner js-file-line" > top < span
class
= "pl-k" > ?
<
/span> val <span class="pl-k">:</s
pan > win < span
class
= "pl-k" >
.<
/span>pageYOffset</
td >
< /tr>
< tr >
< td
id = "L10062"
class
= "blob-num js-line-number"
data - line - number = "10062" > < /td>
    < td
id = "LC10062"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L10063"
class
= "blob-num js-line-number"
data - line - number = "10063" > < /td>
    < td
id = "LC10063"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10064"
class
= "blob-num js-line-number"
data - line - number = "10064" > < /td>
    < td
id = "LC10064"
class
= "blob-code blob-code-inner js-file-line" >
} <
span
class
= "pl-k" >
else<
/span> {</
td >
< /tr>
< tr >
< td
id = "L10065"
class
= "blob-num js-line-number"
data - line - number = "10065" > < /td>
    < td
id = "LC10065"
class
= "blob-code blob-code-inner js-file-line" > elem[method] < span
class
= "pl-k" >= < /span> val;</
td >
< /tr>
< tr >
< td
id = "L10066"
class
= "blob-num js-line-number"
data - line - number = "10066" > < /td>
    < td
id = "LC10066"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L10067"
class
= "blob-num js-line-number"
data - line - number = "10067" > < /td>
    < td
id = "LC10067"
class
= "blob-code blob-code-inner js-file-line" >
},
method, val, arguments < span
class
= "pl-k" >
.<
/span>length );</
td >
< /tr>
< tr >
< td
id = "L10068"
class
= "blob-num js-line-number"
data - line - number = "10068" > < /td>
    < td
id = "LC10068"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L10069"
class
= "blob-num js-line-number"
data - line - number = "10069" > < /td>
    < td
id = "LC10069"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L10070"
class
= "blob-num js-line-number"
data - line - number = "10070" > < /td>
    < td
id = "LC10070"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10071"
class
= "blob-num js-line-number"
data - line - number = "10071" > < /td>
    < td
id = "LC10071"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Support: Safari &lt;=7 - 9.1, Chrome &lt;=37 - 49</span></td>
    < /tr>
    < tr >
    < td
id = "L10072"
class
= "blob-num js-line-number"
data - line - number = "10072" > < /td>
    < td
id = "LC10072"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Add the top/left cssHooks using jQuery.fn.position</span></td>
    < /tr>
    < tr >
    < td
id = "L10073"
class
= "blob-num js-line-number"
data - line - number = "10073" > < /td>
    < td
id = "LC10073"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084</span></td>
    < /tr>
    < tr >
    < td
id = "L10074"
class
= "blob-num js-line-number"
data - line - number = "10074" > < /td>
    < td
id = "LC10074"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347</span></td>
    < /tr>
    < tr >
    < td
id = "L10075"
class
= "blob-num js-line-number"
data - line - number = "10075" > < /td>
    < td
id = "LC10075"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> getComputedStyle returns percent when specified for top/left/bottom/right;</span></td>
    < /tr>
    < tr >
    < td
id = "L10076"
class
= "blob-num js-line-number"
data - line - number = "10076" > < /td>
    < td
id = "LC10076"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> rather than make the css module depend on the offset module, just check for it here</span></td>
    < /tr>
    < tr >
    < td
id = "L10077"
class
= "blob-num js-line-number"
data - line - number = "10077" > < /td>
    < td
id = "LC10077"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( [ <span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span> ], function( i, prop ) {</
td >
< /tr>
< tr >
< td
id = "L10078"
class
= "blob-num js-line-number"
data - line - number = "10078" > < /td>
    < td
id = "LC10078"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>cssHooks[ prop ] <span class="pl-k">=</s
pan > addGetHookIf(support < span
class
= "pl-k" >
.<
/span>pixelPosition,</
td >
< /tr>
< tr >
< td
id = "L10079"
class
= "blob-num js-line-number"
data - line - number = "10079" > < /td>
    < td
id = "LC10079"
class
= "blob-code blob-code-inner js-file-line" > function (elem, computed) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L10080"
    class
        = "blob-num js-line-number"
        data - line - number = "10080" > < /td>
            < td
        id = "LC10080"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( computed ) {</
        td >
        < /tr>
        < tr >
        < td
        id = "L10081"
    class
        = "blob-num js-line-number"
        data - line - number = "10081" > < /td>
            < td
        id = "LC10081"
    class
        = "blob-code blob-code-inner js-file-line" > computed < span
    class
        = "pl-k" >= < /span> curCSS( elem, prop );</
        td >
        < /tr>
        < tr >
        < td
        id = "L10082"
    class
        = "blob-num js-line-number"
        data - line - number = "10082" > < /td>
            < td
        id = "LC10082"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L10083"
    class
        = "blob-num js-line-number"
        data - line - number = "10083" > < /td>
            < td
        id = "LC10083"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> If curCSS returns percentage, fallback to offset</span></td>
            < /tr>
            < tr >
            < td
        id = "L10084"
    class
        = "blob-num js-line-number"
        data - line - number = "10084" > < /td>
            < td
        id = "LC10084"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> rnumnonpx<span class="pl-k">.</s
        pan > test(computed) < span
    class
        = "pl-k" > ?
    <
        /span></
        td >
        < /tr>
        < tr >
        < td
        id = "L10085"
    class
        = "blob-num js-line-number"
        data - line - number = "10085" > < /td>
            < td
        id = "LC10085"
    class
        = "blob-code blob-code-inner js-file-line" > jQuery(elem) < span
    class
        = "pl-k" >
    .<
        /span>position()[ prop ] <span class="pl-k">+</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>px<span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">:</s
        pan > < /td>
        < /tr>
        < tr >
        < td
        id = "L10086"
    class
        = "blob-num js-line-number"
        data - line - number = "10086" > < /td>
            < td
        id = "LC10086"
    class
        = "blob-code blob-code-inner js-file-line" > computed;
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L10087"
    class
        = "blob-num js-line-number"
        data - line - number = "10087" > < /td>
            < td
        id = "LC10087"
    class
        = "blob-code blob-code-inner js-file-line" >
    } < /td>
    < /tr>
    < tr >
    < td
id = "L10088"
class
= "blob-num js-line-number"
data - line - number = "10088" > < /td>
    < td
id = "LC10088"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L10089"
class
= "blob-num js-line-number"
data - line - number = "10089" > < /td>
    < td
id = "LC10089"
class
= "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L10090"
class
= "blob-num js-line-number"
data - line - number = "10090" > < /td>
    < td
id = "LC10090"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L10091"
class
= "blob-num js-line-number"
data - line - number = "10091" > < /td>
    < td
id = "LC10091"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10092"
class
= "blob-num js-line-number"
data - line - number = "10092" > < /td>
    < td
id = "LC10092"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10093"
class
= "blob-num js-line-number"
data - line - number = "10093" > < /td>
    < td
id = "LC10093"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods</span></td>
    < /tr>
    < tr >
    < td
id = "L10094"
class
= "blob-num js-line-number"
data - line - number = "10094" > < /td>
    < td
id = "LC10094"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( { <span class="pl-smi">Height</s
pan > < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > height < span
class
= "pl-pds" > & quot;
<
/span></s
pan >,
<
span
class
= "pl-smi" > Width < /span><span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>width<span class="pl-pds">&quot;</s
pan > < /span> }, function( name, type ) {</
td >
< /tr>
< tr >
< td
id = "L10095"
class
= "blob-num js-line-number"
data - line - number = "10095" > < /td>
    < td
id = "LC10095"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>each( { padding<span class="pl-k">:</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>inner<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">+</s
pan > name, content < span
class
= "pl-k" >
:<
/span> type, <span class="pl-s"><span class="pl-pds">&quot;</s
pan > < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" >
:<
/span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > outer < span
class
= "pl-pds" > & quot;
<
/span></s
pan > < span
class
= "pl-k" > + < /span> name },</
td >
< /tr>
< tr >
< td
id = "L10096"
class
= "blob-num js-line-number"
data - line - number = "10096" > < /td>
    < td
id = "LC10096"
class
= "blob-code blob-code-inner js-file-line" > function (defaultExtra, funcName) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10097"
class
    = "blob-num js-line-number"
    data - line - number = "10097" > < /td>
        < td
    id = "LC10097"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L10098"
class
    = "blob-num js-line-number"
    data - line - number = "10098" > < /td>
        < td
    id = "LC10098"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Margin is only for outerHeight, outerWidth</span></td>
        < /tr>
        < tr >
        < td
    id = "L10099"
class
    = "blob-num js-line-number"
    data - line - number = "10099" > < /td>
        < td
    id = "LC10099"
class
    = "blob-code blob-code-inner js-file-line" > jQuery < span
class
    = "pl-k" >
.<
    /span>fn[ funcName ] <span class="pl-k">=</s
    pan > function (margin, value) {<
        /td>
        < /tr>
        < tr >
        < td
        id = "L10100"
    class
        = "blob-num js-line-number"
        data - line - number = "10100" > < /td>
            < td
        id = "LC10100"
    class
        = "blob-code blob-code-inner js-file-line" >
        var chainable
    <
        span
    class
        = "pl-k" >= < /span> arguments<span class="pl-k">.</s
        pan > length < span
    class
        = "pl-k" > &amp;&amp; < /span> ( defaultExtra <span class="pl-k">||</s
        pan > typeof margin < span
    class
        = "pl-k" > != < /span><span class="pl-k">=</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>boolean<span class="pl-pds">&quot;</s
        pan > < /span> ),</
        td >
        < /tr>
        < tr >
        < td
        id = "L10101"
    class
        = "blob-num js-line-number"
        data - line - number = "10101" > < /td>
            < td
        id = "LC10101"
    class
        = "blob-code blob-code-inner js-file-line" > extra < span
    class
        = "pl-k" >= < /span> defaultExtra <span class="pl-k">||</s
        pan > (margin < span
    class
        = "pl-k" >= == < /span> <span class="pl-c1">true</s
        pan > < span
    class
        = "pl-k" > || < /span> value <span class="pl-k">===</s
        pan > < span
    class
        = "pl-c1" > true < /span> <span class="pl-k">?</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>margin<span class="pl-pds">&quot;</s
        pan > < /span> <span class="pl-k">:</s
        pan > < span
    class
        = "pl-s" > < span
    class
        = "pl-pds" > & quot;
    <
        /span>border<span class="pl-pds">&quot;</s
        pan > < /span> );</
        td >
        < /tr>
        < tr >
        < td
        id = "L10102"
    class
        = "blob-num js-line-number"
        data - line - number = "10102" > < /td>
            < td
        id = "LC10102"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L10103"
    class
        = "blob-num js-line-number"
        data - line - number = "10103" > < /td>
            < td
        id = "LC10103"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        return
    <
        /span> access( <span class="pl-c1">this</s
        pan >, function (elem, type, value) {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L10104"
        class
            = "blob-num js-line-number"
            data - line - number = "10104" > < /td>
                < td
            id = "LC10104"
        class
            = "blob-code blob-code-inner js-file-line" >
            var doc;
        <
            /td>
            < /tr>
            < tr >
            < td
            id = "L10105"
        class
            = "blob-num js-line-number"
            data - line - number = "10105" > < /td>
                < td
            id = "LC10105"
        class
            = "blob-code blob-code-inner js-file-line" >
                < /td>
                < /tr>
                < tr >
                < td
            id = "L10106"
        class
            = "blob-num js-line-number"
            data - line - number = "10106" > < /td>
                < td
            id = "LC10106"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-k" >
            if<
            /span> ( jQuery<span class="pl-k">.</s
            pan > isWindow(elem)
        )
        {<
            /td>
            < /tr>
            < tr >
            < td
            id = "L10107"
        class
            = "blob-num js-line-number"
            data - line - number = "10107" > < /td>
                < td
            id = "LC10107"
        class
            = "blob-code blob-code-inner js-file-line" >
                < /td>
                < /tr>
                < tr >
                < td
            id = "L10108"
        class
            = "blob-num js-line-number"
            data - line - number = "10108" > < /td>
                < td
            id = "LC10108"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-c" > < span
        class
            = "pl-c" >//</span> $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)</span></td>
                < /tr>
                < tr >
                < td
            id = "L10109"
        class
            = "blob-num js-line-number"
            data - line - number = "10109" > < /td>
                < td
            id = "LC10109"
        class
            = "blob-code blob-code-inner js-file-line" > < span
        class
            = "pl-k" >
            return
        <
            /span> funcName<span class="pl-k">.</s
            pan > indexOf( < span
        class
            = "pl-s" > < span
        class
            = "pl-pds" > & quot;
        <
            /span>outer<span class="pl-pds">&quot;</s
            pan > < /span> ) <span class="pl-k">===</s
            pan > < span
        class
            = "pl-c1" > 0 < /span> <span class="pl-k">?</s
            pan > < /td>
            < /tr>
            < tr >
            < td
            id = "L10110"
        class
            = "blob-num js-line-number"
            data - line - number = "10110" > < /td>
                < td
            id = "LC10110"
        class
            = "blob-code blob-code-inner js-file-line" > elem[ < span
        class
            = "pl-s" > < span
        class
            = "pl-pds" > & quot;
        <
            /span>inner<span class="pl-pds">&quot;</s
            pan > < /span> <span class="pl-k">+</s
            pan > name
        ] <
            span
        class
            = "pl-k" >
        :<
            /span></
            td >
            < /tr>
            < tr >
            < td
            id = "L10111"
        class
            = "blob-num js-line-number"
            data - line - number = "10111" > < /td>
                < td
            id = "LC10111"
        class
            = "blob-code blob-code-inner js-file-line" > elem < span
        class
            = "pl-k" >
        .<
            /span>document<span class="pl-k">.</s
            pan > documentElement[ < span
        class
            = "pl-s" > < span
        class
            = "pl-pds" > & quot;
        <
            /span>client<span class="pl-pds">&quot;</s
            pan > < /span> <span class="pl-k">+</s
            pan > name
        ]
            ;
        <
            /td>
            < /tr>
            < tr >
            < td
            id = "L10112"
        class
            = "blob-num js-line-number"
            data - line - number = "10112" > < /td>
                < td
            id = "LC10112"
        class
            = "blob-code blob-code-inner js-file-line" >
        }
    <
        /td>
        < /tr>
        < tr >
        < td
        id = "L10113"
    class
        = "blob-num js-line-number"
        data - line - number = "10113" > < /td>
            < td
        id = "LC10113"
    class
        = "blob-code blob-code-inner js-file-line" >
            < /td>
            < /tr>
            < tr >
            < td
        id = "L10114"
    class
        = "blob-num js-line-number"
        data - line - number = "10114" > < /td>
            < td
        id = "LC10114"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-c" > < span
    class
        = "pl-c" >//</span> Get document width or height</span></td>
            < /tr>
            < tr >
            < td
        id = "L10115"
    class
        = "blob-num js-line-number"
        data - line - number = "10115" > < /td>
            < td
        id = "LC10115"
    class
        = "blob-code blob-code-inner js-file-line" > < span
    class
        = "pl-k" >
        if<
        /span> ( elem<span class="pl-k">.</s
        pan > nodeType < span
    class
        = "pl-k" >= == < /span> <span class="pl-c1">9</s
        pan >
    )
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10116"
class
    = "blob-num js-line-number"
    data - line - number = "10116" > < /td>
        < td
    id = "LC10116"
class
    = "blob-code blob-code-inner js-file-line" > doc < span
class
    = "pl-k" >= < /span> elem<span class="pl-k">.</s
    pan > documentElement;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10117"
class
    = "blob-num js-line-number"
    data - line - number = "10117" > < /td>
        < td
    id = "LC10117"
class
    = "blob-code blob-code-inner js-file-line" >
        < /td>
        < /tr>
        < tr >
        < td
    id = "L10118"
class
    = "blob-num js-line-number"
    data - line - number = "10118" > < /td>
        < td
    id = "LC10118"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],</span></td>
        < /tr>
        < tr >
        < td
    id = "L10119"
class
    = "blob-num js-line-number"
    data - line - number = "10119" > < /td>
        < td
    id = "LC10119"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-c" > < span
class
    = "pl-c" >//</span> whichever is greatest</span></td>
        < /tr>
        < tr >
        < td
    id = "L10120"
class
    = "blob-num js-line-number"
    data - line - number = "10120" > < /td>
        < td
    id = "LC10120"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    return
<
    /span> <span class="pl-smi">Math</s
    pan > < span
class
    = "pl-k" >
.<
    /span>max(</
    td >
    < /tr>
    < tr >
    < td
    id = "L10121"
class
    = "blob-num js-line-number"
    data - line - number = "10121" > < /td>
        < td
    id = "LC10121"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>body[ <span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name ], doc[ <span class="pl-s"><span class="pl-pds">&quot;</span>scroll<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name ],</
    td >
    < /tr>
    < tr >
    < td
    id = "L10122"
class
    = "blob-num js-line-number"
    data - line - number = "10122" > < /td>
        < td
    id = "LC10122"
class
    = "blob-code blob-code-inner js-file-line" > elem < span
class
    = "pl-k" >
.<
    /span>body[ <span class="pl-s"><span class="pl-pds">&quot;</span>offset<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name ], doc[ <span class="pl-s"><span class="pl-pds">&quot;</span>offset<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> name ],</
    td >
    < /tr>
    < tr >
    < td
    id = "L10123"
class
    = "blob-num js-line-number"
    data - line - number = "10123" > < /td>
        < td
    id = "LC10123"
class
    = "blob-code blob-code-inner js-file-line" > doc[ < span
class
    = "pl-s" > < span
class
    = "pl-pds" > & quot;
<
    /span>client<span class="pl-pds">&quot;</s
    pan > < /span> <span class="pl-k">+</s
    pan > name
]<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10124"
class
    = "blob-num js-line-number"
    data - line - number = "10124" > < /td>
        < td
    id = "LC10124"
class
    = "blob-code blob-code-inner js-file-line" >
)
;
<
/td>
< /tr>
< tr >
< td
id = "L10125"
class
= "blob-num js-line-number"
data - line - number = "10125" > < /td>
    < td
id = "LC10125"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L10126"
class
= "blob-num js-line-number"
data - line - number = "10126" > < /td>
    < td
id = "LC10126"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10127"
class
= "blob-num js-line-number"
data - line - number = "10127" > < /td>
    < td
id = "LC10127"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> value <span class="pl-k">===</s
pan > undefined < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L10128"
class
= "blob-num js-line-number"
data - line - number = "10128" > < /td>
    < td
id = "LC10128"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10129"
class
= "blob-num js-line-number"
data - line - number = "10129" > < /td>
    < td
id = "LC10129"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Get width or height on the element, requesting but not forcing parseFloat</span></td>
    < /tr>
    < tr >
    < td
id = "L10130"
class
= "blob-num js-line-number"
data - line - number = "10130" > < /td>
    < td
id = "LC10130"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>css( elem, type, extra ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L10131"
class
= "blob-num js-line-number"
data - line - number = "10131" > < /td>
    < td
id = "LC10131"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10132"
class
= "blob-num js-line-number"
data - line - number = "10132" > < /td>
    < td
id = "LC10132"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Set width or height on the element</span></td>
    < /tr>
    < tr >
    < td
id = "L10133"
class
= "blob-num js-line-number"
data - line - number = "10133" > < /td>
    < td
id = "LC10133"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>style( elem, type, value, extra );</
td >
< /tr>
< tr >
< td
id = "L10134"
class
= "blob-num js-line-number"
data - line - number = "10134" > < /td>
    < td
id = "LC10134"
class
= "blob-code blob-code-inner js-file-line" >
},
type, chainable < span
class
= "pl-k" > ?
<
/span> margin <span class="pl-k">:</s
pan > undefined, chainable
)
;
<
/td>
< /tr>
< tr >
< td
id = "L10135"
class
= "blob-num js-line-number"
data - line - number = "10135" > < /td>
    < td
id = "LC10135"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L10136"
class
= "blob-num js-line-number"
data - line - number = "10136" > < /td>
    < td
id = "LC10136"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L10137"
class
= "blob-num js-line-number"
data - line - number = "10137" > < /td>
    < td
id = "LC10137"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L10138"
class
= "blob-num js-line-number"
data - line - number = "10138" > < /td>
    < td
id = "LC10138"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10139"
class
= "blob-num js-line-number"
data - line - number = "10139" > < /td>
    < td
id = "LC10139"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10140"
class
= "blob-num js-line-number"
data - line - number = "10140" > < /td>
    < td
id = "LC10140"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>fn<span class="pl-k">.</s
pan > extend({ < /td>
    < /tr>
    < tr >
    < td
id = "L10141"
class
= "blob-num js-line-number"
data - line - number = "10141" > < /td>
    < td
id = "LC10141"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10142"
class
= "blob-num js-line-number"
data - line - number = "10142" > < /td>
    < td
id = "LC10142"
class
= "blob-code blob-code-inner js-file-line" > bind < span
class
= "pl-k" >
:<
/span> function( types, data, fn ) {</
td >
< /tr>
< tr >
< td
id = "L10143"
class
= "blob-num js-line-number"
data - line - number = "10143" > < /td>
    < td
id = "LC10143"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>on( types, <span class="pl-c1">null</s
pan >, data, fn
)
;
<
/td>
< /tr>
< tr >
< td
id = "L10144"
class
= "blob-num js-line-number"
data - line - number = "10144" > < /td>
    < td
id = "LC10144"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L10145"
class
= "blob-num js-line-number"
data - line - number = "10145" > < /td>
    < td
id = "LC10145"
class
= "blob-code blob-code-inner js-file-line" > unbind < span
class
= "pl-k" >
:<
/span> function( types, fn ) {</
td >
< /tr>
< tr >
< td
id = "L10146"
class
= "blob-num js-line-number"
data - line - number = "10146" > < /td>
    < td
id = "LC10146"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>off( types, <span class="pl-c1">null</s
pan >, fn
)
;
<
/td>
< /tr>
< tr >
< td
id = "L10147"
class
= "blob-num js-line-number"
data - line - number = "10147" > < /td>
    < td
id = "LC10147"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L10148"
class
= "blob-num js-line-number"
data - line - number = "10148" > < /td>
    < td
id = "LC10148"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10149"
class
= "blob-num js-line-number"
data - line - number = "10149" > < /td>
    < td
id = "LC10149"
class
= "blob-code blob-code-inner js-file-line" > delegate < span
class
= "pl-k" >
:<
/span> function( selector, types, data, fn ) {</
td >
< /tr>
< tr >
< td
id = "L10150"
class
= "blob-num js-line-number"
data - line - number = "10150" > < /td>
    < td
id = "LC10150"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> <span class="pl-c1">this</s
pan > < span
class
= "pl-k" >
.<
/span>on( types, selector, data, fn );</
td >
< /tr>
< tr >
< td
id = "L10151"
class
= "blob-num js-line-number"
data - line - number = "10151" > < /td>
    < td
id = "LC10151"
class
= "blob-code blob-code-inner js-file-line" >
},<
/td>
< /tr>
< tr >
< td
id = "L10152"
class
= "blob-num js-line-number"
data - line - number = "10152" > < /td>
    < td
id = "LC10152"
class
= "blob-code blob-code-inner js-file-line" > undelegate < span
class
= "pl-k" >
:<
/span> function( selector, types, fn ) {</
td >
< /tr>
< tr >
< td
id = "L10153"
class
= "blob-num js-line-number"
data - line - number = "10153" > < /td>
    < td
id = "LC10153"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10154"
class
= "blob-num js-line-number"
data - line - number = "10154" > < /td>
    < td
id = "LC10154"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> ( namespace ) or ( selector, types [, fn] )</span></td>
    < /tr>
    < tr >
    < td
id = "L10155"
class
= "blob-num js-line-number"
data - line - number = "10155" > < /td>
    < td
id = "LC10155"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> arguments<span class="pl-k">.</s
pan > length < span
class
= "pl-k" >= == < /span> <span class="pl-c1">1</s
pan > < span
class
= "pl-k" > ?
<
/span></
td >
< /tr>
< tr >
< td
id = "L10156"
class
= "blob-num js-line-number"
data - line - number = "10156" > < /td>
    < td
id = "LC10156"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > off(selector, < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>**<span class="pl-pds">&quot;</s
pan > < /span> ) <span class="pl-k">:</s
pan > < /td>
< /tr>
< tr >
< td
id = "L10157"
class
= "blob-num js-line-number"
data - line - number = "10157" > < /td>
    < td
id = "LC10157"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c1" > this < /span><span class="pl-k">.</s
pan > off(types, selector < span
class
= "pl-k" > || < /span> <span class="pl-s"><span class="pl-pds">&quot;</s
pan > ** < span
class
= "pl-pds" > & quot;
<
/span></s
pan >, fn
)
;
<
/td>
< /tr>
< tr >
< td
id = "L10158"
class
= "blob-num js-line-number"
data - line - number = "10158" > < /td>
    < td
id = "LC10158"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L10159"
class
= "blob-num js-line-number"
data - line - number = "10159" > < /td>
    < td
id = "LC10159"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L10160"
class
= "blob-num js-line-number"
data - line - number = "10160" > < /td>
    < td
id = "LC10160"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10161"
class
= "blob-num js-line-number"
data - line - number = "10161" > < /td>
    < td
id = "LC10161"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>parseJSON <span class="pl-k">=</s
pan > < span
class
= "pl-c1" > JSON < /span><span class="pl-k">.</s
pan > parse;
<
/td>
< /tr>
< tr >
< td
id = "L10162"
class
= "blob-num js-line-number"
data - line - number = "10162" > < /td>
    < td
id = "LC10162"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10163"
class
= "blob-num js-line-number"
data - line - number = "10163" > < /td>
    < td
id = "LC10163"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10164"
class
= "blob-num js-line-number"
data - line - number = "10164" > < /td>
    < td
id = "LC10164"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10165"
class
= "blob-num js-line-number"
data - line - number = "10165" > < /td>
    < td
id = "LC10165"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10166"
class
= "blob-num js-line-number"
data - line - number = "10166" > < /td>
    < td
id = "LC10166"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Register as a named AMD module, since jQuery can be concatenated with other</span></td>
    < /tr>
    < tr >
    < td
id = "L10167"
class
= "blob-num js-line-number"
data - line - number = "10167" > < /td>
    < td
id = "LC10167"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> files that may use define, but not via a proper concatenation script that</span></td>
    < /tr>
    < tr >
    < td
id = "L10168"
class
= "blob-num js-line-number"
data - line - number = "10168" > < /td>
    < td
id = "LC10168"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> understands anonymous AMD modules. A named AMD is safest and most robust</span></td>
    < /tr>
    < tr >
    < td
id = "L10169"
class
= "blob-num js-line-number"
data - line - number = "10169" > < /td>
    < td
id = "LC10169"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> way to register. Lowercase jquery is used because AMD module names are</span></td>
    < /tr>
    < tr >
    < td
id = "L10170"
class
= "blob-num js-line-number"
data - line - number = "10170" > < /td>
    < td
id = "LC10170"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> derived from file names, and jQuery is normally delivered in a lowercase</span></td>
    < /tr>
    < tr >
    < td
id = "L10171"
class
= "blob-num js-line-number"
data - line - number = "10171" > < /td>
    < td
id = "LC10171"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> file name. Do this after creating the global so that if an AMD module wants</span></td>
    < /tr>
    < tr >
    < td
id = "L10172"
class
= "blob-num js-line-number"
data - line - number = "10172" > < /td>
    < td
id = "LC10172"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> to call noConflict to hide this version of jQuery, it will work.</span></td>
    < /tr>
    < tr >
    < td
id = "L10173"
class
= "blob-num js-line-number"
data - line - number = "10173" > < /td>
    < td
id = "LC10173"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10174"
class
= "blob-num js-line-number"
data - line - number = "10174" > < /td>
    < td
id = "LC10174"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Note that for maximum portability, libraries that are not jQuery should</span></td>
    < /tr>
    < tr >
    < td
id = "L10175"
class
= "blob-num js-line-number"
data - line - number = "10175" > < /td>
    < td
id = "LC10175"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> declare themselves as anonymous modules, and avoid setting a global if an</span></td>
    < /tr>
    < tr >
    < td
id = "L10176"
class
= "blob-num js-line-number"
data - line - number = "10176" > < /td>
    < td
id = "LC10176"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> AMD loader is present. jQuery is a special case. For more information, see</span></td>
    < /tr>
    < tr >
    < td
id = "L10177"
class
= "blob-num js-line-number"
data - line - number = "10177" > < /td>
    < td
id = "LC10177"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon</span></td>
    < /tr>
    < tr >
    < td
id = "L10178"
class
= "blob-num js-line-number"
data - line - number = "10178" > < /td>
    < td
id = "LC10178"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10179"
class
= "blob-num js-line-number"
data - line - number = "10179" > < /td>
    < td
id = "LC10179"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( typeof define <span class="pl-k">===</s
pan > < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>function<span class="pl-pds">&quot;</s
pan > < /span> <span class="pl-k">&amp;&amp;</s
pan > define < span
class
= "pl-k" >
.<
/span>amd ) {</
td >
< /tr>
< tr >
< td
id = "L10180"
class
= "blob-num js-line-number"
data - line - number = "10180" > < /td>
    < td
id = "LC10180"
class
= "blob-code blob-code-inner js-file-line" > define( < span
class
= "pl-s" > < span
class
= "pl-pds" > & quot;
<
/span>jquery<span class="pl-pds">&quot;</s
pan > < /span>, [], function() {</
td >
< /tr>
< tr >
< td
id = "L10181"
class
= "blob-num js-line-number"
data - line - number = "10181" > < /td>
    < td
id = "LC10181"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery;</
td >
< /tr>
< tr >
< td
id = "L10182"
class
= "blob-num js-line-number"
data - line - number = "10182" > < /td>
    < td
id = "LC10182"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< tr >
< td
id = "L10183"
class
= "blob-num js-line-number"
data - line - number = "10183" > < /td>
    < td
id = "LC10183"
class
= "blob-code blob-code-inner js-file-line" >
}<
/td>
< /tr>
< tr >
< td
id = "L10184"
class
= "blob-num js-line-number"
data - line - number = "10184" > < /td>
    < td
id = "LC10184"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10185"
class
= "blob-num js-line-number"
data - line - number = "10185" > < /td>
    < td
id = "LC10185"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10186"
class
= "blob-num js-line-number"
data - line - number = "10186" > < /td>
    < td
id = "LC10186"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10187"
class
= "blob-num js-line-number"
data - line - number = "10187" > < /td>
    < td
id = "LC10187"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10188"
class
= "blob-num js-line-number"
data - line - number = "10188" > < /td>
    < td
id = "LC10188"
class
= "blob-code blob-code-inner js-file-line" >
var <
/td>
< /tr>
< tr >
< td
id = "L10189"
class
= "blob-num js-line-number"
data - line - number = "10189" > < /td>
    < td
id = "LC10189"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10190"
class
= "blob-num js-line-number"
data - line - number = "10190" > < /td>
    < td
id = "LC10190"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Map over jQuery in case of overwrite</span></td>
    < /tr>
    < tr >
    < td
id = "L10191"
class
= "blob-num js-line-number"
data - line - number = "10191" > < /td>
    < td
id = "LC10191"
class
= "blob-code blob-code-inner js-file-line" > _jQuery < span
class
= "pl-k" >= < /span> window<span class="pl-k">.</s
pan > jQuery,
<
/td>
< /tr>
< tr >
< td
id = "L10192"
class
= "blob-num js-line-number"
data - line - number = "10192" > < /td>
    < td
id = "LC10192"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10193"
class
= "blob-num js-line-number"
data - line - number = "10193" > < /td>
    < td
id = "LC10193"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Map over the $ in case of overwrite</span></td>
    < /tr>
    < tr >
    < td
id = "L10194"
class
= "blob-num js-line-number"
data - line - number = "10194" > < /td>
    < td
id = "LC10194"
class
= "blob-code blob-code-inner js-file-line" > _$ < span
class
= "pl-k" >= < /span> window<span class="pl-k">.</s
pan > $;
<
/td>
< /tr>
< tr >
< td
id = "L10195"
class
= "blob-num js-line-number"
data - line - number = "10195" > < /td>
    < td
id = "LC10195"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10196"
class
= "blob-num js-line-number"
data - line - number = "10196" > < /td>
    < td
id = "LC10196"
class
= "blob-code blob-code-inner js-file-line" > jQuery < span
class
= "pl-k" >
.<
/span>noConflict <span class="pl-k">=</s
pan > function (deep) {<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10197"
class
    = "blob-num js-line-number"
    data - line - number = "10197" > < /td>
        < td
    id = "LC10197"
class
    = "blob-code blob-code-inner js-file-line" > < span
class
    = "pl-k" >
    if<
    /span> ( window<span class="pl-k">.</s
    pan > $ < span
class
    = "pl-k" >= == < /span> jQuery ) {</
    td >
    < /tr>
    < tr >
    < td
    id = "L10198"
class
    = "blob-num js-line-number"
    data - line - number = "10198" > < /td>
        < td
    id = "LC10198"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>$ <span class="pl-k">=</s
    pan > _$;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10199"
class
    = "blob-num js-line-number"
    data - line - number = "10199" > < /td>
        < td
    id = "LC10199"
class
    = "blob-code blob-code-inner js-file-line" >
} < /td>
< /tr>
< tr >
< td
id = "L10200"
class
= "blob-num js-line-number"
data - line - number = "10200" > < /td>
    < td
id = "LC10200"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10201"
class
= "blob-num js-line-number"
data - line - number = "10201" > < /td>
    < td
id = "LC10201"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( deep <span class="pl-k">&amp;&amp;</s
pan > window < span
class
= "pl-k" >
.<
/span>jQuery <span class="pl-k">===</s
pan > jQuery
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10202"
class
    = "blob-num js-line-number"
    data - line - number = "10202" > < /td>
        < td
    id = "LC10202"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>jQuery <span class="pl-k">=</s
    pan > _jQuery;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10203"
class
    = "blob-num js-line-number"
    data - line - number = "10203" > < /td>
        < td
    id = "LC10203"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L10204"
class
= "blob-num js-line-number"
data - line - number = "10204" > < /td>
    < td
id = "LC10204"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10205"
class
= "blob-num js-line-number"
data - line - number = "10205" > < /td>
    < td
id = "LC10205"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery;</
td >
< /tr>
< tr >
< td
id = "L10206"
class
= "blob-num js-line-number"
data - line - number = "10206" > < /td>
    < td
id = "LC10206"
class
= "blob-code blob-code-inner js-file-line" >
}
;
<
/td>
< /tr>
< tr >
< td
id = "L10207"
class
= "blob-num js-line-number"
data - line - number = "10207" > < /td>
    < td
id = "LC10207"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10208"
class
= "blob-num js-line-number"
data - line - number = "10208" > < /td>
    < td
id = "LC10208"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> Expose jQuery and $ identifiers, even in AMD</span></td>
    < /tr>
    < tr >
    < td
id = "L10209"
class
= "blob-num js-line-number"
data - line - number = "10209" > < /td>
    < td
id = "LC10209"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> (#7102#comment:10, https://github.com/jquery/jquery/pull/557)</span></td>
    < /tr>
    < tr >
    < td
id = "L10210"
class
= "blob-num js-line-number"
data - line - number = "10210" > < /td>
    < td
id = "LC10210"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-c" > < span
class
= "pl-c" >//</span> and CommonJS for browser emulators (#13566)</span></td>
    < /tr>
    < tr >
    < td
id = "L10211"
class
= "blob-num js-line-number"
data - line - number = "10211" > < /td>
    < td
id = "LC10211"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
if<
/span> ( <span class="pl-k">!</s
pan > noGlobal
)
{<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10212"
class
    = "blob-num js-line-number"
    data - line - number = "10212" > < /td>
        < td
    id = "LC10212"
class
    = "blob-code blob-code-inner js-file-line" > window < span
class
    = "pl-k" >
.<
    /span>jQuery <span class="pl-k">=</s
    pan > window < span
class
    = "pl-k" >
.<
    /span>$ <span class="pl-k">=</s
    pan > jQuery;
<
    /td>
    < /tr>
    < tr >
    < td
    id = "L10213"
class
    = "blob-num js-line-number"
    data - line - number = "10213" > < /td>
        < td
    id = "LC10213"
class
    = "blob-code blob-code-inner js-file-line" >
}
<
/td>
< /tr>
< tr >
< td
id = "L10214"
class
= "blob-num js-line-number"
data - line - number = "10214" > < /td>
    < td
id = "LC10214"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10215"
class
= "blob-num js-line-number"
data - line - number = "10215" > < /td>
    < td
id = "LC10215"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10216"
class
= "blob-num js-line-number"
data - line - number = "10216" > < /td>
    < td
id = "LC10216"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10217"
class
= "blob-num js-line-number"
data - line - number = "10217" > < /td>
    < td
id = "LC10217"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10218"
class
= "blob-num js-line-number"
data - line - number = "10218" > < /td>
    < td
id = "LC10218"
class
= "blob-code blob-code-inner js-file-line" >
    < /td>
    < /tr>
    < tr >
    < td
id = "L10219"
class
= "blob-num js-line-number"
data - line - number = "10219" > < /td>
    < td
id = "LC10219"
class
= "blob-code blob-code-inner js-file-line" > < span
class
= "pl-k" >
return
<
/span> jQuery;</
td >
< /tr>
< tr >
< td
id = "L10220"
class
= "blob-num js-line-number"
data - line - number = "10220" > < /td>
    < td
id = "LC10220"
class
= "blob-code blob-code-inner js-file-line" >
} )
;
<
/td>
< /tr>
< /table>

< details
class
= "details-reset details-overlay BlobToolbar position-absolute js-file-line-actions dropdown d-none"
aria - hidden = "true" >
    < summary
class
= "btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1"
aria - label = "Inline file action toolbar" >
    < svg
class
= "octicon octicon-kebab-horizontal"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
d = "M8 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM1.5 9a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm13 0a1.5 1.5 0 100-3 1.5 1.5 0 000 3z" > < /path></s
vg >
< /summary>
< details - menu >
< ul
class
= "BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2"
style = "width:185px" >
    < li >
    < clipboard - copy
role = "menuitem"
class
= "dropdown-item"
id = "js-copy-lines"
style = "cursor:pointer;" >
    Copy
lines
< /clipboard-copy>
< /li>
< li >
< clipboard - copy
role = "menuitem"
class
= "dropdown-item"
id = "js-copy-permalink"
style = "cursor:pointer;" >
    Copy
permalink
< /clipboard-copy>
< /li>
< li > < a
class
= "dropdown-item js-update-url-with-hash"
id = "js-view-git-blame"
role = "menuitem"
href = "/lenve/JavaEETest/blame/c7c186bdead4f7710decd5a0f85c9f01b0a5a8ef/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js" > View
git
blame < /a></
li >
< li > < a
class
= "dropdown-item"
id = "js-new-issue"
role = "menuitem"
href = "/lenve/JavaEETest/issues/new" > Reference in new issue < /a></
li >
< /ul>
< /details-menu>
< /details>

< /div>

< /div>


< details
class
= "details-reset details-overlay details-overlay-dark" >
    < summary
data - hotkey = "l"
aria - label = "Jump to line" > < /summary>
    < details - dialog
class
= "Box Box--overlay d-flex flex-column anim-fade-in fast linejump"
aria - label = "Jump to line" >
    < !--'"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form Box-body d-flex" action="" accept-charset="UTF-8" method="get">
    < input
class
= "form-control flex-auto mr-3 linejump-input js-jump-to-line-field"
type = "text"
placeholder = "Jump to line&hellip;"
aria - label = "Jump to line"
autofocus >
< button
type = "submit"
class
= "btn"
data - close - dialog > Go < /button>
< /form>    </
details - dialog >
< /details>

< div
class
= "Popover anim-scale-in js-tagsearch-popover"
hidden
data - tagsearch - url = "/lenve/JavaEETest/find-symbols"
data - tagsearch - ref = "master"
data - tagsearch - path = "Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js"
data - tagsearch - lang = "Java"
data - hydro - click = "{&quot;event_type&quot;:&quot;code_navigation.click_on_symbol&quot;,&quot;payload&quot;:{&quot;action&quot;:&quot;click_on_symbol&quot;,&quot;repository_id&quot;:76313874,&quot;ref&quot;:&quot;master&quot;,&quot;language&quot;:&quot;Java&quot;,&quot;originating_url&quot;:&quot;https://github.com/lenve/JavaEETest/blob/master/Test20-WebSocket/src/main/resources/static/js/jquery-3.1.1.js&quot;,&quot;user_id&quot;:55942617}}"
data - hydro - click - hmac = "c14dcf8a25ccdab462dbea863709bbc2b05385f59bf643fbbcaba98cbf0e76a2" >
    < div
class
= "Popover-message Popover-message--large Popover-message--top-left TagsearchPopover mt-1 mb-4 mx-auto Box box-shadow-large" >
    < div
class
= "TagsearchPopover-content js-tagsearch-popover-content overflow-auto"
style = "will-change:transform;" >
    < /div>
    < /div>
    < /div>


    < /div>
    < /div>

    < /main>
    < /div>


    < /div>


    < div
class
= "footer container-lg width-full p-responsive"
role = "contentinfo" >
    < div
class
= "position-relative d-flex flex-row-reverse flex-lg-row flex-wrap flex-lg-nowrap flex-justify-center flex-lg-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light " >
    < ul
class
= "list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0" >
    < li
class
= "mr-3 mr-lg-0" > & copy;
2020
GitHub, Inc. < /li>
< li
class
= "mr-3 mr-lg-0" > < a
data - ga - click = "Footer, go to terms, text:terms"
href = "https://github.com/site/terms" > Terms < /a></
li >
< li
class
= "mr-3 mr-lg-0" > < a
data - ga - click = "Footer, go to privacy, text:privacy"
href = "https://github.com/site/privacy" > Privacy < /a></
li >
< li
class
= "mr-3 mr-lg-0" > < a
data - ga - click = "Footer, go to security, text:security"
href = "https://github.com/security" > Security < /a></
li >
< li
class
= "mr-3 mr-lg-0" > < a
href = "https://githubstatus.com/"
data - ga - click = "Footer, go to status, text:status" > Status < /a></
li >
< li > < a
data - ga - click = "Footer, go to help, text:help"
href = "https://help.github.com" > Help < /a></
li >

< /ul>

< a
aria - label = "Homepage"
title = "GitHub"
class
= "footer-octicon d-none d-lg-block mx-lg-4"
href = "https://github.com" >
    < svg
height = "24"
class
= "octicon octicon-mark-github"
viewBox = "0 0 16 16"
version = "1.1"
width = "24"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z" > < /path></s
vg >
< /a>
< ul
class
= "list-style-none d-flex flex-wrap col-12 col-lg-5 flex-justify-center flex-lg-justify-between mb-2 mb-lg-0" >
    < li
class
= "mr-3 mr-lg-0" > < a
data - ga - click = "Footer, go to contact, text:contact"
href = "https://github.com/contact" > Contact
GitHub < /a></
li >
< li
class
= "mr-3 mr-lg-0" > < a
href = "https://github.com/pricing"
data - ga - click = "Footer, go to Pricing, text:Pricing" > Pricing < /a></
li >
< li
class
= "mr-3 mr-lg-0" > < a
href = "https://developer.github.com"
data - ga - click = "Footer, go to api, text:api" > API < /a></
li >
< li
class
= "mr-3 mr-lg-0" > < a
href = "https://training.github.com"
data - ga - click = "Footer, go to training, text:training" > Training < /a></
li >
< li
class
= "mr-3 mr-lg-0" > < a
href = "https://github.blog"
data - ga - click = "Footer, go to blog, text:blog" > Blog < /a></
li >
< li > < a
data - ga - click = "Footer, go to about, text:about"
href = "https://github.com/about" > About < /a></
li >
< /ul>
< /div>
< div
class
= "d-flex flex-justify-center pb-6" >
    < span
class
= "f6 text-gray-light" > < /span>
    < /div>
    < /div>


    < div
id = "ajax-error-message"
class
= "ajax-error-message flash flash-error" >
    < svg
class
= "octicon octicon-alert"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z" > < /path></s
vg >
< button
type = "button"
class
= "flash-close js-ajax-error-dismiss"
aria - label = "Dismiss error" >
    < svg
class
= "octicon octicon-x"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z" > < /path></s
vg >
< /button>
You
can’t
perform
that
action
at
this
time.
< /div>


< script
crossorigin = "anonymous"
async = "async"
integrity = "sha512-WcQmT2vhcClFVOaaAJV/M+HqsJ2Gq/myvl6F3gCVBxykazXTs+i5fvxncSXwyG1CSfcrqmLFw/R/bmFYzprX2A=="
type = "application/javascript"
id = "js-conditional-compat"
data - src = "https://github.githubassets.com/assets/compat-bootstrap-59c4264f.js" > < /script>
    < script
crossorigin = "anonymous"
integrity = "sha512-Y86V8OBlvF6I/7e56GKOOt80Yg1RTGA09uqFFX18aiBtevLbKGxB7sVpCn79fukppFIBqyBTB/s6l0Bhn0kidQ=="
type = "application/javascript"
src = "https://github.githubassets.com/assets/environment-bootstrap-63ce95f0.js" > < /script>
    < script
crossorigin = "anonymous"
async = "async"
integrity = "sha512-jfR+4VdZuPf5Ck+JA3AZuzWGHz9Sb21keZOYuMoNdfMJovIUb9vxfSdvNSchxAwj5oav48KBfa54+wbuuW8Tlg=="
type = "application/javascript"
src = "https://github.githubassets.com/assets/vendor-8df47ee1.js" > < /script>
    < script
crossorigin = "anonymous"
async = "async"
integrity = "sha512-bnTRHbVvU80xFKdsRq3F+73vfYnCKrG6J4UPGgli/ihqO3C1SwjXmcR10RCfMbNGphMvxKX7mn6lFQM3Mc25Sw=="
type = "application/javascript"
src = "https://github.githubassets.com/assets/frameworks-6e74d11d.js" > < /script>

    < script
crossorigin = "anonymous"
async = "async"
integrity = "sha512-WYDfGvwYLFP8eY1vZBdBP+zu2OjhYTlGGdNVx9wbSXzjY0tGrCFO4bDdbexcMhngArJuMmiX9V+hHcJ/mZRfQg=="
type = "application/javascript"
src = "https://github.githubassets.com/assets/github-bootstrap-5980df1a.js" > < /script>

    < script
crossorigin = "anonymous"
async = "async"
integrity = "sha512-4GcSWGoe36+BoWho4gtJcByZe8j43w+lt2/PDe3rmBxRVSgD29YipDwuIywe8fvOd2b2CszBqaPGxSznUtE3Xg=="
type = "application/javascript"
data - module - id = "./drag-drop.js"
data - src = "https://github.githubassets.com/assets/drag-drop-e0671258.js" > < /script>
    < script
crossorigin = "anonymous"
async = "async"
integrity = "sha512-3Vk1NFIOm+TBUMM6pTA6DCUwwLLnc/QIT8jpENm71InvSU8O4p2plDagpst1tH1l+9jOBnneaXZnAskA9a2b3w=="
type = "application/javascript"
data - module - id = "./gist-vendor.js"
data - src = "https://github.githubassets.com/assets/gist-vendor-dd593534.js" > < /script>
    < script
crossorigin = "anonymous"
async = "async"
integrity = "sha512-urN6bhHnHu4C12A+cTH3dOp+CwLaycy2HUXr95hvu5pbYRdF8z6iR+UQcTZutQ6mZG3Njluw2MTZVCNmwcqh8g=="
type = "application/javascript"
data - module - id = "./randomColor.js"
data - src = "https://github.githubassets.com/assets/randomColor-bab37a6e.js" > < /script>


    < div
class
= "js-stale-session-flash flash flash-warn flash-banner"
hidden
>
< svg
class
= "octicon octicon-alert"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M8.22 1.754a.25.25 0 00-.44 0L1.698 13.132a.25.25 0 00.22.368h12.164a.25.25 0 00.22-.368L8.22 1.754zm-1.763-.707c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0114.082 15H1.918a1.75 1.75 0 01-1.543-2.575L6.457 1.047zM9 11a1 1 0 11-2 0 1 1 0 012 0zm-.25-5.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z" > < /path></s
vg >
< span
class
= "js-stale-session-flash-signed-in"
hidden > You
signed in
with another tab
or
window. < a
href = "" > Reload < /a> to refresh your session.</s
pan >
< span
class
= "js-stale-session-flash-signed-out"
hidden > You
signed
out in another
tab
or
window. < a
href = "" > Reload < /a> to refresh your session.</s
pan >
< /div>
< template
id = "site-details-dialog" >
    < details
class
= "details-reset details-overlay details-overlay-dark lh-default text-gray-dark hx_rsm"
open >
< summary
role = "button"
aria - label = "Close dialog" > < /summary>
    < details - dialog
class
= "Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal" >
    < button
class
= "Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0"
type = "button"
aria - label = "Close dialog"
data - close - dialog >
< svg
class
= "octicon octicon-x"
viewBox = "0 0 16 16"
version = "1.1"
width = "16"
height = "16"
aria - hidden = "true" > < path
fill - rule = "evenodd"
d = "M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z" > < /path></s
vg >
< /button>
< div
class
= "octocat-spinner my-6 js-details-dialog-spinner" > < /div>
    < /details-dialog>
    < /details>
    < /template>

    < div
class
= "Popover js-hovercard-content position-absolute"
style = "display: none; outline: none;"
tabindex = "0" >
    < div
class
= "Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large"
style = "width:360px;" >
    < /div>
    < /div>


    < /body>
    < /html>

